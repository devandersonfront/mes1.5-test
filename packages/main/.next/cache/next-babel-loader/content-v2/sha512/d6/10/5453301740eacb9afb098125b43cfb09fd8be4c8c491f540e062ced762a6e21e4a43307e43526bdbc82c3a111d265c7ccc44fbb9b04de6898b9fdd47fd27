{"ast":null,"code":"var _jsxFileName = \"/Users/user/Desktop/sizl/mono_pop/packages/shared/src/components/Modal/InfoModal/index.tsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport Modal from 'react-modal';\nimport { POINT_COLOR } from '../../../common/configset'; //@ts-ignore\n\n//@ts-ignore\nimport IcX from '../../../../public/images/ic_x.png';\nimport { ExcelTable } from '../../Excel/ExcelTable';\nimport { searchModalList } from '../../../common/modalInit'; //@ts-ignore\n\nimport { RequestMethod } from '../../../common/RequestFunctions';\nimport Notiflix from 'notiflix';\nimport { UploadButton } from '../../../styles/styledComponents';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { insert_summary_info } from '../../../reducer/infoModal';\nconst optionList = ['제조번호', '제조사명', '기계명', '', '담당자명'];\n\nconst InfoModal = ({\n  column,\n  row,\n  onRowChange\n}) => {\n  const dispatch = useDispatch();\n  const {\n    0: isOpen,\n    1: setIsOpen\n  } = useState(false);\n  const {\n    0: columnInitData,\n    1: setColumnInitData\n  } = useState([]);\n  const {\n    0: title,\n    1: setTitle\n  } = useState('기계');\n  const {\n    0: optionIndex,\n    1: setOptionIndex\n  } = useState(0);\n  const {\n    0: keyword,\n    1: setKeyword\n  } = useState('');\n  const {\n    0: selectRow,\n    1: setSelectRow\n  } = useState();\n  const {\n    0: searchList,\n    1: setSearchList\n  } = useState([{\n    seq: 1\n  }]);\n  const {\n    0: searchKeyword,\n    1: setSearchKeyword\n  } = useState('');\n  const {\n    0: pageInfo,\n    1: setPageInfo\n  } = useState({\n    page: 1,\n    total: 1\n  });\n  const selector = useSelector(state => state.infoModal);\n  useEffect(() => {\n    setColumnInitData(column.modalInitData);\n  }, [column.modalInitData]);\n  useEffect(() => {\n    if (isOpen) {\n      dispatch(insert_summary_info({\n        index: selector.index,\n        data: row\n      }));\n    }\n  }, [row, isOpen]);\n\n  const changeRow = (row, key) => {\n    let tmpData = _objectSpread(_objectSpread({}, row), {}, {\n      machine_id: row.name,\n      machine_idPK: row.machine_id,\n      manager: row.manager ? row.manager.name : null\n    });\n\n    return tmpData;\n  };\n\n  const SearchBasic = async (keyword, option, page) => {\n    Notiflix.Loading.circle();\n    setKeyword(keyword);\n    setOptionIndex(option);\n    const res = await RequestMethod('get', `machineSearch`, {\n      path: {\n        page: page,\n        renderItem: 18\n      },\n      params: {\n        keyword: keyword !== null && keyword !== void 0 ? keyword : '',\n        opt: option !== null && option !== void 0 ? option : 0\n      }\n    });\n\n    if (res && res.status === 200) {\n      let searchList = res.results.info_list.map((row, index) => {\n        return changeRow(row);\n      });\n      setPageInfo(_objectSpread(_objectSpread({}, pageInfo), {}, {\n        page: res.results.page,\n        total: res.results.totalPages\n      }));\n      setSearchList([...searchList]);\n    }\n  };\n\n  const getSummaryInfo = info => {\n    // selector.data[selector.index][info.key]\n    if (selector.data.length) {\n      var _selector$data$select;\n\n      return (_selector$data$select = selector.data[selector.index][info.key]) !== null && _selector$data$select !== void 0 ? _selector$data$select : '-';\n    } else {\n      return 'test1';\n    }\n  };\n\n  const ModalContents = () => {\n    return __jsx(React.Fragment, null, __jsx(\"div\", {\n      style: {\n        padding: '3.5px 0px 0px 3.5px',\n        width: '100%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 7\n      }\n    }, __jsx(UploadButton, {\n      onClick: () => {\n        setIsOpen(true);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }\n    }, __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }\n    }, columnInitData.buttonText))));\n  };\n\n  return __jsx(SearchModalWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 5\n    }\n  }, ModalContents(), __jsx(Modal, {\n    isOpen: isOpen,\n    style: {\n      content: {\n        top: '50%',\n        left: '50%',\n        right: 'auto',\n        bottom: 'auto',\n        marginRight: '-50%',\n        transform: 'translate(-50%, -50%)',\n        padding: 0\n      },\n      overlay: {\n        background: 'rgba(0,0,0,.6)',\n        zIndex: 5\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    style: {\n      width: 1776,\n      height: 816\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    style: {\n      margin: '24px 16px 16px',\n      display: 'flex',\n      justifyContent: 'space-between'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 13\n    }\n  }, __jsx(\"p\", {\n    style: {\n      color: 'black',\n      fontSize: 22,\n      fontWeight: 'bold',\n      margin: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 15\n    }\n  }, columnInitData.title), __jsx(\"div\", {\n    style: {\n      display: 'flex'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 15\n    }\n  }, __jsx(Button, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 17\n    }\n  }, __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 19\n    }\n  }, \"\\uC5D1\\uC140\\uB85C \\uBC1B\\uAE30\")), __jsx(\"div\", {\n    style: {\n      cursor: 'pointer',\n      marginLeft: 20\n    },\n    onClick: () => {\n      setIsOpen(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 17\n    }\n  }, __jsx(\"img\", {\n    style: {\n      width: 20,\n      height: 20\n    },\n    src: IcX,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 19\n    }\n  })))), columnInitData.summaryInfo && columnInitData.summaryInfo.map((infos, index) => {\n    return __jsx(HeaderTable, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 19\n      }\n    }, infos.map(info => {\n      return __jsx(React.Fragment, null, __jsx(HeaderTableTitle, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 29\n        }\n      }, __jsx(HeaderTableText, {\n        style: {\n          fontWeight: 'bold'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 31\n        }\n      }, info.title)), __jsx(HeaderTableTextInput, {\n        style: {\n          width: info.infoWidth\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 29\n        }\n      }, __jsx(HeaderTableText, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 31\n        }\n      }, getSummaryInfo(info))));\n    }));\n  }), columnInitData.cellEditButtons && __jsx(\"div\", {\n    style: {\n      display: 'flex',\n      justifyContent: 'flex-end',\n      margin: '24px 48px 8px 0'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 49\n    }\n  }, __jsx(Button, {\n    onClick: () => {\n      let tmp = searchList;\n      setSearchList([...searchList, {\n        seq: searchList.length + 1\n      }]);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 17\n    }\n  }, __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 19\n    }\n  }, \"\\uD589 \\uCD94\\uAC00\")), __jsx(Button, {\n    style: {\n      marginLeft: 16\n    },\n    onClick: () => {\n      if (selectRow === 0) {\n        return;\n      }\n\n      let tmpRow = searchList;\n      let tmp = tmpRow[selectRow];\n      tmpRow[selectRow] = tmpRow[selectRow - 1];\n      tmpRow[selectRow - 1] = tmp;\n      setSearchList([...tmpRow.map((v, i) => {\n        return _objectSpread(_objectSpread({}, v), {}, {\n          seq: i + 1\n        });\n      })]);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 17\n    }\n  }, __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 19\n    }\n  }, \"\\uC704\\uB85C\")), __jsx(Button, {\n    style: {\n      marginLeft: 16\n    },\n    onClick: () => {\n      if (selectRow === searchList.length - 1) {\n        return;\n      }\n\n      let tmpRow = searchList;\n      let tmp = tmpRow[selectRow];\n      tmpRow[selectRow] = tmpRow[selectRow + 1];\n      tmpRow[selectRow + 1] = tmp;\n      setSearchList([...tmpRow.map((v, i) => {\n        return _objectSpread(_objectSpread({}, v), {}, {\n          seq: i + 1\n        });\n      })]);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 17\n    }\n  }, __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 19\n    }\n  }, \"\\uC544\\uB798\\uB85C\"))), __jsx(\"div\", {\n    style: {\n      padding: '0 16px',\n      width: 1776\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 13\n    }\n  }, __jsx(ExcelTable, {\n    headerList: searchModalList[columnInitData.modalKey],\n    row: searchList !== null && searchList !== void 0 ? searchList : [{}],\n    setRow: e => setSearchList([...e]),\n    width: 1746,\n    rowHeight: 32,\n    height: 560 // setSelectRow={(e) => {\n    //   setSelectRow(e)\n    // }}\n    ,\n    setSelectRow: e => {\n      if (!searchList[e].border) {\n        searchList.map((v, i) => {\n          v.border = false;\n        });\n        searchList[e].border = true;\n        setSearchList([...searchList]);\n      }\n\n      setSelectRow(e);\n    },\n    type: 'searchModal',\n    headerAlign: 'center',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 15\n    }\n  }))), __jsx(\"div\", {\n    style: {\n      height: 50,\n      display: 'flex',\n      alignItems: 'flex-end'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    onClick: () => {\n      setIsOpen(false);\n    },\n    style: {\n      width: 888,\n      height: 40,\n      backgroundColor: '#b3b3b3',\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 13\n    }\n  }, __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 15\n    }\n  }, \"\\uCDE8\\uC18C\")), __jsx(\"div\", {\n    onClick: () => {\n      if (selectRow !== undefined && selectRow !== null) {\n        onRowChange(_objectSpread(_objectSpread(_objectSpread({}, row), searchList[selectRow]), {}, {\n          name: row.name,\n          isChange: true\n        }));\n      }\n\n      setIsOpen(false);\n    },\n    style: {\n      width: 888,\n      height: 40,\n      backgroundColor: POINT_COLOR,\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 13\n    }\n  }, __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 15\n    }\n  }, \"\\uB4F1\\uB85D\\uD558\\uAE30\"))))));\n};\n\nconst SearchModalWrapper = styled.div`\n  display: flex;\n  width: 100%;\n`;\nconst Button = styled.button`\n    width:112px;\n    height:32px;\n    color:white;\n    font-size:15px;\n    border:none;\n    border-radius:6px;\n    background:#717C90;\n    display:flex;\n    justify-content:center;\n    align-items:center;\n    cursor:pointer;\n    \n`;\nconst HeaderTable = styled.div`\n  width: 1744px;\n  height: 32px;\n  margin: 0 16px;\n  background-color: #F4F6FA;\n  border: 0.5px solid #B3B3B3;\n  display: flex\n`;\nconst HeaderTableTextInput = styled.div`\n  background-color: #ffffff;\n  padding-left: 3px;\n  height: 27px;\n  border: 0.5px solid #B3B3B3;\n  margin-top:2px;\n  margin-right: 66px;\n  display: flex;\n  align-items: center;\n`;\nconst HeaderTableText = styled.p`\n  margin: 0;\n  font-size: 15px;\n`;\nconst HeaderTableTitle = styled.div`\n  width: 112px;\n  padding: 0 8px;\n  display: flex; \n  align-items: center;\n`;\nexport { InfoModal };","map":{"version":3,"sources":["/Users/user/Desktop/sizl/mono_pop/packages/shared/src/components/Modal/InfoModal/index.tsx"],"names":["React","useEffect","useState","styled","Modal","POINT_COLOR","IcX","ExcelTable","searchModalList","RequestMethod","Notiflix","UploadButton","useDispatch","useSelector","insert_summary_info","optionList","InfoModal","column","row","onRowChange","dispatch","isOpen","setIsOpen","columnInitData","setColumnInitData","title","setTitle","optionIndex","setOptionIndex","keyword","setKeyword","selectRow","setSelectRow","searchList","setSearchList","seq","searchKeyword","setSearchKeyword","pageInfo","setPageInfo","page","total","selector","state","infoModal","modalInitData","index","data","changeRow","key","tmpData","machine_id","name","machine_idPK","manager","SearchBasic","option","Loading","circle","res","path","renderItem","params","opt","status","results","info_list","map","totalPages","getSummaryInfo","info","length","ModalContents","padding","width","buttonText","content","top","left","right","bottom","marginRight","transform","overlay","background","zIndex","height","margin","display","justifyContent","color","fontSize","fontWeight","cursor","marginLeft","summaryInfo","infos","infoWidth","cellEditButtons","tmp","tmpRow","v","i","modalKey","e","border","alignItems","backgroundColor","undefined","isChange","SearchModalWrapper","div","Button","button","HeaderTable","HeaderTableTextInput","HeaderTableText","p","HeaderTableTitle"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AAEA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAAQC,WAAR,QAA0B,2BAA1B,C,CACA;;AAEA;AACA,OAAOC,GAAP,MAAgB,oCAAhB;AACA,SAAQC,UAAR,QAAyB,wBAAzB;AACA,SAAQC,eAAR,QAA8B,2BAA9B,C,CACA;;AAEA,SAAQC,aAAR,QAA4B,kCAA5B;AAEA,OAAOC,QAAP,MAAqB,UAArB;AACA,SAAQC,YAAR,QAA2B,kCAA3B;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,SAAQC,mBAAR,QAAkC,4BAAlC;AASA,MAAMC,UAAU,GAAG,CAAC,MAAD,EAAQ,MAAR,EAAe,KAAf,EAAqB,EAArB,EAAwB,MAAxB,CAAnB;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAACC,EAAAA,MAAD;AAASC,EAAAA,GAAT;AAAcC,EAAAA;AAAd,CAAD,KAAwC;AACxD,QAAMC,QAAQ,GAAGR,WAAW,EAA5B;AACA,QAAM;AAAA,OAACS,MAAD;AAAA,OAASC;AAAT,MAAsBpB,QAAQ,CAAU,KAAV,CAApC;AACA,QAAM;AAAA,OAACqB,cAAD;AAAA,OAAiBC;AAAjB,MAAsCtB,QAAQ,CAAM,EAAN,CAApD;AACA,QAAM;AAAA,OAACuB,KAAD;AAAA,OAAQC;AAAR,MAAoBxB,QAAQ,CAAS,IAAT,CAAlC;AACA,QAAM;AAAA,OAACyB,WAAD;AAAA,OAAcC;AAAd,MAAgC1B,QAAQ,CAAS,CAAT,CAA9C;AACA,QAAM;AAAA,OAAC2B,OAAD;AAAA,OAAUC;AAAV,MAAwB5B,QAAQ,CAAS,EAAT,CAAtC;AACA,QAAM;AAAA,OAAC6B,SAAD;AAAA,OAAYC;AAAZ,MAA4B9B,QAAQ,EAA1C;AACA,QAAM;AAAA,OAAC+B,UAAD;AAAA,OAAaC;AAAb,MAA8BhC,QAAQ,CAAQ,CAAC;AAACiC,IAAAA,GAAG,EAAE;AAAN,GAAD,CAAR,CAA5C;AACA,QAAM;AAAA,OAACC,aAAD;AAAA,OAAgBC;AAAhB,MAAoCnC,QAAQ,CAAS,EAAT,CAAlD;AACA,QAAM;AAAA,OAACoC,QAAD;AAAA,OAAWC;AAAX,MAA0BrC,QAAQ,CAAgC;AACtEsC,IAAAA,IAAI,EAAE,CADgE;AAEtEC,IAAAA,KAAK,EAAE;AAF+D,GAAhC,CAAxC;AAKA,QAAMC,QAAQ,GAAG7B,WAAW,CAAE8B,KAAD,IAAqBA,KAAK,CAACC,SAA5B,CAA5B;AAEA3C,EAAAA,SAAS,CAAC,MAAM;AACduB,IAAAA,iBAAiB,CAACP,MAAM,CAAC4B,aAAR,CAAjB;AACD,GAFQ,EAEN,CAAC5B,MAAM,CAAC4B,aAAR,CAFM,CAAT;AAIA5C,EAAAA,SAAS,CAAC,MAAM;AACd,QAAGoB,MAAH,EAAU;AACRD,MAAAA,QAAQ,CAACN,mBAAmB,CAAC;AAC3BgC,QAAAA,KAAK,EAAEJ,QAAQ,CAACI,KADW;AAE3BC,QAAAA,IAAI,EAAE7B;AAFqB,OAAD,CAApB,CAAR;AAID;AACF,GAPQ,EAON,CAACA,GAAD,EAAMG,MAAN,CAPM,CAAT;;AASA,QAAM2B,SAAS,GAAG,CAAC9B,GAAD,EAAW+B,GAAX,KAA4B;AAC5C,QAAIC,OAAO,mCACNhC,GADM;AAETiC,MAAAA,UAAU,EAAEjC,GAAG,CAACkC,IAFP;AAGTC,MAAAA,YAAY,EAAEnC,GAAG,CAACiC,UAHT;AAITG,MAAAA,OAAO,EAAEpC,GAAG,CAACoC,OAAJ,GAAcpC,GAAG,CAACoC,OAAJ,CAAYF,IAA1B,GAAiC;AAJjC,MAAX;;AAOA,WAAOF,OAAP;AACD,GATD;;AAWA,QAAMK,WAAW,GAAG,OAAO1B,OAAP,EAAqB2B,MAArB,EAAqChB,IAArC,KAAsD;AACxE9B,IAAAA,QAAQ,CAAC+C,OAAT,CAAiBC,MAAjB;AACA5B,IAAAA,UAAU,CAACD,OAAD,CAAV;AACAD,IAAAA,cAAc,CAAC4B,MAAD,CAAd;AACA,UAAMG,GAAG,GAAG,MAAMlD,aAAa,CAAC,KAAD,EAAS,eAAT,EAAwB;AACrDmD,MAAAA,IAAI,EAAE;AACJpB,QAAAA,IAAI,EAAEA,IADF;AAEJqB,QAAAA,UAAU,EAAE;AAFR,OAD+C;AAKrDC,MAAAA,MAAM,EAAE;AACNjC,QAAAA,OAAO,EAAEA,OAAF,aAAEA,OAAF,cAAEA,OAAF,GAAa,EADd;AAENkC,QAAAA,GAAG,EAAEP,MAAF,aAAEA,MAAF,cAAEA,MAAF,GAAY;AAFT;AAL6C,KAAxB,CAA/B;;AAWA,QAAGG,GAAG,IAAIA,GAAG,CAACK,MAAJ,KAAe,GAAzB,EAA6B;AAC3B,UAAI/B,UAAU,GAAG0B,GAAG,CAACM,OAAJ,CAAYC,SAAZ,CAAsBC,GAAtB,CAA0B,CAACjD,GAAD,EAAW4B,KAAX,KAA6B;AACtE,eAAOE,SAAS,CAAC9B,GAAD,CAAhB;AACD,OAFgB,CAAjB;AAIAqB,MAAAA,WAAW,iCACND,QADM;AAETE,QAAAA,IAAI,EAAEmB,GAAG,CAACM,OAAJ,CAAYzB,IAFT;AAGTC,QAAAA,KAAK,EAAEkB,GAAG,CAACM,OAAJ,CAAYG;AAHV,SAAX;AAMAlC,MAAAA,aAAa,CAAC,CAAC,GAAGD,UAAJ,CAAD,CAAb;AACD;AACF,GA5BD;;AA8BA,QAAMoC,cAAc,GAAIC,IAAD,IAAU;AAC/B;AACA,QAAG5B,QAAQ,CAACK,IAAT,CAAcwB,MAAjB,EAAwB;AAAA;;AACtB,sCAAO7B,QAAQ,CAACK,IAAT,CAAcL,QAAQ,CAACI,KAAvB,EAA8BwB,IAAI,CAACrB,GAAnC,CAAP,yEAAkD,GAAlD;AACD,KAFD,MAEM;AACJ,aAAO,OAAP;AACD;AACF,GAPD;;AASA,QAAMuB,aAAa,GAAG,MAAM;AAC1B,WAAO,4BACL;AAAK,MAAA,KAAK,EAAE;AACVC,QAAAA,OAAO,EAAE,qBADC;AAEVC,QAAAA,KAAK,EAAE;AAFG,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIE,MAAC,YAAD;AAAc,MAAA,OAAO,EAAE,MAAM;AAC3BpD,QAAAA,SAAS,CAAC,IAAD,CAAT;AACD,OAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIC,cAAc,CAACoD,UAAnB,CAHF,CAJF,CADK,CAAP;AAYD,GAbD;;AAeA,SACE,MAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACIH,aAAa,EADjB,EAEE,MAAC,KAAD;AAAO,IAAA,MAAM,EAAEnD,MAAf;AAAuB,IAAA,KAAK,EAAE;AAC5BuD,MAAAA,OAAO,EAAE;AACPC,QAAAA,GAAG,EAAE,KADE;AAEPC,QAAAA,IAAI,EAAE,KAFC;AAGPC,QAAAA,KAAK,EAAE,MAHA;AAIPC,QAAAA,MAAM,EAAE,MAJD;AAKPC,QAAAA,WAAW,EAAE,MALN;AAMPC,QAAAA,SAAS,EAAE,uBANJ;AAOPT,QAAAA,OAAO,EAAE;AAPF,OADmB;AAU5BU,MAAAA,OAAO,EAAE;AACPC,QAAAA,UAAU,EAAE,gBADL;AAEPC,QAAAA,MAAM,EAAE;AAFD;AAVmB,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAeE;AAAK,IAAA,KAAK,EAAE;AACVX,MAAAA,KAAK,EAAE,IADG;AAEVY,MAAAA,MAAM,EAAE;AAFE,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,KAAK,EAAE;AACVC,MAAAA,MAAM,EAAE,gBADE;AAEVC,MAAAA,OAAO,EAAE,MAFC;AAGVC,MAAAA,cAAc,EAAE;AAHN,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE;AAAG,IAAA,KAAK,EAAE;AACRC,MAAAA,KAAK,EAAE,OADC;AAERC,MAAAA,QAAQ,EAAE,EAFF;AAGRC,MAAAA,UAAU,EAAE,MAHJ;AAIRL,MAAAA,MAAM,EAAE;AAJA,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKIhE,cAAc,CAACE,KALnB,CALF,EAWE;AAAK,IAAA,KAAK,EAAE;AAAC+D,MAAAA,OAAO,EAAE;AAAV,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCADF,CADF,EAIE;AAAK,IAAA,KAAK,EAAE;AAACK,MAAAA,MAAM,EAAE,SAAT;AAAoBC,MAAAA,UAAU,EAAE;AAAhC,KAAZ;AAAiD,IAAA,OAAO,EAAE,MAAM;AAC9DxE,MAAAA,SAAS,CAAC,KAAD,CAAT;AACD,KAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGE;AAAK,IAAA,KAAK,EAAE;AAACoD,MAAAA,KAAK,EAAE,EAAR;AAAYY,MAAAA,MAAM,EAAE;AAApB,KAAZ;AAAqC,IAAA,GAAG,EAAEhF,GAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CAJF,CAXF,CADF,EAwBIiB,cAAc,CAACwE,WAAf,IAA8BxE,cAAc,CAACwE,WAAf,CAA2B5B,GAA3B,CAA+B,CAAC6B,KAAD,EAAQlD,KAAR,KAAkB;AAC7E,WACE,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEIkD,KAAK,CAAC7B,GAAN,CAAUG,IAAI,IAAI;AAChB,aACE,4BACE,MAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,eAAD;AAAiB,QAAA,KAAK,EAAE;AAACsB,UAAAA,UAAU,EAAE;AAAb,SAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA+CtB,IAAI,CAAC7C,KAApD,CADF,CADF,EAIE,MAAC,oBAAD;AAAsB,QAAA,KAAK,EAAE;AAACiD,UAAAA,KAAK,EAAEJ,IAAI,CAAC2B;AAAb,SAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAkB5B,cAAc,CAACC,IAAD,CAAhC,CADF,CAJF,CADF;AAUD,KAXD,CAFJ,CADF;AAkBD,GAnB6B,CAxBlC,EA8CI/C,cAAc,CAAC2E,eAAf,IAAkC;AAAK,IAAA,KAAK,EAAE;AAACV,MAAAA,OAAO,EAAE,MAAV;AAAkBC,MAAAA,cAAc,EAAE,UAAlC;AAA8CF,MAAAA,MAAM,EAAE;AAAtD,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAChC,MAAC,MAAD;AAAQ,IAAA,OAAO,EAAE,MAAM;AACrB,UAAIY,GAAG,GAAGlE,UAAV;AAEAC,MAAAA,aAAa,CAAC,CACZ,GAAGD,UADS,EAEZ;AACEE,QAAAA,GAAG,EAAEF,UAAU,CAACsC,MAAX,GAAoB;AAD3B,OAFY,CAAD,CAAb;AAMD,KATD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAVF,CADgC,EAahC,MAAC,MAAD;AAAQ,IAAA,KAAK,EAAE;AAACuB,MAAAA,UAAU,EAAE;AAAb,KAAf;AAAiC,IAAA,OAAO,EAAE,MAAM;AAC9C,UAAI/D,SAAS,KAAK,CAAlB,EAAqB;AACnB;AACD;;AACD,UAAIqE,MAAM,GAAGnE,UAAb;AAEA,UAAIkE,GAAG,GAAGC,MAAM,CAACrE,SAAD,CAAhB;AACAqE,MAAAA,MAAM,CAACrE,SAAD,CAAN,GAAoBqE,MAAM,CAACrE,SAAS,GAAG,CAAb,CAA1B;AACAqE,MAAAA,MAAM,CAACrE,SAAS,GAAG,CAAb,CAAN,GAAwBoE,GAAxB;AAEAjE,MAAAA,aAAa,CAAC,CAAC,GAAGkE,MAAM,CAACjC,GAAP,CAAW,CAACkC,CAAD,EAAIC,CAAJ,KAAU;AACrC,+CACKD,CADL;AAEElE,UAAAA,GAAG,EAAEmE,CAAC,GAAG;AAFX;AAID,OALiB,CAAJ,CAAD,CAAb;AAMD,KAhBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAiBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAjBF,CAbgC,EAgChC,MAAC,MAAD;AAAQ,IAAA,KAAK,EAAE;AAACR,MAAAA,UAAU,EAAE;AAAb,KAAf;AAAiC,IAAA,OAAO,EAAE,MAAM;AAC9C,UAAI/D,SAAS,KAAKE,UAAU,CAACsC,MAAX,GAAoB,CAAtC,EAAyC;AACvC;AACD;;AACD,UAAI6B,MAAM,GAAGnE,UAAb;AAEA,UAAIkE,GAAG,GAAGC,MAAM,CAACrE,SAAD,CAAhB;AACAqE,MAAAA,MAAM,CAACrE,SAAD,CAAN,GAAoBqE,MAAM,CAACrE,SAAS,GAAG,CAAb,CAA1B;AACAqE,MAAAA,MAAM,CAACrE,SAAS,GAAG,CAAb,CAAN,GAAwBoE,GAAxB;AAEAjE,MAAAA,aAAa,CAAC,CAAC,GAAGkE,MAAM,CAACjC,GAAP,CAAW,CAACkC,CAAD,EAAIC,CAAJ,KAAU;AACrC,+CACKD,CADL;AAEElE,UAAAA,GAAG,EAAEmE,CAAC,GAAG;AAFX;AAID,OALiB,CAAJ,CAAD,CAAb;AAMD,KAhBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAiBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAjBF,CAhCgC,CA9CtC,EAmGE;AAAK,IAAA,KAAK,EAAE;AAAC7B,MAAAA,OAAO,EAAE,QAAV;AAAoBC,MAAAA,KAAK,EAAE;AAA3B,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,UAAD;AACE,IAAA,UAAU,EAAElE,eAAe,CAACe,cAAc,CAACgF,QAAhB,CAD7B;AAEE,IAAA,GAAG,EAAEtE,UAAF,aAAEA,UAAF,cAAEA,UAAF,GAAgB,CAAC,EAAD,CAFrB;AAGE,IAAA,MAAM,EAAGuE,CAAD,IAAOtE,aAAa,CAAC,CAAC,GAAGsE,CAAJ,CAAD,CAH9B;AAIE,IAAA,KAAK,EAAE,IAJT;AAKE,IAAA,SAAS,EAAE,EALb;AAME,IAAA,MAAM,EAAE,GANV,CAOE;AACA;AACA;AATF;AAUE,IAAA,YAAY,EAAGA,CAAD,IAAO;AACnB,UAAG,CAACvE,UAAU,CAACuE,CAAD,CAAV,CAAcC,MAAlB,EAAyB;AACvBxE,QAAAA,UAAU,CAACkC,GAAX,CAAe,CAACkC,CAAD,EAAGC,CAAH,KAAO;AACpBD,UAAAA,CAAC,CAACI,MAAF,GAAW,KAAX;AACD,SAFD;AAGAxE,QAAAA,UAAU,CAACuE,CAAD,CAAV,CAAcC,MAAd,GAAuB,IAAvB;AACAvE,QAAAA,aAAa,CAAC,CAAC,GAAGD,UAAJ,CAAD,CAAb;AACD;;AACDD,MAAAA,YAAY,CAACwE,CAAD,CAAZ;AACD,KAnBH;AAoBE,IAAA,IAAI,EAAE,aApBR;AAqBE,IAAA,WAAW,EAAE,QArBf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAnGF,CAJF,EAiIE;AAAK,IAAA,KAAK,EAAE;AAAElB,MAAAA,MAAM,EAAE,EAAV;AAAcE,MAAAA,OAAO,EAAE,MAAvB;AAA+BkB,MAAAA,UAAU,EAAE;AAA3C,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,OAAO,EAAE,MAAM;AACbpF,MAAAA,SAAS,CAAC,KAAD,CAAT;AACD,KAHH;AAIE,IAAA,KAAK,EAAE;AAACoD,MAAAA,KAAK,EAAE,GAAR;AAAaY,MAAAA,MAAM,EAAE,EAArB;AAAyBqB,MAAAA,eAAe,EAAE,SAA1C;AAAqDnB,MAAAA,OAAO,EAAE,MAA9D;AAAsEC,MAAAA,cAAc,EAAE,QAAtF;AAAgGiB,MAAAA,UAAU,EAAE;AAA5G,KAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBANF,CADF,EASE;AACE,IAAA,OAAO,EAAE,MAAM;AACb,UAAG3E,SAAS,KAAK6E,SAAd,IAA2B7E,SAAS,KAAK,IAA5C,EAAiD;AAC/CZ,QAAAA,WAAW,+CACND,GADM,GAENe,UAAU,CAACF,SAAD,CAFJ;AAGTqB,UAAAA,IAAI,EAAElC,GAAG,CAACkC,IAHD;AAITyD,UAAAA,QAAQ,EAAE;AAJD,WAAX;AAMD;;AACDvF,MAAAA,SAAS,CAAC,KAAD,CAAT;AACD,KAXH;AAYE,IAAA,KAAK,EAAE;AAACoD,MAAAA,KAAK,EAAE,GAAR;AAAaY,MAAAA,MAAM,EAAE,EAArB;AAAyBqB,MAAAA,eAAe,EAAEtG,WAA1C;AAAuDmF,MAAAA,OAAO,EAAE,MAAhE;AAAwEC,MAAAA,cAAc,EAAE,QAAxF;AAAkGiB,MAAAA,UAAU,EAAE;AAA9G,KAZT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAcE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAdF,CATF,CAjIF,CAfF,CAFF,CADF;AAiLD,CAhRD;;AAkRA,MAAMI,kBAAkB,GAAG3G,MAAM,CAAC4G,GAAI;AACtC;AACA;AACA,CAHA;AAKA,MAAMC,MAAM,GAAG7G,MAAM,CAAC8G,MAAO;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAbA;AAeA,MAAMC,WAAW,GAAG/G,MAAM,CAAC4G,GAAI;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA,CAPA;AASA,MAAMI,oBAAoB,GAAGhH,MAAM,CAAC4G,GAAI;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CATA;AAWA,MAAMK,eAAe,GAAGjH,MAAM,CAACkH,CAAE;AACjC;AACA;AACA,CAHA;AAKA,MAAMC,gBAAgB,GAAGnH,MAAM,CAAC4G,GAAI;AACpC;AACA;AACA;AACA;AACA,CALA;AAOA,SAAQ/F,SAAR","sourcesContent":["import React, {useEffect, useState} from 'react'\nimport {IExcelHeaderType} from '../../../common/@types/type'\nimport styled from 'styled-components'\nimport Modal from 'react-modal'\nimport {POINT_COLOR} from '../../../common/configset'\n//@ts-ignore\nimport IcSearchButton from '../../../../public/images/ic_search.png'\n//@ts-ignore\nimport IcX from '../../../../public/images/ic_x.png'\nimport {ExcelTable} from '../../Excel/ExcelTable'\nimport {searchModalList} from '../../../common/modalInit'\n//@ts-ignore\nimport Search_icon from '../../../../public/images/btn_search.png'\nimport {RequestMethod} from '../../../common/RequestFunctions'\nimport {PaginationComponent}from '../../Pagination/PaginationComponent'\nimport Notiflix from 'notiflix'\nimport {UploadButton} from '../../../styles/styledComponents'\nimport {useDispatch, useSelector} from 'react-redux'\nimport {insert_summary_info} from '../../../reducer/infoModal'\nimport {RootState} from '../../../../../main/reducer'\n\ninterface IProps {\n  column: IExcelHeaderType\n  row: any\n  onRowChange: (e: any) => void\n}\n\nconst optionList = ['제조번호','제조사명','기계명','','담당자명']\n\nconst InfoModal = ({column, row, onRowChange}: IProps) => {\n  const dispatch = useDispatch()\n  const [isOpen, setIsOpen] = useState<boolean>(false)\n  const [columnInitData, setColumnInitData] = useState<any>([])\n  const [title, setTitle] = useState<string>('기계')\n  const [optionIndex, setOptionIndex] = useState<number>(0)\n  const [keyword, setKeyword] = useState<string>('')\n  const [selectRow, setSelectRow] = useState<number>()\n  const [searchList, setSearchList] = useState<any[]>([{seq: 1}])\n  const [searchKeyword, setSearchKeyword] = useState<string>('')\n  const [pageInfo, setPageInfo] = useState<{page: number, total: number}>({\n    page: 1,\n    total: 1\n  })\n\n  const selector = useSelector((state:RootState) => state.infoModal)\n\n  useEffect(() => {\n    setColumnInitData(column.modalInitData)\n  }, [column.modalInitData])\n\n  useEffect(() => {\n    if(isOpen){\n      dispatch(insert_summary_info({\n        index: selector.index,\n        data: row\n      }))\n    }\n  }, [row, isOpen])\n\n  const changeRow = (row: any, key?: string) => {\n    let tmpData = {\n      ...row,\n      machine_id: row.name,\n      machine_idPK: row.machine_id,\n      manager: row.manager ? row.manager.name : null\n    }\n\n    return tmpData\n  }\n\n  const SearchBasic = async (keyword: any, option: number, page: number) => {\n    Notiflix.Loading.circle()\n    setKeyword(keyword)\n    setOptionIndex(option)\n    const res = await RequestMethod('get', `machineSearch`,{\n      path: {\n        page: page,\n        renderItem: 18,\n      },\n      params: {\n        keyword: keyword ?? '',\n        opt: option ?? 0\n      }\n    })\n\n    if(res && res.status === 200){\n      let searchList = res.results.info_list.map((row: any, index: number) => {\n        return changeRow(row)\n      })\n\n      setPageInfo({\n        ...pageInfo,\n        page: res.results.page,\n        total: res.results.totalPages,\n      })\n\n      setSearchList([...searchList])\n    }\n  }\n\n  const getSummaryInfo = (info) => {\n    // selector.data[selector.index][info.key]\n    if(selector.data.length){\n      return selector.data[selector.index][info.key] ?? '-'\n    } else{\n      return 'test1'\n    }\n  }\n\n  const ModalContents = () => {\n    return <>\n      <div style={{\n        padding: '3.5px 0px 0px 3.5px',\n        width: '100%'\n      }}>\n        <UploadButton onClick={() => {\n          setIsOpen(true)\n        }}>\n          <p>{columnInitData.buttonText}</p>\n        </UploadButton>\n      </div>\n    </>\n  }\n\n  return (\n    <SearchModalWrapper >\n      { ModalContents() }\n      <Modal isOpen={isOpen} style={{\n        content: {\n          top: '50%',\n          left: '50%',\n          right: 'auto',\n          bottom: 'auto',\n          marginRight: '-50%',\n          transform: 'translate(-50%, -50%)',\n          padding: 0\n        },\n        overlay: {\n          background: 'rgba(0,0,0,.6)',\n          zIndex: 5\n        }\n      }}>\n        <div style={{\n          width: 1776,\n          height: 816\n        }}>\n          <div>\n            <div style={{\n              margin: '24px 16px 16px',\n              display: 'flex',\n              justifyContent: 'space-between'\n            }}>\n              <p style={{\n                color: 'black',\n                fontSize: 22,\n                fontWeight: 'bold',\n                margin: 0,\n              }}>{columnInitData.title}</p>\n              <div style={{display: 'flex'}}>\n                <Button>\n                  <p>엑셀로 받기</p>\n                </Button>\n                <div style={{cursor: 'pointer', marginLeft: 20}} onClick={() => {\n                  setIsOpen(false)\n                }}>\n                  <img style={{width: 20, height: 20}} src={IcX}/>\n                </div>\n              </div>\n            </div>\n            {\n              columnInitData.summaryInfo && columnInitData.summaryInfo.map((infos, index) => {\n                return (\n                  <HeaderTable>\n                    {\n                      infos.map(info => {\n                        return (\n                          <>\n                            <HeaderTableTitle>\n                              <HeaderTableText style={{fontWeight: 'bold'}}>{info.title}</HeaderTableText>\n                            </HeaderTableTitle>\n                            <HeaderTableTextInput style={{width: info.infoWidth}}>\n                              <HeaderTableText>{getSummaryInfo(info)}</HeaderTableText>\n                            </HeaderTableTextInput>\n                          </>\n                        )\n                      })\n                    }\n                  </HeaderTable>\n                )\n              })\n            }\n            {\n              columnInitData.cellEditButtons && <div style={{display: 'flex', justifyContent: 'flex-end', margin: '24px 48px 8px 0'}}>\n                <Button onClick={() => {\n                  let tmp = searchList\n\n                  setSearchList([\n                    ...searchList,\n                    {\n                      seq: searchList.length + 1\n                    }\n                  ])\n                }}>\n                  <p>행 추가</p>\n                </Button>\n                <Button style={{marginLeft: 16}} onClick={() => {\n                  if (selectRow === 0) {\n                    return\n                  }\n                  let tmpRow = searchList\n\n                  let tmp = tmpRow[selectRow]\n                  tmpRow[selectRow] = tmpRow[selectRow - 1]\n                  tmpRow[selectRow - 1] = tmp\n\n                  setSearchList([...tmpRow.map((v, i) => {\n                    return {\n                      ...v,\n                      seq: i + 1\n                    }\n                  })])\n                }}>\n                  <p>위로</p>\n                </Button>\n                <Button style={{marginLeft: 16}} onClick={() => {\n                  if (selectRow === searchList.length - 1) {\n                    return\n                  }\n                  let tmpRow = searchList\n\n                  let tmp = tmpRow[selectRow]\n                  tmpRow[selectRow] = tmpRow[selectRow + 1]\n                  tmpRow[selectRow + 1] = tmp\n\n                  setSearchList([...tmpRow.map((v, i) => {\n                    return {\n                      ...v,\n                      seq: i + 1\n                    }\n                  })])\n                }}>\n                  <p>아래로</p>\n                </Button>\n              </div>\n            }\n            <div style={{padding: '0 16px', width: 1776}}>\n              <ExcelTable\n                headerList={searchModalList[columnInitData.modalKey]}\n                row={searchList ?? [{}]}\n                setRow={(e) => setSearchList([...e])}\n                width={1746}\n                rowHeight={32}\n                height={560}\n                // setSelectRow={(e) => {\n                //   setSelectRow(e)\n                // }}\n                setSelectRow={(e) => {\n                  if(!searchList[e].border){\n                    searchList.map((v,i)=>{\n                      v.border = false;\n                    })\n                    searchList[e].border = true\n                    setSearchList([...searchList])\n                  }\n                  setSelectRow(e)\n                }}\n                type={'searchModal'}\n                headerAlign={'center'}\n              />\n            </div>\n          </div>\n          <div style={{ height: 50, display: 'flex', alignItems: 'flex-end'}}>\n            <div\n              onClick={() => {\n                setIsOpen(false)\n              }}\n              style={{width: 888, height: 40, backgroundColor: '#b3b3b3', display: 'flex', justifyContent: 'center', alignItems: 'center'}}\n            >\n              <p>취소</p>\n            </div>\n            <div\n              onClick={() => {\n                if(selectRow !== undefined && selectRow !== null){\n                  onRowChange({\n                    ...row,\n                    ...searchList[selectRow],\n                    name: row.name,\n                    isChange: true\n                  })\n                }\n                setIsOpen(false)\n              }}\n              style={{width: 888, height: 40, backgroundColor: POINT_COLOR, display: 'flex', justifyContent: 'center', alignItems: 'center'}}\n            >\n              <p>등록하기</p>\n            </div>\n          </div>\n        </div>\n      </Modal>\n    </SearchModalWrapper>\n  )\n}\n\nconst SearchModalWrapper = styled.div`\n  display: flex;\n  width: 100%;\n`\n\nconst Button = styled.button`\n    width:112px;\n    height:32px;\n    color:white;\n    font-size:15px;\n    border:none;\n    border-radius:6px;\n    background:#717C90;\n    display:flex;\n    justify-content:center;\n    align-items:center;\n    cursor:pointer;\n    \n`;\n\nconst HeaderTable = styled.div`\n  width: 1744px;\n  height: 32px;\n  margin: 0 16px;\n  background-color: #F4F6FA;\n  border: 0.5px solid #B3B3B3;\n  display: flex\n`\n\nconst HeaderTableTextInput = styled.div`\n  background-color: #ffffff;\n  padding-left: 3px;\n  height: 27px;\n  border: 0.5px solid #B3B3B3;\n  margin-top:2px;\n  margin-right: 66px;\n  display: flex;\n  align-items: center;\n`\n\nconst HeaderTableText = styled.p`\n  margin: 0;\n  font-size: 15px;\n`\n\nconst HeaderTableTitle = styled.div`\n  width: 112px;\n  padding: 0 8px;\n  display: flex; \n  align-items: center;\n`\n\nexport {InfoModal}\n"]},"metadata":{},"sourceType":"module"}