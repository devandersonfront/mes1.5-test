{"ast":null,"code":"import _toConsumableArray from \"/Users/user/Desktop/sizl/mono_pop/node_modules/next/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\n\nvar _jsxFileName = \"/Users/user/Desktop/sizl/mono_pop/packages/mes/src/container/Stock/MesStockList.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport { ExcelTable, Header as PageHeader, columnlist, PaginationComponent, ExcelDownloadModal } from 'shared'; // @ts-ignore\n\nimport { SelectColumn } from 'react-data-grid';\nimport Notiflix from \"notiflix\";\nimport { useRouter } from 'next/router';\n\nvar MesStockList = function MesStockList(_ref) {\n  _s();\n\n  var page = _ref.page,\n      keyword = _ref.keyword,\n      option = _ref.option;\n  var router = useRouter();\n\n  var _useState = useState(false),\n      excelOpen = _useState[0],\n      setExcelOpen = _useState[1];\n\n  var _useState2 = useState([{\n    customer: '진주상사',\n    model: '한국차',\n    code: 'SU-20210701-1',\n    material_name: 'SU900',\n    type: '완제품',\n    unit: 'EA',\n    stock: '10,000'\n  }, {\n    customer: '-',\n    model: '-',\n    code: 'SU-20210701-2',\n    material_name: 'SU900-2',\n    type: '완제품',\n    unit: 'EA',\n    stock: '0'\n  }, {\n    customer: '-',\n    model: '-',\n    code: 'SU-20210701-3',\n    material_name: 'SU900-1',\n    type: '완제품',\n    unit: 'EA',\n    stock: '55'\n  }]),\n      basicRow = _useState2[0],\n      setBasicRow = _useState2[1];\n\n  var _useState3 = useState(columnlist[\"stockV2\"]),\n      column = _useState3[0],\n      setColumn = _useState3[1];\n\n  var _useState4 = useState(new Set()),\n      selectList = _useState4[0],\n      setSelectList = _useState4[1];\n\n  var _useState5 = useState(['거래처명', '모델', 'CODE', '품명', '품목종류']),\n      optionList = _useState5[0],\n      setOptionList = _useState5[1];\n\n  var _useState6 = useState(0),\n      optionIndex = _useState6[0],\n      setOptionIndex = _useState6[1];\n\n  var _useState7 = useState({\n    page: 1,\n    total: 1\n  }),\n      pageInfo = _useState7[0],\n      setPageInfo = _useState7[1];\n\n  useEffect(function () {\n    Notiflix.Loading.remove();\n  }, []);\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }\n  }, __jsx(PageHeader, {\n    isSearch: true,\n    searchKeyword: keyword,\n    onChangeSearchKeyword: function onChangeSearchKeyword(keyword) {\n      if (keyword) {\n        router.push(\"/mes/rawmaterial/input?page=1&keyword=\".concat(keyword, \"&opt=\").concat(optionIndex));\n      } else {\n        router.push(\"/mes/rawmaterial/input?page=1&keyword=\");\n      }\n    },\n    searchOptionList: optionList,\n    onChangeSearchOption: function onChangeSearchOption(option) {\n      setOptionIndex(option);\n    },\n    title: \"재고 현황\",\n    buttons: ['엑셀로 받기'],\n    buttonsOnclick: function buttonsOnclick() {} // onClickHeaderButton\n    ,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }), __jsx(ExcelTable, {\n    editable: true,\n    resizable: true,\n    headerList: [SelectColumn].concat(_toConsumableArray(column)),\n    row: basicRow // setRow={setBasicRow}\n    ,\n    setRow: function setRow(e) {\n      var tmp = selectList;\n      e.map(function (v) {\n        if (v.isChange) tmp.add(v.id);\n      });\n      setSelectList(tmp);\n      setBasicRow(e);\n    },\n    selectList: selectList //@ts-ignore\n    ,\n    setSelectList: setSelectList,\n    height: basicRow.length * 40 >= 40 * 18 + 56 ? 40 * 19 : basicRow.length * 40 + 56,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }), __jsx(PaginationComponent, {\n    currentPage: pageInfo.page,\n    totalPage: pageInfo.total,\n    setPage: function setPage(page) {\n      if (keyword) {\n        router.push(\"/mes/basic/mold?page=\".concat(page, \"&keyword=\").concat(keyword, \"&opt=\").concat(option));\n      } else {\n        router.push(\"/mes/basic/mold?page=\".concat(page));\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }\n  }), __jsx(ExcelDownloadModal, {\n    isOpen: excelOpen,\n    column: column,\n    basicRow: basicRow,\n    filename: \"\\uAE08\\uD615\\uAE30\\uBCF8\\uC815\\uBCF4\",\n    sheetname: \"\\uAE08\\uD615\\uAE30\\uBCF8\\uC815\\uBCF4\",\n    selectList: selectList,\n    tab: 'ROLE_BASE_07',\n    setIsOpen: setExcelOpen,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }\n  }));\n};\n\n_s(MesStockList, \"PFh+X8rlVHqxhQHn5BQnxKH7r8E=\", false, function () {\n  return [useRouter];\n});\n\n_c = MesStockList;\nexport var getServerSideProps = function getServerSideProps(ctx) {\n  var _ctx$query$page, _ctx$query$keyword, _ctx$query$opt;\n\n  return {\n    props: {\n      page: (_ctx$query$page = ctx.query.page) !== null && _ctx$query$page !== void 0 ? _ctx$query$page : 1,\n      keyword: (_ctx$query$keyword = ctx.query.keyword) !== null && _ctx$query$keyword !== void 0 ? _ctx$query$keyword : \"\",\n      option: (_ctx$query$opt = ctx.query.opt) !== null && _ctx$query$opt !== void 0 ? _ctx$query$opt : 0\n    }\n  };\n};\nexport { MesStockList };\n\nvar _c;\n\n$RefreshReg$(_c, \"MesStockList\");","map":{"version":3,"sources":["/Users/user/Desktop/sizl/mono_pop/packages/mes/src/container/Stock/MesStockList.tsx"],"names":["React","useEffect","useState","ExcelTable","Header","PageHeader","columnlist","PaginationComponent","ExcelDownloadModal","SelectColumn","Notiflix","useRouter","MesStockList","page","keyword","option","router","excelOpen","setExcelOpen","customer","model","code","material_name","type","unit","stock","basicRow","setBasicRow","column","setColumn","Set","selectList","setSelectList","optionList","setOptionList","optionIndex","setOptionIndex","total","pageInfo","setPageInfo","Loading","remove","push","e","tmp","map","v","isChange","add","id","length","getServerSideProps","ctx","props","query","opt"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react'\nimport {\n  ExcelTable,\n  Header as PageHeader,\n  RequestMethod,\n  columnlist,\n  MAX_VALUE,\n  DropDownEditor,\n  TextEditor,\n  excelDownload,\n  PaginationComponent,\n  ExcelDownloadModal,\n  IExcelHeaderType, IItemMenuType\n} from 'shared'\n// @ts-ignore\nimport {SelectColumn} from 'react-data-grid'\nimport Notiflix from \"notiflix\";\nimport {useRouter} from 'next/router'\nimport {loadAll} from 'react-cookies'\nimport {NextPageContext} from 'next'\nimport moment from 'moment'\n\ninterface IProps {\n  children?: any\n  page?: number\n  keyword?: string\n  option?: number\n}\n\nconst MesStockList = ({page, keyword, option}: IProps) => {\n  const router = useRouter()\n\n  const [excelOpen, setExcelOpen] = useState<boolean>(false)\n\n  const [basicRow, setBasicRow] = useState<Array<any>>([\n    {\n      customer: '진주상사', model: '한국차', code: 'SU-20210701-1', material_name: 'SU900',\n      type: '완제품', unit: 'EA', stock: '10,000'\n    },{\n      customer: '-', model: '-', code: 'SU-20210701-2', material_name: 'SU900-2',\n      type: '완제품', unit: 'EA', stock: '0'\n    },{\n      customer: '-', model: '-', code: 'SU-20210701-3', material_name: 'SU900-1',\n      type: '완제품', unit: 'EA', stock: '55'\n    },\n  ])\n  const [column, setColumn] = useState<Array<IExcelHeaderType>>( columnlist[\"stockV2\"])\n  const [selectList, setSelectList] = useState<Set<number>>(new Set())\n  const [optionList, setOptionList] = useState<string[]>(['거래처명', '모델', 'CODE', '품명', '품목종류'])\n  const [optionIndex, setOptionIndex] = useState<number>(0)\n\n  const [pageInfo, setPageInfo] = useState<{page: number, total: number}>({\n    page: 1,\n    total: 1\n  })\n\n  useEffect(() => {\n    Notiflix.Loading.remove()\n  }, [])\n\n  return (\n    <div>\n      <PageHeader\n        isSearch\n        searchKeyword={keyword}\n        onChangeSearchKeyword={(keyword) => {\n          if(keyword){\n            router.push(`/mes/rawmaterial/input?page=1&keyword=${keyword}&opt=${optionIndex}`)\n          }else{\n            router.push(`/mes/rawmaterial/input?page=1&keyword=`)\n          }\n        }}\n        searchOptionList={optionList}\n        onChangeSearchOption={(option) => {\n          setOptionIndex(option)\n        }}\n        title={\"재고 현황\"}\n        buttons={\n          ['엑셀로 받기']\n        }\n        buttonsOnclick={\n          () => {}\n          // onClickHeaderButton\n        }\n      />\n      <ExcelTable\n        editable\n        resizable\n        headerList={[\n          SelectColumn,\n          ...column\n        ]}\n        row={basicRow}\n        // setRow={setBasicRow}\n        setRow={(e) => {\n          let tmp: Set<any> = selectList\n          e.map(v => {\n            if(v.isChange) tmp.add(v.id)\n          })\n          setSelectList(tmp)\n          setBasicRow(e)\n        }}\n        selectList={selectList}\n        //@ts-ignore\n        setSelectList={setSelectList}\n        height={basicRow.length * 40 >= 40*18+56 ? 40*19 : basicRow.length * 40 + 56}\n      />\n      <PaginationComponent\n        currentPage={pageInfo.page}\n        totalPage={pageInfo.total}\n        setPage={(page) => {\n          if(keyword){\n            router.push(`/mes/basic/mold?page=${page}&keyword=${keyword}&opt=${option}`)\n          }else{\n            router.push(`/mes/basic/mold?page=${page}`)\n          }\n        }}\n      />\n      <ExcelDownloadModal\n        isOpen={excelOpen}\n        column={column}\n        basicRow={basicRow}\n        filename={`금형기본정보`}\n        sheetname={`금형기본정보`}\n        selectList={selectList}\n        tab={'ROLE_BASE_07'}\n        setIsOpen={setExcelOpen}\n      />\n    </div>\n  );\n}\n\nexport const getServerSideProps = (ctx: NextPageContext) => {\n  return {\n    props: {\n      page: ctx.query.page ?? 1,\n      keyword: ctx.query.keyword ?? \"\",\n      option: ctx.query.opt ?? 0,\n    }\n  }\n}\n\nexport {MesStockList};\n"]},"metadata":{},"sourceType":"module"}