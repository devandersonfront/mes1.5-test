{"ast":null,"code":"var _jsxFileName = \"/Users/user/Desktop/sizl/mono_pop/packages/shared/src/components/Cell/UseDateCell.tsx\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport { UnitValue, UnitWrapper } from '../../styles/styledComponents';\nimport 'react-calendar/dist/Calendar.css';\nimport moment from 'moment';\nimport styled from 'styled-components'; //@ts-ignore\n\nconst UseDateCell = ({\n  row,\n  column,\n  onRowChange\n}) => {\n  const {\n    0: title,\n    1: setTitle\n  } = useState(0);\n  const {\n    0: bgColor,\n    1: setBgColor\n  } = useState();\n  useEffect(() => {\n    getUseDate(row.date);\n  }, [row]);\n\n  const getUseDate = date => {\n    const now = moment();\n    const useDate = moment(date);\n    const elapsedDay = Math.floor(Number(moment.duration(now.diff(useDate)).asDays()));\n\n    if (elapsedDay >= 10) {\n      setBgColor('red');\n    } else {\n      setBgColor(undefined);\n    }\n\n    setTitle(elapsedDay);\n  };\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, __jsx(UnitWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, console.log(row), __jsx(UnitValue, {\n    style: {\n      width: '100%',\n      padding: 0,\n      backgroundColor: row.useDate ? 'red' : undefined\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, __jsx(\"p\", {\n    style: {\n      textAlign: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }, title))));\n};\n\nconst Background = styled.div`\n    display:flex;\n    justify-content:flex-start;\n    align-items:center;\n    width:100%;\n    height:100%;\n    padding: 0 8px;\n    margin:0;\n`;\nexport { UseDateCell };","map":{"version":3,"sources":["/Users/user/Desktop/sizl/mono_pop/packages/shared/src/components/Cell/UseDateCell.tsx"],"names":["React","useEffect","useState","UnitValue","UnitWrapper","moment","styled","UseDateCell","row","column","onRowChange","title","setTitle","bgColor","setBgColor","getUseDate","date","now","useDate","elapsedDay","Math","floor","Number","duration","diff","asDays","undefined","console","log","width","padding","backgroundColor","textAlign","Background","div"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AAEA,SAA0DC,SAA1D,EAAqEC,WAArE,QAAuF,+BAAvF;AAEA,OAAO,kCAAP;AACA,OAAOC,MAAP,MAAmB,QAAnB;AAGA,OAAOC,MAAP,MAAmB,mBAAnB,C,CACA;;AASA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA,GAAF;AAAOC,EAAAA,MAAP;AAAeC,EAAAA;AAAf,CAAD,KAA0C;AAC5D,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBV,QAAQ,CAAS,CAAT,CAAlC;AACA,QAAM;AAAA,OAACW,OAAD;AAAA,OAAUC;AAAV,MAAwBZ,QAAQ,EAAtC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdc,IAAAA,UAAU,CAACP,GAAG,CAACQ,IAAL,CAAV;AACD,GAFQ,EAEN,CAACR,GAAD,CAFM,CAAT;;AAIA,QAAMO,UAAU,GAAIC,IAAD,IAAgB;AACjC,UAAMC,GAAG,GAAGZ,MAAM,EAAlB;AACA,UAAMa,OAAO,GAAGb,MAAM,CAACW,IAAD,CAAtB;AAEA,UAAMG,UAAU,GAAGC,IAAI,CAACC,KAAL,CAAWC,MAAM,CAACjB,MAAM,CAACkB,QAAP,CAAgBN,GAAG,CAACO,IAAJ,CAASN,OAAT,CAAhB,EAAmCO,MAAnC,EAAD,CAAjB,CAAnB;;AAEA,QAAGN,UAAU,IAAI,EAAjB,EAAoB;AAClBL,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KAFD,MAEK;AACHA,MAAAA,UAAU,CAACY,SAAD,CAAV;AACD;;AAEDd,IAAAA,QAAQ,CAACO,UAAD,CAAR;AACD,GAbD;;AAeA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGQ,OAAO,CAACC,GAAR,CAAYpB,GAAZ,CADH,EAEE,MAAC,SAAD;AACE,IAAA,KAAK,EAAE;AACLqB,MAAAA,KAAK,EAAE,MADF;AAELC,MAAAA,OAAO,EAAE,CAFJ;AAGLC,MAAAA,eAAe,EAAEvB,GAAG,CAACU,OAAJ,GAAc,KAAd,GAAsBQ;AAHlC,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAME;AAAG,IAAA,KAAK,EAAE;AAACM,MAAAA,SAAS,EAAE;AAAZ,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmCrB,KAAnC,CANF,CAFF,CADF,CADF;AAeD,CAtCD;;AAwCA,MAAMsB,UAAU,GAAG3B,MAAM,CAAC4B,GAAI;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CARA;AAUA,SAAQ3B,WAAR","sourcesContent":["import React, {useEffect, useState} from 'react'\nimport {IExcelHeaderType} from '../../common/@types/type'\nimport {BoxWrap, DropBoxContainer, InnerBoxWrap, UnitBox, UnitValue, UnitWrapper} from '../../styles/styledComponents'\nimport Calendar from 'react-calendar'\nimport 'react-calendar/dist/Calendar.css'\nimport moment from 'moment'\nimport useOnclickOutside from 'react-cool-onclickoutside'\nimport Modal from 'react-modal'\nimport styled from 'styled-components'\n//@ts-ignore\nimport calendarWhite from '../../../public/images/calendar_icon_white.png'\n\ninterface IProps {\n  row: any\n  column: IExcelHeaderType\n  onRowChange: (e: any) => void\n}\n\nconst UseDateCell = ({ row, column, onRowChange }: IProps) => {\n  const [title, setTitle] = useState<number>(0)\n  const [bgColor, setBgColor] = useState<string>()\n\n  useEffect(() => {\n    getUseDate(row.date)\n  }, [row])\n\n  const getUseDate = (date: Date) => {\n    const now = moment();\n    const useDate = moment(date)\n\n    const elapsedDay = Math.floor(Number(moment.duration(now.diff(useDate)).asDays()))\n\n    if(elapsedDay >= 10){\n      setBgColor('red')\n    }else{\n      setBgColor(undefined)\n    }\n\n    setTitle(elapsedDay)\n  }\n\n  return (\n    <div>\n      <UnitWrapper>\n        {console.log(row)}\n        <UnitValue\n          style={{\n            width: '100%',\n            padding: 0,\n            backgroundColor: row.useDate ? 'red' : undefined\n          }}>\n          <p style={{textAlign: 'center',}}>{title}</p>\n        </UnitValue>\n      </UnitWrapper>\n    </div>\n  );\n}\n\nconst Background = styled.div`\n    display:flex;\n    justify-content:flex-start;\n    align-items:center;\n    width:100%;\n    height:100%;\n    padding: 0 8px;\n    margin:0;\n`;\n\nexport {UseDateCell};\n"]},"metadata":{},"sourceType":"module"}