{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/user/Desktop/sizl/mono_pop/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport _regeneratorRuntime from \"/Users/user/Desktop/sizl/mono_pop/node_modules/@babel/runtime/regenerator\";\nimport _toConsumableArray from \"/Users/user/Desktop/sizl/mono_pop/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _asyncToGenerator from \"/Users/user/Desktop/sizl/mono_pop/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"/Users/user/Desktop/sizl/mono_pop/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nvar _jsxFileName = \"/Users/user/Desktop/sizl/mono_pop/packages/main/component/Modal/ProcessSeqModal.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  display: flex;\\n  width: 100%;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport Modal from 'react-modal';\nimport { POINT_COLOR } from '../../common/configset'; //@ts-ignore\n\nimport IcSearchButton from '../../public/images/ic_search.png'; //@ts-ignore\n\nimport IcX from '../../public/images/ic_x.png';\nimport ExcelTable from '../Excel/ExcelTable';\nimport { searchModalList } from '../../common/modalInit'; //@ts-ignore\n\nimport { RequestMethod } from '../../common/RequestFunctions';\nimport Notiflix from 'notiflix';\nvar optionList = ['고객사명', '대표자명', '담당자명', '', '', '주소', '사업자 번호'];\n\nvar ProcessSeqModal = function ProcessSeqModal(_ref) {\n  _s();\n\n  var column = _ref.column,\n      row = _ref.row,\n      onRowChange = _ref.onRowChange;\n\n  var _useState = useState(false),\n      isOpen = _useState[0],\n      setIsOpen = _useState[1];\n\n  var _useState2 = useState('작업 지시서'),\n      title = _useState2[0],\n      setTitle = _useState2[1];\n\n  var _useState3 = useState(0),\n      optionIndex = _useState3[0],\n      setOptionIndex = _useState3[1];\n\n  var _useState4 = useState(''),\n      keyword = _useState4[0],\n      setKeyword = _useState4[1];\n\n  var _useState5 = useState(),\n      selectRow = _useState5[0],\n      _setSelectRow = _useState5[1];\n\n  var _useState6 = useState([]),\n      searchList = _useState6[0],\n      setSearchList = _useState6[1];\n\n  useEffect(function () {\n    if (isOpen && row.pp_id) SearchBasic(keyword, 0).then(function () {\n      Notiflix.Loading.remove();\n    });\n  }, [isOpen]);\n\n  var changeRow = function changeRow(row, key) {\n    var tmpData = _objectSpread(_objectSpread({}, row), {}, {\n      process_id: row.process.name,\n      process_idPK: row.process.process_id\n    });\n\n    return tmpData;\n  };\n\n  var SearchBasic = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(keyword, option) {\n      var res, searchList;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              Notiflix.Loading.circle();\n              setKeyword(keyword);\n              setOptionIndex(option);\n              _context.next = 5;\n              return RequestMethod('get', \"productprocessList\", {\n                path: {\n                  pp_id: row.pp_id\n                }\n              });\n\n            case 5:\n              res = _context.sent;\n              searchList = res.results.processes.map(function (row, index) {\n                return changeRow(row);\n              });\n\n              if (res && res.status === 200) {\n                setSearchList(_toConsumableArray(searchList));\n              }\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function SearchBasic(_x, _x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var ModalContents = function ModalContents() {\n    if (column.searchType === 'operation' && row.index !== 1) {\n      return __jsx(React.Fragment, null);\n    }\n\n    if (column.disableType === 'record' && row.osd_id) {\n      return __jsx(\"div\", {\n        style: {\n          width: '100%',\n          height: 40,\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center'\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 14\n        }\n      }, __jsx(\"p\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 9\n        }\n      }, row[\"\".concat(column.key)]));\n    }\n\n    return __jsx(React.Fragment, null, __jsx(\"div\", {\n      style: {\n        width: 'calc(100% - 40px)',\n        height: 40\n      },\n      onClick: function onClick() {\n        setIsOpen(true);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 7\n      }\n    }, row[\"\".concat(column.key)]), __jsx(\"div\", {\n      style: {\n        display: 'flex',\n        backgroundColor: POINT_COLOR,\n        width: 38,\n        height: 38,\n        justifyContent: 'center',\n        alignItems: 'center'\n      },\n      onClick: function onClick() {\n        if (row.pp_id) {\n          setIsOpen(true);\n        }\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 7\n      }\n    }, __jsx(\"img\", {\n      style: {\n        width: 20,\n        height: 20\n      },\n      src: IcSearchButton,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }\n    })));\n  };\n\n  return __jsx(SearchModalWrapper, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 5\n    }\n  }, ModalContents(), __jsx(Modal, {\n    isOpen: isOpen,\n    style: {\n      content: {\n        top: '50%',\n        left: '50%',\n        right: 'auto',\n        bottom: 'auto',\n        marginRight: '-50%',\n        transform: 'translate(-50%, -50%)',\n        padding: 0,\n        overflow: \"hidden\"\n      },\n      overlay: {\n        background: 'rgba(0,0,0,.6)',\n        zIndex: 5\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    style: {\n      width: 1776,\n      height: 816\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    style: {\n      marginTop: 24,\n      marginLeft: 16,\n      marginRight: 16,\n      display: 'flex',\n      justifyContent: 'space-between'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 11\n    }\n  }, __jsx(\"p\", {\n    style: {\n      color: 'black',\n      fontSize: 22,\n      fontWeight: 'bold',\n      margin: 0\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }\n  }, row.name, \" \\uC0DD\\uC0B0 \\uACF5\\uC815\"), __jsx(\"div\", {\n    style: {\n      cursor: 'pointer'\n    },\n    onClick: function onClick() {\n      setIsOpen(false);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }\n  }, __jsx(\"img\", {\n    style: {\n      width: 20,\n      height: 20\n    },\n    src: IcX,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 15\n    }\n  }))), __jsx(\"div\", {\n    style: {\n      padding: '0 16px 0 16px',\n      width: 856,\n      marginTop: 22\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 11\n    }\n  }, __jsx(ExcelTable, {\n    headerList: searchModalList.productprocess,\n    row: searchList !== null && searchList !== void 0 ? searchList : [],\n    setRow: function setRow() {},\n    width: 1750,\n    rowHeight: 32,\n    height: 740,\n    setSelectRow: function setSelectRow(e) {\n      _setSelectRow(e);\n    },\n    type: 'searchModal',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 13\n    }\n  })), __jsx(\"div\", {\n    style: {\n      height: 26,\n      display: 'flex',\n      alignItems: 'flex-end'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    onClick: function onClick() {\n      setIsOpen(false);\n    },\n    style: {\n      width: 888,\n      height: 40,\n      backgroundColor: '#b3b3b3',\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 13\n    }\n  }, __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 15\n    }\n  }, \"\\uCDE8\\uC18C\")), __jsx(\"div\", {\n    onClick: function onClick() {\n      if (selectRow !== undefined && selectRow !== null) {\n        onRowChange(_objectSpread(_objectSpread(_objectSpread({}, row), searchList[selectRow]), {}, {\n          mold_id: searchList[selectRow].mold_name,\n          mold_idPK: searchList[selectRow].mold_id,\n          isChange: true\n        }));\n      }\n\n      setIsOpen(false);\n    },\n    style: {\n      width: 888,\n      height: 40,\n      backgroundColor: POINT_COLOR,\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 13\n    }\n  }, __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 15\n    }\n  }, \"\\uB4F1\\uB85D\\uD558\\uAE30\"))))));\n};\n\n_s(ProcessSeqModal, \"WrsFjrrnRzzOXi1ZhlcF8CFIU1w=\");\n\n_c = ProcessSeqModal;\nvar SearchModalWrapper = styled.div(_templateObject());\n_c2 = SearchModalWrapper;\nexport default ProcessSeqModal;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ProcessSeqModal\");\n$RefreshReg$(_c2, \"SearchModalWrapper\");","map":{"version":3,"sources":["/Users/user/Desktop/sizl/mono_pop/packages/main/component/Modal/ProcessSeqModal.tsx"],"names":["React","useEffect","useState","styled","Modal","POINT_COLOR","IcSearchButton","IcX","ExcelTable","searchModalList","RequestMethod","Notiflix","optionList","ProcessSeqModal","column","row","onRowChange","isOpen","setIsOpen","title","setTitle","optionIndex","setOptionIndex","keyword","setKeyword","selectRow","setSelectRow","searchList","setSearchList","pp_id","SearchBasic","then","Loading","remove","changeRow","key","tmpData","process_id","process","name","process_idPK","option","circle","path","res","results","processes","map","index","status","ModalContents","searchType","disableType","osd_id","width","height","display","justifyContent","alignItems","backgroundColor","content","top","left","right","bottom","marginRight","transform","padding","overflow","overlay","background","zIndex","marginTop","marginLeft","color","fontSize","fontWeight","margin","cursor","productprocess","e","undefined","mold_id","mold_name","mold_idPK","isChange","SearchModalWrapper","div"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react'\nimport {IExcelHeaderType} from '../../common/@types/type'\nimport styled from 'styled-components'\nimport Modal from 'react-modal'\nimport {POINT_COLOR} from '../../common/configset'\n//@ts-ignore\nimport IcSearchButton from '../../public/images/ic_search.png'\n//@ts-ignore\nimport IcX from '../../public/images/ic_x.png'\nimport ExcelTable from '../Excel/ExcelTable'\nimport {searchModalList} from '../../common/modalInit'\n//@ts-ignore\nimport Search_icon from '../../public/images/btn_search.png'\nimport {RequestMethod} from '../../common/RequestFunctions'\nimport Notiflix from 'notiflix'\n\ninterface IProps {\n  column: IExcelHeaderType\n  row: any\n  onRowChange: (e: any) => void\n}\n\nconst optionList = ['고객사명','대표자명','담당자명', '', '', '주소', '사업자 번호']\n\nconst ProcessSeqModal = ({column, row, onRowChange}: IProps) => {\n  const [isOpen, setIsOpen] = useState<boolean>(false)\n  const [title, setTitle] = useState<string>('작업 지시서')\n  const [optionIndex, setOptionIndex] = useState<number>(0)\n  const [keyword, setKeyword] = useState<string>('')\n  const [selectRow, setSelectRow] = useState<number>()\n  const [searchList, setSearchList] = useState<any[]>([])\n\n  useEffect(() => {\n    if(isOpen && row.pp_id) SearchBasic(keyword, 0).then(() => {\n      Notiflix.Loading.remove()\n    })\n  }, [isOpen])\n\n  const changeRow = (row: any, key?: string) => {\n    let tmpData = {\n      ...row,\n      process_id: row.process.name,\n      process_idPK: row.process.process_id,\n    }\n\n    return tmpData\n  }\n\n  const SearchBasic = async (keyword: any, option: number) => {\n    Notiflix.Loading.circle()\n    setKeyword(keyword)\n    setOptionIndex(option)\n    const res = await RequestMethod('get', `productprocessList`,{\n      path: {\n        pp_id: row.pp_id\n      }\n    })\n\n    let searchList = res.results.processes.map((row: any, index: number) => {\n      return changeRow(row)\n    })\n\n    if(res && res.status === 200){\n      setSearchList([...searchList])\n    }\n  }\n\n  const ModalContents = () => {\n    if(column.searchType === 'operation' && row.index !== 1){\n      return <></>\n    }\n\n    if(column.disableType === 'record' && row.osd_id){\n      return <div style={{width: '100%', height: 40, display: 'flex', justifyContent: 'center', alignItems: 'center'}}>\n        <p>{row[`${column.key}`]}</p>\n      </div>\n    }\n\n    return <>\n      <div style={{width: 'calc(100% - 40px)', height: 40}} onClick={() => {\n        setIsOpen(true)\n      }}>\n        { row[`${column.key}`]}\n      </div>\n      <div style={{\n        display: 'flex',\n        backgroundColor: POINT_COLOR,\n        width: 38,\n        height: 38,\n        justifyContent: 'center',\n        alignItems: 'center'\n      }} onClick={() => {\n        if(row.pp_id){\n          setIsOpen(true)\n        }\n      }}>\n        <img style={{width: 20, height: 20}} src={IcSearchButton}/>\n      </div>\n    </>\n  }\n\n  return (\n    <SearchModalWrapper >\n      {ModalContents()}\n      <Modal isOpen={isOpen} style={{\n        content: {\n          top: '50%',\n          left: '50%',\n          right: 'auto',\n          bottom: 'auto',\n          marginRight: '-50%',\n          transform: 'translate(-50%, -50%)',\n          padding: 0,\n          overflow:\"hidden\"\n        },\n        overlay: {\n          background: 'rgba(0,0,0,.6)',\n          zIndex: 5\n        }\n      }}>\n        <div style={{\n          width: 1776,\n          height: 816\n        }}>\n          <div style={{\n            marginTop: 24,\n            marginLeft: 16,\n            marginRight: 16,\n            display: 'flex',\n            justifyContent: 'space-between'\n          }}>\n            <p style={{\n              color: 'black',\n              fontSize: 22,\n              fontWeight: 'bold',\n              margin: 0,\n            }}>{row.name} 생산 공정</p>\n            <div style={{cursor: 'pointer'}} onClick={() => {\n              setIsOpen(false)\n            }}>\n              <img style={{width: 20, height: 20}} src={IcX}/>\n            </div>\n          </div>\n          <div style={{padding: '0 16px 0 16px', width: 856, marginTop: 22}}>\n            <ExcelTable\n              headerList={searchModalList.productprocess}\n              row={searchList ?? []}\n              setRow={() => {}}\n              width={1750}\n              rowHeight={32}\n              height={740}\n              setSelectRow={(e) => {\n                setSelectRow(e)\n              }}\n              type={'searchModal'}\n            />\n          </div>\n          <div style={{ height: 26, display: 'flex', alignItems: 'flex-end'}}>\n            <div\n              onClick={() => {\n                setIsOpen(false)\n              }}\n              style={{width: 888, height: 40, backgroundColor: '#b3b3b3', display: 'flex', justifyContent: 'center', alignItems: 'center'}}\n            >\n              <p>취소</p>\n            </div>\n            <div\n              onClick={() => {\n                if(selectRow !== undefined && selectRow !== null){\n                  onRowChange({\n                    ...row,\n                    ...searchList[selectRow],\n                    mold_id: searchList[selectRow].mold_name,\n                    mold_idPK: searchList[selectRow].mold_id,\n                    isChange: true\n                  })\n                }\n                setIsOpen(false)\n              }}\n              style={{width: 888, height: 40, backgroundColor: POINT_COLOR, display: 'flex', justifyContent: 'center', alignItems: 'center'}}\n            >\n              <p>등록하기</p>\n            </div>\n          </div>\n        </div>\n      </Modal>\n    </SearchModalWrapper>\n  )\n}\n\nconst SearchModalWrapper = styled.div`\n  display: flex;\n  width: 100%;\n`\n\nexport default ProcessSeqModal\n"]},"metadata":{},"sourceType":"module"}