{"ast":null,"code":"import _toConsumableArray from \"/Users/user/Desktop/sizl/mono_pop/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"/Users/user/Desktop/sizl/mono_pop/node_modules/@babel/runtime/regenerator\";\nimport _defineProperty from \"/Users/user/Desktop/sizl/mono_pop/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _asyncToGenerator from \"/Users/user/Desktop/sizl/mono_pop/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/Users/user/Desktop/sizl/mono_pop/packages/main/pages/mes/record/register.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useState } from 'react';\nimport ExcelTable from '../../../component/Excel/ExcelTable';\nimport MenuNavigation from '../../../component/MenuNav/MenuNavigation';\nimport ProfileHeader from '../../../component/Profile/ProfileHeader';\nimport PageHeader from '../../../component/Header/Header'; // @ts-ignore\n\nimport { SelectColumn } from 'react-data-grid';\nimport { RequestMethod } from '../../../common/RequestFunctions';\nimport { columnlist } from \"../../../common/columnInit\";\nimport Notiflix from \"notiflix\";\nimport { useRouter } from 'next/router';\nimport TextEditor from '../../../component/InputBox/ExcelBasicInputBox';\nimport { excelDownload } from '../../../common/excelDownloadFunction';\nimport moment from 'moment';\nvar title = '작업 완료 등록';\nvar optList = ['고객사명', '모델명', 'CODE', '품명', '공정', '기계', 'Lot번호'];\n\nvar BasicContainer = function BasicContainer() {\n  _s();\n\n  var router = useRouter();\n\n  var _useState = useState([{\n    name: \"\",\n    id: \"rawinput_\".concat(Math.random() * 1000),\n    date: moment().format('YYYY-MM-DD'),\n    start: \"\".concat(moment().format('YYYY-MM-DD HH:mm'), \":00\"),\n    end: undefined,\n    poor_quantities: []\n  }]),\n      basicRow = _useState[0],\n      setBasicRow = _useState[1];\n\n  var _useState2 = useState(columnlist.recordRegister),\n      column = _useState2[0],\n      setColumn = _useState2[1];\n\n  var _useState3 = useState(new Set()),\n      selectList = _useState3[0],\n      setSelectList = _useState3[1];\n\n  var _useState4 = useState(0),\n      isGoal = _useState4[0],\n      setIsGoal = _useState4[1];\n\n  var _useState5 = useState({\n    page: 1,\n    total: 1\n  }),\n      pageInfo = _useState5[0],\n      setPageInfo = _useState5[1];\n\n  useEffect(function () {\n    // loadAllSelectItems(column).then((column) => {})\n    LoadMenu();\n  }, []);\n\n  var loadAllSelectItems = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(column, pp_id) {\n      var res, tmpColumn;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              if (!pp_id) {\n                _context2.next = 4;\n                break;\n              }\n\n              _context2.next = 3;\n              return RequestMethod('get', \"productprocessList\", {\n                path: {\n                  pp_id: pp_id\n                }\n              });\n\n            case 3:\n              res = _context2.sent;\n\n            case 4:\n              tmpColumn = column.map( /*#__PURE__*/function () {\n                var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(v) {\n                  return _regeneratorRuntime.wrap(function _callee$(_context) {\n                    while (1) {\n                      switch (_context.prev = _context.next) {\n                        case 0:\n                          if (!(v.selectList && v.selectList.length === 0 && v.key === 'seq')) {\n                            _context.next = 4;\n                            break;\n                          }\n\n                          return _context.abrupt(\"return\", _objectSpread(_objectSpread({}, v), {}, {\n                            selectList: []\n                          }));\n\n                        case 4:\n                          if (!v.selectList) {\n                            _context.next = 8;\n                            break;\n                          }\n\n                          return _context.abrupt(\"return\", _objectSpread(_objectSpread({}, v), {}, {\n                            pk: v.unit_id\n                          }));\n\n                        case 8:\n                          return _context.abrupt(\"return\", v);\n\n                        case 9:\n                        case \"end\":\n                          return _context.stop();\n                      }\n                    }\n                  }, _callee);\n                }));\n\n                return function (_x3) {\n                  return _ref2.apply(this, arguments);\n                };\n              }());\n              Promise.all(tmpColumn).then(function (res) {\n                setColumn(_toConsumableArray(res.map(function (v) {\n                  return _objectSpread(_objectSpread({}, v), {}, {\n                    name: v.moddable ? v.name + '(필수)' : v.name\n                  });\n                })));\n              });\n\n            case 6:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function loadAllSelectItems(_x, _x2) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var SaveBasic = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n      var tmpRow, res;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              tmpRow = basicRow.map(function (v) {\n                if (selectList.has(v.id)) {\n                  var _v$poor_quantities, _v$paused_times;\n\n                  return _objectSpread(_objectSpread({}, v), {}, {\n                    customer_id: v.customer_idPK,\n                    osd_id: v.osd_idPK,\n                    cm_id: v.cm_idPK,\n                    mold_id: v.mold_idPK,\n                    machine_id: v.machine_idPK,\n                    process_id: v.process_idPK,\n                    ln_id: v.ln_idPK,\n                    paused_time: v.paused_timePK,\n                    good_quantity: Number(v.good_quantity),\n                    user_id: v.user_idPK,\n                    poor_quantities: (_v$poor_quantities = v.poor_quantities) !== null && _v$poor_quantities !== void 0 ? _v$poor_quantities : [],\n                    paused_times: (_v$paused_times = v.paused_times) !== null && _v$paused_times !== void 0 ? _v$paused_times : []\n                  });\n                }\n              }).filter(function (v) {\n                return v;\n              });\n\n              if (!tmpRow.length) {\n                _context3.next = 8;\n                break;\n              }\n\n              _context3.next = 4;\n              return RequestMethod('post', \"recordSave\", {\n                records: _toConsumableArray(tmpRow)\n              });\n\n            case 4:\n              res = _context3.sent;\n\n              if (res) {\n                if (res.status === 200) {\n                  Notiflix.Report.success('저장되었습니다.', '', '확인');\n                }\n              }\n\n              _context3.next = 9;\n              break;\n\n            case 8:\n              Notiflix.Report.failure('저장 실패', '저장할 데이터를 선택해주세요', '확인');\n\n            case 9:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function SaveBasic() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var DeleteBasic = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n      var tmpRow;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              tmpRow = basicRow.map(function (row, index) {\n                if (selectList.has(row.id)) {\n                  return;\n                }\n\n                return row;\n              }).filter(function (v) {\n                return v;\n              });\n              Notiflix.Report.success('삭제되었습니다.', '', '확인');\n              setBasicRow(_toConsumableArray(tmpRow));\n\n            case 3:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    return function DeleteBasic() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  var LoadMenu = /*#__PURE__*/function () {\n    var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5() {\n      var res, tmpColumn;\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.next = 2;\n              return RequestMethod('get', \"itemList\", {\n                path: {\n                  tab: 'ROLE_PROD_05'\n                }\n              });\n\n            case 2:\n              res = _context5.sent;\n\n              if (res && res.status === 200) {\n                tmpColumn = column;\n                tmpColumn = tmpColumn.map(function (column) {\n                  var menuData;\n                  res.results.bases && res.results.bases.map(function (menu) {\n                    if (menu.colName === column.key) {\n                      menuData = {\n                        id: menu.mi_id,\n                        name: menu.title,\n                        width: menu.width,\n                        tab: 'ROLE_PROD_05',\n                        unit: menu.unit,\n                        moddable: !menu.moddable\n                      };\n                    } else if (menu.colName === 'id' && column.key === 'tmpId') {\n                      menuData = {\n                        id: menu.mi_id,\n                        name: menu.title,\n                        width: menu.width,\n                        tab: 'ROLE_PROD_05',\n                        unit: menu.unit,\n                        moddable: !menu.moddable\n                      };\n                    }\n                  });\n\n                  if (menuData) {\n                    return _objectSpread(_objectSpread({}, column), menuData);\n                  }\n                }).filter(function (v) {\n                  return v;\n                });\n                loadAllSelectItems(tmpColumn);\n              } else if (res.state === 401) {\n                Notiflix.Report.failure('불러올 수 없습니다.', '권한이 없습니다.', '확인', function () {\n                  router.back();\n                });\n              }\n\n            case 4:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5);\n    }));\n\n    return function LoadMenu() {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n\n  var changeRow = function changeRow(row) {\n    var tmpData = {};\n    return _objectSpread({\n      ln_id: row.ln_id,\n      rm_id: row.raw_material.rm_id,\n      customer_id: row.raw_material.model.customer.name,\n      cm_id: row.raw_material.model.model,\n      code: row.raw_material.code,\n      name: row.raw_material.name,\n      texture: row.raw_material.texture,\n      depth: row.raw_material.depth,\n      width: row.raw_material.width,\n      height: row.raw_material.height,\n      type: row.raw_material.type,\n      amount: row.amount,\n      date: row.date,\n      number: row.number\n    }, tmpData);\n  };\n\n  var cleanUpData = function cleanUpData(res) {\n    var tmpColumn = columnlist.operationRegister;\n    var tmpRow = [];\n    tmpColumn = tmpColumn.map(function (column) {\n      var menuData;\n      res.results.menus && res.results.menus.map(function (menu) {\n        if (menu.colName === column.key) {\n          menuData = {\n            id: menu.id,\n            name: menu.title,\n            width: menu.width,\n            tab: menu.tab,\n            unit: menu.unit,\n            moddable: !menu.moddable\n          };\n        } else if (menu.colName === 'id' && column.key === 'tmpId') {\n          menuData = {\n            id: menu.id,\n            name: menu.title,\n            width: menu.width,\n            tab: menu.tab,\n            unit: menu.unit,\n            moddable: !menu.moddable\n          };\n        }\n      });\n\n      if (menuData) {\n        return _objectSpread(_objectSpread({}, column), menuData);\n      }\n    }).filter(function (v) {\n      return v;\n    });\n    loadAllSelectItems(tmpColumn);\n    var additionalMenus = res.results.menus ? res.results.menus.map(function (menu) {\n      if (menu.colName === null) {\n        return {\n          id: menu.id,\n          name: menu.title,\n          width: menu.width,\n          key: menu.title,\n          editor: TextEditor,\n          type: 'additional',\n          unit: menu.unit\n        };\n      }\n    }).filter(function (v) {\n      return v;\n    }) : [];\n    tmpRow = res.results.info_list;\n    var additionalData = [];\n    additionalMenus.map(function (v) {\n      if (v.type === 'additional') {\n        additionalData.push(v.key);\n      }\n    });\n    var tmpBasicRow = tmpRow.map(function (row, index) {\n      var realTableData = changeRow(row);\n      var appendAdditional = {};\n      row.additional && row.additional.map(function (v) {\n        appendAdditional = _objectSpread(_objectSpread({}, appendAdditional), {}, _defineProperty({}, v.title, v.value));\n      });\n      var random_id = Math.random() * 1000;\n      return _objectSpread(_objectSpread(_objectSpread({}, realTableData), appendAdditional), {}, {\n        id: \"rawinput_\".concat(random_id)\n      });\n    });\n    setBasicRow(_toConsumableArray(tmpBasicRow));\n  };\n\n  var downloadExcel = function downloadExcel() {\n    var tmpSelectList = [];\n    basicRow.map(function (row) {\n      tmpSelectList.push(selectList.has(row.id));\n    });\n    excelDownload(column, basicRow, \"\\uC791\\uC5C5\\uC644\\uB8CC\\uB4F1\\uB85D\", '작업완료등록', tmpSelectList);\n  };\n\n  var onClickHeaderButton = function onClickHeaderButton(index) {\n    switch (index) {\n      case 0:\n        downloadExcel();\n        break;\n      // case 1:\n      //   router.push(`/mes/item/manage/rawin`)\n      //   break;\n\n      case 1:\n        var items = {};\n        column.map(function (value) {\n          if (value.selectList && value.selectList.length) {\n            var _objectSpread3;\n\n            items = _objectSpread(_objectSpread({}, value.selectList[0]), {}, (_objectSpread3 = {}, _defineProperty(_objectSpread3, value.key, value.selectList[0].name), _defineProperty(_objectSpread3, value.key + 'PK', value.selectList[0].pk), _objectSpread3), items);\n          }\n        });\n        var random_id = Math.random() * 1000;\n        setBasicRow([_objectSpread(_objectSpread({}, items), {}, {\n          id: \"rawinput_\".concat(random_id),\n          name: '',\n          date: moment().format('YYYY-MM-DD'),\n          start: \"\".concat(moment().format('YYYY-MM-DD HH:mm'), \":00\"),\n          end: null\n        })].concat(_toConsumableArray(basicRow)));\n        break;\n\n      case 2:\n        SaveBasic();\n        break;\n\n      case 3:\n        Notiflix.Confirm.show(\"경고\", \"삭제하시겠습니까?\", \"확인\", \"취소\", function () {\n          DeleteBasic();\n        }, function () {});\n        break;\n    }\n  };\n\n  return __jsx(\"div\", {\n    style: {\n      display: 'flex'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 5\n    }\n  }, __jsx(MenuNavigation, {\n    pageType: 'MES',\n    subType: 0,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 358,\n      columnNumber: 7\n    }\n  }), __jsx(\"div\", {\n    style: {\n      paddingBottom: 40\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 359,\n      columnNumber: 7\n    }\n  }, __jsx(ProfileHeader, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 360,\n      columnNumber: 9\n    }\n  }), __jsx(PageHeader, {\n    title: title,\n    buttons: ['엑셀로 받기', '행 추가', '저장하기', '삭제'],\n    buttonsOnclick: onClickHeaderButton,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 361,\n      columnNumber: 9\n    }\n  }), __jsx(ExcelTable, {\n    editable: true,\n    resizable: true,\n    headerList: [SelectColumn].concat(_toConsumableArray(column)),\n    row: basicRow // setRow={setBasicRow}\n    ,\n    setRow: function setRow(e) {\n      var tmp = selectList;\n      e.map(function (v) {\n        if (v.isChange) tmp.add(v.id);\n      });\n      setSelectList(tmp);\n      setBasicRow(e);\n    },\n    selectList: selectList //@ts-ignore\n    ,\n    setSelectList: setSelectList,\n    height: basicRow.length * 40 >= 40 * 18 + 40 ? 40 * 18 : basicRow.length * 40 + 56,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 366,\n      columnNumber: 9\n    }\n  })));\n};\n\n_s(BasicContainer, \"wYDSJdksKLOI5VaFJlKK9rOFa2U=\", false, function () {\n  return [useRouter];\n});\n\n_c = BasicContainer;\nexport var __N_SSP = true;\nexport default BasicContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"BasicContainer\");","map":{"version":3,"sources":["/Users/user/Desktop/sizl/mono_pop/packages/main/pages/mes/record/register.tsx"],"names":["React","useEffect","useState","ExcelTable","MenuNavigation","ProfileHeader","PageHeader","SelectColumn","RequestMethod","columnlist","Notiflix","useRouter","TextEditor","excelDownload","moment","title","optList","BasicContainer","router","name","id","Math","random","date","format","start","end","undefined","poor_quantities","basicRow","setBasicRow","recordRegister","column","setColumn","Set","selectList","setSelectList","isGoal","setIsGoal","page","total","pageInfo","setPageInfo","LoadMenu","loadAllSelectItems","pp_id","path","res","tmpColumn","map","v","length","key","pk","unit_id","Promise","all","then","moddable","SaveBasic","tmpRow","has","customer_id","customer_idPK","osd_id","osd_idPK","cm_id","cm_idPK","mold_id","mold_idPK","machine_id","machine_idPK","process_id","process_idPK","ln_id","ln_idPK","paused_time","paused_timePK","good_quantity","Number","user_id","user_idPK","paused_times","filter","records","status","Report","success","failure","DeleteBasic","row","index","tab","menuData","results","bases","menu","colName","mi_id","width","unit","state","back","changeRow","tmpData","rm_id","raw_material","model","customer","code","texture","depth","height","type","amount","number","cleanUpData","operationRegister","menus","additionalMenus","editor","info_list","additionalData","push","tmpBasicRow","realTableData","appendAdditional","additional","value","random_id","downloadExcel","tmpSelectList","onClickHeaderButton","items","Confirm","show","display","paddingBottom","e","tmp","isChange","add"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react'\nimport ExcelTable from '../../../component/Excel/ExcelTable'\nimport MenuNavigation from '../../../component/MenuNav/MenuNavigation'\nimport ProfileHeader from '../../../component/Profile/ProfileHeader'\nimport PageHeader from '../../../component/Header/Header'\n// @ts-ignore\nimport {SelectColumn} from 'react-data-grid'\nimport {IExcelHeaderType, IItemMenuType} from '../../../common/@types/type'\nimport {RequestMethod} from '../../../common/RequestFunctions'\nimport {columnlist} from \"../../../common/columnInit\";\nimport Notiflix from \"notiflix\";\nimport {useRouter} from 'next/router'\nimport {MAX_VALUE} from '../../../common/configset'\nimport DropDownEditor from '../../../component/Dropdown/ExcelBasicDropdown'\nimport TextEditor from '../../../component/InputBox/ExcelBasicInputBox'\nimport {excelDownload} from '../../../common/excelDownloadFunction'\nimport {loadAll} from 'react-cookies'\nimport PaginationComponent from '../../../component/Pagination/PaginationComponent'\nimport {NextPageContext} from 'next'\nimport moment from 'moment'\n\nconst title = '작업 완료 등록'\nconst optList = ['고객사명', '모델명', 'CODE', '품명', '공정', '기계', 'Lot번호']\n\ninterface IProps {\n  children?: any\n  page?: number\n  keyword?: string\n  option?: number\n}\n\nconst BasicContainer = () => {\n  const router = useRouter()\n\n  const [basicRow, setBasicRow] = useState<Array<any>>([{\n    name: \"\", id: `rawinput_${Math.random()*1000}`,\n    date: moment().format('YYYY-MM-DD'),\n    start: `${moment().format('YYYY-MM-DD HH:mm')}:00`,\n    end: undefined,\n    poor_quantities: []\n  }])\n  const [column, setColumn] = useState<Array<IExcelHeaderType>>(columnlist.recordRegister)\n  const [selectList, setSelectList] = useState<Set<any>>(new Set())\n  const [isGoal, setIsGoal] = useState<number>(0)\n\n  const [pageInfo, setPageInfo] = useState<{page: number, total: number}>({\n    page: 1,\n    total: 1\n  })\n\n  useEffect(() => {\n    // loadAllSelectItems(column).then((column) => {})\n    LoadMenu()\n  }, [])\n\n  const loadAllSelectItems = async (column: IExcelHeaderType[], pp_id?: number) => {\n    if(pp_id){\n      const res = await RequestMethod('get', `productprocessList`,{\n        path: {\n          pp_id\n        }\n      })\n    }\n\n    let tmpColumn = column.map(async (v: any) => {\n      if(v.selectList && v.selectList.length === 0 && v.key === 'seq'){\n        return {\n          ...v,\n          selectList: []\n        }\n      }else{\n        if(v.selectList){\n          return {\n            ...v,\n            pk: v.unit_id\n          }\n        }else{\n          return v\n        }\n      }\n    })\n\n    Promise.all(tmpColumn).then(res => {\n      setColumn([...res.map(v=> {\n        return {\n          ...v,\n          name: v.moddable ? v.name+'(필수)' : v.name\n        }\n      })])\n    })\n  }\n\n  const SaveBasic = async () => {\n    let tmpRow = basicRow.map(v => {\n\n      if(selectList.has(v.id)){\n        return {\n          ...v,\n          customer_id: v.customer_idPK,\n          osd_id: v.osd_idPK,\n          cm_id: v.cm_idPK,\n          mold_id: v.mold_idPK,\n          machine_id: v.machine_idPK,\n          process_id: v.process_idPK,\n          ln_id: v.ln_idPK,\n          paused_time: v.paused_timePK,\n          good_quantity: Number(v.good_quantity),\n          user_id: v.user_idPK,\n          poor_quantities: v.poor_quantities ?? [],\n          paused_times: v.paused_times ?? []\n        }\n      }\n    }).filter(v => v)\n    if(tmpRow.length){\n      let res = await RequestMethod('post', `recordSave`,\n      {\n        records: [...tmpRow]\n      })\n      if(res){\n        if(res.status === 200){\n          Notiflix.Report.success('저장되었습니다.','','확인');\n        }\n      }\n    } else {\n      Notiflix.Report.failure('저장 실패', '저장할 데이터를 선택해주세요', '확인')\n    }\n  }\n\n  const DeleteBasic = async () => {\n    let tmpRow = basicRow.map((row, index) => {\n      if(selectList.has(row.id)){\n        return\n      }\n      return row\n    }).filter(v => v)\n    Notiflix.Report.success('삭제되었습니다.','','확인');\n    setBasicRow([...tmpRow])\n  }\n\n  const LoadMenu = async () => {\n    const res = await RequestMethod('get', `itemList`,{\n      path: {\n        tab: 'ROLE_PROD_05'\n      }\n    })\n\n    if(res && res.status === 200) {\n      let tmpColumn = column\n      tmpColumn = tmpColumn.map((column: any) => {\n        let menuData: object | undefined;\n        res.results.bases && res.results.bases.map((menu: any) => {\n          if(menu.colName === column.key){\n            menuData = {\n              id: menu.mi_id,\n              name: menu.title,\n              width: menu.width,\n              tab:'ROLE_PROD_05',\n              unit:menu.unit,\n              moddable: !menu.moddable,\n            }\n          } else if(menu.colName === 'id' && column.key === 'tmpId'){\n            menuData = {\n              id: menu.mi_id,\n              name: menu.title,\n              width: menu.width,\n              tab:'ROLE_PROD_05',\n              unit:menu.unit,\n              moddable: !menu.moddable\n            }\n          }\n        })\n\n        if(menuData){\n          return {\n            ...column,\n            ...menuData\n          }\n        }\n      }).filter((v:any) => v)\n      loadAllSelectItems(tmpColumn)\n    }else if (res.state === 401) {\n      Notiflix.Report.failure('불러올 수 없습니다.', '권한이 없습니다.', '확인', () => {\n        router.back()\n      })\n    }\n  }\n\n  const changeRow = (row: any) => {\n    let tmpData = {}\n\n    return {\n      ln_id: row.ln_id,\n      rm_id: row.raw_material.rm_id,\n      customer_id: row.raw_material.model.customer.name,\n      cm_id: row.raw_material.model.model,\n      code: row.raw_material.code,\n      name: row.raw_material.name,\n      texture: row.raw_material.texture,\n      depth: row.raw_material.depth,\n      width: row.raw_material.width,\n      height: row.raw_material.height,\n      type: row.raw_material.type,\n      amount: row.amount,\n      date: row.date,\n      number: row.number,\n      ...tmpData\n    }\n  }\n\n  const cleanUpData = (res: any) => {\n    let tmpColumn = columnlist.operationRegister\n    let tmpRow = []\n    tmpColumn = tmpColumn.map((column: any) => {\n      let menuData: object | undefined;\n      res.results.menus && res.results.menus.map((menu: any) => {\n        if(menu.colName === column.key){\n          menuData = {\n            id: menu.id,\n            name: menu.title,\n            width: menu.width,\n            tab:menu.tab,\n            unit:menu.unit,\n            moddable: !menu.moddable\n          }\n        } else if(menu.colName === 'id' && column.key === 'tmpId'){\n          menuData = {\n            id: menu.id,\n            name: menu.title,\n            width: menu.width,\n            tab:menu.tab,\n            unit:menu.unit,\n            moddable: !menu.moddable\n          }\n        }\n      })\n\n      if(menuData){\n        return {\n          ...column,\n          ...menuData\n        }\n      }\n    }).filter((v:any) => v)\n\n    loadAllSelectItems(tmpColumn)\n\n    let additionalMenus = res.results.menus ? res.results.menus.map((menu:any) => {\n      if(menu.colName === null){\n        return {\n          id: menu.id,\n          name: menu.title,\n          width: menu.width,\n          key: menu.title,\n          editor: TextEditor,\n          type: 'additional',\n          unit: menu.unit\n        }\n      }\n    }).filter((v: any) => v) : []\n\n    tmpRow = res.results.info_list\n\n    let additionalData: any[] = []\n\n    additionalMenus.map((v: any) => {\n      if(v.type === 'additional'){\n        additionalData.push(v.key)\n      }\n    })\n\n    let tmpBasicRow = tmpRow.map((row: any, index: number) => {\n      let realTableData: any = changeRow(row)\n      let appendAdditional: any = {}\n\n      row.additional && row.additional.map((v: any) => {\n        appendAdditional = {\n          ...appendAdditional,\n          [v.title]: v.value\n        }\n      })\n\n      const random_id = Math.random()*1000\n\n      return {\n        // ...row,\n        ...realTableData,\n        ...appendAdditional,\n        id: `rawinput_${random_id}`,\n      }\n    })\n\n    setBasicRow([...tmpBasicRow])\n  }\n\n  const downloadExcel = () => {\n    let tmpSelectList: boolean[] = []\n    basicRow.map(row => {\n      tmpSelectList.push(selectList.has(row.id))\n    })\n    excelDownload(column, basicRow, `작업완료등록`, '작업완료등록', tmpSelectList)\n  }\n\n  const onClickHeaderButton = (index: number) => {\n    switch(index){\n      case 0:\n        downloadExcel()\n        break;\n      // case 1:\n      //   router.push(`/mes/item/manage/rawin`)\n      //   break;\n      case 1:\n\n        let items = {}\n\n        column.map((value) => {\n          if(value.selectList && value.selectList.length){\n            items = {\n              ...value.selectList[0],\n              [value.key] : value.selectList[0].name,\n              [value.key+'PK'] : value.selectList[0].pk,//여기 봐야됨!\n              ...items,\n            }\n          }\n        })\n\n        const random_id = Math.random()*1000\n\n        setBasicRow([\n          {\n            ...items,\n            id: `rawinput_${random_id}`,\n            name: '',\n            date: moment().format('YYYY-MM-DD'),\n            start: `${moment().format('YYYY-MM-DD HH:mm')}:00`,\n            end: null,\n          },\n          ...basicRow\n        ])\n        break;\n      case 2:\n        SaveBasic()\n\n        break;\n      case 3:\n        Notiflix.Confirm.show(\"경고\",\"삭제하시겠습니까?\",\"확인\",\"취소\",\n            ()=>{\n              DeleteBasic()\n            },\n            ()=>{})\n\n        break;\n\n    }\n  }\n\n  return (\n    <div style={{display: 'flex', }}>\n      <MenuNavigation pageType={'MES'} subType={0}/>\n      <div style={{paddingBottom: 40}}>\n        <ProfileHeader/>\n        <PageHeader\n          title={title}\n          buttons={['엑셀로 받기', '행 추가', '저장하기', '삭제']}\n          buttonsOnclick={onClickHeaderButton}\n        />\n        <ExcelTable\n          editable\n          resizable\n          headerList={[\n            SelectColumn,\n            ...column\n          ]}\n          row={basicRow}\n          // setRow={setBasicRow}\n          setRow={(e) => {\n            let tmp: Set<any> = selectList\n            e.map(v => {\n              if(v.isChange) tmp.add(v.id)\n            })\n            setSelectList(tmp)\n            setBasicRow(e)\n          }}\n          selectList={selectList}\n          //@ts-ignore\n          setSelectList={setSelectList}\n          height={basicRow.length * 40 >= 40*18+40 ? 40*18 : basicRow.length * 40 + 56}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport const getServerSideProps = (ctx: NextPageContext) => {\n  return {\n    props: {\n      page: ctx.query.page ?? 1,\n      keyword: ctx.query.keyword ?? \"\",\n      option: ctx.query.opt ?? 0,\n    }\n  }\n}\n\nexport default BasicContainer;\n"]},"metadata":{},"sourceType":"module"}