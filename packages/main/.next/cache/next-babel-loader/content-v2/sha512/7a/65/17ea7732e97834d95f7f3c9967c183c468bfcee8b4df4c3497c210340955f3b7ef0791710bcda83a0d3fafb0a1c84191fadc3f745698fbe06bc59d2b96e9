{"ast":null,"code":"var _jsxFileName = \"/Users/user/Desktop/sizl/mono_pop/packages/main/component/TreeView/TreeView.tsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport { ArrowImageWrapper, SecendMenuView, TopMenuTitle, TopMenuView, TreeViewContainer, TreeViewHeader, TreeViewWrapper } from '../../styles/styledComponents';\n//@ts-ignore\nimport menuOpen from \"../../public/images/ic_monitoring_open.png\"; //@ts-ignore\n\nimport menuClose from \"../../public/images/ic_monitoring_close.png\"; //@ts-ignore\n\nimport checkIcon from \"../../public/images/ic_check.png\";\n\nconst TreeViewTable = ({\n  item,\n  setItem\n}) => {\n  const [menu, setMenu] = React.useState([{\n    title: \"\",\n    show: false,\n    checkable: false,\n    value: \"\",\n    child: []\n  }]);\n  React.useEffect(() => {\n    setMenu(item);\n  }, [item]);\n\n  const onClickMenu = (depth, i) => {\n    let tmp = menu;\n\n    switch (depth) {\n      case 1:\n        tmp[i[0]] = _objectSpread(_objectSpread({}, tmp[i[0]]), {}, {\n          show: !tmp[i[0]].show\n        });\n        break;\n\n      case 2:\n        tmp[i[0]].child[i[1]] = _objectSpread(_objectSpread({}, tmp[i[0]].child[i[1]]), {}, {\n          show: !tmp[i[0]].child[i[1]].show\n        });\n        break;\n\n      case 3:\n        tmp[i[0]].child[i[1]].child[i[2]] = _objectSpread(_objectSpread({}, tmp[i[0]].child[i[1]].child[i[2]]), {}, {\n          show: !tmp[i[0]].child[i[1]].child[i[2]].show\n        });\n        break;\n    }\n\n    setMenu([...tmp]);\n  };\n\n  const onClickCheckbox = (top, depth, i, nowCheck) => {\n    let tmp = menu;\n\n    switch (depth) {\n      case 1:\n        let allClick = nowCheck !== undefined ? nowCheck : !tmp[top].child[i[0]].check;\n        tmp[top].child[i[0]].check = allClick;\n        tmp[top].child[i[0]].child.map((v, index) => {\n          // tmp[top].child[i[0]].child[index].check = allClick\n          onClickCheckbox(top, depth + 1, [...i, index], allClick);\n        });\n        break;\n\n      case 2:\n        if (tmp[top].child[i[0]].child[i[1]].child.length) {\n          let allClick = nowCheck !== undefined ? nowCheck : !tmp[top].child[i[0]].child[i[1]].check; // tmp[top].child[i[0]].child[i[1]].check = allClick\n\n          tmp[top].child[i[0]].child[i[1]].child.map((v, index) => {\n            tmp[top].child[i[0]].child[i[1]].child[index].check = allClick;\n            onClickCheckbox(top, depth + 1, [...i, index], allClick);\n          });\n          break;\n        } else {\n          let cnt = 0;\n          tmp[top].child[i[0]].child[i[1]].check = !tmp[top].child[i[0]].child[i[1]].check;\n          tmp[top].child[i[0]].child.map(v => {\n            if (v.check) {\n              cnt++;\n            }\n          });\n\n          if (nowCheck !== undefined) {\n            tmp[top].child[i[0]].child[i[1]].check = nowCheck;\n          } else {\n            tmp[top].child[i[0]].check = cnt === tmp[top].child[i[0]].child.length;\n          }\n\n          break;\n        }\n\n      case 3:\n        let cnt1 = 0;\n        tmp[top].child[i[0]].child[i[1]].child[i[2]].check = !tmp[top].child[i[0]].child[i[1]].child[i[2]].check;\n        tmp[top].child[i[0]].child[i[1]].child.map(v => {\n          if (v.check) {\n            cnt1++;\n          }\n        });\n\n        if (nowCheck !== undefined) {\n          tmp[top].child[i[0]].child[i[1]].check = nowCheck;\n        } else {\n          tmp[top].child[i[0]].child[i[1]].check = cnt1 === tmp[top].child[i[0]].child[i[1]].child.length;\n        }\n\n        break;\n    }\n\n    setItem([...tmp]);\n  };\n\n  const TreeViewItem = (value, key, depth, indexList) => {\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 7\n      }\n    }, __jsx(SecendMenuView, {\n      style: {\n        paddingLeft: 48 + (depth - 2) * 40\n      },\n      onClick: () => {\n        if (value.child.length) {\n          onClickMenu(depth, indexList);\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }\n    }, value.checkable ? __jsx(React.Fragment, null, __jsx(\"label\", {\n      htmlFor: `check${key}`,\n      style: {\n        backgroundColor: value.check ? '#19b9df' : 'white',\n        width: 14,\n        height: 14,\n        marginRight: 16,\n        cursor: \"pointer\",\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        borderRadius: 0\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }\n    }, value.check && __jsx(\"img\", {\n      src: checkIcon,\n      style: {\n        width: 14,\n        height: 14\n      },\n      alt: 'treeview-checked',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 36\n      }\n    })), __jsx(\"input\", {\n      hidden: true,\n      type: \"checkbox\",\n      id: `check${key}`,\n      onChange: () => {\n        onClickCheckbox(indexList[0], depth - 1, indexList.slice(1));\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 17\n      }\n    })) : __jsx(\"div\", {\n      style: {\n        width: 30,\n        height: 14\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 17\n      }\n    }), __jsx(\"p\", {\n      style: {\n        color: 'white'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 11\n      }\n    }, value.title), value.child.length ? __jsx(ArrowImageWrapper, {\n      style: {\n        marginLeft: 16\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 15\n      }\n    }, __jsx(\"img\", {\n      src: value.show ? menuClose : menuOpen,\n      style: {\n        width: 16,\n        height: 16\n      },\n      alt: 'treeview-alter1',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 17\n      }\n    })) : null), value.show && value.child.length && value.child.map((treeItem, index) => {\n      return TreeViewItem(treeItem, key + `${index}`, depth + 1, [...indexList, index]);\n    }));\n  };\n\n  return __jsx(TreeViewWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 5\n    }\n  }, __jsx(TreeViewHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }\n  }, __jsx(\"p\", {\n    style: {\n      color: 'white'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 9\n    }\n  }, \"\\uBA54\\uB274\")), __jsx(TreeViewContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }\n  }, menu && item && menu.map((outerMenu, outerIndex) => menu[outerIndex] && __jsx(\"div\", {\n    style: {\n      height: \"100%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 83\n    }\n  }, __jsx(TopMenuView, {\n    onClick: () => onClickMenu(1, [outerIndex]),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 15\n    }\n  }, __jsx(ArrowImageWrapper, {\n    style: {\n      marginRight: 16\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 19\n    }\n  }, __jsx(\"img\", {\n    src: menu[outerIndex].show ? menuClose : menuOpen,\n    style: {\n      width: 16,\n      height: 16\n    },\n    alt: 'treeview-alter2',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 23\n    }\n  })), __jsx(TopMenuTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 19\n    }\n  }, outerMenu.title)), outerMenu.show && outerMenu.child && outerMenu.child.map((innerMenu, innerIndex) => TreeViewItem(innerMenu, `key-${outerIndex}-${innerIndex}`, 2, [outerIndex, innerIndex]))))));\n};\n\nexport default TreeViewTable;","map":{"version":3,"sources":["/Users/user/Desktop/sizl/mono_pop/packages/main/component/TreeView/TreeView.tsx"],"names":["React","ArrowImageWrapper","SecendMenuView","TopMenuTitle","TopMenuView","TreeViewContainer","TreeViewHeader","TreeViewWrapper","menuOpen","menuClose","checkIcon","TreeViewTable","item","setItem","menu","setMenu","useState","title","show","checkable","value","child","useEffect","onClickMenu","depth","i","tmp","onClickCheckbox","top","nowCheck","allClick","undefined","check","map","v","index","length","cnt","cnt1","TreeViewItem","key","indexList","paddingLeft","backgroundColor","width","height","marginRight","cursor","display","justifyContent","alignItems","borderRadius","slice","color","marginLeft","treeItem","outerMenu","outerIndex","innerMenu","innerIndex"],"mappings":"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","sourcesContent":["import React from 'react'\nimport {\n  ArrowImageWrapper, SecendMenuView,\n  TopMenuTitle,\n  TopMenuView,\n  TreeViewContainer,\n  TreeViewHeader, TreeViewWrapper\n} from '../../styles/styledComponents'\nimport { IMenu } from '../../common/@types/type'\n//@ts-ignore\nimport menuOpen from \"../../public/images/ic_monitoring_open.png\"\n//@ts-ignore\nimport menuClose from \"../../public/images/ic_monitoring_close.png\"\n//@ts-ignore\nimport checkIcon from \"../../public/images/ic_check.png\"\n\ninterface IProps {\n  item: IMenu[]\n  setItem: (item: IMenu[]) => void\n}\n\nconst TreeViewTable = ({item, setItem}: IProps) => {\n  const [menu, setMenu] = React.useState<IMenu[]>([{title: \"\", show: false, checkable: false, value: \"\", child: []}])\n\n  React.useEffect(() => {\n    setMenu(item)\n  }, [item])\n\n  const onClickMenu = (depth: number, i: number[]) => {\n    let tmp = menu\n\n    switch (depth) {\n      case 1:\n        tmp[i[0]] = {...tmp[i[0]], show: !tmp[i[0]].show}\n        break;\n      case 2:\n        tmp[i[0]].child[i[1]] = {...tmp[i[0]].child[i[1]], show: !tmp[i[0]].child[i[1]].show}\n        break;\n      case 3:\n        tmp[i[0]].child[i[1]].child[i[2]] = {...tmp[i[0]].child[i[1]].child[i[2]], show: !tmp[i[0]].child[i[1]].child[i[2]].show}\n        break;\n    }\n\n    setMenu([...tmp])\n  }\n\n  const onClickCheckbox = (top: number, depth: number, i: number[], nowCheck?: boolean) => {\n    let tmp = menu\n    switch (depth) {\n      case 1:\n        let allClick = nowCheck !== undefined ? nowCheck : !tmp[top].child[i[0]].check\n        tmp[top].child[i[0]].check = allClick\n        tmp[top].child[i[0]].child.map((v, index) => {\n          // tmp[top].child[i[0]].child[index].check = allClick\n          onClickCheckbox(top, depth+1, [...i, index], allClick)\n        })\n        break;\n      case 2:\n        if(tmp[top].child[i[0]].child[i[1]].child.length){\n          let allClick = nowCheck !== undefined ? nowCheck : !tmp[top].child[i[0]].child[i[1]].check\n          // tmp[top].child[i[0]].child[i[1]].check = allClick\n          tmp[top].child[i[0]].child[i[1]].child.map((v, index) => {\n            tmp[top].child[i[0]].child[i[1]].child[index].check = allClick\n            onClickCheckbox(top, depth+1, [...i, index], allClick)\n          })\n          break;\n        }else{\n          let cnt = 0\n          tmp[top].child[i[0]].child[i[1]].check = !tmp[top].child[i[0]].child[i[1]].check\n          tmp[top].child[i[0]].child.map((v) => {\n            if(v.check){\n              cnt++\n            }\n          })\n\n          if(nowCheck !== undefined){\n            tmp[top].child[i[0]].child[i[1]].check = nowCheck\n          }else{\n            tmp[top].child[i[0]].check =\n                cnt === tmp[top].child[i[0]].child.length;\n          }\n\n          break;\n        }\n      case 3:\n        let cnt1 = 0\n        tmp[top].child[i[0]].child[i[1]].child[i[2]].check = !tmp[top].child[i[0]].child[i[1]].child[i[2]].check\n        tmp[top].child[i[0]].child[i[1]].child.map((v) => {\n          if(v.check){\n            cnt1++\n          }\n        })\n\n        if(nowCheck !== undefined){\n          tmp[top].child[i[0]].child[i[1]].check = nowCheck\n        }else {\n          tmp[top].child[i[0]].child[i[1]].check =\n              cnt1 === tmp[top].child[i[0]].child[i[1]].child.length;\n        }\n        break;\n    }\n\n    setItem([...tmp])\n  }\n\n  const TreeViewItem = (value: IMenu, key: string, depth: number, indexList: number[]) => {\n    return (\n      <div>\n        <SecendMenuView\n          style={{paddingLeft: 48+((depth-2)*40)}}\n          onClick={() => {\n            if(value.child.length){\n              onClickMenu(depth, indexList)\n            }\n          }}\n        >\n\n          {\n            value.checkable ?\n              <>\n                <label\n                  htmlFor={`check${key}`}\n                  style={{\n                    backgroundColor: value.check ? '#19b9df' :'white',\n                    width: 14,\n                    height: 14,\n                    marginRight: 16,\n                    cursor: \"pointer\",\n                    display: 'flex',\n                    justifyContent: 'center',\n                    alignItems: 'center',\n                    borderRadius: 0\n                  }}\n                >\n                  {\n                    value.check && <img src={checkIcon} style={{width: 14, height: 14}} alt={'treeview-checked'} />\n                  }\n                </label>\n                <input\n                  hidden\n                  type=\"checkbox\"\n                  id={`check${key}`}\n                  onChange={() => {\n                    onClickCheckbox(indexList[0], depth-1, indexList.slice(1))\n                  }}\n                />\n              </>\n              : <div style={{width: 30, height: 14}} />\n          }\n          <p style={{color: 'white'}}>{value.title}</p>\n          {\n            value.child.length ?\n              <ArrowImageWrapper style={{marginLeft: 16}}>\n                <img src={value.show ? menuClose : menuOpen} style={{width: 16, height: 16}} alt={'treeview-alter1'}/>\n              </ArrowImageWrapper>\n              : null\n          }\n        </SecendMenuView>\n        {\n          value.show && value.child.length && value.child.map((treeItem, index) => {\n            return TreeViewItem(treeItem, key+`${index}`, depth+1, [...indexList, index])\n          })\n        }\n      </div>\n    )\n  }\n\n  return (\n    <TreeViewWrapper>\n      <TreeViewHeader>\n        <p style={{color: 'white'}}>메뉴</p>\n      </TreeViewHeader>\n      <TreeViewContainer>\n        {\n          menu && item && menu.map((outerMenu, outerIndex) => menu[outerIndex] && <div style={{height: \"100%\"}}>\n              <TopMenuView onClick={() => onClickMenu(1, [outerIndex])}>\n                  <ArrowImageWrapper style={{marginRight: 16}}>\n                      <img src={menu[outerIndex].show ? menuClose : menuOpen} style={{width: 16, height: 16}} alt={'treeview-alter2'} />\n                  </ArrowImageWrapper>\n                  <TopMenuTitle>{outerMenu.title}</TopMenuTitle>\n              </TopMenuView>\n            { outerMenu.show && outerMenu.child && outerMenu.child.map((innerMenu, innerIndex) =>\n                TreeViewItem(innerMenu, `key-${outerIndex}-${innerIndex}`, 2, [outerIndex, innerIndex]))}\n          </div> )\n        }\n      </TreeViewContainer>\n    </TreeViewWrapper>\n  );\n};\n\n\nexport default TreeViewTable\n"]},"metadata":{},"sourceType":"module"}