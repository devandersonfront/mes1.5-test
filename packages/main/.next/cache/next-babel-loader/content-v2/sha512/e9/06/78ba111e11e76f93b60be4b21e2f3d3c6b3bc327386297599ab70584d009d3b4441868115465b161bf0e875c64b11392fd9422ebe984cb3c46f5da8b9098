{"ast":null,"code":"var _jsxFileName = \"/Users/user/Desktop/sizl/mono_pop/packages/shared/src/components/Modal/PauseModal.tsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport Modal from 'react-modal';\nimport { MAX_VALUE, POINT_COLOR } from '../../common/configset'; //@ts-ignore\n\n//@ts-ignore\nimport IcX from '../../../public/images/ic_x.png';\nimport { ExcelTable } from '../Excel/ExcelTable';\nimport { searchModalList } from '../../common/modalInit'; //@ts-ignore\n\nimport { RequestMethod } from '../../common/RequestFunctions';\nimport { UnitValue, UnitWrapper, UploadButton } from '../../styles/styledComponents';\nimport Notiflix from 'notiflix';\nimport moment from 'moment';\nconst optionList = ['고객사명', '모델명', 'CODE', '품명', '재질'];\n\nconst PoorQuantityModal = ({\n  column,\n  row,\n  onRowChange\n}) => {\n  const {\n    0: isExist,\n    1: setIsExist\n  } = useState(false);\n  const {\n    0: isOpen,\n    1: setIsOpen\n  } = useState(false);\n  const {\n    0: title,\n    1: setTitle\n  } = useState('불량 수량');\n  const {\n    0: optionIndex,\n    1: setOptionIndex\n  } = useState(0);\n  const {\n    0: keyword,\n    1: setKeyword\n  } = useState('');\n  const {\n    0: selectRow,\n    1: setSelectRow\n  } = useState(-1);\n  const {\n    0: searchList,\n    1: setSearchList\n  } = useState([]);\n  const {\n    0: total,\n    1: setTotal\n  } = useState('');\n  useEffect(() => {\n    if (row['paused_times'] && row['paused_times'].length) {\n      setSearchList([...row.paused_times]);\n    } else {\n      if (column.searchType === 'list' || column.searchType === 'disable') {\n        SearchDefect().then(() => {// Notiflix.Loading.remove()\n        });\n      } else {\n        SearchBasic(keyword, 0).then(() => {// Notiflix.Loading.remove()\n        });\n      }\n    }\n  }, [isOpen, row['process_id']]);\n  useEffect(() => {\n    if (selectRow >= 0) {\n      if (searchList[selectRow].pp_id) {\n        ProductProcessSearch(searchList[selectRow].pp_id);\n      }\n    }\n  }, [selectRow]);\n\n  const changeRow = (row, key) => {\n    let tmpData = _objectSpread(_objectSpread({}, row), {}, {\n      start: `${moment().format('YYYY-MM-DD HH:mm')}:00`,\n      end: null\n    });\n\n    return tmpData;\n  };\n\n  const SearchBasic = async (keyword, option) => {\n    // Notiflix.Loading.circle()\n    const res = await RequestMethod('get', `pauseSearch`, {\n      path: {\n        page: 1,\n        renderItem: MAX_VALUE,\n        process_id: row.process_idPK\n      },\n      params: {\n        keyword: keyword !== null && keyword !== void 0 ? keyword : '',\n        opt: option !== null && option !== void 0 ? option : 0\n      }\n    });\n\n    if (res && res.status === 200) {\n      if (res.results.info_list.length > 0) {\n        let searchList = res.results.info_list.map((row, index) => {\n          return changeRow(row);\n        });\n        setSearchList([...searchList]);\n      } else {\n        setIsExist(true);\n        setSearchList([{\n          reason: '일시 정지 시간 전체',\n          amount: row.paused_timePK / 60,\n          paused_time: row.paused_time\n        }]);\n      }\n    }\n  };\n\n  const SearchDefect = async () => {\n    // Notiflix.Loading.circle()\n    const res = await RequestMethod('get', `recordPause`, {\n      path: {\n        or_id: row.or_id\n      }\n    });\n\n    if (res && res.status === 200) {\n      if (res.results.paused_times.length) {\n        let searchList = res.results.paused_times.map((row, index) => {\n          return {\n            orp_id: row.orp_id,\n            ppr_id: row.ppr.ppr_id,\n            reason: row.ppr.reason,\n            start: row.start,\n            end: row.end,\n            amount: row.amount\n          };\n        });\n        setSearchList([...searchList]);\n      } else {\n        setIsExist(true);\n        setSearchList([{\n          reason: '일시 정지 시간 전체',\n          amount: row.paused_timePK / 60,\n          paused_time: row.paused_time\n        }]);\n      }\n    }\n  };\n\n  const ProductProcessSearch = async pp_id => {\n    const res = await RequestMethod('get', `productprocessList`, {\n      path: {\n        pp_id\n      }\n    });\n\n    if (res && res.status === 200) {}\n  };\n\n  return __jsx(React.Fragment, null, !isExist ? row.paused_time || row.paused_time === 0 ? __jsx(UnitWrapper, {\n    onClick: () => {\n      if (column.searchType === 'list' || column.searchType === 'disable') {\n        if (row['or_id']) {\n          setIsOpen(true);\n        }\n      } else {\n        if (row['process_id']) {\n          setIsOpen(true);\n        } else {\n          Notiflix.Report.failure('실패', '공정을 먼저 선택해주세요', '확인');\n        }\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 11\n    }\n  }, __jsx(UnitValue, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 11\n    }\n  }, __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 13\n    }\n  }, row.paused_time))) : __jsx(SearchModalWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    style: {\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      width: '100%',\n      height: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 11\n    }\n  }, __jsx(UploadButton, {\n    onClick: () => {\n      if (row['process_id']) {\n        setIsOpen(true);\n      } else {\n        Notiflix.Report.failure('실패', '공정을 먼저 선택해주세요', '확인');\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 13\n    }\n  }, __jsx(\"p\", {\n    style: {\n      fontSize: 13\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 15\n    }\n  }, \"\\uC77C\\uC2DC\\uC815\\uC9C0 \\uC2DC\\uAC04\\uB4F1\\uB85D\")))) : __jsx(\"div\", {\n    style: {\n      margin: 0,\n      display: 'flex',\n      justifyContent: 'center'\n    },\n    onClick: () => {\n      if (column.searchType === 'disable') {\n        if (row['or_id']) {\n          setIsOpen(true);\n        }\n      } else {\n        if (row['process_id']) {\n          setIsOpen(true);\n        } else {\n          Notiflix.Report.failure('실패', '공정을 먼저 선택해주세요', '확인');\n        }\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 9\n    }\n  }, __jsx(UnitValue, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 11\n    }\n  }, __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 13\n    }\n  }, row.paused_time))), __jsx(Modal, {\n    isOpen: isOpen,\n    style: {\n      content: {\n        top: '50%',\n        left: '50%',\n        right: 'auto',\n        bottom: 'auto',\n        marginRight: '-50%',\n        transform: 'translate(-50%, -50%)',\n        padding: 0,\n        overflow: \"hidden\"\n      },\n      overlay: {\n        background: 'rgba(0,0,0,.6)',\n        zIndex: 5\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    style: {\n      width: 1776,\n      height: 876\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    style: {\n      marginTop: 24,\n      marginLeft: 16,\n      marginRight: 16,\n      display: 'flex',\n      justifyContent: 'space-between'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 11\n    }\n  }, __jsx(\"p\", {\n    style: {\n      color: 'black',\n      fontSize: 22,\n      fontWeight: 'bold',\n      margin: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 13\n    }\n  }, \"\\uC77C\\uC2DC \\uC815\\uC9C0 \\uC2DC\\uAC04\"), __jsx(\"div\", {\n    style: {\n      cursor: 'pointer'\n    },\n    onClick: () => {\n      setIsOpen(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 13\n    }\n  }, __jsx(\"img\", {\n    style: {\n      width: 20,\n      height: 20\n    },\n    src: IcX,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 15\n    }\n  }))), __jsx(\"div\", {\n    style: {\n      padding: '0 16px 0 16px',\n      width: 1776\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 11\n    }\n  }, __jsx(ExcelTable, {\n    headerList: column.searchType === 'disable' ? !isExist ? searchModalList.pauseDisable : searchModalList.pauseDisableExist : !isExist ? searchModalList.pause : searchModalList.pauseExist,\n    row: searchList !== null && searchList !== void 0 ? searchList : [],\n    setRow: e => {\n      let addIndex = 0;\n      let ppr_id = '';\n      let reason = '';\n      let tmpRow = e.map((v, i) => {\n        if (v.add) {\n          addIndex = i + 1;\n          reason = v.reason;\n          ppr_id = v.ppr_id;\n        }\n\n        return _objectSpread(_objectSpread({}, v), {}, {\n          add: false\n        });\n      });\n\n      if (addIndex) {\n        tmpRow.splice(addIndex, 0, {\n          ppr_id,\n          reason,\n          start: `${moment().format('YYYY-MM-DD HH:mm')}:00`,\n          end: null\n        });\n      }\n\n      setSearchList([...tmpRow]);\n    },\n    width: 1746,\n    rowHeight: 32,\n    height: 772,\n    setSelectRow: e => {\n      setSelectRow(e);\n    },\n    type: 'searchModal',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 13\n    }\n  })), __jsx(\"div\", {\n    style: {\n      height: 76,\n      display: 'flex',\n      alignItems: 'flex-end'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    onClick: () => {\n      if (selectRow !== undefined && selectRow !== null) {\n        let tmpTotal = 0;\n        let tmpArry = searchList.map(v => {\n          let amount = isExist ? Number(v.amount) * 60 : moment.duration(moment(v.end).diff(moment(v.start))).asSeconds();\n\n          if (isNaN(amount)) {\n            amount = 0;\n          }\n\n          tmpTotal += amount;\n          return _objectSpread(_objectSpread({}, v), {}, {\n            amount\n          });\n        });\n        let stringTime = '';\n\n        if (tmpTotal >= 0) {\n          let seconds = Number(tmpTotal);\n          let hour = Math.floor(seconds / 3600) < 10 ? '0' + Math.floor(seconds / 3600) : Math.floor(seconds / 3600);\n          let min = Math.floor(seconds % 3600 / 60) < 10 ? '0' + Math.floor(seconds % 3600 / 60) : Math.floor(seconds % 3600 / 60);\n          let sec = Math.floor(seconds % 60) < 10 ? '0' + Math.floor(seconds % 60) : Math.floor(seconds % 60);\n          stringTime = hour + \":\" + min + \":\" + sec;\n        } else {\n          stringTime = '00:00:00';\n\n          tmpTotal: 0;\n        }\n\n        if (isExist) {\n          onRowChange(_objectSpread(_objectSpread({}, row), {}, {\n            paused_time: stringTime,\n            paused_timePK: tmpTotal,\n            isChange: true\n          }));\n        } else {\n          onRowChange(_objectSpread(_objectSpread({}, row), {}, {\n            paused_time: stringTime,\n            paused_timePK: tmpTotal,\n            paused_times: tmpArry,\n            isChange: true\n          }));\n        }\n      }\n\n      setIsOpen(false);\n    },\n    style: {\n      width: '100%',\n      height: 40,\n      backgroundColor: POINT_COLOR,\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 13\n    }\n  }, __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 15\n    }\n  }, \"\\uB4F1\\uB85D\\uD558\\uAE30\"))))));\n};\n\nconst SearchModalWrapper = styled.div`\n  display: flex;\n  width: 100%;\n`;\nexport default PoorQuantityModal;","map":{"version":3,"sources":["/Users/user/Desktop/sizl/mono_pop/packages/shared/src/components/Modal/PauseModal.tsx"],"names":["React","useEffect","useState","styled","Modal","MAX_VALUE","POINT_COLOR","IcX","ExcelTable","searchModalList","RequestMethod","UnitValue","UnitWrapper","UploadButton","Notiflix","moment","optionList","PoorQuantityModal","column","row","onRowChange","isExist","setIsExist","isOpen","setIsOpen","title","setTitle","optionIndex","setOptionIndex","keyword","setKeyword","selectRow","setSelectRow","searchList","setSearchList","total","setTotal","length","paused_times","searchType","SearchDefect","then","SearchBasic","pp_id","ProductProcessSearch","changeRow","key","tmpData","start","format","end","option","res","path","page","renderItem","process_id","process_idPK","params","opt","status","results","info_list","map","index","reason","amount","paused_timePK","paused_time","or_id","orp_id","ppr_id","ppr","Report","failure","display","justifyContent","alignItems","width","height","fontSize","margin","content","top","left","right","bottom","marginRight","transform","padding","overflow","overlay","background","zIndex","marginTop","marginLeft","color","fontWeight","cursor","pauseDisable","pauseDisableExist","pause","pauseExist","e","addIndex","tmpRow","v","i","add","splice","undefined","tmpTotal","tmpArry","Number","duration","diff","asSeconds","isNaN","stringTime","seconds","hour","Math","floor","min","sec","isChange","backgroundColor","SearchModalWrapper","div"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react'\nimport {IExcelHeaderType} from '../../common/@types/type'\nimport styled from 'styled-components'\nimport Modal from 'react-modal'\nimport {MAX_VALUE, POINT_COLOR} from '../../common/configset'\n//@ts-ignore\nimport IcSearchButton from '../../../public/images/ic_search.png'\n//@ts-ignore\nimport IcX from '../../../public/images/ic_x.png'\nimport {ExcelTable} from '../Excel/ExcelTable'\nimport {searchModalList} from '../../common/modalInit'\n//@ts-ignore\nimport Search_icon from '../../../public/images/btn_search.png'\nimport {RequestMethod} from '../../common/RequestFunctions'\nimport {UnitBox, UnitValue, UnitWrapper, UploadButton} from '../../styles/styledComponents'\nimport Notiflix from 'notiflix'\nimport UnitContainer from '../Unit/UnitContainer'\nimport moment from 'moment'\n\ninterface IProps {\n  column: IExcelHeaderType\n  row: any\n  onRowChange: (e: any) => void\n}\n\nconst optionList = ['고객사명','모델명','CODE', '품명', '재질']\n\nconst PoorQuantityModal = ({column, row, onRowChange}: IProps) => {\n  const [isExist, setIsExist] = useState<boolean>(false)\n  const [isOpen, setIsOpen] = useState<boolean>(false)\n  const [title, setTitle] = useState<string>('불량 수량')\n  const [optionIndex, setOptionIndex] = useState<number>(0)\n  const [keyword, setKeyword] = useState<string>('')\n  const [selectRow, setSelectRow] = useState<number>(-1)\n  const [searchList, setSearchList] = useState<any[]>([])\n  const [total, setTotal] = useState<string>('')\n\n  useEffect(() => {\n    if(row['paused_times'] && row['paused_times'].length){\n      setSearchList([...row.paused_times])\n    }else{\n      if(column.searchType === 'list'|| column.searchType === 'disable'){\n        SearchDefect().then(() => {\n          // Notiflix.Loading.remove()\n        })\n      }else{\n        SearchBasic(keyword, 0).then(() => {\n          // Notiflix.Loading.remove()\n        })\n      }\n    }\n  }, [isOpen, row['process_id']])\n\n  useEffect(() => {\n    if(selectRow >= 0) {\n      if(searchList[selectRow].pp_id){\n        ProductProcessSearch(searchList[selectRow].pp_id)\n      }\n    }\n  }, [selectRow])\n\n  const changeRow = (row: any, key?: string) => {\n    let tmpData = {\n        ...row,\n        start: `${moment().format('YYYY-MM-DD HH:mm')}:00`,\n        end: null\n      }\n\n    return tmpData\n  }\n\n  const SearchBasic = async (keyword: any, option: number) => {\n    // Notiflix.Loading.circle()\n    const res = await RequestMethod('get', `pauseSearch`,{\n      path: {\n        page: 1,\n        renderItem: MAX_VALUE,\n        process_id: row.process_idPK,\n      },\n      params: {\n        keyword: keyword ?? '',\n        opt: option ?? 0\n      }\n    })\n\n    if(res && res.status === 200){\n      if(res.results.info_list.length > 0){\n\n        let searchList = res.results.info_list.map((row: any, index: number) => {\n          return changeRow(row)\n        })\n        setSearchList([...searchList])\n\n      } else {\n        setIsExist(true)\n        setSearchList([{\n          reason: '일시 정지 시간 전체',\n          amount: row.paused_timePK / 60,\n          paused_time: row.paused_time\n        }])\n      }\n    }\n  }\n\n\n  const SearchDefect = async () => {\n    // Notiflix.Loading.circle()\n    const res = await RequestMethod('get', `recordPause`,{\n      path: {\n        or_id: row.or_id\n      },\n    })\n\n    if(res && res.status === 200){\n      if(res.results.paused_times.length){\n        let searchList = res.results.paused_times.map((row: any, index: number) => {\n          return {\n            orp_id: row.orp_id,\n            ppr_id: row.ppr.ppr_id,\n            reason: row.ppr.reason,\n            start: row.start,\n            end: row.end,\n            amount: row.amount\n          }\n        })\n\n        setSearchList([...searchList])\n      }else{\n        setIsExist(true)\n        setSearchList([{\n          reason: '일시 정지 시간 전체',\n          amount: row.paused_timePK / 60,\n          paused_time: row.paused_time\n        }])\n      }\n    }\n  }\n\n  const ProductProcessSearch = async (pp_id: number) => {\n    const res = await RequestMethod('get', `productprocessList`,{\n      path: {\n        pp_id\n      }\n    })\n\n    if(res && res.status === 200) {\n\n    }\n  }\n\n  return (\n    <>\n    {\n      !isExist ?\n        (row.paused_time || row.paused_time === 0)\n        ? <UnitWrapper onClick={() => {\n          if(column.searchType === 'list' || column.searchType === 'disable'){\n            if(row['or_id']) {\n              setIsOpen(true)\n            }\n          }else{\n            if(row['process_id']){\n                setIsOpen(true)\n            }else{\n              Notiflix.Report.failure('실패', '공정을 먼저 선택해주세요', '확인')\n            }\n          }\n        }}>\n          <UnitValue>\n            <p>{row.paused_time}</p>\n          </UnitValue>\n        </UnitWrapper>\n        : <SearchModalWrapper>\n          <div style={{display: 'flex', justifyContent: 'center', alignItems: 'center', width: '100%', height: '100%'}}>\n            <UploadButton onClick={() => {\n              if(row['process_id']){\n                setIsOpen(true)\n              }else{\n                Notiflix.Report.failure('실패', '공정을 먼저 선택해주세요', '확인')\n              }\n            }}>\n              <p style={{fontSize: 13}}>일시정지 시간등록</p>\n            </UploadButton>\n          </div>\n        </SearchModalWrapper>\n        :\n        <div style={{margin: 0, display: 'flex', justifyContent:'center'}} onClick={() => {\n          if(column.searchType === 'disable'){\n            if(row['or_id']) {\n              setIsOpen(true)\n            }\n          }else{\n            if(row['process_id']){\n              setIsOpen(true)\n            }else{\n              Notiflix.Report.failure('실패', '공정을 먼저 선택해주세요', '확인')\n            }\n          }\n        }}>\n          <UnitValue>\n            <p>{row.paused_time}</p>\n          </UnitValue>\n        </div>\n    }\n      <Modal isOpen={isOpen} style={{\n        content: {\n          top: '50%',\n          left: '50%',\n          right: 'auto',\n          bottom: 'auto',\n          marginRight: '-50%',\n          transform: 'translate(-50%, -50%)',\n          padding: 0,\n          overflow:\"hidden\"\n        },\n        overlay: {\n          background: 'rgba(0,0,0,.6)',\n          zIndex: 5\n        }\n      }}>\n        <div style={{\n          width: 1776,\n          height: 876\n        }}>\n          <div style={{\n            marginTop: 24,\n            marginLeft: 16,\n            marginRight: 16,\n            display: 'flex',\n            justifyContent: 'space-between'\n          }}>\n            <p style={{\n              color: 'black',\n              fontSize: 22,\n              fontWeight: 'bold',\n              margin: 0,\n            }}>일시 정지 시간</p>\n            <div style={{cursor: 'pointer'}} onClick={() => {\n              setIsOpen(false)\n            }}>\n              <img style={{width: 20, height: 20}} src={IcX}/>\n            </div>\n          </div>\n          <div style={{padding: '0 16px 0 16px', width: 1776}}>\n            <ExcelTable\n              headerList={ column.searchType === 'disable' ? !isExist ? searchModalList.pauseDisable : searchModalList.pauseDisableExist : !isExist ? searchModalList.pause : searchModalList.pauseExist}\n              row={searchList ?? []}\n              setRow={(e) => {\n                let addIndex = 0\n                let ppr_id = ''\n                let reason = ''\n                let tmpRow = e.map((v, i) => {\n                  if(v.add) {\n                    addIndex = i+1\n                    reason = v.reason\n                    ppr_id = v.ppr_id\n                  }\n                  return {\n                    ...v,\n                    add: false\n                  }\n                })\n                if(addIndex){\n                  tmpRow.splice(addIndex, 0, {\n                    ppr_id,\n                    reason,\n                    start: `${moment().format('YYYY-MM-DD HH:mm')}:00`,\n                    end: null,\n                  })\n                }\n\n\n                setSearchList([...tmpRow])\n              }}\n              width={1746}\n              rowHeight={32}\n              height={772}\n              setSelectRow={(e) => {\n                setSelectRow(e)\n              }}\n              type={'searchModal'}\n            />\n          </div>\n          <div style={{ height: 76, display: 'flex', alignItems: 'flex-end'}}>\n            <div\n              onClick={() => {\n                if(selectRow !== undefined && selectRow !== null) {\n                  let tmpTotal = 0\n                  let tmpArry = searchList.map(v => {\n                    let amount = isExist ? Number(v.amount)*60 : moment.duration(moment(v.end).diff(moment(v.start))).asSeconds()\n                    if(isNaN(amount)){\n                      amount = 0\n                    }\n                    tmpTotal+=amount\n                    return {\n                      ...v,\n                      amount\n                    }\n                  })\n\n                  let stringTime = ''\n                  if(tmpTotal >= 0){\n                    let seconds = Number(tmpTotal)\n                    let hour = Math.floor(seconds/3600) < 10 ? '0'+ Math.floor(seconds/3600) :Math.floor(seconds/3600)\n                    let min = Math.floor((seconds%3600)/60) < 10 ? '0'+ Math.floor((seconds%3600)/60) : Math.floor((seconds%3600)/60)\n                    let sec = Math.floor(seconds%60) < 10 ? '0'+Math.floor(seconds%60) : Math.floor(seconds%60)\n\n                    stringTime = hour+\":\"+min+\":\"+sec\n                  }else{\n                    stringTime = '00:00:00'\n                    tmpTotal: 0\n                  }\n\n                  if(isExist){\n                    onRowChange({\n                      ...row,\n                      paused_time: stringTime,\n                      paused_timePK: tmpTotal,\n                      isChange: true\n                    })\n                  }else{\n                    onRowChange({\n                      ...row,\n                      paused_time: stringTime,\n                      paused_timePK: tmpTotal,\n                      paused_times: tmpArry,\n                      isChange: true\n                    })\n                  }\n                }\n                setIsOpen(false)\n              }}\n              style={{width: '100%', height: 40, backgroundColor: POINT_COLOR, display: 'flex', justifyContent: 'center', alignItems: 'center'}}\n            >\n              <p>등록하기</p>\n            </div>\n          </div>\n        </div>\n      </Modal>\n    </>\n  )\n}\n\nconst SearchModalWrapper = styled.div`\n  display: flex;\n  width: 100%;\n`\n\nexport default PoorQuantityModal\n"]},"metadata":{},"sourceType":"module"}