{"ast":null,"code":"var _jsxFileName = \"/Users/user/Desktop/sizl/mono_pop/packages/main/component/Modal/PoorQuantityModal.tsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport Modal from 'react-modal';\nimport { POINT_COLOR } from '../../common/configset'; //@ts-ignore\n\n//@ts-ignore\nimport IcX from '../../public/images/ic_x.png';\nimport { ExcelTable } from '../Excel/ExcelTable';\nimport { searchModalList } from '../../common/modalInit'; //@ts-ignore\n\nimport { RequestMethod } from '../../common/RequestFunctions';\nimport { UnitBox, UnitValue, UnitWrapper, UploadButton } from '../../styles/styledComponents';\nimport Notiflix from 'notiflix';\nconst optionList = ['고객사명', '모델명', 'CODE', '품명', '재질'];\n\nconst PoorQuantityModal = ({\n  column,\n  row,\n  onRowChange\n}) => {\n  const {\n    0: isExist,\n    1: setIsExist\n  } = useState(false);\n  const {\n    0: isOpen,\n    1: setIsOpen\n  } = useState(false);\n  const {\n    0: title,\n    1: setTitle\n  } = useState('불량 수량');\n  const {\n    0: optionIndex,\n    1: setOptionIndex\n  } = useState(0);\n  const {\n    0: keyword,\n    1: setKeyword\n  } = useState('');\n  const {\n    0: selectRow,\n    1: setSelectRow\n  } = useState(-1);\n  const {\n    0: searchList,\n    1: setSearchList\n  } = useState([]);\n  useEffect(() => {\n    if (row.poor_quantities && row.poor_quantities.length) {\n      setSearchList([...row.poor_quantities]);\n    } else {\n      if (column.searchType === 'list') {// SearchDefect().then(() => {\n        //   // Notiflix.Loading.remove()\n        // })\n      } else {\n        SearchBasic(keyword, 0).then(() => {// Notiflix.Loading.remove()\n        });\n      }\n    }\n  }, [isOpen, row['process_idPK']]);\n  useEffect(() => {\n    if (selectRow >= 0) {\n      if (searchList[selectRow].pp_id) {\n        ProductProcessSearch(searchList[selectRow].pp_id);\n      }\n    }\n  }, [selectRow]);\n\n  const changeRow = (row, key) => {\n    let tmpData = _objectSpread(_objectSpread({}, row), {}, {\n      amount: 0\n    });\n\n    return tmpData;\n  };\n\n  const SearchBasic = async (keyword, option) => {\n    // Notiflix.Loading.circle()\n    setKeyword(keyword);\n    setOptionIndex(option);\n    const res = await RequestMethod('get', `defectReasonSearch`, {\n      path: {\n        page: 1,\n        renderItem: 19,\n        process_id: row.process_idPK\n      },\n      params: {\n        keyword: keyword !== null && keyword !== void 0 ? keyword : '',\n        opt: option !== null && option !== void 0 ? option : 0\n      }\n    });\n\n    if (res && res.status === 200) {\n      if (res.results.info_list.length > 0) {\n        setIsExist(false);\n        let searchList = res.results.info_list.map((row, index) => {\n          return changeRow(row);\n        });\n        setSearchList([...searchList]);\n      } else {\n        setIsExist(true);\n        setSearchList([{\n          reason: '전체 불량 수량',\n          amount: 0\n        }]);\n      }\n    }\n  };\n\n  const SearchDefect = async () => {\n    // Notiflix.Loading.circle()\n    const res = await RequestMethod('get', `recordDefect`, {\n      path: {\n        or_id: row.or_id\n      }\n    });\n\n    if (res && res.status === 200) {\n      setIsOpen(true);\n\n      if (res.results.poor_quantities.length) {\n        let searchList = res.results.poor_quantities.map((row, index) => {\n          return {\n            ord_id: row.ord_id,\n            pdr_id: row.pdr.pdr_id,\n            reason: row.pdr.reason,\n            amount: row.amount\n          };\n        });\n        setSearchList([...searchList]);\n        setIsExist(false);\n      } else {\n        setIsExist(true);\n        setSearchList([{\n          reason: '전체 불량 수량',\n          amount: row.poor_quantity\n        }]);\n      }\n    }\n  };\n\n  const ProductProcessSearch = async pp_id => {\n    const res = await RequestMethod('get', `productprocessList`, {\n      path: {\n        pp_id\n      }\n    });\n\n    if (res && res.status === 200) {}\n  };\n\n  return __jsx(React.Fragment, null, // !isExist ?\n  // (row.poor_quantity || row.poor_quantity === 0)\n  row.poor_count || row.poor_count === 0 || column.searchType === 'disable' ? __jsx(UnitWrapper, {\n    onClick: () => {\n      if (column.searchType === 'list' || column.searchType === 'disable') {\n        if (row['or_id']) {\n          SearchDefect().then(() => {});\n        }\n      } else {\n        if (row['process_id']) {\n          setIsOpen(true);\n        } else {\n          Notiflix.Report.failure('실패', '공정을 먼저 선택해주세요', '확인');\n        }\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 11\n    }\n  }, __jsx(UnitValue, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 11\n    }\n  }, __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 13\n    }\n  }, row.poor_count)), __jsx(UnitBox, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 11\n    }\n  }, __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 9\n    }\n  }, column.unitData))) : __jsx(SearchModalWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    style: {\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      width: '100%',\n      height: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 11\n    }\n  }, __jsx(UploadButton, {\n    onClick: () => {\n      if (row['process_id']) {\n        setIsOpen(true);\n      } else {\n        Notiflix.Report.failure('실패', '공정을 먼저 선택해주세요', '확인');\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 13\n    }\n  }, __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 15\n    }\n  }, \"\\uBD88\\uB7C9 \\uC218\\uB7C9 \\uB4F1\\uB85D\")))) // :\n  // <div style={{margin: 0}} onClick={() => {\n  //   setSearchList([{\n  //     reason: '',\n  //\n  //   }])\n  //   if(row['process_id']){\n  //     setIsOpen(true)\n  //   }else{\n  //     Notiflix.Report.failure('실패', '공정을 먼저 선택해주세요', '확인')\n  //   }\n  // }}>\n  //   <UnitContainer row={row} column={column} setRow={setSelectRow}></UnitContainer>\n  // </div>\n  , __jsx(Modal, {\n    isOpen: isOpen,\n    style: {\n      content: {\n        top: '50%',\n        left: '50%',\n        right: 'auto',\n        bottom: 'auto',\n        marginRight: '-50%',\n        transform: 'translate(-50%, -50%)',\n        padding: 0,\n        overflow: \"hidden\"\n      },\n      overlay: {\n        background: 'rgba(0,0,0,.6)',\n        zIndex: 5\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    style: {\n      width: 1776,\n      height: 816\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    style: {\n      marginTop: 24,\n      marginLeft: 16,\n      marginRight: 16,\n      display: 'flex',\n      justifyContent: 'space-between'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 11\n    }\n  }, __jsx(\"p\", {\n    style: {\n      color: 'black',\n      fontSize: 22,\n      fontWeight: 'bold',\n      margin: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 13\n    }\n  }, title), __jsx(\"div\", {\n    style: {\n      cursor: 'pointer'\n    },\n    onClick: () => {\n      setIsOpen(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 13\n    }\n  }, __jsx(\"img\", {\n    style: {\n      width: 20,\n      height: 20\n    },\n    src: IcX,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 15\n    }\n  }))), __jsx(\"div\", {\n    style: {\n      padding: '0 16px 0 16px',\n      width: 856\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 11\n    }\n  }, __jsx(ExcelTable, {\n    editable: true,\n    headerList: column.searchType === 'disable' ? searchModalList.poorDisable : searchModalList.poor,\n    row: searchList !== null && searchList !== void 0 ? searchList : [],\n    setRow: setSearchList,\n    width: 1750,\n    rowHeight: 32,\n    height: 740,\n    setSelectRow: e => {\n      setSelectRow(e);\n    },\n    type: 'searchModal',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 13\n    }\n  })), __jsx(\"div\", {\n    style: {\n      height: 49,\n      display: 'flex',\n      alignItems: 'flex-end'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    onClick: () => {\n      if (selectRow !== undefined && selectRow !== null) {\n        let quantity = 0;\n        searchList.map(v => {\n          quantity += Number(v.amount);\n        });\n\n        if (isExist) {\n          onRowChange(_objectSpread(_objectSpread({}, row), {}, {\n            poor_quantities: [],\n            poor_quantity: quantity,\n            isChange: true\n          }));\n        } else {\n          onRowChange(_objectSpread(_objectSpread({}, row), {}, {\n            poor_quantities: searchList.map(v => {\n              return _objectSpread(_objectSpread({}, v), {}, {\n                amount: v.amount ? Number(v.amount) : 0\n              });\n            }),\n            poor_count: quantity,\n            // poor_quantity: quantity,\n            poor_quantity: row.poor_quantity && row.poor_quantity > quantity ? row.poor_quantity : quantity,\n            isChange: true\n          }));\n        }\n      }\n\n      setIsOpen(false);\n    },\n    style: {\n      width: '100%',\n      height: 40,\n      backgroundColor: POINT_COLOR,\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 13\n    }\n  }, __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 15\n    }\n  }, \"\\uB4F1\\uB85D\\uD558\\uAE30\"))))));\n};\n\nconst SearchModalWrapper = styled.div`\n  display: flex;\n  width: 100%;\n`;\nexport default PoorQuantityModal;","map":{"version":3,"sources":["/Users/user/Desktop/sizl/mono_pop/packages/main/component/Modal/PoorQuantityModal.tsx"],"names":["React","useEffect","useState","styled","Modal","POINT_COLOR","IcX","ExcelTable","searchModalList","RequestMethod","UnitBox","UnitValue","UnitWrapper","UploadButton","Notiflix","optionList","PoorQuantityModal","column","row","onRowChange","isExist","setIsExist","isOpen","setIsOpen","title","setTitle","optionIndex","setOptionIndex","keyword","setKeyword","selectRow","setSelectRow","searchList","setSearchList","poor_quantities","length","searchType","SearchBasic","then","pp_id","ProductProcessSearch","changeRow","key","tmpData","amount","option","res","path","page","renderItem","process_id","process_idPK","params","opt","status","results","info_list","map","index","reason","SearchDefect","or_id","ord_id","pdr_id","pdr","poor_quantity","poor_count","Report","failure","unitData","display","justifyContent","alignItems","width","height","content","top","left","right","bottom","marginRight","transform","padding","overflow","overlay","background","zIndex","marginTop","marginLeft","color","fontSize","fontWeight","margin","cursor","poorDisable","poor","e","undefined","quantity","v","Number","isChange","backgroundColor","SearchModalWrapper","div"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react'\nimport {IExcelHeaderType} from '../../common/@types/type'\nimport styled from 'styled-components'\nimport Modal from 'react-modal'\nimport {POINT_COLOR} from '../../common/configset'\n//@ts-ignore\nimport IcSearchButton from '../../public/images/ic_search.png'\n//@ts-ignore\nimport IcX from '../../public/images/ic_x.png'\nimport {ExcelTable} from '../Excel/ExcelTable'\nimport {searchModalList} from '../../common/modalInit'\n//@ts-ignore\nimport Search_icon from '../../public/images/btn_search.png'\nimport {RequestMethod} from '../../common/RequestFunctions'\nimport {UnitBox, UnitValue, UnitWrapper, UploadButton} from '../../styles/styledComponents'\nimport Notiflix from 'notiflix'\nimport UnitContainer from '../Unit/UnitContainer'\n\ninterface IProps {\n  column: IExcelHeaderType\n  row: any\n  onRowChange: (e: any) => void\n}\n\nconst optionList = ['고객사명','모델명','CODE', '품명', '재질']\n\nconst PoorQuantityModal = ({column, row, onRowChange}: IProps) => {\n  const [isExist, setIsExist] = useState<boolean>(false)\n  const [isOpen, setIsOpen] = useState<boolean>(false)\n  const [title, setTitle] = useState<string>('불량 수량')\n  const [optionIndex, setOptionIndex] = useState<number>(0)\n  const [keyword, setKeyword] = useState<string>('')\n  const [selectRow, setSelectRow] = useState<number>(-1)\n  const [searchList, setSearchList] = useState<any[]>([])\n\n  useEffect(() => {\n    if(row.poor_quantities && row.poor_quantities.length){\n      setSearchList([...row.poor_quantities])\n    }else{\n      if(column.searchType === 'list'){\n        // SearchDefect().then(() => {\n        //   // Notiflix.Loading.remove()\n        // })\n      }else{\n        SearchBasic(keyword, 0).then(() => {\n          // Notiflix.Loading.remove()\n        })\n      }\n    }\n  }, [isOpen, row['process_idPK']])\n\n  useEffect(() => {\n    if(selectRow >= 0) {\n      if(searchList[selectRow].pp_id){\n        ProductProcessSearch(searchList[selectRow].pp_id)\n      }\n    }\n  }, [selectRow])\n\n  const changeRow = (row: any, key?: string) => {\n    let tmpData = {\n        ...row,\n        amount: 0\n      }\n\n    return tmpData\n  }\n\n  const SearchBasic = async (keyword: any, option: number) => {\n    // Notiflix.Loading.circle()\n    setKeyword(keyword)\n    setOptionIndex(option)\n    const res = await RequestMethod('get', `defectReasonSearch`,{\n      path: {\n        page: 1,\n        renderItem: 19,\n        process_id: row.process_idPK,\n      },\n      params: {\n        keyword: keyword ?? '',\n        opt: option ?? 0\n      }\n    })\n\n    if(res && res.status === 200){\n      if(res.results.info_list.length > 0){\n        setIsExist(false)\n        let searchList = res.results.info_list.map((row: any, index: number) => {\n          return changeRow(row)\n        })\n        setSearchList([...searchList])\n      } else {\n        setIsExist(true)\n        setSearchList([{reason: '전체 불량 수량', amount: 0}])\n      }\n    }\n  }\n\n  const SearchDefect = async () => {\n    // Notiflix.Loading.circle()\n    const res = await RequestMethod('get', `recordDefect`,{\n      path: {\n        or_id: row.or_id\n      },\n    })\n\n    if(res && res.status === 200){\n      setIsOpen(true)\n      if(res.results.poor_quantities.length){\n        let searchList = res.results.poor_quantities.map((row: any, index: number) => {\n          return {\n            ord_id: row.ord_id,\n            pdr_id: row.pdr.pdr_id,\n            reason: row.pdr.reason,\n            amount: row.amount\n          }\n        })\n\n        setSearchList([...searchList])\n        setIsExist(false)\n      }else{\n        setIsExist(true)\n        setSearchList([{\n          reason: '전체 불량 수량',\n          amount: row.poor_quantity\n        }])\n      }\n    }\n  }\n\n  const ProductProcessSearch = async (pp_id: number) => {\n    const res = await RequestMethod('get', `productprocessList`,{\n      path: {\n        pp_id\n      }\n    })\n\n    if(res && res.status === 200){\n\n    }\n  }\n\n  return (\n    <>\n    {\n      // !isExist ?\n        // (row.poor_quantity || row.poor_quantity === 0)\n        (row.poor_count || row.poor_count === 0 || column.searchType === 'disable')\n        ? <UnitWrapper onClick={() => {\n          if(column.searchType === 'list' || column.searchType === 'disable' ) {\n            if(row['or_id']) {\n              SearchDefect().then(() => {})\n            }\n          }else{\n            if(row['process_id']){\n              setIsOpen(true)\n            }else{\n              Notiflix.Report.failure('실패', '공정을 먼저 선택해주세요', '확인')\n            }\n          }\n        }}>\n          <UnitValue>\n            <p>{row.poor_count}</p>\n          </UnitValue>\n          <UnitBox>\n        <span>{column.unitData}</span>\n          </UnitBox>\n        </UnitWrapper>\n        : <SearchModalWrapper>\n          <div style={{display: 'flex', justifyContent: 'center', alignItems: 'center', width: '100%', height: '100%'}}>\n            <UploadButton onClick={() => {\n              if(row['process_id']){\n                setIsOpen(true)\n              }else{\n                Notiflix.Report.failure('실패', '공정을 먼저 선택해주세요', '확인')\n              }\n            }}>\n              <p>불량 수량 등록</p>\n            </UploadButton>\n          </div>\n        </SearchModalWrapper>\n        // :\n        // <div style={{margin: 0}} onClick={() => {\n        //   setSearchList([{\n        //     reason: '',\n        //\n        //   }])\n        //   if(row['process_id']){\n        //     setIsOpen(true)\n        //   }else{\n        //     Notiflix.Report.failure('실패', '공정을 먼저 선택해주세요', '확인')\n        //   }\n        // }}>\n        //   <UnitContainer row={row} column={column} setRow={setSelectRow}></UnitContainer>\n        // </div>\n    }\n      <Modal isOpen={isOpen} style={{\n        content: {\n          top: '50%',\n          left: '50%',\n          right: 'auto',\n          bottom: 'auto',\n          marginRight: '-50%',\n          transform: 'translate(-50%, -50%)',\n          padding: 0,\n          overflow:\"hidden\"\n        },\n        overlay: {\n          background: 'rgba(0,0,0,.6)',\n          zIndex: 5\n        }\n      }}>\n        <div style={{\n          width: 1776,\n          height: 816\n        }}>\n          <div style={{\n            marginTop: 24,\n            marginLeft: 16,\n            marginRight: 16,\n            display: 'flex',\n            justifyContent: 'space-between'\n          }}>\n            <p style={{\n              color: 'black',\n              fontSize: 22,\n              fontWeight: 'bold',\n              margin: 0,\n            }}>{title}</p>\n            <div style={{cursor: 'pointer'}} onClick={() => {\n              setIsOpen(false)\n            }}>\n              <img style={{width: 20, height: 20}} src={IcX}/>\n            </div>\n          </div>\n          <div style={{padding: '0 16px 0 16px', width: 856}}>\n            <ExcelTable\n              editable\n              headerList={column.searchType === 'disable' ? searchModalList.poorDisable : searchModalList.poor}\n              row={searchList ?? []}\n              setRow={setSearchList}\n              width={1750}\n              rowHeight={32}\n              height={740}\n              setSelectRow={(e) => {\n                setSelectRow(e)\n              }}\n              type={'searchModal'}\n            />\n          </div>\n          <div style={{ height: 49, display: 'flex', alignItems: 'flex-end'}}>\n            <div\n              onClick={() => {\n                if(selectRow !== undefined && selectRow !== null){\n                  let quantity = 0\n                  searchList.map(v => {\n                    quantity+=Number(v.amount)\n                  })\n\n                  if(isExist){\n                    onRowChange({\n                      ...row,\n                      poor_quantities: [],\n                      poor_quantity: quantity,\n                      isChange: true\n                    })\n                  }else{\n                    onRowChange({\n                      ...row,\n                      poor_quantities: searchList.map(v => {\n                        return {\n                          ...v,\n                          amount: v.amount ? Number(v.amount) : 0\n                        }\n                      }),\n                      poor_count: quantity,\n                      // poor_quantity: quantity,\n                      poor_quantity: (row.poor_quantity && row.poor_quantity > quantity) ? row.poor_quantity : quantity,\n                      isChange: true\n                    })\n                  }\n                }\n                setIsOpen(false)\n              }}\n              style={{width: '100%', height: 40, backgroundColor: POINT_COLOR, display: 'flex', justifyContent: 'center', alignItems: 'center'}}\n            >\n              <p>등록하기</p>\n            </div>\n          </div>\n        </div>\n      </Modal>\n    </>\n  )\n}\n\nconst SearchModalWrapper = styled.div`\n  display: flex;\n  width: 100%;\n`\n\nexport default PoorQuantityModal\n"]},"metadata":{},"sourceType":"module"}