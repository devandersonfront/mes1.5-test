{"ast":null,"code":"var _jsxFileName = \"/Users/user/Desktop/sizl/mono_pop/packages/main/pages/mes/rawmaterial/stock.tsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect, useState } from 'react';\nimport ExcelTable from '../../../component/Excel/ExcelTable';\nimport MenuNavigation from '../../../component/MenuNav/MenuNavigation';\nimport ProfileHeader from '../../../component/Profile/ProfileHeader';\nimport PageHeader from '../../../component/Header/Header'; // @ts-ignore\n\nimport { SelectColumn } from 'react-data-grid';\nimport { RequestMethod } from '../../../common/RequestFunctions';\nimport { columnlist } from \"../../../common/columnInit\";\nimport Notiflix from \"notiflix\";\nimport { useRouter } from 'next/router';\nimport { MAX_VALUE } from '../../../common/configset';\nimport TextEditor from '../../../component/InputBox/ExcelBasicInputBox';\nimport { excelDownload } from '../../../common/excelDownloadFunction';\nimport PaginationComponent from '../../../component/Pagination/PaginationComponent';\nimport ExcelDownloadModal from '../../../component/Modal/ExcelDownloadMoadal';\nimport moment from 'moment';\nconst title = '원자재 재고 관리';\nconst optList = ['고객사명', '모델명', 'CODE', '품명', 'Lot번호'];\n\nconst BasicContainer = ({\n  page,\n  keyword,\n  option\n}) => {\n  const router = useRouter();\n  const {\n    0: excelOpen,\n    1: setExcelOpen\n  } = useState(false);\n  const {\n    0: basicRow,\n    1: setBasicRow\n  } = useState([{\n    name: \"\",\n    id: \"\"\n  }]);\n  const {\n    0: nzState,\n    1: setNzState\n  } = useState(false);\n\n  const changeNzState = value => {\n    setNzState(value);\n  };\n\n  const {\n    0: column,\n    1: setColumn\n  } = useState(columnlist.rawstock);\n  const {\n    0: selectList,\n    1: setSelectList\n  } = useState(new Set());\n  const {\n    0: optionList,\n    1: setOptionList\n  } = useState(optList);\n  const {\n    0: optionIndex,\n    1: setOptionIndex\n  } = useState(0);\n  const {\n    0: pageInfo,\n    1: setPageInfo\n  } = useState({\n    page: 1,\n    total: 1\n  });\n  const {\n    0: selectDate,\n    1: setSelectDate\n  } = useState({\n    from: moment().subtract(5, \"month\").startOf(\"month\").format(\"YYYY-MM-DD\"),\n    to: moment().endOf('month').format('YYYY-MM-DD')\n  });\n  useEffect(() => {\n    setOptionIndex(option);\n\n    if (keyword) {\n      SearchBasic(keyword, option, page);\n    } else {\n      LoadBasic(page).then(() => {});\n    }\n  }, [page, keyword, option, selectDate, nzState]);\n\n  const loadAllSelectItems = async column => {\n    let tmpColumn = column.map(async v => {\n      if (v.selectList && v.selectList.length === 0) {\n        let tmpKey = v.key;\n\n        if (tmpKey === 'customer_id') {\n          tmpKey = 'customer';\n        } else if (tmpKey === 'cm_id') {\n          tmpKey = 'model';\n        }\n\n        const res = await RequestMethod('get', `${tmpKey}List`, {\n          path: {\n            page: 1,\n            renderItem: MAX_VALUE\n          }\n        });\n        return _objectSpread(_objectSpread({}, v), {}, {\n          selectList: [...res.results.info_list.map(value => {\n            return _objectSpread(_objectSpread({}, value), {}, {\n              pk: value.ca_id\n            });\n          })]\n        });\n      } else {\n        if (v.selectList) {\n          return _objectSpread(_objectSpread({}, v), {}, {\n            pk: v.unit_id,\n            result: changeNzState\n          });\n        } else {\n          return v;\n        }\n      }\n    });\n    Promise.all(tmpColumn).then(res => {\n      setColumn([...res]);\n    });\n  };\n\n  const SaveBasic = async () => {\n    let res = await RequestMethod('post', `rawinSave`, {\n      warehousing: basicRow.map((row, i) => {\n        if (selectList.has(row.id)) {\n          let additional = [];\n          column.map(v => {\n            if (v.type === 'additional') {\n              additional.push(v);\n            }\n          });\n          let selectData = {};\n          return _objectSpread(_objectSpread(_objectSpread({}, row), selectData), {}, {\n            current: row.exhaustionPK ? 0 : row.current,\n            additional: [...additional.map(v => {\n              if (row[v.name]) {\n                return {\n                  id: v.id,\n                  title: v.name,\n                  value: row[v.name],\n                  unit: v.unit\n                };\n              }\n            }).filter(v => v)]\n          });\n        }\n      }).filter(v => v)\n    });\n\n    if (res) {\n      if (res.status === 200) {\n        Notiflix.Report.success('저장되었습니다.', '', '확인');\n\n        if (keyword) {\n          SearchBasic(keyword, option, page).then(() => {\n            Notiflix.Loading.remove();\n          });\n        } else {\n          LoadBasic(page).then(() => {\n            Notiflix.Loading.remove();\n          });\n        }\n      }\n    }\n  };\n\n  const DeleteBasic = async () => {\n    const res = await RequestMethod('delete', `processDelete`, {\n      processes: basicRow.map((row, i) => {\n        if (selectList.has(row.id)) {\n          let pk = \"\";\n          Object.keys(row).map(v => {\n            if (v.indexOf(\"_id\") !== -1) {\n              pk = v;\n            }\n          });\n          return row[pk];\n        }\n      }).filter(v => v)\n    });\n\n    if (res) {\n      if (res.status === 200) {\n        LoadBasic(pageInfo.page);\n      }\n    }\n  };\n\n  const LoadBasic = async page => {\n    const res = await RequestMethod('get', `rawinList`, {\n      path: {\n        page: page || page !== 0 ? page : 1,\n        renderItem: 18\n      },\n      params: {\n        tab: 'ROLE_RMAT_02',\n        nz: nzState,\n        from: selectDate.from,\n        to: selectDate.to\n      }\n    });\n\n    if (res && res.status === 200) {\n      if (res.results.totalPages < page) {\n        LoadBasic(page - 1);\n      } else {\n        if (res.results.totalPages < page) {\n          LoadBasic(page - 1);\n        } else {\n          setPageInfo(_objectSpread(_objectSpread({}, pageInfo), {}, {\n            page: res.results.page,\n            total: res.results.totalPages\n          }));\n          cleanUpData(res);\n        }\n      }\n    } else if (res.state === 401) {\n      Notiflix.Report.failure('불러올 수 없습니다.', '권한이 없습니다.', '확인', () => {\n        router.back();\n      });\n    }\n  };\n\n  const SearchBasic = async (keyword, option, isPaging) => {\n    if (!isPaging) {\n      setOptionIndex(option);\n    }\n\n    const res = await RequestMethod('get', `rawinSearch`, {\n      path: {\n        page: isPaging !== null && isPaging !== void 0 ? isPaging : 1,\n        renderItem: 18\n      },\n      params: {\n        keyword: keyword !== null && keyword !== void 0 ? keyword : '',\n        opt: option !== null && option !== void 0 ? option : 0,\n        nz: nzState,\n        tab: 'ROLE_RMAT_02',\n        from: selectDate.from,\n        to: selectDate.to\n      }\n    });\n\n    if (res && res.status === 200) {\n      setPageInfo(_objectSpread(_objectSpread({}, pageInfo), {}, {\n        page: res.results.page,\n        total: res.results.totalPages\n      }));\n      cleanUpData(res);\n    }\n  };\n\n  const cleanUpData = res => {\n    let tmpColumn = columnlist.rawstock;\n    let tmpRow = [];\n    tmpColumn = tmpColumn.map(column => {\n      let menuData;\n      res.results.menus && res.results.menus.map(menu => {\n        if (menu.colName === column.key) {\n          menuData = {\n            id: menu.id,\n            name: menu.title,\n            width: menu.width,\n            tab: menu.tab,\n            unit: menu.unit\n          };\n        } else if (menu.colName === 'id' && column.key === 'tmpId') {\n          menuData = {\n            id: menu.id,\n            name: menu.title,\n            width: menu.width,\n            tab: menu.tab,\n            unit: menu.unit\n          };\n        }\n      });\n\n      if (menuData) {\n        return _objectSpread(_objectSpread({}, column), menuData);\n      }\n    }).filter(v => v);\n    loadAllSelectItems(tmpColumn);\n    let additionalMenus = res.results.menus ? res.results.menus.map(menu => {\n      if (menu.colName === null) {\n        return {\n          id: menu.id,\n          name: menu.title,\n          width: menu.width,\n          key: menu.title,\n          editor: TextEditor,\n          type: 'additional',\n          unit: menu.unit\n        };\n      }\n    }).filter(v => v) : [];\n    tmpRow = res.results.info_list;\n    let additionalData = [];\n    additionalMenus.map(v => {\n      if (v.type === 'additional') {\n        additionalData.push(v.key);\n      }\n    });\n    let tmpBasicRow = tmpRow.map((row, index) => {\n      let appendAdditional = {};\n      row.additional && row.additional.map(v => {\n        appendAdditional = _objectSpread(_objectSpread({}, appendAdditional), {}, {\n          [v.title]: v.value\n        });\n      });\n      const random_id = Math.random() * 1000;\n      return _objectSpread(_objectSpread({\n        exhaustion: row.current === 0 ? '사용완료' : '-',\n        exhaustionPK: row.current === 0,\n        ln_id: row.ln_id,\n        rm_id: row.raw_material.rm_id,\n        customer_id: row.raw_material.model.customer.name,\n        cm_id: row.raw_material.model.model,\n        code: row.raw_material.code,\n        name: row.raw_material.name,\n        texture: row.raw_material.texture,\n        depth: row.raw_material.depth,\n        width: row.raw_material.width,\n        height: row.raw_material.height,\n        type: row.raw_material.type,\n        amount: row.amount,\n        date: row.date,\n        number: row.number,\n        blanking: row.blanking,\n        current: row.current\n      }, appendAdditional), {}, {\n        id: `rowstack_${random_id}`\n      });\n    });\n    setBasicRow([...tmpBasicRow]);\n  };\n\n  const downloadExcel = () => {\n    let tmpSelectList = [];\n    basicRow.map(row => {\n      tmpSelectList.push(selectList.has(row.id));\n    });\n    excelDownload(column, basicRow, `원자재 재고 관리`, 'rawmaterial_input', tmpSelectList);\n  };\n\n  const onClickHeaderButton = index => {\n    switch (index) {\n      case 0:\n        setExcelOpen(true);\n        break;\n\n      case 1:\n        SaveBasic();\n        break;\n    }\n  };\n\n  return __jsx(\"div\", {\n    style: {\n      display: 'flex'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 378,\n      columnNumber: 5\n    }\n  }, __jsx(MenuNavigation, {\n    pageType: 'MES',\n    subType: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 379,\n      columnNumber: 7\n    }\n  }), __jsx(\"div\", {\n    style: {\n      paddingBottom: 40\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 380,\n      columnNumber: 7\n    }\n  }, __jsx(ProfileHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 381,\n      columnNumber: 9\n    }\n  }), __jsx(PageHeader, {\n    isSearch: true,\n    searchKeyword: keyword,\n    onChangeSearchKeyword: keyword => {\n      if (keyword) {\n        router.push(`/mes/rawmaterial/stock?page=1&keyword=${keyword}&opt=${optionIndex !== null && optionIndex !== void 0 ? optionIndex : 0}`);\n      } else {\n        router.push(`/mes/rawmaterial/stock?page=1&keyword=`);\n      }\n    },\n    searchOptionList: optionList,\n    onChangeSearchOption: option => {\n      setOptionIndex(option);\n    },\n    isCalendar: true,\n    calendarType: 'period',\n    selectDate: selectDate,\n    optionIndex: optionIndex //@ts-ignore\n    ,\n    setSelectDate: setSelectDate,\n    title: title,\n    buttons: ['엑셀로 받기', '저장하기'],\n    buttonsOnclick: onClickHeaderButton,\n    dataLimit: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 382,\n      columnNumber: 9\n    }\n  }), __jsx(ExcelTable, {\n    editable: true,\n    resizable: true,\n    headerList: [SelectColumn, ...column],\n    row: basicRow // setRow={setBasicRow}\n    ,\n    setRow: e => {\n      let tmp = selectList;\n      e.map(v => {\n        if (v.isChange) tmp.add(v.id);\n      });\n      setSelectList(tmp);\n      setBasicRow(e);\n    },\n    selectList: selectList //@ts-ignore\n    ,\n    setSelectList: setSelectList,\n    disableVirtualization: true,\n    height: basicRow.length * 40 >= 40 * 18 + 56 ? 40 * 19 : basicRow.length * 40 + 56,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 408,\n      columnNumber: 9\n    }\n  }), __jsx(PaginationComponent, {\n    currentPage: pageInfo.page,\n    totalPage: pageInfo.total,\n    setPage: page => {\n      if (keyword) {\n        router.push(`/mes/rawmaterial/stock?page=${page}&keyword=${keyword}&opt=${option}`);\n      } else {\n        router.push(`/mes/rawmaterial/stock?page=${page}`);\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 431,\n      columnNumber: 9\n    }\n  })), __jsx(ExcelDownloadModal, {\n    isOpen: excelOpen,\n    column: column,\n    basicRow: basicRow,\n    filename: `원자재재고관리`,\n    sheetname: `원자재재고관리`,\n    selectList: selectList,\n    tab: 'ROLE_RMAT_02',\n    setIsOpen: setExcelOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 443,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport const getServerSideProps = ctx => {\n  var _ctx$query$page, _ctx$query$keyword, _ctx$query$opt;\n\n  return {\n    props: {\n      page: (_ctx$query$page = ctx.query.page) !== null && _ctx$query$page !== void 0 ? _ctx$query$page : 1,\n      keyword: (_ctx$query$keyword = ctx.query.keyword) !== null && _ctx$query$keyword !== void 0 ? _ctx$query$keyword : \"\",\n      option: (_ctx$query$opt = ctx.query.opt) !== null && _ctx$query$opt !== void 0 ? _ctx$query$opt : 0\n    }\n  };\n}; // BasicContainer.getInitialProps = async ({ query }) => {\n//   let { page, keyword, opt } = query\n//   if (typeof page === 'string')\n//     page = parseInt(page);\n//   if (typeof opt === 'string')\n//     opt = parseInt(opt);\n//   return { page, keyword, option: opt };\n// }\n\nexport default BasicContainer;","map":{"version":3,"sources":["/Users/user/Desktop/sizl/mono_pop/packages/main/pages/mes/rawmaterial/stock.tsx"],"names":["React","useEffect","useState","ExcelTable","MenuNavigation","ProfileHeader","PageHeader","SelectColumn","RequestMethod","columnlist","Notiflix","useRouter","MAX_VALUE","TextEditor","excelDownload","PaginationComponent","ExcelDownloadModal","moment","title","optList","BasicContainer","page","keyword","option","router","excelOpen","setExcelOpen","basicRow","setBasicRow","name","id","nzState","setNzState","changeNzState","value","column","setColumn","rawstock","selectList","setSelectList","Set","optionList","setOptionList","optionIndex","setOptionIndex","pageInfo","setPageInfo","total","selectDate","setSelectDate","from","subtract","startOf","format","to","endOf","SearchBasic","LoadBasic","then","loadAllSelectItems","tmpColumn","map","v","length","tmpKey","key","res","path","renderItem","results","info_list","pk","ca_id","unit_id","result","Promise","all","SaveBasic","warehousing","row","i","has","additional","type","push","selectData","current","exhaustionPK","unit","filter","status","Report","success","Loading","remove","DeleteBasic","processes","Object","keys","indexOf","params","tab","nz","totalPages","cleanUpData","state","failure","back","isPaging","opt","tmpRow","menuData","menus","menu","colName","width","additionalMenus","editor","additionalData","tmpBasicRow","index","appendAdditional","random_id","Math","random","exhaustion","ln_id","rm_id","raw_material","customer_id","model","customer","cm_id","code","texture","depth","height","amount","date","number","blanking","downloadExcel","tmpSelectList","onClickHeaderButton","display","paddingBottom","e","tmp","isChange","add","getServerSideProps","ctx","props","query"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react'\nimport ExcelTable from '../../../component/Excel/ExcelTable'\nimport MenuNavigation from '../../../component/MenuNav/MenuNavigation'\nimport ProfileHeader from '../../../component/Profile/ProfileHeader'\nimport PageHeader from '../../../component/Header/Header'\n// @ts-ignore\nimport {SelectColumn} from 'react-data-grid'\nimport {IExcelHeaderType, IItemMenuType} from '../../../common/@types/type'\nimport {RequestMethod} from '../../../common/RequestFunctions'\nimport {columnlist} from \"../../../common/columnInit\";\nimport Notiflix from \"notiflix\";\nimport {useRouter} from 'next/router'\nimport {MAX_VALUE} from '../../../common/configset'\nimport DropDownEditor from '../../../component/Dropdown/ExcelBasicDropdown'\nimport TextEditor from '../../../component/InputBox/ExcelBasicInputBox'\nimport {excelDownload} from '../../../common/excelDownloadFunction'\nimport {loadAll} from 'react-cookies'\nimport PaginationComponent from '../../../component/Pagination/PaginationComponent'\nimport {NextPageContext} from 'next'\nimport ExcelDownloadModal from '../../../component/Modal/ExcelDownloadMoadal'\nimport moment from 'moment'\n\ninterface IProps {\n  children?: any\n  page?: number\n  keyword?: string\n  option?: number\n}\n\nconst title = '원자재 재고 관리'\nconst optList = ['고객사명', '모델명', 'CODE', '품명', 'Lot번호']\n\nconst BasicContainer = ({page, keyword, option}: IProps) => {\n  const router = useRouter()\n\n  const [excelOpen, setExcelOpen] = useState<boolean>(false)\n\n  const [basicRow, setBasicRow] = useState<Array<any>>([{\n    name: \"\", id: \"\"\n  }])\n\n  const [nzState, setNzState] = useState<boolean>(false);\n\n  const changeNzState = (value:boolean) => {\n    setNzState(value);\n  }\n\n  const [column, setColumn] = useState<Array<IExcelHeaderType>>(columnlist.rawstock)\n  const [selectList, setSelectList] = useState<Set<number>>(new Set())\n  const [optionList, setOptionList] = useState<string[]>(optList)\n  const [optionIndex, setOptionIndex] = useState<number>(0)\n\n  const [pageInfo, setPageInfo] = useState<{page: number, total: number}>({\n    page: 1,\n    total: 1\n  })\n\n  const [selectDate, setSelectDate] = useState<{from:string, to:string}>({\n    from: moment().subtract(5,\"month\").startOf(\"month\").format(\"YYYY-MM-DD\"),\n    to: moment().endOf('month').format('YYYY-MM-DD')\n  });\n\n  useEffect(() => {\n    setOptionIndex(option)\n    if(keyword){\n      SearchBasic(keyword, option, page)\n    }else{\n      LoadBasic(page).then(() => {})\n    }\n  }, [page, keyword, option, selectDate, nzState])\n\n  const loadAllSelectItems = async (column: IExcelHeaderType[]) => {\n    let tmpColumn = column.map(async (v: any) => {\n      if(v.selectList && v.selectList.length === 0){\n        let tmpKey = v.key\n\n        if(tmpKey === 'customer_id'){\n          tmpKey = 'customer'\n        } else if(tmpKey === 'cm_id'){\n          tmpKey = 'model'\n        }\n\n\n        const res = await RequestMethod('get', `${tmpKey}List`,{\n          path: {\n            page: 1,\n            renderItem: MAX_VALUE,\n          }\n        })\n\n        return {\n          ...v,\n          selectList: [...res.results.info_list.map((value: any) => {\n            return {\n              ...value,\n              pk: value.ca_id\n            }\n          })]\n        }\n      }else{\n        if(v.selectList){\n          return {\n            ...v,\n            pk: v.unit_id,\n            result: changeNzState\n          }\n        }else{\n          return v\n        }\n      }\n    })\n\n    Promise.all(tmpColumn).then(res => {\n      setColumn([...res])\n    })\n  }\n\n  const SaveBasic = async () => {\n    let res = await RequestMethod('post', `rawinSave`,\n      {\n        warehousing: basicRow.map((row, i) => {\n          if(selectList.has(row.id)){\n            let additional:any[] = []\n            column.map((v) => {\n              if(v.type === 'additional'){\n                additional.push(v)\n              }\n            })\n\n            let selectData: any = {}\n\n            return {\n              ...row,\n              ...selectData,\n              current: row.exhaustionPK ? 0 : row.current,\n              additional: [\n                ...additional.map(v => {\n                  if(row[v.name]) {\n                    return {\n                      id: v.id,\n                      title: v.name,\n                      value: row[v.name],\n                      unit: v.unit\n                    }\n                  }\n                }).filter((v) => v)\n              ]\n            }\n\n          }\n        }).filter((v) => v)\n      })\n\n    if(res){\n      if(res.status === 200){\n        Notiflix.Report.success('저장되었습니다.','','확인');\n        if(keyword){\n          SearchBasic(keyword, option, page).then(() => {\n            Notiflix.Loading.remove()\n          })\n        }else{\n          LoadBasic(page).then(() => {\n            Notiflix.Loading.remove()\n          })\n        }\n      }\n    }\n  }\n\n  const DeleteBasic = async () => {\n    const res = await RequestMethod('delete', `processDelete`,\n      {\n        processes: basicRow.map((row, i) => {\n          if(selectList.has(row.id)){\n            let pk = \"\"\n            Object.keys(row).map((v:string) => {\n              if(v.indexOf(\"_id\") !== -1){\n                pk = v\n              }\n            })\n\n            return row[pk]\n          }\n        }).filter((v) => v)\n      })\n\n    if(res) {\n      if(res.status === 200){\n        LoadBasic(pageInfo.page)\n      }\n    }\n  }\n\n  const LoadBasic = async (page?: number) => {\n    const res = await RequestMethod('get', `rawinList`,{\n      path: {\n        page: (page || page !== 0) ? page : 1,\n        renderItem: 18,\n      },\n      params: {\n        tab: 'ROLE_RMAT_02',\n        nz:nzState,\n        from: selectDate.from,\n        to: selectDate.to,\n      }\n    })\n\n    if(res && res.status === 200){\n      if(res.results.totalPages < page){\n        LoadBasic(page - 1)\n      }else{\n        if(res.results.totalPages < page){\n          LoadBasic(page - 1)\n        }else{\n          setPageInfo({\n            ...pageInfo,\n            page: res.results.page,\n            total: res.results.totalPages\n          })\n          cleanUpData(res)\n        }\n      }\n    }else if (res.state === 401) {\n      Notiflix.Report.failure('불러올 수 없습니다.', '권한이 없습니다.', '확인', () => {\n        router.back()\n      })\n    }\n  }\n\n  const SearchBasic = async (keyword: any, option: number, isPaging?: number) => {\n    if(!isPaging){\n      setOptionIndex(option)\n    }\n\n    const res = await RequestMethod('get', `rawinSearch`,{\n      path: {\n        page: isPaging ?? 1,\n        renderItem: 18,\n      },\n      params: {\n        keyword: keyword ?? '',\n        opt: option ?? 0,\n        nz:nzState,\n        tab: 'ROLE_RMAT_02',\n        from: selectDate.from,\n        to: selectDate.to,\n      }\n    })\n\n    if(res && res.status === 200){\n      setPageInfo({\n        ...pageInfo,\n        page: res.results.page,\n        total: res.results.totalPages\n      })\n      cleanUpData(res)\n    }\n  }\n\n  const cleanUpData = (res: any) => {\n    let tmpColumn = columnlist.rawstock\n    let tmpRow = []\n    tmpColumn = tmpColumn.map((column: any) => {\n      let menuData: object | undefined;\n      res.results.menus && res.results.menus.map((menu: any) => {\n        if(menu.colName === column.key){\n          menuData = {\n            id: menu.id,\n            name: menu.title,\n            width: menu.width,\n            tab:menu.tab,\n            unit:menu.unit\n          }\n        } else if(menu.colName === 'id' && column.key === 'tmpId'){\n          menuData = {\n            id: menu.id,\n            name: menu.title,\n            width: menu.width,\n            tab:menu.tab,\n            unit:menu.unit\n          }\n        }\n      })\n\n      if(menuData){\n        return {\n          ...column,\n          ...menuData\n        }\n      }\n    }).filter((v:any) => v)\n\n    loadAllSelectItems(tmpColumn)\n\n    let additionalMenus = res.results.menus ? res.results.menus.map((menu:any) => {\n      if(menu.colName === null){\n        return {\n          id: menu.id,\n          name: menu.title,\n          width: menu.width,\n          key: menu.title,\n          editor: TextEditor,\n          type: 'additional',\n          unit: menu.unit\n        }\n      }\n    }).filter((v: any) => v) : []\n\n    tmpRow = res.results.info_list\n\n    let additionalData: any[] = []\n\n    additionalMenus.map((v: any) => {\n      if(v.type === 'additional'){\n        additionalData.push(v.key)\n      }\n    })\n\n    let tmpBasicRow = tmpRow.map((row: any, index: number) => {\n      let appendAdditional: any = {}\n\n      row.additional && row.additional.map((v: any) => {\n        appendAdditional = {\n          ...appendAdditional,\n          [v.title]: v.value\n        }\n      })\n\n      const random_id = Math.random()*1000\n\n      return {\n        exhaustion: row.current === 0 ? '사용완료' : '-',\n        exhaustionPK: row.current === 0,\n        ln_id: row.ln_id,\n        rm_id: row.raw_material.rm_id,\n        customer_id: row.raw_material.model.customer.name,\n        cm_id: row.raw_material.model.model,\n        code: row.raw_material.code,\n        name: row.raw_material.name,\n        texture: row.raw_material.texture,\n        depth: row.raw_material.depth,\n        width: row.raw_material.width,\n        height: row.raw_material.height,\n        type: row.raw_material.type,\n        amount: row.amount,\n        date: row.date,\n        number: row.number,\n        blanking: row.blanking,\n        current: row.current,\n        ...appendAdditional,\n        id: `rowstack_${random_id}`,\n      }\n    })\n\n    setBasicRow([...tmpBasicRow])\n  }\n\n  const downloadExcel = () => {\n    let tmpSelectList: boolean[] = []\n    basicRow.map(row => {\n      tmpSelectList.push(selectList.has(row.id))\n    })\n    excelDownload(column, basicRow, `원자재 재고 관리`, 'rawmaterial_input', tmpSelectList)\n  }\n\n  const onClickHeaderButton = (index: number) => {\n    switch(index){\n      case 0:\n        setExcelOpen(true)\n        break;\n      case 1:\n        SaveBasic()\n        break;\n    }\n  }\n\n  return (\n    <div style={{display: 'flex', }}>\n      <MenuNavigation pageType={'MES'} subType={1}/>\n      <div style={{paddingBottom: 40}}>\n        <ProfileHeader/>\n        <PageHeader\n          isSearch\n          searchKeyword={keyword}\n          onChangeSearchKeyword={(keyword) => {\n            if(keyword){\n              router.push(`/mes/rawmaterial/stock?page=1&keyword=${keyword}&opt=${optionIndex ?? 0}`)\n            }else{\n              router.push(`/mes/rawmaterial/stock?page=1&keyword=`)\n            }\n          }}\n          searchOptionList={optionList}\n          onChangeSearchOption={(option) => {\n            setOptionIndex(option)\n          }}\n          isCalendar\n          calendarType={'period'}\n          selectDate={selectDate}\n          optionIndex={optionIndex}\n          //@ts-ignore\n          setSelectDate={setSelectDate}\n          title={title}\n          buttons={['엑셀로 받기','저장하기']}\n          buttonsOnclick={onClickHeaderButton}\n          dataLimit={true}\n\n        />\n        <ExcelTable\n          editable\n          resizable\n          headerList={[\n            SelectColumn,\n            ...column\n          ]}\n          row={basicRow}\n          // setRow={setBasicRow}\n          setRow={(e) => {\n            let tmp: Set<any> = selectList\n            e.map(v => {\n              if(v.isChange) tmp.add(v.id)\n            })\n            setSelectList(tmp)\n            setBasicRow(e)\n          }}\n          selectList={selectList}\n          //@ts-ignore\n          setSelectList={setSelectList}\n          disableVirtualization={true}\n          height={basicRow.length * 40 >= 40*18+56 ? 40*19 : basicRow.length * 40 + 56}\n        />\n        <PaginationComponent\n          currentPage={pageInfo.page}\n          totalPage={pageInfo.total}\n          setPage={(page) => {\n            if(keyword){\n              router.push(`/mes/rawmaterial/stock?page=${page}&keyword=${keyword}&opt=${option}`)\n            }else{\n              router.push(`/mes/rawmaterial/stock?page=${page}`)\n            }\n          }}\n        />\n      </div>\n      <ExcelDownloadModal\n        isOpen={excelOpen}\n        column={column}\n        basicRow={basicRow}\n        filename={`원자재재고관리`}\n        sheetname={`원자재재고관리`}\n        selectList={selectList}\n        tab={'ROLE_RMAT_02'}\n        setIsOpen={setExcelOpen}\n      />\n    </div>\n  );\n}\n\nexport const getServerSideProps = (ctx: NextPageContext) => {\n  return {\n    props: {\n      page: ctx.query.page ?? 1,\n      keyword: ctx.query.keyword ?? \"\",\n      option: ctx.query.opt ?? 0,\n    }\n  }\n}\n\n// BasicContainer.getInitialProps = async ({ query }) => {\n//   let { page, keyword, opt } = query\n//   if (typeof page === 'string')\n//     page = parseInt(page);\n//   if (typeof opt === 'string')\n//     opt = parseInt(opt);\n//   return { page, keyword, option: opt };\n// }\n\nexport default BasicContainer;\n"]},"metadata":{},"sourceType":"module"}