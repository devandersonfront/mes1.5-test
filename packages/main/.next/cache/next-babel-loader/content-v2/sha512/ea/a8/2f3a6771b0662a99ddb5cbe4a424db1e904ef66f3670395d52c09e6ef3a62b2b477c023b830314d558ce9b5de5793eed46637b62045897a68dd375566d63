{"ast":null,"code":"import _defineProperty from \"/Users/user/Desktop/sizl/mono_pop/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nvar _jsxFileName = \"/Users/user/Desktop/sizl/mono_pop/packages/shared/src/components/Buttons/AddTabButton.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\n\nvar AddTabButton = function AddTabButton(_ref) {\n  _s();\n\n  var row = _ref.row,\n      column = _ref.column,\n      setRow = _ref.setRow;\n\n  var _useState = useState(\"BOM 보기\"),\n      title = _useState[0],\n      setTitle = _useState[1];\n\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }, __jsx(\"p\", {\n    style: {\n      fontSize: '15px',\n      margin: 0,\n      padding: 0\n    },\n    onClick: function onClick() {\n      setRow(_objectSpread(_objectSpread({}, row), {}, {\n        newTab: true\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  }, title));\n};\n\n_s(AddTabButton, \"MNTB7kM8rwpfLPeBs2uehLQr+KM=\");\n\n_c = AddTabButton;\nexport { AddTabButton };\n\nvar _c;\n\n$RefreshReg$(_c, \"AddTabButton\");","map":{"version":3,"sources":["/Users/user/Desktop/sizl/mono_pop/packages/shared/src/components/Buttons/AddTabButton.tsx"],"names":["React","useState","AddTabButton","row","column","setRow","title","setTitle","fontSize","margin","padding","newTab"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,IAA0BC,QAA1B,QAAyC,OAAzC;;AAYA,IAAMC,YAAY,GAAG,SAAfA,YAAe,OAAoC;AAAA;;AAAA,MAAjCC,GAAiC,QAAjCA,GAAiC;AAAA,MAA5BC,MAA4B,QAA5BA,MAA4B;AAAA,MAApBC,MAAoB,QAApBA,MAAoB;;AAAA,kBAC7BJ,QAAQ,CAAS,QAAT,CADqB;AAAA,MAChDK,KADgD;AAAA,MACzCC,QADyC;;AAGvD,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,KAAK,EAAE;AACRC,MAAAA,QAAQ,EAAE,MADF;AAERC,MAAAA,MAAM,EAAE,CAFA;AAGRC,MAAAA,OAAO,EAAE;AAHD,KAAV;AAIG,IAAA,OAAO,EAAE,mBAAM;AAChBL,MAAAA,MAAM,iCACDF,GADC;AAEJQ,QAAAA,MAAM,EAAE;AAFJ,SAAN;AAID,KATD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAUGL,KAVH,CADF,CADF;AAgBD,CAnBD;;GAAMJ,Y;;KAAAA,Y;AAqBN,SAAQA,YAAR","sourcesContent":["import React, {useEffect, useState} from 'react'\nimport {IExcelHeaderType} from '../../common/@types/type'\nimport {CellButton} from '../../styles/styledComponents'\nimport {useRouter} from 'next/router'\nimport Notiflix from 'notiflix'\n\ninterface IProps {\n  row: any\n  column: IExcelHeaderType\n  setRow: (row: any) => void\n}\n\nconst AddTabButton = ({ row, column, setRow}: IProps) => {\n  const [title, setTitle] = useState<string>(\"BOM 보기\")\n\n  return (\n    <div>\n      <p style={{\n        fontSize: '15px',\n        margin: 0,\n        padding: 0\n      }} onClick={() => {\n        setRow({\n          ...row,\n          newTab: true\n        })\n      }}>\n        {title}\n      </p>\n    </div>\n  );\n}\n\nexport {AddTabButton};\n"]},"metadata":{},"sourceType":"module"}