{"ast":null,"code":"var _jsxFileName = \"/Users/user/Desktop/sizl/mono_pop/packages/shared/src/components/Modal/InfoModal/index.tsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport styled from 'styled-components';\nimport Modal from 'react-modal';\nimport { POINT_COLOR } from '../../../common/configset'; //@ts-ignore\n\n//@ts-ignore\nimport IcX from '../../../../public/images/ic_x.png';\nimport { ExcelTable } from '../../Excel/ExcelTable';\nimport { searchModalList } from '../../../common/modalInit'; //@ts-ignore\n\nimport { UploadButton } from '../../../styles/styledComponents';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { insert_summary_info } from '../../../reducer/infoModal';\nimport { InfoInit, SummaryInfoInit } from './InfoModalInit';\nconst optionList = ['제조번호', '제조사명', '기계명', '', '담당자명'];\n\nconst InfoModal = ({\n  column,\n  row,\n  onRowChange\n}) => {\n  const dispatch = useDispatch();\n  const tabRef = useRef(null);\n  const {\n    0: bomDummy,\n    1: setBomDummy\n  } = useState([{\n    code: 'SU-20210701-1',\n    name: 'SU900-1',\n    material_type: '반제품',\n    process: '프레스',\n    cavity: '1',\n    unit: 'EA'\n  }]);\n  const {\n    0: isOpen,\n    1: setIsOpen\n  } = useState(false);\n  const {\n    0: infoModalInit,\n    1: setInfoModalInit\n  } = useState();\n  const {\n    0: title,\n    1: setTitle\n  } = useState('기계');\n  const {\n    0: optionIndex,\n    1: setOptionIndex\n  } = useState(0);\n  const {\n    0: keyword,\n    1: setKeyword\n  } = useState('');\n  const {\n    0: selectRow,\n    1: setSelectRow\n  } = useState();\n  const {\n    0: searchList,\n    1: setSearchList\n  } = useState([{\n    seq: 1\n  }]);\n  const {\n    0: searchKeyword,\n    1: setSearchKeyword\n  } = useState('');\n  const {\n    0: focusIndex,\n    1: setFocusIndex\n  } = useState(0);\n  const {\n    0: pageInfo,\n    1: setPageInfo\n  } = useState({\n    page: 1,\n    total: 1\n  });\n  const selector = useSelector(state => state.infoModal);\n  useEffect(() => {\n    if (column.type) {\n      setInfoModalInit(InfoInit[column.type]);\n    }\n  }, [column.type]);\n  useEffect(() => {\n    if (isOpen) {\n      dispatch(insert_summary_info({\n        index: selector.index,\n        data: row\n      }));\n    }\n  }, [row, isOpen]);\n\n  const deleteTab = index => {\n    console.log(bomDummy.length, focusIndex);\n\n    if (bomDummy.length - 1 === focusIndex) {\n      console.log('last');\n      setFocusIndex(focusIndex - 1);\n    }\n\n    if (bomDummy.length === 1) {\n      return setIsOpen(false);\n    }\n\n    let tmp = bomDummy;\n    tmp.splice(index, 1);\n    setBomDummy([...tmp]);\n  };\n\n  const addNewTab = index => {\n    let tmp = bomDummy;\n    tmp.push({\n      code: 'SU-20210701-' + index,\n      name: 'SU900-' + index,\n      material_type: '반제품',\n      process: '프레스',\n      cavity: '1',\n      unit: 'EA'\n    });\n    setBomDummy([...tmp]);\n  };\n\n  const getSummaryInfo = info => {\n    // selector.data[selector.index][info.key]\n    if (selector.data.length) {\n      var _selector$data$select;\n\n      return (_selector$data$select = selector.data[selector.index][info.key]) !== null && _selector$data$select !== void 0 ? _selector$data$select : '-';\n    } else {\n      return 'test1';\n    }\n  };\n\n  const ModalContents = () => {\n    if (infoModalInit.readonly || row[column.key].length) {\n      return __jsx(React.Fragment, null, __jsx(\"div\", {\n        style: {\n          padding: '3.5px 0px 0px 3.5px',\n          width: '100%'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 9\n        }\n      }, __jsx(UploadButton, {\n        style: {\n          width: '100%',\n          backgroundColor: '#ffffff00'\n        },\n        onClick: () => {\n          setIsOpen(true);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }\n      }, __jsx(\"p\", {\n        style: {\n          color: 'white',\n          textDecoration: 'underline'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }\n      }, infoModalInit.existText))));\n    } else {\n      return __jsx(React.Fragment, null, __jsx(\"div\", {\n        style: {\n          padding: '3.5px 0px 0px 3.5px',\n          width: '100%'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 9\n        }\n      }, __jsx(UploadButton, {\n        onClick: () => {\n          setIsOpen(true);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }\n      }, __jsx(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 13\n        }\n      }, infoModalInit.buttonText))));\n    }\n  };\n\n  return __jsx(SearchModalWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 5\n    }\n  }, ModalContents(), __jsx(Modal, {\n    isOpen: isOpen,\n    style: {\n      content: {\n        top: '50%',\n        left: '50%',\n        right: 'auto',\n        bottom: 'auto',\n        marginRight: '-50%',\n        transform: 'translate(-50%, -50%)',\n        padding: 0\n      },\n      overlay: {\n        background: 'rgba(0,0,0,.6)',\n        zIndex: 5\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    style: {\n      width: 1776,\n      height: 816,\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'space-between'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    style: {\n      height: 776\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    style: {\n      margin: '24px 16px 16px',\n      display: 'flex',\n      justifyContent: 'space-between'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 13\n    }\n  }, __jsx(\"p\", {\n    style: {\n      color: 'black',\n      fontSize: 22,\n      fontWeight: 'bold',\n      margin: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 15\n    }\n  }, infoModalInit.title), __jsx(\"div\", {\n    style: {\n      display: 'flex'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 15\n    }\n  }, __jsx(Button, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 17\n    }\n  }, __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 19\n    }\n  }, \"\\uC5D1\\uC140\\uB85C \\uBC1B\\uAE30\")), __jsx(\"div\", {\n    style: {\n      cursor: 'pointer',\n      marginLeft: 20\n    },\n    onClick: () => {\n      setIsOpen(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 17\n    }\n  }, __jsx(\"img\", {\n    style: {\n      width: 20,\n      height: 20\n    },\n    src: IcX,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 19\n    }\n  })))), SummaryInfoInit[column.summaryType] && SummaryInfoInit[column.summaryType].map((infos, index) => {\n    return __jsx(HeaderTable, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 19\n      }\n    }, infos.map(info => {\n      return __jsx(React.Fragment, null, __jsx(HeaderTableTitle, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 29\n        }\n      }, __jsx(HeaderTableText, {\n        style: {\n          fontWeight: 'bold'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 31\n        }\n      }, info.title)), __jsx(HeaderTableTextInput, {\n        style: {\n          width: info.infoWidth\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 29\n        }\n      }, __jsx(HeaderTableText, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 31\n        }\n      }, getSummaryInfo(info)), info.unit && __jsx(\"div\", {\n        style: {\n          marginRight: 8,\n          fontSize: 15\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 45\n        }\n      }, info.unit)));\n    }));\n  }), __jsx(\"div\", {\n    style: {\n      display: 'flex',\n      justifyContent: 'space-between',\n      padding: '24px 48px 0 16px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 14\n    }\n  }, columnInitData.tableTitleButton && __jsx(Button, {\n    style: {\n      backgroundColor: '#19B9DF',\n      alignSelf: 'space-between'\n    },\n    onClick: () => {\n      let tmp = searchList;\n      setSearchList([...searchList, {\n        seq: searchList.length + 1\n      }]);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 53\n    }\n  }, __jsx(\"p\", {\n    style: {\n      fontWeight: 'bold'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 20\n    }\n  }, columnInitData.tableTitleButton)), __jsx(\"div\", {\n    style: {\n      display: 'flex',\n      width: 1200,\n      marginTop: 8\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 18\n    }\n  }, bomDummy.map((v, i) => {\n    return __jsx(TabBox, {\n      ref: i === 0 ? tabRef : null,\n      style: focusIndex === i ? {\n        opacity: 1\n      } : {},\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 29\n      }\n    }, tabRef.current && tabRef.current.clientWidth < 63 ? focusIndex !== i ? __jsx(React.Fragment, null, __jsx(\"p\", {\n      onClick: () => {\n        setFocusIndex(i);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 32\n      }\n    }, v.code)) : __jsx(React.Fragment, null, __jsx(\"div\", {\n      style: {\n        cursor: 'pointer',\n        marginLeft: 20,\n        width: 20,\n        height: 20\n      },\n      onClick: () => {\n        deleteTab(i);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 30\n      }\n    }, __jsx(\"img\", {\n      style: {\n        width: 20,\n        height: 20\n      },\n      src: IcX,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 32\n      }\n    }))) : __jsx(React.Fragment, null, __jsx(\"p\", {\n      onClick: () => {\n        setFocusIndex(i);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 30\n      }\n    }, v.code), __jsx(\"div\", {\n      style: {\n        cursor: 'pointer',\n        width: 20,\n        height: 20\n      },\n      onClick: () => {\n        deleteTab(i);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 30\n      }\n    }, __jsx(\"img\", {\n      style: {\n        width: 20,\n        height: 20\n      },\n      src: IcX,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 32\n      }\n    }))));\n  })), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 17\n    }\n  }), columnInitData.cellEditButtons && __jsx(\"div\", {\n    style: {\n      display: 'flex',\n      marginBottom: 8\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 51\n    }\n  }, __jsx(Button, {\n    onClick: () => {\n      let tmp = searchList;\n      setSearchList([...searchList, {\n        seq: searchList.length + 1\n      }]);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 21\n    }\n  }, __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 25\n    }\n  }, \"\\uD589 \\uCD94\\uAC00\")), __jsx(Button, {\n    style: {\n      marginLeft: 16\n    },\n    onClick: () => {\n      if (selectRow === 0) {\n        return;\n      }\n\n      let tmpRow = searchList;\n      let tmp = tmpRow[selectRow];\n      tmpRow[selectRow] = tmpRow[selectRow - 1];\n      tmpRow[selectRow - 1] = tmp;\n      setSearchList([...tmpRow.map((v, i) => {\n        return _objectSpread(_objectSpread({}, v), {}, {\n          seq: i + 1\n        });\n      })]);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 21\n    }\n  }, __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 25\n    }\n  }, \"\\uC704\\uB85C\")), __jsx(Button, {\n    style: {\n      marginLeft: 16\n    },\n    onClick: () => {\n      if (selectRow === searchList.length - 1) {\n        return;\n      }\n\n      let tmpRow = searchList;\n      let tmp = tmpRow[selectRow];\n      tmpRow[selectRow] = tmpRow[selectRow + 1];\n      tmpRow[selectRow + 1] = tmp;\n      setSearchList([...tmpRow.map((v, i) => {\n        return _objectSpread(_objectSpread({}, v), {}, {\n          seq: i + 1\n        });\n      })]);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 21\n    }\n  }, __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 25\n    }\n  }, \"\\uC544\\uB798\\uB85C\"))), columnInitData.tableMoveButton && __jsx(Button, {\n    style: {\n      backgroundColor: '#717C90',\n      alignSelf: 'space-between'\n    },\n    onClick: () => {\n      let tmp = searchList;\n      setSearchList([...searchList, {\n        seq: searchList.length + 1\n      }]);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 52\n    }\n  }, __jsx(\"p\", {\n    style: {\n      fontWeight: 'bold'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 22\n    }\n  }, columnInitData.tableMoveButton))), __jsx(\"div\", {\n    style: {\n      padding: '0 16px',\n      width: 1776\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 13\n    }\n  }, __jsx(ExcelTable, {\n    headerList: searchModalList[columnInitData.modalKey],\n    row: searchList !== null && searchList !== void 0 ? searchList : [{}],\n    setRow: e => {\n      let tmp = e.map((v, index) => {\n        if (v.newTab === true) {\n          const newTabIndex = bomDummy.length + 1;\n          addNewTab(newTabIndex);\n          setFocusIndex(newTabIndex - 1);\n        }\n\n        return _objectSpread(_objectSpread({}, v), {}, {\n          newTab: false\n        });\n      });\n      setSearchList([...tmp]);\n    },\n    width: 1746,\n    rowHeight: 32,\n    height: 543 // setSelectRow={(e) => {\n    //   setSelectRow(e)\n    // }}\n    ,\n    setSelectRow: e => {\n      if (!searchList[e].border) {\n        searchList.map((v, i) => {\n          v.border = false;\n        });\n        searchList[e].border = true;\n        setSearchList([...searchList]);\n      }\n\n      setSelectRow(e);\n    },\n    type: 'searchModal',\n    headerAlign: 'center',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 15\n    }\n  }))), __jsx(\"div\", {\n    style: {\n      height: 40,\n      display: 'flex',\n      alignItems: 'flex-end'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 363,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    onClick: () => {\n      setIsOpen(false);\n    },\n    style: {\n      width: 888,\n      height: 40,\n      backgroundColor: '#b3b3b3',\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 364,\n      columnNumber: 13\n    }\n  }, __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 370,\n      columnNumber: 15\n    }\n  }, \"\\uCDE8\\uC18C\")), __jsx(\"div\", {\n    onClick: () => {\n      if (selectRow !== undefined && selectRow !== null) {\n        onRowChange(_objectSpread(_objectSpread(_objectSpread({}, row), searchList[selectRow]), {}, {\n          name: row.name,\n          isChange: true\n        }));\n      }\n\n      setIsOpen(false);\n    },\n    style: {\n      width: 888,\n      height: 40,\n      backgroundColor: POINT_COLOR,\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 372,\n      columnNumber: 13\n    }\n  }, __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 386,\n      columnNumber: 15\n    }\n  }, \"\\uB4F1\\uB85D\\uD558\\uAE30\"))))));\n};\n\nconst SearchModalWrapper = styled.div`\n  display: flex;\n  width: 100%;\n`;\nconst Button = styled.button`\n    width:112px;\n    height:32px;\n    color:white;\n    font-size:15px;\n    border:none;\n    border-radius:6px;\n    background:#717C90;\n    display:flex;\n    justify-content:center;\n    align-items:center;\n    cursor:pointer;\n\n`;\nconst HeaderTable = styled.div`\n  width: 1744px;\n  height: 32px;\n  margin: 0 16px;\n  background-color: #F4F6FA;\n  border: 0.5px solid #B3B3B3;\n  display: flex\n`;\nconst HeaderTableTextInput = styled.div`\n  background-color: #ffffff;\n  padding-left: 8px;\n  height: 27px;\n  border: 0.5px solid #B3B3B3;\n  margin-top:2px;\n  margin-right: 66px;\n  display: flex;\n  align-items: center;\n`;\nconst HeaderTableText = styled.p`\n  margin: 0;\n  font-size: 15px;\n  width: 100%;\n`;\nconst HeaderTableTitle = styled.div`\n  width: 112px;\n  padding: 0 8px;\n  display: flex;\n  align-items: center;\n`;\nconst TabBox = styled.button`\n  max-width: 214.5px;\n  min-width: 40px;\n  height: 32px;\n  background-color: #19B9DF;\n  opacity: 0.5;\n  border: 0;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-right: 4px;\n  cursor: pointer;\n  flex: 1;\n  p {\n    font-size: 15px;\n    width: 168px;\n    text-overflow: ellipsis;\n    color: white;\n    padding-left: 8px;\n    text-align: left;\n    overflow: hidden;\n    white-space: nowrap;\n  }\n`;\nexport { InfoModal };","map":{"version":3,"sources":["/Users/user/Desktop/sizl/mono_pop/packages/shared/src/components/Modal/InfoModal/index.tsx"],"names":["React","useEffect","useRef","useState","styled","Modal","POINT_COLOR","IcX","ExcelTable","searchModalList","UploadButton","useDispatch","useSelector","insert_summary_info","InfoInit","SummaryInfoInit","optionList","InfoModal","column","row","onRowChange","dispatch","tabRef","bomDummy","setBomDummy","code","name","material_type","process","cavity","unit","isOpen","setIsOpen","infoModalInit","setInfoModalInit","title","setTitle","optionIndex","setOptionIndex","keyword","setKeyword","selectRow","setSelectRow","searchList","setSearchList","seq","searchKeyword","setSearchKeyword","focusIndex","setFocusIndex","pageInfo","setPageInfo","page","total","selector","state","infoModal","type","index","data","deleteTab","console","log","length","tmp","splice","addNewTab","push","getSummaryInfo","info","key","ModalContents","readonly","padding","width","backgroundColor","color","textDecoration","existText","buttonText","content","top","left","right","bottom","marginRight","transform","overlay","background","zIndex","height","display","flexDirection","justifyContent","margin","fontSize","fontWeight","cursor","marginLeft","summaryType","map","infos","infoWidth","columnInitData","tableTitleButton","alignSelf","marginTop","v","i","opacity","current","clientWidth","cellEditButtons","marginBottom","tmpRow","tableMoveButton","modalKey","e","newTab","newTabIndex","border","alignItems","undefined","isChange","SearchModalWrapper","div","Button","button","HeaderTable","HeaderTableTextInput","HeaderTableText","p","HeaderTableTitle","TabBox"],"mappings":"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","sourcesContent":["import React, {useEffect, useRef, useState} from 'react'\nimport {IExcelHeaderType} from '../../../common/@types/type'\nimport styled from 'styled-components'\nimport Modal from 'react-modal'\nimport {POINT_COLOR} from '../../../common/configset'\n//@ts-ignore\nimport IcSearchButton from '../../../../public/images/ic_search.png'\n//@ts-ignore\nimport IcX from '../../../../public/images/ic_x.png'\nimport {ExcelTable} from '../../Excel/ExcelTable'\nimport {searchModalList} from '../../../common/modalInit'\n//@ts-ignore\nimport Search_icon from '../../../../public/images/btn_search.png'\nimport {RequestMethod} from '../../../common/RequestFunctions'\nimport {PaginationComponent}from '../../Pagination/PaginationComponent'\nimport Notiflix from 'notiflix'\nimport {UploadButton} from '../../../styles/styledComponents'\nimport {useDispatch, useSelector} from 'react-redux'\nimport {insert_summary_info} from '../../../reducer/infoModal'\nimport {RootState} from '../../../../../main/reducer'\nimport {SearchInit} from '../SearchModalTest/SearchModalInit'\nimport {InfoInit, InfoInitType, SummaryInfoInit} from './InfoModalInit'\n\ninterface IProps {\n  column: IExcelHeaderType\n  row: any\n  onRowChange: (e: any) => void\n}\n\nconst optionList = ['제조번호','제조사명','기계명','','담당자명']\n\nconst InfoModal = ({column, row, onRowChange}: IProps) => {\n  const dispatch = useDispatch()\n  const tabRef = useRef(null)\n\n  const [bomDummy, setBomDummy] = useState<any[]>([\n    {code: 'SU-20210701-1', name: 'SU900-1', material_type: '반제품', process:'프레스', cavity: '1', unit: 'EA'},\n  ])\n\n  const [isOpen, setIsOpen] = useState<boolean>(false)\n  const [infoModalInit, setInfoModalInit] = useState<InfoInitType>()\n  const [title, setTitle] = useState<string>('기계')\n  const [optionIndex, setOptionIndex] = useState<number>(0)\n  const [keyword, setKeyword] = useState<string>('')\n  const [selectRow, setSelectRow] = useState<number>()\n  const [searchList, setSearchList] = useState<any[]>([{seq: 1}])\n  const [searchKeyword, setSearchKeyword] = useState<string>('')\n\n  const [focusIndex, setFocusIndex] = useState<number>(0)\n\n  const [pageInfo, setPageInfo] = useState<{page: number, total: number}>({\n    page: 1,\n    total: 1\n  })\n\n  const selector = useSelector((state:RootState) => state.infoModal)\n\n  useEffect(() => {\n    if(column.type){\n      setInfoModalInit(InfoInit[column.type])\n    }\n  }, [column.type])\n\n  useEffect(() => {\n    if(isOpen){\n      dispatch(insert_summary_info({\n        index: selector.index,\n        data: row\n      }))\n    }\n  }, [row, isOpen])\n\n  const deleteTab = (index: number) => {\n    console.log(bomDummy.length, focusIndex)\n    if(bomDummy.length - 1 === focusIndex){\n      console.log('last')\n      setFocusIndex(focusIndex-1)\n    }\n    if(bomDummy.length === 1) {\n      return setIsOpen(false)\n    }\n\n    let tmp = bomDummy\n    tmp.splice(index, 1)\n    setBomDummy([...tmp])\n  }\n\n\n  const addNewTab = (index: number) => {\n    let tmp = bomDummy\n    tmp.push({code: 'SU-20210701-'+index, name: 'SU900-'+index, material_type: '반제품', process:'프레스', cavity: '1', unit: 'EA'},)\n    setBomDummy([...tmp])\n  }\n\n  const getSummaryInfo = (info) => {\n    // selector.data[selector.index][info.key]\n    if(selector.data.length){\n      return selector.data[selector.index][info.key] ?? '-'\n    } else{\n      return 'test1'\n    }\n  }\n\n  const ModalContents = () => {\n    if(infoModalInit.readonly || row[column.key].length){\n      return <>\n        <div style={{\n          padding: '3.5px 0px 0px 3.5px',\n          width: '100%'\n        }}>\n          <UploadButton style={{width: '100%', backgroundColor: '#ffffff00'}} onClick={() => {\n            setIsOpen(true)\n          }}>\n            <p style={{color: 'white', textDecoration: 'underline'}}>{infoModalInit.existText}</p>\n          </UploadButton>\n        </div>\n      </>\n    }else{\n      return <>\n        <div style={{\n          padding: '3.5px 0px 0px 3.5px',\n          width: '100%'\n        }}>\n          <UploadButton onClick={() => {\n            setIsOpen(true)\n          }}>\n            <p>{infoModalInit.buttonText}</p>\n          </UploadButton>\n        </div>\n      </>\n    }\n  }\n\n  return (\n    <SearchModalWrapper >\n      { ModalContents() }\n      <Modal isOpen={isOpen} style={{\n        content: {\n          top: '50%',\n          left: '50%',\n          right: 'auto',\n          bottom: 'auto',\n          marginRight: '-50%',\n          transform: 'translate(-50%, -50%)',\n          padding: 0\n        },\n        overlay: {\n          background: 'rgba(0,0,0,.6)',\n          zIndex: 5\n        }\n      }}>\n        <div style={{\n          width: 1776,\n          height: 816,\n          display: 'flex',\n          flexDirection: 'column',\n          justifyContent: 'space-between'\n        }}>\n          <div style={{height: 776}}>\n            <div style={{\n              margin: '24px 16px 16px',\n              display: 'flex',\n              justifyContent: 'space-between'\n            }}>\n              <p style={{\n                color: 'black',\n                fontSize: 22,\n                fontWeight: 'bold',\n                margin: 0,\n              }}>{infoModalInit.title}</p>\n              <div style={{display: 'flex'}}>\n                <Button>\n                  <p>엑셀로 받기</p>\n                </Button>\n                <div style={{cursor: 'pointer', marginLeft: 20}} onClick={() => {\n                  setIsOpen(false)\n                }}>\n                  <img style={{width: 20, height: 20}} src={IcX}/>\n                </div>\n              </div>\n            </div>\n            {\n              SummaryInfoInit[column.summaryType] && SummaryInfoInit[column.summaryType].map((infos, index) => {\n                return (\n                  <HeaderTable>\n                    {\n                      infos.map(info => {\n                        return (\n                          <>\n                            <HeaderTableTitle>\n                              <HeaderTableText style={{fontWeight: 'bold'}}>{info.title}</HeaderTableText>\n                            </HeaderTableTitle>\n                            <HeaderTableTextInput style={{width: info.infoWidth}}>\n                              <HeaderTableText>\n                                {getSummaryInfo(info)}\n                              </HeaderTableText>\n                              {info.unit && <div style={{marginRight:8, fontSize: 15}}>{info.unit}</div>}\n                            </HeaderTableTextInput>\n                          </>\n                        )\n                      })\n                    }\n                  </HeaderTable>\n                )\n              })\n            }\n\n             <div style={{display: 'flex', justifyContent: 'space-between', padding: '24px 48px 0 16px'}}>\n               {\n                 columnInitData.tableTitleButton && <Button style={{backgroundColor: '#19B9DF', alignSelf: 'space-between'}} onClick={() => {\n                   let tmp = searchList\n\n                   setSearchList([\n                     ...searchList,\n                     {\n                       seq: searchList.length+1\n                     }\n                   ])\n                 }}>\n                   <p style={{fontWeight: 'bold'}}>{columnInitData.tableTitleButton}</p>\n                 </Button>\n               }\n               {\n                 <div style={{ display: 'flex', width: 1200, marginTop: 8}}>\n                   {bomDummy.map((v, i) => {\n                     return <TabBox ref={i === 0 ? tabRef : null} style={ focusIndex === i ? {opacity: 1} : {}}>\n                       {\n                         tabRef.current && tabRef.current.clientWidth < 63\n                           ? focusIndex !== i\n                           ? <><p onClick={() => {setFocusIndex(i)}}>{v.code}</p></>\n                           : <>\n                             <div style={{cursor: 'pointer', marginLeft: 20, width: 20, height: 20}} onClick={() => {\n                               deleteTab(i)\n                             }}>\n                               <img style={{width: 20, height: 20}} src={IcX}/>\n                             </div>\n                           </>\n                           : <>\n                             <p onClick={() => {setFocusIndex(i)}}>{v.code}</p>\n                             <div style={{cursor: 'pointer', width: 20, height: 20}} onClick={() => {\n                               deleteTab(i)\n                             }}>\n                               <img style={{width: 20, height: 20}} src={IcX}/>\n                             </div>\n                           </>\n                       }\n                     </TabBox>\n                   })}\n                 </div>\n               }\n                <div></div>\n              {\n                columnInitData.cellEditButtons && <div style={{display: 'flex', marginBottom: 8}}>\n                    <Button onClick={() => {\n                      let tmp = searchList\n\n                      setSearchList([\n                        ...searchList,\n                        {\n                          seq: searchList.length + 1\n                        }\n                      ])\n                    }}>\n                        <p>행 추가</p>\n                    </Button>\n                    <Button style={{marginLeft: 16}} onClick={() => {\n                      if (selectRow === 0) {\n                        return\n                      }\n                      let tmpRow = searchList\n\n                      let tmp = tmpRow[selectRow]\n                      tmpRow[selectRow] = tmpRow[selectRow - 1]\n                      tmpRow[selectRow - 1] = tmp\n\n                      setSearchList([...tmpRow.map((v, i) => {\n                        return {\n                          ...v,\n                          seq: i + 1\n                        }\n                      })])\n                    }}>\n                        <p>위로</p>\n                    </Button>\n                    <Button style={{marginLeft: 16}} onClick={() => {\n                      if (selectRow === searchList.length - 1) {\n                        return\n                      }\n                      let tmpRow = searchList\n\n                      let tmp = tmpRow[selectRow]\n                      tmpRow[selectRow] = tmpRow[selectRow + 1]\n                      tmpRow[selectRow + 1] = tmp\n\n                      setSearchList([...tmpRow.map((v, i) => {\n                        return {\n                          ...v,\n                          seq: i + 1\n                        }\n                      })])\n                    }}>\n                        <p>아래로</p>\n                    </Button>\n                </div>\n                }\n               {\n                 columnInitData.tableMoveButton && <Button style={{backgroundColor: '#717C90', alignSelf: 'space-between'}} onClick={() => {\n                   let tmp = searchList\n\n                   setSearchList([\n                     ...searchList,\n                     {\n                       seq: searchList.length+1\n                     }\n                   ])\n                 }}>\n                     <p style={{fontWeight: 'bold'}}>{columnInitData.tableMoveButton}</p>\n                 </Button>\n               }\n              </div>\n            <div style={{padding: '0 16px', width: 1776}}>\n              <ExcelTable\n                headerList={searchModalList[columnInitData.modalKey]}\n                row={searchList ?? [{}]}\n                setRow={\n                  (e) => {\n                    let tmp = e.map((v, index) => {\n                      if(v.newTab === true){\n                        const newTabIndex = bomDummy.length+1\n                        addNewTab(newTabIndex)\n                        setFocusIndex(newTabIndex-1)\n                      }\n\n                      return {\n                        ...v,\n                        newTab: false\n                      }\n                    })\n                    setSearchList([...tmp])\n                  }\n                }\n                width={1746}\n                rowHeight={32}\n                height={543}\n                // setSelectRow={(e) => {\n                //   setSelectRow(e)\n                // }}\n                setSelectRow={(e) => {\n                  if(!searchList[e].border){\n                    searchList.map((v,i)=>{\n                      v.border = false;\n                    })\n                    searchList[e].border = true\n                    setSearchList([...searchList])\n                  }\n                  setSelectRow(e)\n                }}\n                type={'searchModal'}\n                headerAlign={'center'}\n              />\n            </div>\n          </div>\n          <div style={{ height: 40, display: 'flex', alignItems: 'flex-end'}}>\n            <div\n              onClick={() => {\n                setIsOpen(false)\n              }}\n              style={{width: 888, height: 40, backgroundColor: '#b3b3b3', display: 'flex', justifyContent: 'center', alignItems: 'center'}}\n            >\n              <p>취소</p>\n            </div>\n            <div\n              onClick={() => {\n                if(selectRow !== undefined && selectRow !== null){\n                  onRowChange({\n                    ...row,\n                    ...searchList[selectRow],\n                    name: row.name,\n                    isChange: true\n                  })\n                }\n                setIsOpen(false)\n              }}\n              style={{width: 888, height: 40, backgroundColor: POINT_COLOR, display: 'flex', justifyContent: 'center', alignItems: 'center'}}\n            >\n              <p>등록하기</p>\n            </div>\n          </div>\n        </div>\n      </Modal>\n    </SearchModalWrapper>\n  )\n}\n\nconst SearchModalWrapper = styled.div`\n  display: flex;\n  width: 100%;\n`\n\nconst Button = styled.button`\n    width:112px;\n    height:32px;\n    color:white;\n    font-size:15px;\n    border:none;\n    border-radius:6px;\n    background:#717C90;\n    display:flex;\n    justify-content:center;\n    align-items:center;\n    cursor:pointer;\n\n`;\n\nconst HeaderTable = styled.div`\n  width: 1744px;\n  height: 32px;\n  margin: 0 16px;\n  background-color: #F4F6FA;\n  border: 0.5px solid #B3B3B3;\n  display: flex\n`\n\nconst HeaderTableTextInput = styled.div`\n  background-color: #ffffff;\n  padding-left: 8px;\n  height: 27px;\n  border: 0.5px solid #B3B3B3;\n  margin-top:2px;\n  margin-right: 66px;\n  display: flex;\n  align-items: center;\n`\n\nconst HeaderTableText = styled.p`\n  margin: 0;\n  font-size: 15px;\n  width: 100%;\n`\n\nconst HeaderTableTitle = styled.div`\n  width: 112px;\n  padding: 0 8px;\n  display: flex;\n  align-items: center;\n`\n\nconst TabBox = styled.button`\n  max-width: 214.5px;\n  min-width: 40px;\n  height: 32px;\n  background-color: #19B9DF;\n  opacity: 0.5;\n  border: 0;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-right: 4px;\n  cursor: pointer;\n  flex: 1;\n  p {\n    font-size: 15px;\n    width: 168px;\n    text-overflow: ellipsis;\n    color: white;\n    padding-left: 8px;\n    text-align: left;\n    overflow: hidden;\n    white-space: nowrap;\n  }\n`;\n\nexport {InfoModal}\n"]},"metadata":{},"sourceType":"module"}