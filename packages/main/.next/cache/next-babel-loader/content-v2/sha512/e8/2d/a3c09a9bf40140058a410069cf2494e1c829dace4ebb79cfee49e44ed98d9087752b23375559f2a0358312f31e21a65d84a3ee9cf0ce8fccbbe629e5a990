{"ast":null,"code":"var _jsxFileName = \"/Users/user/Desktop/sizl/mono_pop/packages/mes/src/container/Order/MesOrderRegister.tsx\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport { ExcelTable, Header as PageHeader, columnlist, ExcelDownloadModal } from 'shared'; // @ts-ignore\n\nimport { SelectColumn } from 'react-data-grid';\nimport Notiflix from \"notiflix\";\nimport { useRouter } from 'next/router';\nimport moment from 'moment';\n\nconst MesOrderRegister = ({\n  page,\n  keyword,\n  option\n}) => {\n  const router = useRouter();\n  const {\n    0: excelOpen,\n    1: setExcelOpen\n  } = useState(false);\n  const {\n    0: basicRow,\n    1: setBasicRow\n  } = useState([{\n    name: \"\",\n    id: \"\",\n    order_date: moment().format('YYYY-MM-DD'),\n    limit_date: moment().format('YYYY-MM-DD')\n  }]);\n  const {\n    0: column,\n    1: setColumn\n  } = useState(columnlist[\"orderRegister\"]);\n  const {\n    0: selectList,\n    1: setSelectList\n  } = useState(new Set());\n  const {\n    0: pageInfo,\n    1: setPageInfo\n  } = useState({\n    page: 1,\n    total: 1\n  });\n  useEffect(() => {\n    Notiflix.Loading.remove();\n  }, []);\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  }, __jsx(PageHeader, {\n    title: \"수주 정보 등록\",\n    buttons: ['엑셀로 받기', '행추가', '저장하기', '삭제'],\n    buttonsOnclick: () => {} // onClickHeaderButton\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }), __jsx(ExcelTable, {\n    editable: true,\n    resizable: true,\n    headerList: [SelectColumn, ...column],\n    row: basicRow // setRow={setBasicRow}\n    ,\n    setRow: e => {\n      let tmp = selectList;\n      e.map(v => {\n        if (v.isChange) tmp.add(v.id);\n      });\n      setSelectList(tmp);\n      setBasicRow(e);\n    },\n    selectList: selectList //@ts-ignore\n    ,\n    setSelectList: setSelectList,\n    height: basicRow.length * 40 >= 40 * 18 + 56 ? 40 * 19 : basicRow.length * 40 + 56,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }), __jsx(ExcelDownloadModal, {\n    isOpen: excelOpen,\n    column: column,\n    basicRow: basicRow,\n    filename: `금형기본정보`,\n    sheetname: `금형기본정보`,\n    selectList: selectList,\n    tab: 'ROLE_BASE_07',\n    setIsOpen: setExcelOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport const getServerSideProps = ctx => {\n  var _ctx$query$page, _ctx$query$keyword, _ctx$query$opt;\n\n  return {\n    props: {\n      page: (_ctx$query$page = ctx.query.page) !== null && _ctx$query$page !== void 0 ? _ctx$query$page : 1,\n      keyword: (_ctx$query$keyword = ctx.query.keyword) !== null && _ctx$query$keyword !== void 0 ? _ctx$query$keyword : \"\",\n      option: (_ctx$query$opt = ctx.query.opt) !== null && _ctx$query$opt !== void 0 ? _ctx$query$opt : 0\n    }\n  };\n};\nexport { MesOrderRegister };","map":{"version":3,"sources":["/Users/user/Desktop/sizl/mono_pop/packages/mes/src/container/Order/MesOrderRegister.tsx"],"names":["React","useEffect","useState","ExcelTable","Header","PageHeader","columnlist","ExcelDownloadModal","SelectColumn","Notiflix","useRouter","moment","MesOrderRegister","page","keyword","option","router","excelOpen","setExcelOpen","basicRow","setBasicRow","name","id","order_date","format","limit_date","column","setColumn","selectList","setSelectList","Set","pageInfo","setPageInfo","total","Loading","remove","e","tmp","map","v","isChange","add","length","getServerSideProps","ctx","props","query","opt"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SACEC,UADF,EAEEC,MAAM,IAAIC,UAFZ,EAIEC,UAJF,EAUEC,kBAVF,QAYO,QAZP,C,CAaA;;AACA,SAAQC,YAAR,QAA2B,iBAA3B;AACA,OAAOC,QAAP,MAAqB,UAArB;AACA,SAAQC,SAAR,QAAwB,aAAxB;AAGA,OAAOC,MAAP,MAAmB,QAAnB;;AASA,MAAMC,gBAAgB,GAAG,CAAC;AAACC,EAAAA,IAAD;AAAOC,EAAAA,OAAP;AAAgBC,EAAAA;AAAhB,CAAD,KAAqC;AAC5D,QAAMC,MAAM,GAAGN,SAAS,EAAxB;AAEA,QAAM;AAAA,OAACO,SAAD;AAAA,OAAYC;AAAZ,MAA4BhB,QAAQ,CAAU,KAAV,CAA1C;AAEA,QAAM;AAAA,OAACiB,QAAD;AAAA,OAAWC;AAAX,MAA0BlB,QAAQ,CAAa,CAAC;AACpDmB,IAAAA,IAAI,EAAE,EAD8C;AAC1CC,IAAAA,EAAE,EAAE,EADsC;AAClCC,IAAAA,UAAU,EAAEZ,MAAM,GAAGa,MAAT,CAAgB,YAAhB,CADsB;AAEpDC,IAAAA,UAAU,EAAEd,MAAM,GAAGa,MAAT,CAAgB,YAAhB;AAFwC,GAAD,CAAb,CAAxC;AAIA,QAAM;AAAA,OAACE,MAAD;AAAA,OAASC;AAAT,MAAsBzB,QAAQ,CAA2BI,UAAU,CAAC,eAAD,CAArC,CAApC;AACA,QAAM;AAAA,OAACsB,UAAD;AAAA,OAAaC;AAAb,MAA8B3B,QAAQ,CAAc,IAAI4B,GAAJ,EAAd,CAA5C;AAEA,QAAM;AAAA,OAACC,QAAD;AAAA,OAAWC;AAAX,MAA0B9B,QAAQ,CAAgC;AACtEW,IAAAA,IAAI,EAAE,CADgE;AAEtEoB,IAAAA,KAAK,EAAE;AAF+D,GAAhC,CAAxC;AAKAhC,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,QAAQ,CAACyB,OAAT,CAAiBC,MAAjB;AACD,GAFQ,EAEN,EAFM,CAAT;AAIA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,UAAD;AACE,IAAA,KAAK,EAAE,UADT;AAEE,IAAA,OAAO,EACL,CAAC,QAAD,EAAW,KAAX,EAAkB,MAAlB,EAA0B,IAA1B,CAHJ;AAKE,IAAA,cAAc,EACZ,MAAM,CAAE,CADI,CAEZ;AAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAWE,MAAC,UAAD;AACE,IAAA,QAAQ,MADV;AAEE,IAAA,SAAS,MAFX;AAGE,IAAA,UAAU,EAAE,CACV3B,YADU,EAEV,GAAGkB,MAFO,CAHd;AAOE,IAAA,GAAG,EAAEP,QAPP,CAQE;AARF;AASE,IAAA,MAAM,EAAGiB,CAAD,IAAO;AACb,UAAIC,GAAa,GAAGT,UAApB;AACAQ,MAAAA,CAAC,CAACE,GAAF,CAAMC,CAAC,IAAI;AACT,YAAGA,CAAC,CAACC,QAAL,EAAeH,GAAG,CAACI,GAAJ,CAAQF,CAAC,CAACjB,EAAV;AAChB,OAFD;AAGAO,MAAAA,aAAa,CAACQ,GAAD,CAAb;AACAjB,MAAAA,WAAW,CAACgB,CAAD,CAAX;AACD,KAhBH;AAiBE,IAAA,UAAU,EAAER,UAjBd,CAkBE;AAlBF;AAmBE,IAAA,aAAa,EAAEC,aAnBjB;AAoBE,IAAA,MAAM,EAAEV,QAAQ,CAACuB,MAAT,GAAkB,EAAlB,IAAwB,KAAG,EAAH,GAAM,EAA9B,GAAmC,KAAG,EAAtC,GAA2CvB,QAAQ,CAACuB,MAAT,GAAkB,EAAlB,GAAuB,EApB5E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXF,EA4CE,MAAC,kBAAD;AACE,IAAA,MAAM,EAAEzB,SADV;AAEE,IAAA,MAAM,EAAES,MAFV;AAGE,IAAA,QAAQ,EAAEP,QAHZ;AAIE,IAAA,QAAQ,EAAG,QAJb;AAKE,IAAA,SAAS,EAAG,QALd;AAME,IAAA,UAAU,EAAES,UANd;AAOE,IAAA,GAAG,EAAE,cAPP;AAQE,IAAA,SAAS,EAAEV,YARb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA5CF,CADF;AAyDD,CA9ED;;AAgFA,OAAO,MAAMyB,kBAAkB,GAAIC,GAAD,IAA0B;AAAA;;AAC1D,SAAO;AACLC,IAAAA,KAAK,EAAE;AACLhC,MAAAA,IAAI,qBAAE+B,GAAG,CAACE,KAAJ,CAAUjC,IAAZ,6DAAoB,CADnB;AAELC,MAAAA,OAAO,wBAAE8B,GAAG,CAACE,KAAJ,CAAUhC,OAAZ,mEAAuB,EAFzB;AAGLC,MAAAA,MAAM,oBAAE6B,GAAG,CAACE,KAAJ,CAAUC,GAAZ,2DAAmB;AAHpB;AADF,GAAP;AAOD,CARM;AAUP,SAAQnC,gBAAR","sourcesContent":["import React, {useEffect, useState} from 'react'\nimport {\n  ExcelTable,\n  Header as PageHeader,\n  RequestMethod,\n  columnlist,\n  MAX_VALUE,\n  DropDownEditor,\n  TextEditor,\n  excelDownload,\n  PaginationComponent,\n  ExcelDownloadModal,\n  IExcelHeaderType, IItemMenuType\n} from 'shared'\n// @ts-ignore\nimport {SelectColumn} from 'react-data-grid'\nimport Notiflix from \"notiflix\";\nimport {useRouter} from 'next/router'\nimport {loadAll} from 'react-cookies'\nimport {NextPageContext} from 'next'\nimport moment from 'moment'\n\ninterface IProps {\n  children?: any\n  page?: number\n  keyword?: string\n  option?: number\n}\n\nconst MesOrderRegister = ({page, keyword, option}: IProps) => {\n  const router = useRouter()\n\n  const [excelOpen, setExcelOpen] = useState<boolean>(false)\n\n  const [basicRow, setBasicRow] = useState<Array<any>>([{\n    name: \"\", id: \"\", order_date: moment().format('YYYY-MM-DD'),\n    limit_date: moment().format('YYYY-MM-DD')\n  }])\n  const [column, setColumn] = useState<Array<IExcelHeaderType>>( columnlist[\"orderRegister\"])\n  const [selectList, setSelectList] = useState<Set<number>>(new Set())\n\n  const [pageInfo, setPageInfo] = useState<{page: number, total: number}>({\n    page: 1,\n    total: 1\n  })\n\n  useEffect(() => {\n    Notiflix.Loading.remove()\n  }, [])\n\n  return (\n    <div>\n      <PageHeader\n        title={\"수주 정보 등록\"}\n        buttons={\n          ['엑셀로 받기', '행추가', '저장하기', '삭제']\n        }\n        buttonsOnclick={\n          () => {}\n          // onClickHeaderButton\n        }\n      />\n      <ExcelTable\n        editable\n        resizable\n        headerList={[\n          SelectColumn,\n          ...column\n        ]}\n        row={basicRow}\n        // setRow={setBasicRow}\n        setRow={(e) => {\n          let tmp: Set<any> = selectList\n          e.map(v => {\n            if(v.isChange) tmp.add(v.id)\n          })\n          setSelectList(tmp)\n          setBasicRow(e)\n        }}\n        selectList={selectList}\n        //@ts-ignore\n        setSelectList={setSelectList}\n        height={basicRow.length * 40 >= 40*18+56 ? 40*19 : basicRow.length * 40 + 56}\n      />\n      {/*<PaginationComponent*/}\n      {/*  currentPage={pageInfo.page}*/}\n      {/*  totalPage={pageInfo.total}*/}\n      {/*  setPage={(page) => {*/}\n      {/*    if(keyword){*/}\n      {/*      router.push(`/mes/basic/mold?page=${page}&keyword=${keyword}&opt=${option}`)*/}\n      {/*    }else{*/}\n      {/*      router.push(`/mes/basic/mold?page=${page}`)*/}\n      {/*    }*/}\n      {/*  }}*/}\n      {/*/>*/}\n      <ExcelDownloadModal\n        isOpen={excelOpen}\n        column={column}\n        basicRow={basicRow}\n        filename={`금형기본정보`}\n        sheetname={`금형기본정보`}\n        selectList={selectList}\n        tab={'ROLE_BASE_07'}\n        setIsOpen={setExcelOpen}\n      />\n    </div>\n  );\n}\n\nexport const getServerSideProps = (ctx: NextPageContext) => {\n  return {\n    props: {\n      page: ctx.query.page ?? 1,\n      keyword: ctx.query.keyword ?? \"\",\n      option: ctx.query.opt ?? 0,\n    }\n  }\n}\n\nexport {MesOrderRegister};\n"]},"metadata":{},"sourceType":"module"}