{"ast":null,"code":"import _toConsumableArray from \"/Users/user/Desktop/sizl/mono_pop/node_modules/next/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\n\nvar _jsxFileName = \"/Users/user/Desktop/sizl/mono_pop/packages/mes/src/container/Operation/MesOperationList.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport { ExcelTable, Header as PageHeader, columnlist } from 'shared'; // @ts-ignore\n\nimport { SelectColumn } from 'react-data-grid';\nimport Notiflix from \"notiflix\";\nimport { useRouter } from 'next/router';\nimport moment from 'moment';\nvar now = moment().format('YYYY-MM-DD');\n\nvar MesOperationList = function MesOperationList(_ref) {\n  _s();\n\n  var page = _ref.page,\n      keyword = _ref.keyword,\n      option = _ref.option;\n  var router = useRouter();\n\n  var _useState = useState(false),\n      excelOpen = _useState[0],\n      setExcelOpen = _useState[1];\n\n  var _useState2 = useState([{\n    status: '시작전',\n    order_num: '-',\n    operation_num: '20210401-01',\n    start_date: now,\n    limit_date: now,\n    customer: '진주상사',\n    model: '한국차',\n    code: 'SU-20210701-1',\n    name: 'SU900',\n    type: '완제품',\n    unit: 'EA',\n    process: '코팅',\n    goal: '50',\n    total: '0',\n    totalCurrent: '0',\n    totalBad: '0'\n  }, {\n    status: '시작전',\n    order_num: '-',\n    operation_num: '20210401-02',\n    start_date: now,\n    limit_date: now,\n    customer: '-',\n    model: '-',\n    code: 'SU-20210701-2',\n    name: 'SU900-2',\n    type: '반제품',\n    unit: 'EA',\n    process: '세척',\n    goal: '50',\n    total: '0',\n    totalCurrent: '0',\n    totalBad: '0'\n  }, {\n    status: '시작전',\n    order_num: '-',\n    operation_num: '20210401-03',\n    start_date: now,\n    limit_date: now,\n    customer: '-',\n    model: '-',\n    code: 'SU-20210701-3',\n    name: 'SU900',\n    type: '반제품',\n    unit: 'EA',\n    process: '프레스',\n    goal: '50',\n    total: '0',\n    totalCurrent: '0',\n    totalBad: '0'\n  }]),\n      basicRow = _useState2[0],\n      setBasicRow = _useState2[1];\n\n  var _useState3 = useState(columnlist[\"operationListV2\"]),\n      column = _useState3[0],\n      setColumn = _useState3[1];\n\n  var _useState4 = useState(new Set()),\n      selectList = _useState4[0],\n      setSelectList = _useState4[1];\n\n  var _useState5 = useState(['지시 고유 번호', '고객사명', '모델', 'CODE', '품명']),\n      optionList = _useState5[0],\n      setOptionList = _useState5[1];\n\n  var _useState6 = useState(0),\n      optionIndex = _useState6[0],\n      setOptionIndex = _useState6[1];\n\n  var _useState7 = useState({\n    from: moment(new Date()).startOf(\"month\").format('YYYY-MM-DD'),\n    to: moment(new Date()).endOf(\"month\").format('YYYY-MM-DD')\n  }),\n      selectDate = _useState7[0],\n      _setSelectDate = _useState7[1];\n\n  var _useState8 = useState({\n    page: 1,\n    total: 1\n  }),\n      pageInfo = _useState8[0],\n      setPageInfo = _useState8[1];\n\n  useEffect(function () {\n    Notiflix.Loading.remove();\n  }, []);\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }\n  }, __jsx(PageHeader, {\n    isSearch: true,\n    isCalendar: true,\n    searchKeyword: \"\",\n    searchOptionList: optionList,\n    calendarTitle: '종료일',\n    calendarType: 'period',\n    selectDate: selectDate //@ts-ignore\n    ,\n    setSelectDate: function setSelectDate(date) {\n      return _setSelectDate(date);\n    },\n    title: \"작업지시서 리스트\",\n    buttons: ['엑셀로 받기', '수정하기'],\n    buttonsOnclick: function buttonsOnclick() {} // onClickHeaderButton\n    ,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }), __jsx(ExcelTable, {\n    editable: true,\n    resizable: true,\n    headerList: [SelectColumn].concat(_toConsumableArray(column)),\n    row: basicRow // setRow={setBasicRow}\n    ,\n    setRow: function setRow(e) {\n      var tmp = selectList;\n      e.map(function (v) {\n        if (v.isChange) tmp.add(v.id);\n      });\n      setSelectList(tmp);\n      setBasicRow(e);\n    },\n    selectList: selectList //@ts-ignore\n    ,\n    setSelectList: setSelectList,\n    height: basicRow.length * 40 >= 40 * 18 + 56 ? 40 * 19 : basicRow.length * 40 + 56,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  }));\n};\n\n_s(MesOperationList, \"u6ro8jJLat8bhRHzcdBlmQSJe0I=\", false, function () {\n  return [useRouter];\n});\n\n_c = MesOperationList;\nexport var getServerSideProps = function getServerSideProps(ctx) {\n  var _ctx$query$page, _ctx$query$keyword, _ctx$query$opt;\n\n  return {\n    props: {\n      page: (_ctx$query$page = ctx.query.page) !== null && _ctx$query$page !== void 0 ? _ctx$query$page : 1,\n      keyword: (_ctx$query$keyword = ctx.query.keyword) !== null && _ctx$query$keyword !== void 0 ? _ctx$query$keyword : \"\",\n      option: (_ctx$query$opt = ctx.query.opt) !== null && _ctx$query$opt !== void 0 ? _ctx$query$opt : 0\n    }\n  };\n};\nexport { MesOperationList };\n\nvar _c;\n\n$RefreshReg$(_c, \"MesOperationList\");","map":{"version":3,"sources":["/Users/user/Desktop/sizl/mono_pop/packages/mes/src/container/Operation/MesOperationList.tsx"],"names":["React","useEffect","useState","ExcelTable","Header","PageHeader","columnlist","SelectColumn","Notiflix","useRouter","moment","now","format","MesOperationList","page","keyword","option","router","excelOpen","setExcelOpen","status","order_num","operation_num","start_date","limit_date","customer","model","code","name","type","unit","process","goal","total","totalCurrent","totalBad","basicRow","setBasicRow","column","setColumn","Set","selectList","setSelectList","optionList","setOptionList","optionIndex","setOptionIndex","from","Date","startOf","to","endOf","selectDate","setSelectDate","pageInfo","setPageInfo","Loading","remove","date","e","tmp","map","v","isChange","add","id","length","getServerSideProps","ctx","props","query","opt"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react'\nimport {\n  ExcelTable,\n  Header as PageHeader,\n  RequestMethod,\n  columnlist,\n  MAX_VALUE,\n  DropDownEditor,\n  TextEditor,\n  excelDownload,\n  PaginationComponent,\n  ExcelDownloadModal,\n  IExcelHeaderType, IItemMenuType\n} from 'shared'\n// @ts-ignore\nimport {SelectColumn} from 'react-data-grid'\nimport Notiflix from \"notiflix\";\nimport {useRouter} from 'next/router'\nimport {loadAll} from 'react-cookies'\nimport {NextPageContext} from 'next'\nimport moment from 'moment'\n\ninterface IProps {\n  children?: any\n  page?: number\n  keyword?: string\n  option?: number\n}\n\nlet now = moment().format('YYYY-MM-DD')\n\nconst MesOperationList = ({page, keyword, option}: IProps) => {\n  const router = useRouter()\n\n  const [excelOpen, setExcelOpen] = useState<boolean>(false)\n\n  const [basicRow, setBasicRow] = useState<Array<any>>([{\n    status: '시작전', order_num: '-', operation_num: '20210401-01',\n    start_date: now, limit_date: now, customer: '진주상사', model: '한국차',\n    code: 'SU-20210701-1', name: 'SU900', type: '완제품', unit: 'EA', process: '코팅',\n    goal: '50', total: '0', totalCurrent: '0', totalBad: '0',\n  },{\n    status: '시작전', order_num: '-', operation_num: '20210401-02',\n    start_date: now, limit_date: now, customer: '-', model: '-',\n    code: 'SU-20210701-2', name: 'SU900-2', type: '반제품', unit: 'EA', process: '세척',\n    goal: '50', total: '0', totalCurrent: '0', totalBad: '0',\n  },{\n    status: '시작전', order_num: '-', operation_num: '20210401-03',\n    start_date: now, limit_date: now, customer: '-', model: '-',\n    code: 'SU-20210701-3', name: 'SU900', type: '반제품', unit: 'EA', process: '프레스',\n    goal: '50', total: '0', totalCurrent: '0', totalBad: '0',\n  },])\n  const [column, setColumn] = useState<Array<IExcelHeaderType>>( columnlist[\"operationListV2\"])\n  const [selectList, setSelectList] = useState<Set<number>>(new Set())\n  const [optionList, setOptionList] = useState<string[]>(['지시 고유 번호', '고객사명', '모델', 'CODE', '품명'])\n  const [optionIndex, setOptionIndex] = useState<number>(0)\n  const [selectDate, setSelectDate] = useState<{from:string, to:string}>({\n    from: moment(new Date()).startOf(\"month\").format('YYYY-MM-DD') ,\n    to:  moment(new Date()).endOf(\"month\").format('YYYY-MM-DD')\n  });\n\n  const [pageInfo, setPageInfo] = useState<{page: number, total: number}>({\n    page: 1,\n    total: 1\n  })\n\n  useEffect(() => {\n    Notiflix.Loading.remove()\n  }, [])\n\n  return (\n    <div>\n      <PageHeader\n        isSearch\n        isCalendar\n        searchKeyword={\"\"}\n        searchOptionList={optionList}\n        calendarTitle={'종료일'}\n        calendarType={'period'}\n        selectDate={selectDate}\n        //@ts-ignore\n        setSelectDate={(date) => setSelectDate(date)}\n        title={\"작업지시서 리스트\"}\n        buttons={\n          ['엑셀로 받기', '수정하기']\n        }\n        buttonsOnclick={\n          () => {}\n          // onClickHeaderButton\n        }\n      />\n      <ExcelTable\n        editable\n        resizable\n        headerList={[\n          SelectColumn,\n          ...column\n        ]}\n        row={basicRow}\n        // setRow={setBasicRow}\n        setRow={(e) => {\n          let tmp: Set<any> = selectList\n          e.map(v => {\n            if(v.isChange) tmp.add(v.id)\n          })\n          setSelectList(tmp)\n          setBasicRow(e)\n        }}\n        selectList={selectList}\n        //@ts-ignore\n        setSelectList={setSelectList}\n        height={basicRow.length * 40 >= 40*18+56 ? 40*19 : basicRow.length * 40 + 56}\n      />\n    </div>\n  );\n}\n\nexport const getServerSideProps = (ctx: NextPageContext) => {\n  return {\n    props: {\n      page: ctx.query.page ?? 1,\n      keyword: ctx.query.keyword ?? \"\",\n      option: ctx.query.opt ?? 0,\n    }\n  }\n}\n\nexport {MesOperationList};\n"]},"metadata":{},"sourceType":"module"}