{"ast":null,"code":"var _jsxFileName = \"/Users/user/Desktop/sizl/mono_pop/packages/main/pages/mes/item/manage/[type].tsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect, useState } from 'react';\nimport ExcelTable from '../../../../component/Excel/ExcelTable';\nimport MenuNavigation from '../../../../component/MenuNav/MenuNavigation';\nimport ProfileHeader from '../../../../component/Profile/ProfileHeader';\nimport PageHeader from '../../../../component/Header/Header'; // @ts-ignore\n\nimport { SelectColumn } from 'react-data-grid';\nimport { RequestMethod } from '../../../../common/RequestFunctions';\nimport { columnlist } from '../../../../common/columnInit';\nimport { HeaderButton } from '../../../../styles/styledComponents';\nimport ItemManageBox from '../../../../component/ItemManage/ItemManageBox'; //@ts-ignore\n\nimport Notiflix from \"notiflix\";\nexport const getServerSideProps = async ctx => {\n  const changeTitle = type => {\n    switch (type) {\n      case 'member':\n        return {\n          title: '유저 관리',\n          code: 'ROLE_HR_01'\n        };\n\n      case 'customer':\n        return {\n          title: '고객사 정보 관리',\n          code: 'ROLE_BASE_01'\n        };\n\n      case 'process':\n        return {\n          title: '공정 관리',\n          code: 'ROLE_BASE_02'\n        };\n\n      case 'machine':\n        return {\n          title: '기계 기본정보',\n          code: 'ROLE_BASE_04'\n        };\n\n      case 'product':\n        return {\n          title: '제품 등록 관리',\n          code: 'ROLE_BASE_05'\n        };\n\n      case 'rawmaterial':\n        return {\n          title: '원자재 기본정보',\n          code: 'ROLE_BASE_06'\n        };\n\n      case 'mold':\n        return {\n          title: '금형 기본정보',\n          code: 'ROLE_BASE_07'\n        };\n\n      case 'model':\n        return {\n          title: \"고객사 모델정보\",\n          code: 'ROLE_BASE_08'\n        };\n\n      case 'rawin':\n        return {\n          title: \"원자재 입고 관리\",\n          code: 'ROLE_RMAT_01'\n        };\n\n      case 'rawstock':\n        return {\n          title: \"원자재 재고 관리\",\n          code: 'ROLE_RMAT_02'\n        };\n\n      case 'operation':\n        return {\n          title: \"작업지시서 리스트\",\n          code: \"ROLE_PROD_02\"\n        };\n\n      case 'delivery':\n        return {\n          title: \"납품 관리\",\n          code: \"ROLE_SHPT_01\"\n        };\n\n      case 'stock':\n        return {\n          title: \"재고현황\",\n          code: \"ROLE_STK_01\"\n        };\n    }\n  };\n\n  const tempObject = changeTitle(ctx.query.type);\n  return {\n    props: {\n      title: tempObject ? tempObject.title : \"\",\n      code: tempObject ? tempObject.code : \"\",\n      type: ctx.query.type\n    }\n  };\n};\nlet unitData = [{\n  unit_id: '0',\n  name: \"개별관리\"\n}, {\n  unit_id: '1',\n  name: \"통일\"\n}, {\n  unit_id: '2',\n  name: \"없음\"\n}];\n\nconst ItemManagePage = ({\n  title,\n  type,\n  code\n}) => {\n  const {\n    0: baseItem,\n    1: setBaseItem\n  } = useState([]);\n  const {\n    0: addiItem,\n    1: setAddiItem\n  } = useState([]);\n  const {\n    0: selectList,\n    1: setSelectList\n  } = useState(new Set());\n\n  const listItem = async code => {\n    const res = await RequestMethod('get', 'itemList', {\n      path: {\n        tab: code\n      }\n    });\n\n    if (res && res.status === 200) {\n      const results = res.results;\n      let baseList = results.bases;\n      let addiList = results.additional;\n      setBaseItem(baseList);\n      setAddiItem(addiList.map((v, i) => {\n        const random_id = Math.random() * 1000;\n        return _objectSpread(_objectSpread({}, v), {}, {\n          unit: unitData[v.unit_id].name,\n          unit_id: unitData[v.unit_id].unit_id,\n          unitPK: unitData[v.unit_id].unit_id,\n          id: random_id\n        });\n      }));\n    }\n  };\n\n  const saveItem = async (code, items, type) => {\n    const res = await RequestMethod('post', 'itemSave', {\n      tab: code,\n      menus: type ? items.map(v => {\n        if (v.title) {\n          return _objectSpread(_objectSpread({}, v), {}, {\n            unit: v['unitPK']\n          });\n        }\n      }).filter(v => v) : items\n    });\n\n    if (res && res.status === 200) {\n      listItem(code);\n      Notiflix.Notify.success(\"저장되었습니다.\");\n    }\n  };\n\n  const deleteItem = async (code, items) => {\n    let idList = [];\n    const spliceArray = [];\n    items.map((v, i) => {\n      if (selectList.has(v.id)) {\n        spliceArray.push(i);\n        idList.push(v.mi_id);\n      }\n    });\n    idList = idList.filter(value => value);\n    const tmpPauseBasicRow = [...items];\n    spliceArray.reverse();\n    spliceArray.map((value, index) => {\n      tmpPauseBasicRow.splice(value, 1);\n    });\n\n    if (idList.length > 0) {\n      const res = await RequestMethod('delete', 'itemDelete', {\n        tab: code,\n        menus: idList\n      });\n\n      if (res && res.status) {\n        Notiflix.Report.success(\"삭제되었습니다.\", \"\", \"확인\");\n      }\n    } else {\n      Notiflix.Report.success(\"삭제되었습니다.\", \"\", \"확인\");\n    }\n\n    setAddiItem([...tmpPauseBasicRow]); // type ? items.map(v => {\n    //   if(selectList.has(v.id as number)) {\n    //     return v.mi_id\n    //   }\n    // }).filter(v => v) : type\n  };\n\n  useEffect(() => {\n    listItem(code);\n  }, []);\n  return __jsx(\"div\", {\n    style: {\n      display: 'flex',\n      height: 1500\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 5\n    }\n  }, __jsx(MenuNavigation, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 7\n    }\n  }), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 7\n    }\n  }, __jsx(ProfileHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 9\n    }\n  }), __jsx(PageHeader, {\n    title: `${title} 항목관리`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 9\n    }\n  }), __jsx(\"div\", {\n    style: {\n      width: 1570\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    style: {\n      marginBottom: 16,\n      display: 'flex',\n      justifyContent: 'flex-end'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 11\n    }\n  }, __jsx(HeaderButton, {\n    onClick: () => saveItem(code, baseItem),\n    key: `btnCreate`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 13\n    }\n  }, \"\\uC800\\uC7A5\")), __jsx(ItemManageBox, {\n    title: title,\n    items: baseItem,\n    setItems: setBaseItem,\n    type: 'base',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 11\n    }\n  }), __jsx(ExcelTable, {\n    headerList: columnlist.baseItem,\n    row: baseItem,\n    height: 240,\n    setRow: setBaseItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 11\n    }\n  }), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 11\n    }\n  }), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 16\n    }\n  }), code !== \"ROLE_STK_01\" && __jsx(React.Fragment, null, __jsx(\"div\", {\n    style: {\n      marginBottom: 16,\n      display: 'flex',\n      justifyContent: 'flex-end'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 17\n    }\n  }, __jsx(HeaderButton, {\n    onClick: () => saveItem(code, addiItem, 'additional'),\n    key: `btnCreate`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 19\n    }\n  }, \"\\uCD94\\uAC00\\uD56D\\uBAA9 \\uC800\\uC7A5\"), __jsx(HeaderButton, {\n    onClick: () => {\n      const random_id = Math.random() * 1000;\n      setAddiItem([...addiItem, {\n        id: `item_${random_id}`\n      }]);\n    },\n    key: `btnCreate`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 19\n    }\n  }, \"\\uD589 \\uCD94\\uAC00\"), __jsx(HeaderButton, {\n    onClick: () => deleteItem(code, addiItem),\n    key: `btnCreate`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 19\n    }\n  }, \"\\uC0AD\\uC81C\")), __jsx(ItemManageBox, {\n    title: title,\n    items: addiItem,\n    setItems: setAddiItem,\n    type: 'additional',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 17\n    }\n  }), __jsx(ExcelTable, {\n    headerList: [SelectColumn, ...columnlist.additionalItem],\n    row: addiItem,\n    height: 240,\n    setRow: setAddiItem,\n    selectList: selectList,\n    setSelectList: setSelectList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 17\n    }\n  })))));\n};\n\nexport default ItemManagePage;","map":{"version":3,"sources":["/Users/user/Desktop/sizl/mono_pop/packages/main/pages/mes/item/manage/[type].tsx"],"names":["React","useEffect","useState","ExcelTable","MenuNavigation","ProfileHeader","PageHeader","SelectColumn","RequestMethod","columnlist","HeaderButton","ItemManageBox","Notiflix","getServerSideProps","ctx","changeTitle","type","title","code","tempObject","query","props","unitData","unit_id","name","ItemManagePage","baseItem","setBaseItem","addiItem","setAddiItem","selectList","setSelectList","Set","listItem","res","path","tab","status","results","baseList","bases","addiList","additional","map","v","i","random_id","Math","random","unit","unitPK","id","saveItem","items","menus","filter","Notify","success","deleteItem","idList","spliceArray","has","push","mi_id","value","tmpPauseBasicRow","reverse","index","splice","length","Report","display","height","width","marginBottom","justifyContent","additionalItem"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react'\nimport ExcelTable from '../../../../component/Excel/ExcelTable'\nimport MenuNavigation from '../../../../component/MenuNav/MenuNavigation'\nimport ProfileHeader from '../../../../component/Profile/ProfileHeader'\nimport PageHeader from '../../../../component/Header/Header'\n// @ts-ignore\nimport {SelectColumn} from 'react-data-grid'\nimport {IExcelHeaderType, IItemMenuType} from '../../../../common/@types/type'\nimport {RequestMethod} from '../../../../common/RequestFunctions'\nimport {columnlist} from '../../../../common/columnInit'\nimport {HeaderButton, ItemListTableHeader, ItemListTableWrapper, ItemWrapper} from '../../../../styles/styledComponents'\nimport ItemManageBox from '../../../../component/ItemManage/ItemManageBox'\n//@ts-ignore\nimport Notiflix from \"notiflix\";\nimport {useSelector} from \"react-redux\";\nimport {RootState} from \"../../../../reducer\";\n\ninterface IProps {\n  children?: any\n  title: string\n  user: any\n  type: string\n  code: string\n  row?: Array<any>\n  column?: IExcelHeaderType[]\n}\n\nexport const getServerSideProps = async (ctx: any) => {\n\n  const changeTitle = (type: string) => {\n    switch(type) {\n      case 'member':\n        return {\n          title: '유저 관리',\n          code: 'ROLE_HR_01'\n        }\n      case 'customer':\n        return {\n          title: '고객사 정보 관리',\n          code: 'ROLE_BASE_01'\n        }\n      case 'process':\n        return {\n          title: '공정 관리',\n          code: 'ROLE_BASE_02'\n        }\n      case 'machine':\n        return {\n          title: '기계 기본정보',\n          code: 'ROLE_BASE_04'\n        }\n      case 'product':\n        return {\n          title: '제품 등록 관리',\n          code: 'ROLE_BASE_05'\n        }\n      case 'rawmaterial':\n        return {\n          title: '원자재 기본정보',\n          code: 'ROLE_BASE_06'\n        }\n      case 'mold':\n        return {\n          title: '금형 기본정보',\n          code: 'ROLE_BASE_07'\n        }\n      case 'model':\n        return {\n          title: \"고객사 모델정보\",\n          code: 'ROLE_BASE_08'\n        }\n      case 'rawin':\n        return {\n          title: \"원자재 입고 관리\",\n          code: 'ROLE_RMAT_01'\n        }\n      case 'rawstock':\n        return {\n          title: \"원자재 재고 관리\",\n          code: 'ROLE_RMAT_02'\n        }\n      case 'operation' :\n        return {\n          title: \"작업지시서 리스트\",\n          code: \"ROLE_PROD_02\"\n        }\n      case 'delivery' :\n        return {\n          title: \"납품 관리\",\n          code: \"ROLE_SHPT_01\"\n        }\n      case 'stock' :\n        return {\n          title:\"재고현황\",\n          code:\"ROLE_STK_01\"\n        }\n\n    }\n  }\n\n  const tempObject = changeTitle(ctx.query.type)\n\n  return {\n    props: {\n      title: tempObject ? tempObject.title : \"\",\n      code: tempObject ? tempObject.code : \"\",\n      type: ctx.query.type\n    }\n  }\n}\n\nlet unitData = [\n  {unit_id: '0', name: \"개별관리\"},\n  {unit_id: '1', name: \"통일\"},\n  {unit_id: '2', name: \"없음\"},\n]\n\nconst ItemManagePage = ({title, type, code}: IProps) => {\n  const [baseItem, setBaseItem] = useState<IItemMenuType[]>([])\n  const [addiItem, setAddiItem] = useState<IItemMenuType[]>([])\n  const [selectList, setSelectList] = useState<ReadonlySet<number>>(new Set())\n\n\n\n  const listItem = async (code: string) => {\n    const res =  await RequestMethod('get', 'itemList', {\n      path: {\n        tab: code\n      }\n    })\n\n    if(res && res.status === 200){\n      const results = res.results\n\n      let baseList = results.bases\n      let addiList = results.additional\n\n      setBaseItem(baseList)\n      setAddiItem(addiList.map((v: any, i: number) => {\n        const random_id = Math.random() * 1000\n\n        return {\n          ...v,\n          unit: unitData[v.unit_id].name,\n          unit_id: unitData[v.unit_id].unit_id,\n          unitPK: unitData[v.unit_id].unit_id,\n          id: random_id\n        }\n      }))\n    }\n  }\n\n  const saveItem = async (code: string, items: IItemMenuType[], type?: 'additional') => {\n    const res =  await RequestMethod('post', 'itemSave', {\n      tab: code,\n      menus: type ? items.map(v => {\n        if(v.title){\n          return {\n            ...v,\n            unit: v['unitPK'],\n          }\n        }\n      }).filter(v => v) : items\n    })\n\n    if(res && res.status === 200) {\n      listItem(code)\n      Notiflix.Notify.success(\"저장되었습니다.\")\n    }\n  }\n\n  const deleteItem = async (code: string, items: IItemMenuType[]) => {\n    let idList:number[] = [];\n    const spliceArray:number[] = [];\n\n    items.map((v,i)=> {\n      if(selectList.has(v.id as number)){\n        spliceArray.push(i);\n        idList.push(v.mi_id)\n      }\n    })\n\n    idList = idList.filter(value => value);\n\n    const tmpPauseBasicRow = [...items];\n    spliceArray.reverse();\n    spliceArray.map((value, index)=>{\n      tmpPauseBasicRow.splice(value, 1);\n    })\n\n    if(idList.length > 0) {\n      const res = await RequestMethod('delete', 'itemDelete', {\n        tab: code,\n        menus: idList\n      })\n\n      if (res && res.status) {\n        Notiflix.Report.success(\"삭제되었습니다.\", \"\", \"확인\");\n      }\n\n    }else{\n      Notiflix.Report.success(\"삭제되었습니다.\", \"\", \"확인\");\n    }\n\n    setAddiItem([...tmpPauseBasicRow]);\n\n    // type ? items.map(v => {\n    //   if(selectList.has(v.id as number)) {\n    //     return v.mi_id\n    //   }\n    // }).filter(v => v) : type\n\n\n  }\n\n  useEffect(() => {\n    listItem(code)\n  }, [])\n\n  return (\n    <div style={{display: 'flex', height: 1500}}>\n      <MenuNavigation/>\n      <div>\n        <ProfileHeader/>\n        <PageHeader\n          title={`${title} 항목관리`}\n        />\n        <div style={{width: 1570}}>\n          <div style={{marginBottom: 16, display: 'flex', justifyContent: 'flex-end'}}>\n            <HeaderButton onClick={() => saveItem(code, baseItem)} key={`btnCreate`}>저장</HeaderButton>\n          </div>\n          <ItemManageBox title={title} items={baseItem} setItems={setBaseItem} type={'base'}/>\n          <ExcelTable\n            headerList={columnlist.baseItem}\n            row={baseItem}\n            height={240}\n            setRow={setBaseItem}\n          />\n          <br/><br/>\n          {code !== \"ROLE_STK_01\" &&\n              <>\n                <div style={{marginBottom: 16, display: 'flex', justifyContent: 'flex-end'}}>\n                  <HeaderButton onClick={() => saveItem(code, addiItem, 'additional')} key={`btnCreate`}>추가항목 저장</HeaderButton>\n                  <HeaderButton onClick={() => {\n                    const random_id = Math.random() * 1000\n                    setAddiItem([...addiItem, {id: `item_${random_id}`}])\n                  }} key={`btnCreate`}>행 추가</HeaderButton>\n                  <HeaderButton onClick={() => deleteItem(code, addiItem)} key={`btnCreate`}>삭제</HeaderButton>\n                </div>\n                <ItemManageBox title={title} items={addiItem} setItems={setAddiItem} type={'additional'}/>\n                <ExcelTable\n                  headerList={[\n                    SelectColumn,\n                    ...columnlist.additionalItem\n                  ]}\n                  row={addiItem}\n                  height={240}\n                  setRow={setAddiItem}\n                  selectList={selectList}\n                  setSelectList={setSelectList}\n                />\n              </>\n          }\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default ItemManagePage;\n"]},"metadata":{},"sourceType":"module"}