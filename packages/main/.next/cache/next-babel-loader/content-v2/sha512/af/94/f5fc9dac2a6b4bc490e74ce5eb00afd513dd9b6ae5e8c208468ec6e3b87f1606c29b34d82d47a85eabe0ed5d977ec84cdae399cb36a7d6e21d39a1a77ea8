{"ast":null,"code":"import _regeneratorRuntime from \"/Users/user/Desktop/sizl/mono_pop/node_modules/@babel/runtime/regenerator\";\nimport _toConsumableArray from \"/Users/user/Desktop/sizl/mono_pop/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"/Users/user/Desktop/sizl/mono_pop/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _asyncToGenerator from \"/Users/user/Desktop/sizl/mono_pop/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/Users/user/Desktop/sizl/mono_pop/packages/main/pages/mes/operaction/list.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useState } from 'react';\nimport ExcelTable from '../../../component/Excel/ExcelTable';\nimport MenuNavigation from '../../../component/MenuNav/MenuNavigation';\nimport ProfileHeader from '../../../component/Profile/ProfileHeader';\nimport PageHeader from '../../../component/Header/Header'; // @ts-ignore\n\nimport { SelectColumn } from 'react-data-grid';\nimport { RequestMethod } from '../../../common/RequestFunctions';\nimport { columnlist } from \"../../../common/columnInit\";\nimport Notiflix from \"notiflix\";\nimport { useRouter } from 'next/router';\nimport { MAX_VALUE } from '../../../common/configset';\nimport TextEditor from '../../../component/InputBox/ExcelBasicInputBox';\nimport { excelDownload } from '../../../common/excelDownloadFunction';\nimport PaginationComponent from '../../../component/Pagination/PaginationComponent';\nimport ExcelDownloadModal from '../../../component/Modal/ExcelDownloadMoadal';\nimport moment from 'moment';\nvar title = '작업지시서 리스트';\nvar optList = ['고객사명', '모델명', 'CODE', '품명', '공정', '기계', 'Lot번호'];\nvar statusList = ['시작 전', '작업중', '일시정지', '작업종료', '미완료'];\n\nvar BasicContainer = function BasicContainer(_ref) {\n  _s();\n\n  var page = _ref.page,\n      keyword = _ref.keyword,\n      option = _ref.option;\n  var router = useRouter();\n\n  var _useState = useState(false),\n      excelOpen = _useState[0],\n      setExcelOpen = _useState[1];\n\n  var _useState2 = useState([{\n    name: \"\",\n    id: \"\"\n  }]),\n      basicRow = _useState2[0],\n      setBasicRow = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      headerStatus = _useState3[0],\n      setHeaderStatus = _useState3[1];\n\n  var _useState4 = useState(columnlist.operationList),\n      column = _useState4[0],\n      setColumn = _useState4[1];\n\n  var _useState5 = useState(new Set()),\n      selectList = _useState5[0],\n      setSelectList = _useState5[1];\n\n  var _useState6 = useState(optList),\n      optionList = _useState6[0],\n      setOptionList = _useState6[1];\n\n  var _useState7 = useState(0),\n      optionIndex = _useState7[0],\n      setOptionIndex = _useState7[1];\n\n  var _useState8 = useState({\n    page: 1,\n    total: 1\n  }),\n      pageInfo = _useState8[0],\n      setPageInfo = _useState8[1];\n\n  var _useState9 = useState({\n    from: moment().startOf('isoWeek').format('YYYY-MM-DD'),\n    to: moment().endOf('isoWeek').format('YYYY-MM-DD')\n  }),\n      selectDate = _useState9[0],\n      setSelectDate = _useState9[1];\n\n  var changeHeaderStatus = function changeHeaderStatus(value) {\n    setHeaderStatus(value);\n  };\n\n  var checkStatus = function checkStatus(value) {\n    if (value === -1) {\n      return \"/1,2,3,4/\";\n    } else {\n      return value;\n    }\n  };\n\n  useEffect(function () {\n    setOptionIndex(option);\n\n    if (keyword) {\n      SearchBasic(keyword, option, page).then(function () {\n        Notiflix.Loading.remove();\n      });\n    } else {\n      LoadBasic(page).then(function () {\n        Notiflix.Loading.remove();\n      });\n    }\n  }, [page, keyword, option, selectDate, headerStatus]);\n\n  var loadAllSelectItems = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(column) {\n      var tmpColumn;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              tmpColumn = column.map( /*#__PURE__*/function () {\n                var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(v) {\n                  var tmpKey, res;\n                  return _regeneratorRuntime.wrap(function _callee$(_context) {\n                    while (1) {\n                      switch (_context.prev = _context.next) {\n                        case 0:\n                          if (!(v.selectList && v.selectList.length === 0)) {\n                            _context.next = 9;\n                            break;\n                          }\n\n                          tmpKey = v.key;\n\n                          if (tmpKey === 'customer_id') {\n                            tmpKey = 'customer';\n                          } else if (tmpKey === 'cm_id') {\n                            tmpKey = 'model';\n                          }\n\n                          _context.next = 5;\n                          return RequestMethod('get', \"\".concat(tmpKey, \"List\"), {\n                            path: {\n                              page: 1,\n                              renderItem: MAX_VALUE\n                            }\n                          });\n\n                        case 5:\n                          res = _context.sent;\n                          return _context.abrupt(\"return\", _objectSpread(_objectSpread({}, v), {}, {\n                            selectList: _toConsumableArray(res.results.info_list.map(function (value) {\n                              return _objectSpread(_objectSpread({}, value), {}, {\n                                pk: value.ca_id\n                              });\n                            }))\n                          }));\n\n                        case 9:\n                          if (!v.selectList) {\n                            _context.next = 13;\n                            break;\n                          }\n\n                          return _context.abrupt(\"return\", _objectSpread(_objectSpread({}, v), {}, {\n                            pk: v.unit_id\n                          }));\n\n                        case 13:\n                          if (!(v.key === \"status\")) {\n                            _context.next = 17;\n                            break;\n                          }\n\n                          return _context.abrupt(\"return\", _objectSpread(_objectSpread({}, v), {}, {\n                            result: changeHeaderStatus\n                          }));\n\n                        case 17:\n                          return _context.abrupt(\"return\", v);\n\n                        case 18:\n                        case \"end\":\n                          return _context.stop();\n                      }\n                    }\n                  }, _callee);\n                }));\n\n                return function (_x2) {\n                  return _ref3.apply(this, arguments);\n                };\n              }());\n              Promise.all(tmpColumn).then(function (res) {\n                setColumn(_toConsumableArray(res.map(function (v) {\n                  return _objectSpread(_objectSpread({}, v), {}, {\n                    name: v.moddable ? v.name + '(필수)' : v.name\n                  });\n                })));\n              });\n\n            case 2:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function loadAllSelectItems(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var SaveBasic = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return RequestMethod('put', \"operationModify\", {\n                sheets: basicRow.map(function (row, i) {\n                  if (selectList.has(row.id)) {\n                    var _row$mold;\n\n                    var selectData = {};\n                    return _objectSpread(_objectSpread(_objectSpread({}, row), selectData), {}, {\n                      ln_id: row.ln_idPK,\n                      machine_id: row.machine_idPK,\n                      process_id: row.process_idPK,\n                      mold_id: (_row$mold = row.mold) === null || _row$mold === void 0 ? void 0 : _row$mold.mold_id\n                    });\n                  }\n                }).filter(function (v) {\n                  return v;\n                })\n              });\n\n            case 2:\n              res = _context3.sent;\n\n              if (res) {\n                if (res.status === 200) {\n                  Notiflix.Report.success('저장되었습니다.', '', '확인');\n\n                  if (keyword) {\n                    SearchBasic(keyword, option, page).then(function () {\n                      Notiflix.Loading.remove();\n                    });\n                  } else {\n                    LoadBasic(page).then(function () {\n                      Notiflix.Loading.remove();\n                    });\n                  }\n                }\n              }\n\n            case 4:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function SaveBasic() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  var DeleteBasic = /*#__PURE__*/function () {\n    var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.next = 2;\n              return RequestMethod('delete', \"operationDelete\", {\n                sheets: basicRow.map(function (row, i) {\n                  if (selectList.has(row.id)) {\n                    return row.osd_id;\n                  }\n                }).filter(function (v) {\n                  return v;\n                })\n              });\n\n            case 2:\n              res = _context4.sent;\n\n              if (res) {\n                if (res.status === 200) {\n                  if (keyword) {\n                    SearchBasic(keyword, option, page).then(function () {\n                      Notiflix.Loading.remove();\n                    });\n                  } else {\n                    LoadBasic(page).then(function () {\n                      Notiflix.Loading.remove();\n                    });\n                  }\n                }\n              }\n\n            case 4:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    return function DeleteBasic() {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n\n  var LoadBasic = /*#__PURE__*/function () {\n    var _ref6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(page) {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              Notiflix.Loading.circle();\n              _context5.next = 3;\n              return RequestMethod('get', \"operactionList\", {\n                path: {\n                  page: page || page !== 0 ? page : 1,\n                  renderItem: 18,\n                  status: headerStatus\n                },\n                params: {\n                  from: selectDate.from,\n                  to: selectDate.to\n                }\n              });\n\n            case 3:\n              res = _context5.sent;\n\n              if (res && res.status === 200) {\n                if (res.results.totalPages !== 0 && res.results.totalPages < page) {\n                  LoadBasic(page - 1).then(function () {\n                    Notiflix.Loading.remove();\n                  });\n                } else {\n                  setPageInfo(_objectSpread(_objectSpread({}, pageInfo), {}, {\n                    page: res.results.page,\n                    total: res.results.totalPages\n                  }));\n                  cleanUpData(res);\n                }\n              } else if (res.state === 401) {\n                Notiflix.Report.failure('불러올 수 없습니다.', '권한이 없습니다.', '확인', function () {\n                  router.back();\n                });\n              }\n\n            case 5:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5);\n    }));\n\n    return function LoadBasic(_x3) {\n      return _ref6.apply(this, arguments);\n    };\n  }();\n\n  var SearchBasic = /*#__PURE__*/function () {\n    var _ref7 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(keyword, option, isPaging) {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              Notiflix.Loading.circle();\n\n              if (!isPaging) {\n                setOptionIndex(option);\n              }\n\n              _context6.next = 4;\n              return RequestMethod('get', \"operationSearch\", {\n                path: {\n                  page: isPaging !== null && isPaging !== void 0 ? isPaging : 1,\n                  renderItem: 18,\n                  status: headerStatus\n                },\n                params: {\n                  keyword: keyword !== null && keyword !== void 0 ? keyword : '',\n                  opt: option !== null && option !== void 0 ? option : 0,\n                  from: selectDate.from,\n                  to: selectDate.to\n                }\n              });\n\n            case 4:\n              res = _context6.sent;\n\n              if (res && res.status === 200) {\n                setPageInfo(_objectSpread(_objectSpread({}, pageInfo), {}, {\n                  page: res.results.page,\n                  total: res.results.totalPages\n                }));\n                cleanUpData(res);\n              }\n\n            case 6:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6);\n    }));\n\n    return function SearchBasic(_x4, _x5, _x6) {\n      return _ref7.apply(this, arguments);\n    };\n  }();\n\n  var changeRow = function changeRow(row) {\n    var _row$product, _row$product2, _row$product3, _row$product4, _row$product5, _row$product6, _row$product7, _row$product8, _row$process, _row$process2, _row$mold2, _row$machine, _row$machine2, _row$lot_number$numbe, _row$lot_number, _row$lot_number$ln_id, _row$lot_number2;\n\n    var tmpData = {};\n    return _objectSpread(_objectSpread({}, row), {}, {\n      identification: row.identification,\n      date: row.date,\n      customer_id: (_row$product = row.product) === null || _row$product === void 0 ? void 0 : _row$product.raw_material.model.customer.name,\n      customer_idPK: (_row$product2 = row.product) === null || _row$product2 === void 0 ? void 0 : _row$product2.raw_material.model.customer.customer_id,\n      cm_id: (_row$product3 = row.product) === null || _row$product3 === void 0 ? void 0 : _row$product3.raw_material.model.model,\n      cm_idPK: (_row$product4 = row.product) === null || _row$product4 === void 0 ? void 0 : _row$product4.raw_material.model.cm_id,\n      code: (_row$product5 = row.product) === null || _row$product5 === void 0 ? void 0 : _row$product5.raw_material.code,\n      rm_id: (_row$product6 = row.product) === null || _row$product6 === void 0 ? void 0 : _row$product6.raw_material.rm_id,\n      name: (_row$product7 = row.product) === null || _row$product7 === void 0 ? void 0 : _row$product7.raw_material.name,\n      texture: (_row$product8 = row.product) === null || _row$product8 === void 0 ? void 0 : _row$product8.raw_material.texture,\n      process_id: (_row$process = row.process) === null || _row$process === void 0 ? void 0 : _row$process.name,\n      process_idPK: (_row$process2 = row.process) === null || _row$process2 === void 0 ? void 0 : _row$process2.process_id,\n      seq: row.seq,\n      mold_id: (_row$mold2 = row.mold) === null || _row$mold2 === void 0 ? void 0 : _row$mold2.name,\n      machine_id: (_row$machine = row.machine) === null || _row$machine === void 0 ? void 0 : _row$machine.name,\n      machine_idPK: (_row$machine2 = row.machine) === null || _row$machine2 === void 0 ? void 0 : _row$machine2.machine_id,\n      goal: row.goal,\n      ln_id: (_row$lot_number$numbe = (_row$lot_number = row.lot_number) === null || _row$lot_number === void 0 ? void 0 : _row$lot_number.number) !== null && _row$lot_number$numbe !== void 0 ? _row$lot_number$numbe : undefined,\n      ln_idPK: (_row$lot_number$ln_id = (_row$lot_number2 = row.lot_number) === null || _row$lot_number2 === void 0 ? void 0 : _row$lot_number2.ln_id) !== null && _row$lot_number$ln_id !== void 0 ? _row$lot_number$ln_id : undefined,\n      status: statusList[row.status]\n    }, tmpData);\n  };\n\n  var cleanUpData = function cleanUpData(res) {\n    var tmpColumn = columnlist.operationList;\n    var tmpRow = [];\n    tmpColumn = tmpColumn.map(function (column) {\n      var menuData;\n      res.results.menus && res.results.menus.map(function (menu) {\n        if (menu.colName === column.key) {\n          menuData = {\n            id: menu.id,\n            name: menu.title,\n            width: menu.width,\n            tab: menu.tab,\n            unit: menu.unit,\n            moddable: !menu.moddable\n          };\n        } else if (menu.colName === 'id' && column.key === 'tmpId') {\n          menuData = {\n            id: menu.id,\n            name: menu.title,\n            width: menu.width,\n            tab: menu.tab,\n            unit: menu.unit,\n            moddable: !menu.moddable\n          };\n        }\n      });\n\n      if (menuData) {\n        return _objectSpread(_objectSpread({}, column), menuData);\n      }\n    }).filter(function (v) {\n      return v;\n    });\n    loadAllSelectItems(tmpColumn);\n    var additionalMenus = res.results.menus ? res.results.menus.map(function (menu) {\n      if (menu.colName === null) {\n        return {\n          id: menu.id,\n          name: menu.title,\n          width: menu.width,\n          key: menu.title,\n          editor: TextEditor,\n          type: 'additional',\n          unit: menu.unit\n        };\n      }\n    }).filter(function (v) {\n      return v;\n    }) : [];\n    tmpRow = res.results.info_list;\n    var additionalData = [];\n    additionalMenus.map(function (v) {\n      if (v.type === 'additional') {\n        additionalData.push(v.key);\n      }\n    });\n    var tmpBasicRow = tmpRow.map(function (row, index) {\n      var realTableData = changeRow(row);\n      var appendAdditional = {};\n      row.additional && row.additional.map(function (v) {\n        appendAdditional = _objectSpread(_objectSpread({}, appendAdditional), {}, _defineProperty({}, v.title, v.value));\n      });\n      var random_id = Math.random() * 1000;\n      return _objectSpread(_objectSpread(_objectSpread({}, realTableData), appendAdditional), {}, {\n        id: \"rawinput_\".concat(random_id)\n      });\n    });\n    setBasicRow(_toConsumableArray(tmpBasicRow));\n  };\n\n  var downloadExcel = function downloadExcel() {\n    var tmpSelectList = [];\n    basicRow.map(function (row) {\n      tmpSelectList.push(selectList.has(row.id));\n    });\n    excelDownload(column, basicRow, \"\\uC6D0\\uC790\\uC7AC \\uC785\\uACE0 \\uAD00\\uB9AC\", 'rawmaterial_input', tmpSelectList);\n  };\n\n  var onClickHeaderButton = function onClickHeaderButton(index) {\n    switch (index) {\n      case 0:\n        setExcelOpen(true);\n        break;\n\n      case 1:\n        router.push(\"/mes/item/manage/operation\");\n        break;\n\n      case 2:\n        SaveBasic();\n        break;\n\n      case 3:\n        DeleteBasic();\n        break;\n    }\n  };\n\n  return __jsx(\"div\", {\n    style: {\n      display: 'flex'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 409,\n      columnNumber: 5\n    }\n  }, __jsx(MenuNavigation, {\n    pageType: 'MES',\n    subType: 0,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 410,\n      columnNumber: 7\n    }\n  }), __jsx(\"div\", {\n    style: {\n      paddingBottom: 40\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 411,\n      columnNumber: 7\n    }\n  }, __jsx(ProfileHeader, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 412,\n      columnNumber: 9\n    }\n  }), __jsx(PageHeader, {\n    isSearch: true,\n    searchKeyword: keyword,\n    onChangeSearchKeyword: function onChangeSearchKeyword(keyword) {\n      if (keyword) {\n        router.push(\"/mes/operaction/list?page=1&keyword=\".concat(keyword, \"&opt=\").concat(optionIndex));\n      } else {\n        router.push(\"/mes/operaction/list?page=1&keyword=\");\n      }\n    },\n    searchOptionList: optionList,\n    optionIndex: optionIndex,\n    onChangeSearchOption: function onChangeSearchOption(option) {\n      setOptionIndex(option);\n    },\n    isCalendar: true,\n    calendarType: 'period',\n    selectDate: selectDate //@ts-ignore\n    ,\n    setSelectDate: setSelectDate,\n    title: title,\n    buttons: ['엑셀로 받기', '항목관리', '저장하기', '삭제'],\n    buttonsOnclick: onClickHeaderButton,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 413,\n      columnNumber: 9\n    }\n  }), __jsx(ExcelTable, {\n    editable: true,\n    resizable: true,\n    headerList: [SelectColumn].concat(_toConsumableArray(column)),\n    row: basicRow // setRow={setBasicRow}\n    ,\n    setRow: function setRow(e) {\n      var tmp = selectList;\n      e.map(function (v) {\n        if (v.isChange) tmp.add(v.id);\n      });\n      setSelectList(tmp);\n      setBasicRow(e);\n    },\n    selectList: selectList //@ts-ignore\n    ,\n    setSelectList: setSelectList,\n    height: basicRow.length * 40 >= 40 * 18 + 56 ? 40 * 19 : basicRow.length * 40 + 56,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 438,\n      columnNumber: 9\n    }\n  }), __jsx(PaginationComponent, {\n    currentPage: pageInfo.page,\n    totalPage: pageInfo.total,\n    setPage: function setPage(page) {\n      if (keyword) {\n        router.push(\"/mes/operaction/list?page=\".concat(page, \"&keyword=\").concat(keyword, \"&opt=\").concat(option));\n      } else {\n        router.push(\"/mes/operaction/list?page=\".concat(page));\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 460,\n      columnNumber: 9\n    }\n  })), __jsx(ExcelDownloadModal, {\n    isOpen: excelOpen,\n    column: column,\n    basicRow: basicRow,\n    filename: \"\\uC791\\uC5C5\\uC9C0\\uC2DC\\uC11C\\uB9AC\\uC2A4\\uD2B8\",\n    sheetname: \"\\uC791\\uC5C5\\uC9C0\\uC2DC\\uC11C\\uB9AC\\uC2A4\\uD2B8\",\n    selectList: selectList,\n    tab: 'ROLE_PROD_02',\n    setIsOpen: setExcelOpen,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 472,\n      columnNumber: 7\n    }\n  }));\n};\n\n_s(BasicContainer, \"s0jsBX9IBuiNeRvN5BIW/7aClEQ=\", false, function () {\n  return [useRouter];\n});\n\n_c = BasicContainer;\n// BasicContainer.getInitialProps = async ({ query }) => {\n//   let { page, keyword, opt } = query\n//   if (typeof page === 'string')\n//     page = parseInt(page);\n//   if (typeof opt === 'string')\n//     opt = parseInt(opt);\n//   return { page, keyword, option: opt };\n// }\nexport var __N_SSP = true;\nexport default BasicContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"BasicContainer\");","map":{"version":3,"sources":["/Users/user/Desktop/sizl/mono_pop/packages/main/pages/mes/operaction/list.tsx"],"names":["React","useEffect","useState","ExcelTable","MenuNavigation","ProfileHeader","PageHeader","SelectColumn","RequestMethod","columnlist","Notiflix","useRouter","MAX_VALUE","TextEditor","excelDownload","PaginationComponent","ExcelDownloadModal","moment","title","optList","statusList","BasicContainer","page","keyword","option","router","excelOpen","setExcelOpen","name","id","basicRow","setBasicRow","headerStatus","setHeaderStatus","operationList","column","setColumn","Set","selectList","setSelectList","optionList","setOptionList","optionIndex","setOptionIndex","total","pageInfo","setPageInfo","from","startOf","format","to","endOf","selectDate","setSelectDate","changeHeaderStatus","value","checkStatus","SearchBasic","then","Loading","remove","LoadBasic","loadAllSelectItems","tmpColumn","map","v","length","tmpKey","key","path","renderItem","res","results","info_list","pk","ca_id","unit_id","result","Promise","all","moddable","SaveBasic","sheets","row","i","has","selectData","ln_id","ln_idPK","machine_id","machine_idPK","process_id","process_idPK","mold_id","mold","filter","status","Report","success","DeleteBasic","osd_id","circle","params","totalPages","cleanUpData","state","failure","back","isPaging","opt","changeRow","tmpData","identification","date","customer_id","product","raw_material","model","customer","customer_idPK","cm_id","cm_idPK","code","rm_id","texture","process","seq","machine","goal","lot_number","number","undefined","tmpRow","menuData","menus","menu","colName","width","tab","unit","additionalMenus","editor","type","additionalData","push","tmpBasicRow","index","realTableData","appendAdditional","additional","random_id","Math","random","downloadExcel","tmpSelectList","onClickHeaderButton","display","paddingBottom","e","tmp","isChange","add"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react'\nimport ExcelTable from '../../../component/Excel/ExcelTable'\nimport MenuNavigation from '../../../component/MenuNav/MenuNavigation'\nimport ProfileHeader from '../../../component/Profile/ProfileHeader'\nimport PageHeader from '../../../component/Header/Header'\n// @ts-ignore\nimport {SelectColumn} from 'react-data-grid'\nimport {IExcelHeaderType, IItemMenuType} from '../../../common/@types/type'\nimport {RequestMethod} from '../../../common/RequestFunctions'\nimport {columnlist} from \"../../../common/columnInit\";\nimport Notiflix from \"notiflix\";\nimport {useRouter} from 'next/router'\nimport {MAX_VALUE} from '../../../common/configset'\nimport DropDownEditor from '../../../component/Dropdown/ExcelBasicDropdown'\nimport TextEditor from '../../../component/InputBox/ExcelBasicInputBox'\nimport {excelDownload} from '../../../common/excelDownloadFunction'\nimport {loadAll} from 'react-cookies'\nimport PaginationComponent from '../../../component/Pagination/PaginationComponent'\nimport {NextPageContext} from 'next'\nimport ExcelDownloadModal from '../../../component/Modal/ExcelDownloadMoadal'\nimport moment from 'moment'\n\nconst title = '작업지시서 리스트'\nconst optList = ['고객사명', '모델명', 'CODE', '품명', '공정', '기계', 'Lot번호']\n\ninterface IProps {\n  children?: any\n  page?: number\n  keyword?: string\n  option?: number\n}\n\nconst statusList = ['시작 전', '작업중', '일시정지', '작업종료', '미완료']\n\nconst BasicContainer = ({page, keyword, option}: IProps) => {\n  const router = useRouter()\n\n  const [excelOpen, setExcelOpen] = useState<boolean>(false)\n\n  const [basicRow, setBasicRow] = useState<Array<any>>([{\n    name: \"\", id: \"\"\n  }])\n\n  const [headerStatus, setHeaderStatus] = useState<number | string>(\"\");\n\n  const [column, setColumn] = useState<Array<IExcelHeaderType>>(columnlist.operationList)\n  const [selectList, setSelectList] = useState<Set<number>>(new Set())\n  const [optionList, setOptionList] = useState<string[]>(optList)\n  const [optionIndex, setOptionIndex] = useState<number>(0)\n\n  const [pageInfo, setPageInfo] = useState<{page: number, total: number}>({\n    page: 1,\n    total: 1\n  })\n\n  const [selectDate, setSelectDate] = useState<{from:string, to:string}>({\n    from: moment().startOf('isoWeek').format('YYYY-MM-DD'),\n    to: moment().endOf('isoWeek').format('YYYY-MM-DD')\n  });\n\n  const changeHeaderStatus = (value:number) => {\n    setHeaderStatus(value);\n  }\n\n  const checkStatus = (value:number) => {\n      if(value === -1){\n        return \"/1,2,3,4/\"\n      }else{\n        return value\n      }\n  }\n\n  useEffect(() => {\n    setOptionIndex(option)\n    if(keyword){\n      SearchBasic(keyword, option, page).then(() => {\n        Notiflix.Loading.remove()\n      })\n    }else{\n      LoadBasic(page).then(() => {\n        Notiflix.Loading.remove()\n      })\n    }\n  }, [page, keyword, option, selectDate, headerStatus])\n\n  const loadAllSelectItems = async (column: IExcelHeaderType[]) => {\n    let tmpColumn = column.map(async (v: any) => {\n\n      if(v.selectList && v.selectList.length === 0){\n        let tmpKey = v.key\n\n        if(tmpKey === 'customer_id'){\n          tmpKey = 'customer'\n        } else if(tmpKey === 'cm_id'){\n          tmpKey = 'model'\n        }\n\n\n        const res = await RequestMethod('get', `${tmpKey}List`,{\n          path: {\n            page: 1,\n            renderItem: MAX_VALUE,\n          }\n        })\n\n        return {\n          ...v,\n          selectList: [...res.results.info_list.map((value: any) => {\n            return {\n              ...value,\n              pk: value.ca_id\n            }\n          })]\n        }\n      }else{\n        if(v.selectList){\n          return {\n            ...v,\n            pk: v.unit_id\n          }\n        }else if(v.key === \"status\"){\n          return {\n            ...v,\n            result: changeHeaderStatus\n          }\n        } else{\n          return v\n        }\n      }\n    })\n\n    Promise.all(tmpColumn).then(res => {\n      setColumn([...res.map(v=> {\n        return {\n          ...v,\n          name: v.moddable ? v.name+'(필수)' : v.name\n        }\n      })])\n    })\n  }\n\n  const SaveBasic = async () => {\n    let res = await RequestMethod('put', `operationModify`,\n      {\n        sheets: basicRow.map((row, i) => {\n          if(selectList.has(row.id)){\n\n            let selectData: any = {}\n\n            return {\n              ...row,\n              ...selectData,\n              ln_id: row.ln_idPK,\n              machine_id: row.machine_idPK,\n              process_id: row.process_idPK,\n              mold_id: row.mold?.mold_id,\n            }\n\n          }\n        }).filter((v) => v)\n      })\n\n    if(res){\n      if(res.status === 200){\n        Notiflix.Report.success('저장되었습니다.','','확인');\n        if(keyword){\n          SearchBasic(keyword, option, page).then(() => {\n            Notiflix.Loading.remove()\n          })\n        }else{\n          LoadBasic(page).then(() => {\n            Notiflix.Loading.remove()\n          })\n        }\n      }\n    }\n  }\n\n  const DeleteBasic = async () => {\n    const res = await RequestMethod('delete', `operationDelete`,\n      {\n        sheets: basicRow.map((row, i) => {\n          if(selectList.has(row.id)){\n            return row.osd_id\n          }\n        }).filter((v) => v)\n      })\n\n    if(res) {\n      if(res.status === 200){\n        if(keyword){\n          SearchBasic(keyword, option, page).then(() => {\n            Notiflix.Loading.remove()\n          })\n        }else{\n          LoadBasic(page).then(() => {\n            Notiflix.Loading.remove()\n          })\n        }\n        \n      }\n    }\n  }\n\n  const LoadBasic = async (page?: number) => {\n    Notiflix.Loading.circle()\n    const res = await RequestMethod('get', `operactionList`,{\n      path: {\n        page: (page || page !== 0) ? page : 1,\n        renderItem: 18,\n        status:headerStatus\n      },\n      params: {\n        from: selectDate.from,\n        to: selectDate.to\n      }\n    })\n\n    if(res && res.status === 200){\n      if(res.results.totalPages !== 0 && res.results.totalPages < page){\n        LoadBasic(page - 1).then(() => {\n          Notiflix.Loading.remove()\n        })\n      }else{\n        setPageInfo({\n          ...pageInfo,\n          page: res.results.page,\n          total: res.results.totalPages,\n        })\n        cleanUpData(res)\n      }\n    }else if (res.state === 401) {\n      Notiflix.Report.failure('불러올 수 없습니다.', '권한이 없습니다.', '확인', () => {\n        router.back()\n      })\n    }\n  }\n\n  const SearchBasic = async (keyword: any, option: number, isPaging?: number) => {\n    Notiflix.Loading.circle()\n    if(!isPaging){\n      setOptionIndex(option)\n    }\n\n    const res = await RequestMethod('get', `operationSearch`,{\n      path: {\n        page: isPaging ?? 1,\n        renderItem: 18,\n        status:headerStatus\n      },\n      params: {\n        keyword: keyword ?? '',\n        opt: option ?? 0,\n        from: selectDate.from,\n        to: selectDate.to\n      }\n    })\n\n    if(res && res.status === 200) {\n      setPageInfo({\n        ...pageInfo,\n        page: res.results.page,\n        total: res.results.totalPages\n      })\n      cleanUpData(res)\n    }\n  }\n\n  const changeRow = (row: any) => {\n    let tmpData = {}\n\n    return {\n      ...row,\n      identification: row.identification,\n      date: row.date,\n      customer_id: row.product?.raw_material.model.customer.name,\n      customer_idPK: row.product?.raw_material.model.customer.customer_id,\n      cm_id: row.product?.raw_material.model.model,\n      cm_idPK: row.product?.raw_material.model.cm_id,\n      code: row.product?.raw_material.code,\n      rm_id: row.product?.raw_material.rm_id,\n      name: row.product?.raw_material.name,\n      texture: row.product?.raw_material.texture,\n      process_id: row.process?.name,\n      process_idPK: row.process?.process_id,\n      seq: row.seq,\n      mold_id: row.mold?.name,\n      machine_id: row.machine?.name,\n      machine_idPK: row.machine?.machine_id,\n      goal: row.goal,\n      ln_id: row.lot_number?.number ?? undefined,\n      ln_idPK: row.lot_number?.ln_id ?? undefined,\n      status: statusList[row.status],\n      ...tmpData\n    }\n  }\n\n  const cleanUpData = (res: any) => {\n    let tmpColumn = columnlist.operationList\n    let tmpRow = []\n    tmpColumn = tmpColumn.map((column: any) => {\n      let menuData: object | undefined;\n      res.results.menus && res.results.menus.map((menu: any) => {\n        if(menu.colName === column.key){\n          menuData = {\n            id: menu.id,\n            name: menu.title,\n            width: menu.width,\n            tab:menu.tab,\n            unit:menu.unit,\n            moddable: !menu.moddable\n          }\n        } else if(menu.colName === 'id' && column.key === 'tmpId'){\n          menuData = {\n            id: menu.id,\n            name: menu.title,\n            width: menu.width,\n            tab:menu.tab,\n            unit:menu.unit,\n            moddable: !menu.moddable\n          }\n        }\n      })\n\n      if(menuData){\n        return {\n          ...column,\n          ...menuData\n        }\n      }\n    }).filter((v:any) => v)\n\n    loadAllSelectItems(tmpColumn)\n\n    let additionalMenus = res.results.menus ? res.results.menus.map((menu:any) => {\n      if(menu.colName === null){\n        return {\n          id: menu.id,\n          name: menu.title,\n          width: menu.width,\n          key: menu.title,\n          editor: TextEditor,\n          type: 'additional',\n          unit: menu.unit\n        }\n      }\n    }).filter((v: any) => v) : []\n\n    tmpRow = res.results.info_list\n\n    let additionalData: any[] = []\n\n    additionalMenus.map((v: any) => {\n      if(v.type === 'additional'){\n        additionalData.push(v.key)\n      }\n    })\n\n    let tmpBasicRow = tmpRow.map((row: any, index: number) => {\n      let realTableData: any = changeRow(row)\n      let appendAdditional: any = {}\n\n      row.additional && row.additional.map((v: any) => {\n        appendAdditional = {\n          ...appendAdditional,\n          [v.title]: v.value\n        }\n      })\n\n      const random_id = Math.random()*1000\n\n      return {\n        // ...row,\n        ...realTableData,\n        ...appendAdditional,\n        id: `rawinput_${random_id}`,\n      }\n    })\n\n    setBasicRow([...tmpBasicRow])\n  }\n\n  const downloadExcel = () => {\n    let tmpSelectList: boolean[] = []\n    basicRow.map(row => {\n      tmpSelectList.push(selectList.has(row.id))\n    })\n    excelDownload(column, basicRow, `원자재 입고 관리`, 'rawmaterial_input', tmpSelectList)\n  }\n\n  const onClickHeaderButton = (index: number) => {\n    switch(index){\n      case 0:\n        setExcelOpen(true)\n        break;\n      case 1:\n        router.push(`/mes/item/manage/operation`)\n        break;\n      case 2:\n        SaveBasic()\n        break;\n      case 3:\n        DeleteBasic()\n        break;\n    }\n  }\n\n  return (\n    <div style={{display: 'flex', }}>\n      <MenuNavigation pageType={'MES'} subType={0}/>\n      <div style={{paddingBottom: 40}}>\n        <ProfileHeader/>\n        <PageHeader\n          isSearch\n          searchKeyword={keyword}\n          onChangeSearchKeyword={(keyword) => {\n            if(keyword){\n              router.push(`/mes/operaction/list?page=1&keyword=${keyword}&opt=${optionIndex}`)\n            }else{\n              router.push(`/mes/operaction/list?page=1&keyword=`)\n            }\n          }}\n          searchOptionList={optionList}\n          optionIndex={optionIndex}\n          onChangeSearchOption={(option) => {\n            setOptionIndex(option)\n          }}\n          isCalendar\n          calendarType={'period'}\n          selectDate={selectDate}\n          //@ts-ignore\n          setSelectDate={setSelectDate}\n          title={title}\n          buttons={['엑셀로 받기', '항목관리', '저장하기', '삭제']}\n          buttonsOnclick={onClickHeaderButton}\n\n        />\n        <ExcelTable\n          editable\n          resizable\n          headerList={[\n            SelectColumn,\n            ...column\n          ]}\n          row={basicRow}\n          // setRow={setBasicRow}\n          setRow={(e) => {\n            let tmp: Set<any> = selectList\n            e.map(v => {\n              if(v.isChange) tmp.add(v.id)\n            })\n            setSelectList(tmp)\n            setBasicRow(e)\n          }}\n          selectList={selectList}\n          //@ts-ignore\n          setSelectList={setSelectList}\n          height={basicRow.length * 40 >= 40*18+56 ? 40*19 : basicRow.length * 40 + 56}\n        />\n        <PaginationComponent\n          currentPage={pageInfo.page}\n          totalPage={pageInfo.total}\n          setPage={(page) => {\n            if(keyword){\n              router.push(`/mes/operaction/list?page=${page}&keyword=${keyword}&opt=${option}`)\n            }else{\n              router.push(`/mes/operaction/list?page=${page}`)\n            }\n          }}\n        />\n      </div>\n      <ExcelDownloadModal\n        isOpen={excelOpen}\n        column={column}\n        basicRow={basicRow}\n        filename={`작업지시서리스트`}\n        sheetname={`작업지시서리스트`}\n        selectList={selectList}\n        tab={'ROLE_PROD_02'}\n        setIsOpen={setExcelOpen}\n      />\n    </div>\n  );\n}\n\nexport const getServerSideProps = (ctx: NextPageContext) => {\n  return {\n    props: {\n      page: ctx.query.page ?? 1,\n      keyword: ctx.query.keyword ?? \"\",\n      option: ctx.query.opt ?? 0,\n    }\n  }\n}\n\n// BasicContainer.getInitialProps = async ({ query }) => {\n//   let { page, keyword, opt } = query\n//   if (typeof page === 'string')\n//     page = parseInt(page);\n//   if (typeof opt === 'string')\n//     opt = parseInt(opt);\n//   return { page, keyword, option: opt };\n// }\n\nexport default BasicContainer;\n"]},"metadata":{},"sourceType":"module"}