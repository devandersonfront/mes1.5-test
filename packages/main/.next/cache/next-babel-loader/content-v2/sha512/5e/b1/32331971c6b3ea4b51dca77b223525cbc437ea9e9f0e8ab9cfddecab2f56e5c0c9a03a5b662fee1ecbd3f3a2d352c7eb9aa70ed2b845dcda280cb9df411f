{"ast":null,"code":"import _toConsumableArray from \"/Users/user/Desktop/sizl/mono_pop/node_modules/next/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\n\nvar _jsxFileName = \"/Users/user/Desktop/sizl/mono_pop/packages/mes/src/container/Operation/MesOperationRegister.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport { ExcelTable, Header as PageHeader, columnlist, PaginationComponent, ExcelDownloadModal } from 'shared'; // @ts-ignore\n\nimport { SelectColumn } from 'react-data-grid';\nimport { useRouter } from 'next/router';\nimport moment from 'moment';\n\nvar MesOperationRegister = function MesOperationRegister(_ref) {\n  _s();\n\n  var page = _ref.page,\n      keyword = _ref.keyword,\n      option = _ref.option;\n  var router = useRouter();\n\n  var _useState = useState(false),\n      excelOpen = _useState[0],\n      setExcelOpen = _useState[1];\n\n  var _useState2 = useState([{\n    name: \"\",\n    id: \"\",\n    start_date: moment().format('YYYY-MM-DD'),\n    limit_date: moment().format('YYYY-MM-DD')\n  }]),\n      basicRow = _useState2[0],\n      setBasicRow = _useState2[1];\n\n  var _useState3 = useState(columnlist[\"operationRegisterV2\"]),\n      column = _useState3[0],\n      setColumn = _useState3[1];\n\n  var _useState4 = useState(new Set()),\n      selectList = _useState4[0],\n      setSelectList = _useState4[1];\n\n  var _useState5 = useState(['고객사명', '모델명', 'CODE', '품명', '금형명']),\n      optionList = _useState5[0],\n      setOptionList = _useState5[1];\n\n  var _useState6 = useState(0),\n      optionIndex = _useState6[0],\n      setOptionIndex = _useState6[1];\n\n  var _useState7 = useState({\n    page: 1,\n    total: 1\n  }),\n      pageInfo = _useState7[0],\n      setPageInfo = _useState7[1];\n\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }, __jsx(PageHeader, {\n    title: \"작업지시서 등록\",\n    buttons: ['엑셀로 받기', '행추가', '저장하기', '삭제'],\n    buttonsOnclick: function buttonsOnclick() {} // onClickHeaderButton\n    ,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }), __jsx(ExcelTable, {\n    editable: true,\n    resizable: true,\n    headerList: [SelectColumn].concat(_toConsumableArray(column)),\n    row: basicRow // setRow={setBasicRow}\n    ,\n    setRow: function setRow(e) {\n      var tmp = selectList;\n      e.map(function (v) {\n        if (v.isChange) tmp.add(v.id);\n      });\n      setSelectList(tmp);\n      setBasicRow(e);\n    },\n    selectList: selectList //@ts-ignore\n    ,\n    setSelectList: setSelectList,\n    height: basicRow.length * 40 >= 40 * 18 + 56 ? 40 * 19 : basicRow.length * 40 + 56,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }), __jsx(PaginationComponent, {\n    currentPage: pageInfo.page,\n    totalPage: pageInfo.total,\n    setPage: function setPage(page) {\n      if (keyword) {\n        router.push(\"/mes/basic/mold?page=\".concat(page, \"&keyword=\").concat(keyword, \"&opt=\").concat(option));\n      } else {\n        router.push(\"/mes/basic/mold?page=\".concat(page));\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }), __jsx(ExcelDownloadModal, {\n    isOpen: excelOpen,\n    column: column,\n    basicRow: basicRow,\n    filename: \"\\uAE08\\uD615\\uAE30\\uBCF8\\uC815\\uBCF4\",\n    sheetname: \"\\uAE08\\uD615\\uAE30\\uBCF8\\uC815\\uBCF4\",\n    selectList: selectList,\n    tab: 'ROLE_BASE_07',\n    setIsOpen: setExcelOpen,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }\n  }));\n};\n\n_s(MesOperationRegister, \"WeEC26uXKV0KpfCySGI2cIkPAK0=\", false, function () {\n  return [useRouter];\n});\n\n_c = MesOperationRegister;\nexport var getServerSideProps = function getServerSideProps(ctx) {\n  var _ctx$query$page, _ctx$query$keyword, _ctx$query$opt;\n\n  return {\n    props: {\n      page: (_ctx$query$page = ctx.query.page) !== null && _ctx$query$page !== void 0 ? _ctx$query$page : 1,\n      keyword: (_ctx$query$keyword = ctx.query.keyword) !== null && _ctx$query$keyword !== void 0 ? _ctx$query$keyword : \"\",\n      option: (_ctx$query$opt = ctx.query.opt) !== null && _ctx$query$opt !== void 0 ? _ctx$query$opt : 0\n    }\n  };\n};\nexport { MesOperationRegister };\n\nvar _c;\n\n$RefreshReg$(_c, \"MesOperationRegister\");","map":{"version":3,"sources":["/Users/user/Desktop/sizl/mono_pop/packages/mes/src/container/Operation/MesOperationRegister.tsx"],"names":["React","useState","ExcelTable","Header","PageHeader","columnlist","PaginationComponent","ExcelDownloadModal","SelectColumn","useRouter","moment","MesOperationRegister","page","keyword","option","router","excelOpen","setExcelOpen","name","id","start_date","format","limit_date","basicRow","setBasicRow","column","setColumn","Set","selectList","setSelectList","optionList","setOptionList","optionIndex","setOptionIndex","total","pageInfo","setPageInfo","e","tmp","map","v","isChange","add","length","push","getServerSideProps","ctx","props","query","opt"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react'\nimport {\n  ExcelTable,\n  Header as PageHeader,\n  RequestMethod,\n  columnlist,\n  MAX_VALUE,\n  DropDownEditor,\n  TextEditor,\n  excelDownload,\n  PaginationComponent,\n  ExcelDownloadModal,\n  IExcelHeaderType, IItemMenuType\n} from 'shared'\n// @ts-ignore\nimport {SelectColumn} from 'react-data-grid'\nimport Notiflix from \"notiflix\";\nimport {useRouter} from 'next/router'\nimport {loadAll} from 'react-cookies'\nimport {NextPageContext} from 'next'\nimport moment from 'moment'\n\ninterface IProps {\n  children?: any\n  page?: number\n  keyword?: string\n  option?: number\n}\n\nconst MesOperationRegister = ({page, keyword, option}: IProps) => {\n  const router = useRouter()\n\n  const [excelOpen, setExcelOpen] = useState<boolean>(false)\n\n  const [basicRow, setBasicRow] = useState<Array<any>>([{\n    name: \"\", id: \"\", start_date: moment().format('YYYY-MM-DD'),\n    limit_date: moment().format('YYYY-MM-DD')\n  }])\n  const [column, setColumn] = useState<Array<IExcelHeaderType>>( columnlist[\"operationRegisterV2\"])\n  const [selectList, setSelectList] = useState<Set<number>>(new Set())\n  const [optionList, setOptionList] = useState<string[]>(['고객사명','모델명', 'CODE', '품명', '금형명'])\n  const [optionIndex, setOptionIndex] = useState<number>(0)\n\n  const [pageInfo, setPageInfo] = useState<{page: number, total: number}>({\n    page: 1,\n    total: 1\n  })\n\n  return (\n    <div>\n      <PageHeader\n        title={\"작업지시서 등록\"}\n        buttons={\n          ['엑셀로 받기', '행추가', '저장하기', '삭제']\n        }\n        buttonsOnclick={\n          () => {}\n          // onClickHeaderButton\n        }\n      />\n      <ExcelTable\n        editable\n        resizable\n        headerList={[\n          SelectColumn,\n          ...column\n        ]}\n        row={basicRow}\n        // setRow={setBasicRow}\n        setRow={(e) => {\n          let tmp: Set<any> = selectList\n          e.map(v => {\n            if(v.isChange) tmp.add(v.id)\n          })\n          setSelectList(tmp)\n          setBasicRow(e)\n        }}\n        selectList={selectList}\n        //@ts-ignore\n        setSelectList={setSelectList}\n        height={basicRow.length * 40 >= 40*18+56 ? 40*19 : basicRow.length * 40 + 56}\n      />\n      <PaginationComponent\n        currentPage={pageInfo.page}\n        totalPage={pageInfo.total}\n        setPage={(page) => {\n          if(keyword){\n            router.push(`/mes/basic/mold?page=${page}&keyword=${keyword}&opt=${option}`)\n          }else{\n            router.push(`/mes/basic/mold?page=${page}`)\n          }\n        }}\n      />\n      <ExcelDownloadModal\n        isOpen={excelOpen}\n        column={column}\n        basicRow={basicRow}\n        filename={`금형기본정보`}\n        sheetname={`금형기본정보`}\n        selectList={selectList}\n        tab={'ROLE_BASE_07'}\n        setIsOpen={setExcelOpen}\n      />\n    </div>\n  );\n}\n\nexport const getServerSideProps = (ctx: NextPageContext) => {\n  return {\n    props: {\n      page: ctx.query.page ?? 1,\n      keyword: ctx.query.keyword ?? \"\",\n      option: ctx.query.opt ?? 0,\n    }\n  }\n}\n\nexport {MesOperationRegister};\n"]},"metadata":{},"sourceType":"module"}