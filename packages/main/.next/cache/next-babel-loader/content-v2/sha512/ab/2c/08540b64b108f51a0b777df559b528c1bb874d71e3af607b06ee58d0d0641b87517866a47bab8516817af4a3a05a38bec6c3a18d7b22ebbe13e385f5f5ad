{"ast":null,"code":"import _regeneratorRuntime from \"/Users/user/Desktop/sizl/mono_pop/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _toConsumableArray from \"/Users/user/Desktop/sizl/mono_pop/node_modules/next/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"/Users/user/Desktop/sizl/mono_pop/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _asyncToGenerator from \"/Users/user/Desktop/sizl/mono_pop/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/Users/user/Desktop/sizl/mono_pop/packages/mes/src/container/RawMaterial/MesRawMaterialStock.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\nimport { ExcelTable, Header as PageHeader, RequestMethod, columnlist, MAX_VALUE, TextEditor, excelDownload, PaginationComponent, ExcelDownloadModal } from 'shared'; // @ts-ignore\n\nimport { SelectColumn } from 'react-data-grid';\nimport Notiflix from \"notiflix\";\nimport { useRouter } from 'next/router';\nimport moment from 'moment';\nvar dummyDate = moment().subtract(10, 'days');\n\nvar MesRawMaterialStock = function MesRawMaterialStock(_ref) {\n  _s();\n\n  var page = _ref.page,\n      keyword = _ref.keyword,\n      option = _ref.option;\n  var router = useRouter();\n\n  var _useState = useState(false),\n      excelOpen = _useState[0],\n      setExcelOpen = _useState[1];\n\n  var _useState2 = useState([{\n    date: dummyDate.format('YYYY-MM-DD'),\n    useDate: 10,\n    code: 'SUS-111',\n    name: 'SUS360',\n    texture: 'SUS360',\n    depth: '1.2',\n    width: 3000,\n    height: 3000,\n    type: 'COIL',\n    amount: 1000,\n    number: \"\".concat(dummyDate.format('YYMMDD'), \"-01-01\"),\n    current: 1000,\n    customer: '한국상사'\n  }]),\n      basicRow = _useState2[0],\n      setBasicRow = _useState2[1];\n\n  var _useState3 = useState(columnlist[\"rawstockV1u\"]),\n      column = _useState3[0],\n      setColumn = _useState3[1];\n\n  var _useState4 = useState(new Set()),\n      selectList = _useState4[0],\n      setSelectList = _useState4[1];\n\n  var _useState5 = useState(['원자재 CODE', '원자재 품명', '재질', '원자재 LOT 번호', '거래처']),\n      optionList = _useState5[0],\n      setOptionList = _useState5[1];\n\n  var _useState6 = useState(0),\n      optionIndex = _useState6[0],\n      setOptionIndex = _useState6[1];\n\n  var _useState7 = useState({\n    page: 1,\n    total: 1\n  }),\n      pageInfo = _useState7[0],\n      setPageInfo = _useState7[1];\n\n  var _useState8 = useState({\n    from: moment().startOf('isoWeek').format('YYYY-MM-DD'),\n    to: moment().endOf('isoWeek').format('YYYY-MM-DD')\n  }),\n      selectDate = _useState8[0],\n      setSelectDate = _useState8[1]; // useEffect(() => {\n  //   setOptionIndex(option)\n  //   if(keyword){\n  //     SearchBasic(keyword, option, page).then(() => {\n  //       Notiflix.Loading.remove()\n  //     })\n  //   }else{\n  //     LoadBasic(page).then(() => {\n  //       Notiflix.Loading.remove()\n  //     })\n  //   }\n  // }, [page, keyword, option])\n\n\n  var loadAllSelectItems = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(column) {\n      var tmpColumn;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              tmpColumn = column.map( /*#__PURE__*/function () {\n                var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(v) {\n                  var tmpKey, res, pk;\n                  return _regeneratorRuntime.wrap(function _callee$(_context) {\n                    while (1) {\n                      switch (_context.prev = _context.next) {\n                        case 0:\n                          if (!(v.selectList && v.selectList.length === 0)) {\n                            _context.next = 10;\n                            break;\n                          }\n\n                          tmpKey = v.key;\n                          _context.next = 4;\n                          return RequestMethod('get', \"\".concat(tmpKey, \"List\"), {\n                            path: {\n                              page: 1,\n                              renderItem: MAX_VALUE\n                            }\n                          });\n\n                        case 4:\n                          res = _context.sent;\n                          pk = \"\";\n                          res.results.info_list && res.results.info_list.length && Object.keys(res.results.info_list[0]).map(function (v) {\n                            if (v.indexOf('_id') !== -1) {\n                              pk = v;\n                            }\n                          });\n                          return _context.abrupt(\"return\", _objectSpread(_objectSpread({}, v), {}, {\n                            selectList: _toConsumableArray(res.results.info_list.map(function (value) {\n                              return _objectSpread(_objectSpread({}, value), {}, {\n                                name: tmpKey === 'model' ? value.model : value.name,\n                                pk: value[pk]\n                              });\n                            }))\n                          }));\n\n                        case 10:\n                          if (!v.selectList) {\n                            _context.next = 14;\n                            break;\n                          }\n\n                          return _context.abrupt(\"return\", _objectSpread(_objectSpread({}, v), {}, {\n                            pk: v.unit_id\n                          }));\n\n                        case 14:\n                          return _context.abrupt(\"return\", v);\n\n                        case 15:\n                        case \"end\":\n                          return _context.stop();\n                      }\n                    }\n                  }, _callee);\n                }));\n\n                return function (_x2) {\n                  return _ref3.apply(this, arguments);\n                };\n              }()); // if(type !== 'productprocess'){\n\n              Promise.all(tmpColumn).then(function (res) {\n                setColumn(_toConsumableArray(res));\n              }); // }\n\n            case 2:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function loadAllSelectItems(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var SaveBasic = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return RequestMethod('post', \"moldSave\", _defineProperty({}, 'molds', basicRow.map(function (row, i) {\n                if (selectList.has(row.id)) {\n                  var selectKey = [];\n                  var additional = [];\n                  column.map(function (v) {\n                    if (v.selectList) {\n                      selectKey.push(v.key);\n                    }\n\n                    if (v.type === 'additional') {\n                      additional.push(v);\n                    }\n                  });\n                  var selectData = {};\n                  Object.keys(row).map(function (v) {\n                    if (v.indexOf('PK') !== -1) {\n                      selectData = _objectSpread(_objectSpread({}, selectData), {}, _defineProperty({}, v.split('PK')[0], row[v]));\n                    }\n\n                    if (v === 'unitWeight') {\n                      selectData = _objectSpread(_objectSpread({}, selectData), {}, {\n                        unitWeight: Number(row['unitWeight'])\n                      });\n                    }\n\n                    if (v === 'tmpId') {\n                      selectData = _objectSpread(_objectSpread({}, selectData), {}, {\n                        id: row['tmpId']\n                      });\n                    }\n                  });\n                  return _objectSpread(_objectSpread(_objectSpread({}, row), selectData), {}, {\n                    additional: _toConsumableArray(additional.map(function (v) {\n                      if (row[v.name]) {\n                        return {\n                          id: v.id,\n                          title: v.name,\n                          value: row[v.name],\n                          unit: v.unit\n                        };\n                      }\n                    }).filter(function (v) {\n                      return v;\n                    }))\n                  });\n                }\n              }).filter(function (v) {\n                return v;\n              })));\n\n            case 2:\n              res = _context3.sent;\n\n              if (res) {\n                if (res.status === 200) {\n                  Notiflix.Report.success('저장되었습니다.', '', '확인');\n\n                  if (keyword) {\n                    SearchBasic(keyword, option, page).then(function () {\n                      Notiflix.Loading.remove();\n                    });\n                  } else {\n                    LoadBasic(page).then(function () {\n                      Notiflix.Loading.remove();\n                    });\n                  }\n                }\n              }\n\n            case 4:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function SaveBasic() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  var LoadBasic = /*#__PURE__*/function () {\n    var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(page) {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              Notiflix.Loading.circle();\n              _context4.next = 3;\n              return RequestMethod('get', \"moldList\", {\n                path: {\n                  page: page || page !== 0 ? page : 1,\n                  renderItem: 18\n                }\n              });\n\n            case 3:\n              res = _context4.sent;\n\n              if (res && res.status === 200) {\n                setPageInfo(_objectSpread(_objectSpread({}, pageInfo), {}, {\n                  page: res.results.page,\n                  total: res.results.totalPages\n                }));\n                cleanUpData(res);\n              } else if (res.state === 401) {\n                Notiflix.Report.failure('불러올 수 없습니다.', '권한이 없습니다.', '확인', function () {\n                  router.back();\n                });\n              }\n\n            case 5:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    return function LoadBasic(_x3) {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n\n  var SearchBasic = /*#__PURE__*/function () {\n    var _ref6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(keyword, option, isPaging) {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              Notiflix.Loading.circle();\n\n              if (!isPaging) {\n                setOptionIndex(option);\n              }\n\n              _context5.next = 4;\n              return RequestMethod('get', \"moldSearch\", {\n                path: {\n                  page: isPaging !== null && isPaging !== void 0 ? isPaging : 1,\n                  renderItem: 18\n                },\n                params: {\n                  keyword: keyword !== null && keyword !== void 0 ? keyword : '',\n                  opt: option !== null && option !== void 0 ? option : 0\n                }\n              });\n\n            case 4:\n              res = _context5.sent;\n\n              if (res && res.status === 200) {\n                setPageInfo(_objectSpread(_objectSpread({}, pageInfo), {}, {\n                  page: res.results.page,\n                  total: res.results.totalPages\n                }));\n                cleanUpData(res);\n              }\n\n            case 6:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5);\n    }));\n\n    return function SearchBasic(_x4, _x5, _x6) {\n      return _ref6.apply(this, arguments);\n    };\n  }();\n\n  var cleanUpData = function cleanUpData(res) {\n    var tmpColumn = columnlist[\"mold\"];\n    var tmpRow = [];\n    tmpColumn = tmpColumn.map(function (column) {\n      var menuData;\n      res.results.menus && res.results.menus.map(function (menu) {\n        if (menu.colName === column.key) {\n          menuData = {\n            id: menu.id,\n            name: menu.title,\n            width: menu.width,\n            tab: menu.tab,\n            unit: menu.unit\n          };\n        } else if (menu.colName === 'id' && column.key === 'tmpId') {\n          menuData = {\n            id: menu.id,\n            name: menu.title,\n            width: menu.width,\n            tab: menu.tab,\n            unit: menu.unit\n          };\n        }\n      });\n\n      if (menuData) {\n        return _objectSpread(_objectSpread({}, column), menuData);\n      }\n    }).filter(function (v) {\n      return v;\n    });\n    var additionalMenus = res.results.menus ? res.results.menus.map(function (menu) {\n      if (menu.colName === null) {\n        return {\n          id: menu.id,\n          name: menu.title,\n          width: menu.width,\n          key: menu.title,\n          editor: TextEditor,\n          type: 'additional',\n          unit: menu.unit\n        };\n      }\n    }).filter(function (v) {\n      return v;\n    }) : [];\n    tmpRow = res.results.info_list;\n    loadAllSelectItems([].concat(_toConsumableArray(tmpColumn), _toConsumableArray(additionalMenus)));\n    var selectKey = \"\";\n    var additionalData = [];\n    tmpColumn.map(function (v) {\n      if (v.selectList) {\n        selectKey = v.key;\n      }\n    });\n    additionalMenus.map(function (v) {\n      if (v.type === 'additional') {\n        additionalData.push(v.key);\n      }\n    });\n    var pk = \"\";\n    Object.keys(tmpRow).map(function (v) {\n      if (v.indexOf('_id') !== -1) {\n        pk = v;\n      }\n    });\n    var tmpBasicRow = tmpRow.map(function (row, index) {\n      var appendAdditional = {};\n      row.additional && row.additional.map(function (v) {\n        appendAdditional = _objectSpread(_objectSpread({}, appendAdditional), {}, _defineProperty({}, v.title, v.value));\n      });\n      var random_id = Math.random() * 1000;\n      return _objectSpread(_objectSpread({\n        cm_id: index === 0 || row.ppd.seq === 1 ? row.product.raw_material.model.model : undefined,\n        cm_idPK: row.product.raw_material.model.cm_id,\n        mold_id: row.mold_id,\n        mold_name: row.ppd.mold_name,\n        limit: row.limit,\n        inspect: row.inspect,\n        current: row.current,\n        customer_id: index === 0 || row.ppd.seq === 1 ? row.product.raw_material.model.customer.name : undefined,\n        customer_idPK: row.product.raw_material.model.customer.customer_id,\n        code: index === 0 || row.ppd.seq === 1 ? row.product.raw_material.code : undefined,\n        name: index === 0 || row.ppd.seq === 1 ? row.product.raw_material.name : undefined,\n        seq: row.ppd.seq,\n        cavity: row.ppd.cavity,\n        spm: row.spm,\n        slideHeight: row.slideHeight,\n        process_id: row.ppd.process.name\n      }, appendAdditional), {}, {\n        id: \"mold_\".concat(random_id)\n      });\n    });\n    setBasicRow(_toConsumableArray(tmpBasicRow));\n  };\n\n  var downloadExcel = function downloadExcel() {\n    var tmpSelectList = [];\n    basicRow.map(function (row) {\n      tmpSelectList.push(selectList.has(row.id));\n    });\n    excelDownload(column, basicRow, \"mold\", \"mold\", tmpSelectList);\n  };\n\n  var onClickHeaderButton = function onClickHeaderButton(index) {\n    switch (index) {\n      case 0:\n        setExcelOpen(true);\n        break;\n\n      case 1:\n        router.push(\"/mes/item/manage/mold\");\n        break;\n\n      case 2:\n        SaveBasic();\n        break;\n    }\n  };\n\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 395,\n      columnNumber: 5\n    }\n  }, __jsx(PageHeader, {\n    isSearch: true,\n    searchKeyword: keyword,\n    onChangeSearchKeyword: function onChangeSearchKeyword(keyword) {\n      if (keyword) {\n        router.push(\"/mes/rawmaterial/input?page=1&keyword=\".concat(keyword, \"&opt=\").concat(optionIndex));\n      } else {\n        router.push(\"/mes/rawmaterial/input?page=1&keyword=\");\n      }\n    },\n    searchOptionList: optionList,\n    onChangeSearchOption: function onChangeSearchOption(option) {\n      setOptionIndex(option);\n    },\n    calendarTitle: '입고일',\n    optionIndex: optionIndex,\n    isCalendar: true,\n    calendarType: 'period',\n    selectDate: selectDate //@ts-ignore\n    ,\n    setSelectDate: setSelectDate,\n    title: \"원자재 입고 등록\",\n    buttons: ['엑셀로 받기', '수정하기', '저장하기', '삭제'],\n    buttonsOnclick: function buttonsOnclick() {} // onClickHeaderButton\n    ,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 396,\n      columnNumber: 7\n    }\n  }), __jsx(ExcelTable, {\n    editable: true,\n    resizable: true,\n    headerList: [SelectColumn].concat(_toConsumableArray(column)),\n    row: basicRow // setRow={setBasicRow}\n    ,\n    setRow: function setRow(e) {\n      var tmp = selectList;\n      e.map(function (v) {\n        if (v.isChange) tmp.add(v.id);\n      });\n      setSelectList(tmp);\n      setBasicRow(e);\n    },\n    selectList: selectList //@ts-ignore\n    ,\n    setSelectList: setSelectList,\n    height: basicRow.length * 40 >= 40 * 18 + 56 ? 40 * 19 : basicRow.length * 40 + 56,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 426,\n      columnNumber: 7\n    }\n  }), __jsx(PaginationComponent, {\n    currentPage: pageInfo.page,\n    totalPage: pageInfo.total,\n    setPage: function setPage(page) {\n      if (keyword) {\n        router.push(\"/mes/basic/mold?page=\".concat(page, \"&keyword=\").concat(keyword, \"&opt=\").concat(option));\n      } else {\n        router.push(\"/mes/basic/mold?page=\".concat(page));\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 448,\n      columnNumber: 7\n    }\n  }), __jsx(ExcelDownloadModal, {\n    isOpen: excelOpen,\n    column: column,\n    basicRow: basicRow,\n    filename: \"\\uAE08\\uD615\\uAE30\\uBCF8\\uC815\\uBCF4\",\n    sheetname: \"\\uAE08\\uD615\\uAE30\\uBCF8\\uC815\\uBCF4\",\n    selectList: selectList,\n    tab: 'ROLE_BASE_07',\n    setIsOpen: setExcelOpen,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 459,\n      columnNumber: 7\n    }\n  }));\n};\n\n_s(MesRawMaterialStock, \"3QyDq2vq1d+jjAPlOaTSNxMu9rI=\", false, function () {\n  return [useRouter];\n});\n\n_c = MesRawMaterialStock;\nexport var getServerSideProps = function getServerSideProps(ctx) {\n  var _ctx$query$page, _ctx$query$keyword, _ctx$query$opt;\n\n  return {\n    props: {\n      page: (_ctx$query$page = ctx.query.page) !== null && _ctx$query$page !== void 0 ? _ctx$query$page : 1,\n      keyword: (_ctx$query$keyword = ctx.query.keyword) !== null && _ctx$query$keyword !== void 0 ? _ctx$query$keyword : \"\",\n      option: (_ctx$query$opt = ctx.query.opt) !== null && _ctx$query$opt !== void 0 ? _ctx$query$opt : 0\n    }\n  };\n};\nexport { MesRawMaterialStock };\n\nvar _c;\n\n$RefreshReg$(_c, \"MesRawMaterialStock\");","map":{"version":3,"sources":["/Users/user/Desktop/sizl/mono_pop/packages/mes/src/container/RawMaterial/MesRawMaterialStock.tsx"],"names":["React","useState","ExcelTable","Header","PageHeader","RequestMethod","columnlist","MAX_VALUE","TextEditor","excelDownload","PaginationComponent","ExcelDownloadModal","SelectColumn","Notiflix","useRouter","moment","dummyDate","subtract","MesRawMaterialStock","page","keyword","option","router","excelOpen","setExcelOpen","date","format","useDate","code","name","texture","depth","width","height","type","amount","number","current","customer","basicRow","setBasicRow","column","setColumn","Set","selectList","setSelectList","optionList","setOptionList","optionIndex","setOptionIndex","total","pageInfo","setPageInfo","from","startOf","to","endOf","selectDate","setSelectDate","loadAllSelectItems","tmpColumn","map","v","length","tmpKey","key","path","renderItem","res","pk","results","info_list","Object","keys","indexOf","value","model","unit_id","Promise","all","then","SaveBasic","row","i","has","id","selectKey","additional","push","selectData","split","unitWeight","Number","title","unit","filter","status","Report","success","SearchBasic","Loading","remove","LoadBasic","circle","totalPages","cleanUpData","state","failure","back","isPaging","params","opt","tmpRow","menuData","menus","menu","colName","tab","additionalMenus","editor","additionalData","tmpBasicRow","index","appendAdditional","random_id","Math","random","cm_id","ppd","seq","product","raw_material","undefined","cm_idPK","mold_id","mold_name","limit","inspect","customer_id","customer_idPK","cavity","spm","slideHeight","process_id","process","downloadExcel","tmpSelectList","onClickHeaderButton","e","tmp","isChange","add","getServerSideProps","ctx","props","query"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react'\nimport {\n  ExcelTable,\n  Header as PageHeader,\n  RequestMethod,\n  columnlist,\n  MAX_VALUE,\n  DropDownEditor,\n  TextEditor,\n  excelDownload,\n  PaginationComponent,\n  ExcelDownloadModal,\n  IExcelHeaderType, IItemMenuType\n} from 'shared'\n// @ts-ignore\nimport {SelectColumn} from 'react-data-grid'\nimport Notiflix from \"notiflix\";\nimport {useRouter} from 'next/router'\nimport {loadAll} from 'react-cookies'\nimport {NextPageContext} from 'next'\nimport moment from 'moment'\n\ninterface IProps {\n  children?: any\n  page?: number\n  keyword?: string\n  option?: number\n}\n\nconst dummyDate = moment().subtract(10, 'days')\n\nconst MesRawMaterialStock = ({page, keyword, option}: IProps) => {\n  const router = useRouter()\n\n  const [excelOpen, setExcelOpen] = useState<boolean>(false)\n\n  const [basicRow, setBasicRow] = useState<Array<any>>([{\n    date: dummyDate.format('YYYY-MM-DD'), useDate: 10,\n    code: 'SUS-111', name: 'SUS360', texture: 'SUS360', depth: '1.2', width: 3000, height: 3000, type: 'COIL', amount: 1000,\n    number: `${dummyDate.format('YYMMDD')}-01-01`, current: 1000, customer: '한국상사',\n  }])\n  const [column, setColumn] = useState<Array<IExcelHeaderType>>( columnlist[\"rawstockV1u\"])\n  const [selectList, setSelectList] = useState<Set<number>>(new Set())\n  const [optionList, setOptionList] = useState<string[]>(['원자재 CODE', '원자재 품명', '재질', '원자재 LOT 번호', '거래처'])\n  const [optionIndex, setOptionIndex] = useState<number>(0)\n\n  const [pageInfo, setPageInfo] = useState<{page: number, total: number}>({\n    page: 1,\n    total: 1\n  })\n\n  const [selectDate, setSelectDate] = useState<{from:string, to:string}>({\n    from: moment().startOf('isoWeek').format('YYYY-MM-DD'),\n    to: moment().endOf('isoWeek').format('YYYY-MM-DD')\n  });\n\n  // useEffect(() => {\n  //   setOptionIndex(option)\n  //   if(keyword){\n  //     SearchBasic(keyword, option, page).then(() => {\n  //       Notiflix.Loading.remove()\n  //     })\n  //   }else{\n  //     LoadBasic(page).then(() => {\n  //       Notiflix.Loading.remove()\n  //     })\n  //   }\n  // }, [page, keyword, option])\n\n\n  const loadAllSelectItems = async (column: IExcelHeaderType[]) => {\n    let tmpColumn = column.map(async (v: any) => {\n      if(v.selectList && v.selectList.length === 0){\n        let tmpKey = v.key\n\n\n        let res: any\n        res = await RequestMethod('get', `${tmpKey}List`,{\n          path: {\n            page: 1,\n            renderItem: MAX_VALUE,\n          }\n        })\n\n\n        let pk = \"\";\n\n        res.results.info_list && res.results.info_list.length && Object.keys(res.results.info_list[0]).map((v) => {\n          if(v.indexOf('_id') !== -1){\n            pk = v\n          }\n        })\n        return {\n          ...v,\n          selectList: [...res.results.info_list.map((value: any) => {\n            return {\n              ...value,\n              name: tmpKey === 'model' ? value.model : value.name,\n              pk: value[pk]\n            }\n          })]\n        }\n\n      }else{\n        if(v.selectList){\n          return {\n            ...v,\n            pk: v.unit_id\n          }\n        }else{\n          return v\n        }\n      }\n    })\n\n    // if(type !== 'productprocess'){\n    Promise.all(tmpColumn).then(res => {\n      setColumn([...res])\n    })\n    // }\n  }\n\n  const SaveBasic = async () => {\n    let res: any\n    res = await RequestMethod('post', `moldSave`,\n      {\n        ['molds']: basicRow.map((row, i) => {\n          if(selectList.has(row.id)){\n            let selectKey: string[] = []\n            let additional:any[] = []\n            column.map((v) => {\n              if(v.selectList){\n                selectKey.push(v.key)\n              }\n\n              if(v.type === 'additional'){\n                additional.push(v)\n              }\n            })\n\n            let selectData: any = {}\n\n            Object.keys(row).map(v => {\n              if(v.indexOf('PK') !== -1) {\n                selectData = {\n                  ...selectData,\n                  [v.split('PK')[0]]: row[v]\n                }\n              }\n\n              if(v === 'unitWeight') {\n                selectData = {\n                  ...selectData,\n                  unitWeight: Number(row['unitWeight'])\n                }\n              }\n\n              if(v === 'tmpId') {\n                selectData = {\n                  ...selectData,\n                  id: row['tmpId']\n                }\n              }\n            })\n\n            return {\n              ...row,\n              ...selectData,\n              additional: [\n                ...additional.map(v => {\n                  if(row[v.name]) {\n                    return {\n                      id: v.id,\n                      title: v.name,\n                      value: row[v.name],\n                      unit: v.unit\n                    }\n                  }\n                }).filter((v) => v)\n              ]\n            }\n\n          }\n        }).filter((v) => v)\n      })\n\n\n    if(res){\n      if(res.status === 200){\n        Notiflix.Report.success('저장되었습니다.','','확인');\n        if(keyword){\n          SearchBasic(keyword, option, page).then(() => {\n            Notiflix.Loading.remove()\n          })\n        }else{\n          LoadBasic(page).then(() => {\n            Notiflix.Loading.remove()\n          })\n        }\n      }\n    }\n  }\n\n\n  const LoadBasic = async (page?: number) => {\n    Notiflix.Loading.circle()\n    const res = await RequestMethod('get', `moldList`,{\n      path: {\n        page: (page || page !== 0) ? page : 1,\n        renderItem: 18,\n      }\n    })\n\n    if(res && res.status === 200){\n      setPageInfo({\n        ...pageInfo,\n        page: res.results.page,\n        total: res.results.totalPages\n      })\n      cleanUpData(res)\n    }else if (res.state === 401) {\n      Notiflix.Report.failure('불러올 수 없습니다.', '권한이 없습니다.', '확인', () => {\n        router.back()\n      })\n    }\n\n  }\n\n  const SearchBasic = async (keyword: any, option: number, isPaging?: number) => {\n    Notiflix.Loading.circle()\n    if(!isPaging){\n      setOptionIndex(option)\n    }\n    const res = await RequestMethod('get', `moldSearch`,{\n      path: {\n        page: isPaging ?? 1,\n        renderItem: 18,\n      },\n      params: {\n        keyword: keyword ?? '',\n        opt: option ?? 0\n      }\n    })\n\n    if(res && res.status === 200){\n      setPageInfo({\n        ...pageInfo,\n        page: res.results.page,\n        total: res.results.totalPages\n      })\n      cleanUpData(res)\n    }\n  }\n\n  const cleanUpData = (res: any) => {\n    let tmpColumn = columnlist[\"mold\"];\n    let tmpRow = []\n    tmpColumn = tmpColumn.map((column: any) => {\n      let menuData: object | undefined;\n      res.results.menus && res.results.menus.map((menu: any) => {\n        if(menu.colName === column.key){\n          menuData = {\n            id: menu.id,\n            name: menu.title,\n            width: menu.width,\n            tab:menu.tab,\n            unit:menu.unit\n          }\n        } else if(menu.colName === 'id' && column.key === 'tmpId'){\n          menuData = {\n            id: menu.id,\n            name: menu.title,\n            width: menu.width,\n            tab:menu.tab,\n            unit:menu.unit\n          }\n        }\n      })\n\n      if(menuData){\n        return {\n          ...column,\n          ...menuData\n        }\n      }\n    }).filter((v:any) => v)\n\n    let additionalMenus = res.results.menus ? res.results.menus.map((menu:any) => {\n      if(menu.colName === null){\n        return {\n          id: menu.id,\n          name: menu.title,\n          width: menu.width,\n          key: menu.title,\n          editor: TextEditor,\n          type: 'additional',\n          unit: menu.unit\n        }\n      }\n    }).filter((v: any) => v) : []\n\n\n    tmpRow = res.results.info_list\n\n\n    loadAllSelectItems( [\n      ...tmpColumn,\n      ...additionalMenus\n    ] )\n\n\n    let selectKey = \"\"\n    let additionalData: any[] = []\n    tmpColumn.map((v: any) => {\n      if(v.selectList){\n        selectKey = v.key\n      }\n    })\n\n    additionalMenus.map((v: any) => {\n      if(v.type === 'additional'){\n        additionalData.push(v.key)\n      }\n    })\n\n    let pk = \"\";\n    Object.keys(tmpRow).map((v) => {\n      if(v.indexOf('_id') !== -1){\n        pk = v\n      }\n    })\n\n    let tmpBasicRow = tmpRow.map((row: any, index: number) => {\n\n      let appendAdditional: any = {}\n\n      row.additional && row.additional.map((v: any) => {\n        appendAdditional = {\n          ...appendAdditional,\n          [v.title]: v.value\n        }\n      })\n\n      let random_id = Math.random()*1000;\n      return {\n        cm_id:(index === 0 || row.ppd.seq === 1) ? row.product.raw_material.model.model : undefined,\n        cm_idPK:row.product.raw_material.model.cm_id,\n        mold_id:row.mold_id,\n        mold_name:row.ppd.mold_name,\n        limit:row.limit,\n        inspect:row.inspect,\n        current:row.current,\n        customer_id: (index === 0 || row.ppd.seq === 1) ? row.product.raw_material.model.customer.name : undefined,\n        customer_idPK: row.product.raw_material.model.customer.customer_id,\n        code: (index === 0 || row.ppd.seq === 1) ? row.product.raw_material.code : undefined,\n        name: (index === 0 || row.ppd.seq === 1) ? row.product.raw_material.name : undefined,\n        seq: row.ppd.seq,\n        cavity: row.ppd.cavity,\n        spm: row.spm,\n        slideHeight: row.slideHeight,\n        process_id: row.ppd.process.name,\n        ...appendAdditional,\n        id: `mold_${random_id}`,\n      }\n    })\n\n    setBasicRow([...tmpBasicRow])\n  }\n\n  const downloadExcel = () => {\n    let tmpSelectList: boolean[] = []\n    basicRow.map(row => {\n      tmpSelectList.push(selectList.has(row.id))\n    })\n    excelDownload(column, basicRow, `mold`, \"mold\", tmpSelectList)\n  }\n\n  const onClickHeaderButton = (index: number) => {\n    switch(index){\n      case 0:\n        setExcelOpen(true)\n        break;\n      case 1:\n\n        router.push(`/mes/item/manage/mold`)\n\n        break;\n      case 2:\n        SaveBasic()\n        break;\n    }\n  }\n\n  return (\n    <div>\n      <PageHeader\n        isSearch\n        searchKeyword={keyword}\n        onChangeSearchKeyword={(keyword) => {\n          if(keyword){\n            router.push(`/mes/rawmaterial/input?page=1&keyword=${keyword}&opt=${optionIndex}`)\n          }else{\n            router.push(`/mes/rawmaterial/input?page=1&keyword=`)\n          }\n        }}\n        searchOptionList={optionList}\n        onChangeSearchOption={(option) => {\n          setOptionIndex(option)\n        }}\n        calendarTitle={'입고일'}\n        optionIndex={optionIndex}\n        isCalendar\n        calendarType={'period'}\n        selectDate={selectDate}\n        //@ts-ignore\n        setSelectDate={setSelectDate}\n        title={\"원자재 입고 등록\"}\n        buttons={\n          ['엑셀로 받기', '수정하기', '저장하기', '삭제']\n        }\n        buttonsOnclick={\n          () => {}\n          // onClickHeaderButton\n        }\n      />\n      <ExcelTable\n        editable\n        resizable\n        headerList={[\n          SelectColumn,\n          ...column\n        ]}\n        row={basicRow}\n        // setRow={setBasicRow}\n        setRow={(e) => {\n          let tmp: Set<any> = selectList\n          e.map(v => {\n            if(v.isChange) tmp.add(v.id)\n          })\n          setSelectList(tmp)\n          setBasicRow(e)\n        }}\n        selectList={selectList}\n        //@ts-ignore\n        setSelectList={setSelectList}\n        height={basicRow.length * 40 >= 40*18+56 ? 40*19 : basicRow.length * 40 + 56}\n      />\n      <PaginationComponent\n        currentPage={pageInfo.page}\n        totalPage={pageInfo.total}\n        setPage={(page) => {\n          if(keyword){\n            router.push(`/mes/basic/mold?page=${page}&keyword=${keyword}&opt=${option}`)\n          }else{\n            router.push(`/mes/basic/mold?page=${page}`)\n          }\n        }}\n      />\n      <ExcelDownloadModal\n        isOpen={excelOpen}\n        column={column}\n        basicRow={basicRow}\n        filename={`금형기본정보`}\n        sheetname={`금형기본정보`}\n        selectList={selectList}\n        tab={'ROLE_BASE_07'}\n        setIsOpen={setExcelOpen}\n      />\n    </div>\n  );\n}\n\nexport const getServerSideProps = (ctx: NextPageContext) => {\n  return {\n    props: {\n      page: ctx.query.page ?? 1,\n      keyword: ctx.query.keyword ?? \"\",\n      option: ctx.query.opt ?? 0,\n    }\n  }\n}\n\nexport {MesRawMaterialStock};\n"]},"metadata":{},"sourceType":"module"}