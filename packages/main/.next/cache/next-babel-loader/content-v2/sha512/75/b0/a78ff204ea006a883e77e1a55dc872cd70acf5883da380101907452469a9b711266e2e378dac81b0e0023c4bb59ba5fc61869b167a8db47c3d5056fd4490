{"ast":null,"code":"var _jsxFileName = \"/Users/user/Desktop/sizl/mono_pop/packages/main/pages/mes/basic/customer/model.tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport MenuNavigation from '../../../../component/MenuNav/MenuNavigation';\nimport ProfileHeader from '../../../../component/Profile/ProfileHeader'; // @ts-ignore\n\nimport { BasicModel } from 'basic';\n\nconst BasicContainer = ({\n  page,\n  keyword,\n  option\n}) => {\n  return __jsx(\"div\", {\n    style: {\n      display: 'flex'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }, __jsx(MenuNavigation, {\n    pageType: 'BASIC',\n    subType: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }\n  }), __jsx(\"div\", {\n    style: {\n      paddingBottom: 40\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }\n  }, __jsx(ProfileHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 17\n    }\n  }), __jsx(BasicModel, {\n    page: page,\n    keyword: keyword,\n    option: option,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 17\n    }\n  })));\n};\n\nexport const getServerSideProps = ctx => {\n  var _ctx$query$page, _ctx$query$keyword, _ctx$query$opt;\n\n  return {\n    props: {\n      page: (_ctx$query$page = ctx.query.page) !== null && _ctx$query$page !== void 0 ? _ctx$query$page : 1,\n      keyword: (_ctx$query$keyword = ctx.query.keyword) !== null && _ctx$query$keyword !== void 0 ? _ctx$query$keyword : \"\",\n      option: (_ctx$query$opt = ctx.query.opt) !== null && _ctx$query$opt !== void 0 ? _ctx$query$opt : 0\n    }\n  };\n}; // BasicContainer.getInitialProps = async ({ query }) => {\n//     let { page, keyword, opt } = query\n//     if (typeof page === 'string')\n//         page = parseInt(page);\n//     if (typeof opt === 'string')\n//         opt = parseInt(opt);\n//     return { page, keyword, option: opt };\n// }\n\nexport default BasicContainer;","map":{"version":3,"sources":["/Users/user/Desktop/sizl/mono_pop/packages/main/pages/mes/basic/customer/model.tsx"],"names":["React","MenuNavigation","ProfileHeader","BasicModel","BasicContainer","page","keyword","option","display","paddingBottom","getServerSideProps","ctx","props","query","opt"],"mappings":";;AAAA,OAAOA,KAAP,MAAyC,OAAzC;AACA,OAAOC,cAAP,MAA2B,8CAA3B;AACA,OAAOC,aAAP,MAA0B,6CAA1B,C,CACA;;AAGA,SAAQC,UAAR,QAAyB,OAAzB;;AASA,MAAMC,cAAc,GAAG,CAAC;AAACC,EAAAA,IAAD;AAAOC,EAAAA,OAAP;AAAgBC,EAAAA;AAAhB,CAAD,KAAqC;AAGxD,SACI;AAAK,IAAA,KAAK,EAAE;AAACC,MAAAA,OAAO,EAAE;AAAV,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,cAAD;AAAgB,IAAA,QAAQ,EAAE,OAA1B;AAAmC,IAAA,OAAO,EAAE,CAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI;AAAK,IAAA,KAAK,EAAE;AAACC,MAAAA,aAAa,EAAE;AAAhB,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,MAAC,UAAD;AAAY,IAAA,IAAI,EAAEJ,IAAlB;AAAwB,IAAA,OAAO,EAAEC,OAAjC;AAA0C,IAAA,MAAM,EAAEC,MAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CAFJ,CADJ;AASH,CAZD;;AAcA,OAAO,MAAMG,kBAAkB,GAAIC,GAAD,IAA0B;AAAA;;AACxD,SAAO;AACHC,IAAAA,KAAK,EAAE;AACHP,MAAAA,IAAI,qBAAEM,GAAG,CAACE,KAAJ,CAAUR,IAAZ,6DAAoB,CADrB;AAEHC,MAAAA,OAAO,wBAAEK,GAAG,CAACE,KAAJ,CAAUP,OAAZ,mEAAuB,EAF3B;AAGHC,MAAAA,MAAM,oBAAEI,GAAG,CAACE,KAAJ,CAAUC,GAAZ,2DAAmB;AAHtB;AADJ,GAAP;AAOH,CARM,C,CAUP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAeV,cAAf","sourcesContent":["import React, {useEffect, useState} from 'react'\nimport MenuNavigation from '../../../../component/MenuNav/MenuNavigation'\nimport ProfileHeader from '../../../../component/Profile/ProfileHeader'\n// @ts-ignore\nimport {SelectColumn} from 'react-data-grid'\nimport {NextPageContext} from 'next'\nimport {BasicModel} from 'basic'\n\ninterface IProps {\n    children?: any\n    page?: number\n    keyword?: string\n    option?: number\n}\n\nconst BasicContainer = ({page, keyword, option}: IProps) => {\n\n\n    return (\n        <div style={{display: 'flex', }}>\n            <MenuNavigation pageType={'BASIC'} subType={1}/>\n            <div style={{paddingBottom: 40}}>\n                <ProfileHeader/>\n                <BasicModel page={page} keyword={keyword} option={option}/>\n            </div>\n        </div>\n    );\n}\n\nexport const getServerSideProps = (ctx: NextPageContext) => {\n    return {\n        props: {\n            page: ctx.query.page ?? 1,\n            keyword: ctx.query.keyword ?? \"\",\n            option: ctx.query.opt ?? 0,\n        }\n    }\n}\n\n// BasicContainer.getInitialProps = async ({ query }) => {\n//     let { page, keyword, opt } = query\n//     if (typeof page === 'string')\n//         page = parseInt(page);\n//     if (typeof opt === 'string')\n//         opt = parseInt(opt);\n//     return { page, keyword, option: opt };\n// }\n\nexport default BasicContainer;\n"]},"metadata":{},"sourceType":"module"}