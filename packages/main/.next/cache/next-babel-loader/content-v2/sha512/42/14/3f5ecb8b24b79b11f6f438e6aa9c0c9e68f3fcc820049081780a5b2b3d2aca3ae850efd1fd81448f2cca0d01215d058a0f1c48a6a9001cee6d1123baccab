{"ast":null,"code":"import Axios from 'axios';\nimport cookie from 'react-cookies';\nimport { SF_ENDPOINT, SF_ENDPOINT_EXCEL } from './configset';\nimport Notiflix from 'notiflix';\nexport const requestApi = async (type, url, data, token, contentsType) => {\n  const ENDPOINT = `${SF_ENDPOINT}`;\n\n  switch (type) {\n    case 'get':\n      let tmpUrl = `${ENDPOINT}${url}`;\n\n      if (data) {\n        if (data.path) {\n          Object.values(data.path).map(v => {\n            if (v) {\n              tmpUrl += `/${v}`;\n            }\n          });\n        }\n\n        if (data.params) {\n          Object.keys(data.params).map((v, i) => {\n            if (i === 0) {\n              tmpUrl += `?${v}=${data.params[v]}`;\n            } else {\n              tmpUrl += `&${v}=${data.params[v]}`;\n            }\n          });\n        }\n      }\n\n      return Axios.get(tmpUrl, token && {\n        'headers': {\n          'Authorization': token\n        },\n        responseType: contentsType\n      }).then(result => {\n        // if(result.data.status !== 200){\n        //   Notiflix.Report.failure('불러올 수 없습니다.', result.data.message, '확인')\n        //   return false\n        // }\n        return result.data;\n      }).catch(error => {\n        if (error.response.status === 406 || error.response.status === 401) {\n          return {\n            state: 401\n          };\n        } else if (error.response.status === 500) {\n          Notiflix.Report.failure('서버 에러', '서버 에러입니다. 관리자에게 문의하세요', '확인');\n          return false;\n        }\n      });\n\n    case 'post':\n      let postUrl = '';\n\n      if (url.indexOf('http://') !== -1) {\n        postUrl = url;\n      } else {\n        postUrl = ENDPOINT + url;\n      }\n\n      return Axios.post(postUrl, data, token && {\n        'headers': {\n          'Authorization': token\n        },\n        responseType: contentsType\n      }).then(result => {\n        return result.data;\n      }).catch(error => {\n        if (error.response.status === 400) {\n          Notiflix.Report.failure('저장할 수 없습니다.', '입력값을 확인해주세요', '확인');\n        } else if (error.response.status === 500) {\n          Notiflix.Report.failure('서버 에러', '서버 에러입니다. 관리자에게 문의하세요', '확인');\n        }\n\n        return false;\n      });\n\n    case 'put':\n      return Axios.put(ENDPOINT + url, data, token && {\n        'headers': {\n          'Authorization': token\n        },\n        responseType: contentsType\n      }).then(result => {\n        if (result.data.status !== 200) {\n          Notiflix.Report.failure('저장할 수 없습니다.', result.data.message, '확인');\n          return false;\n        }\n\n        return result;\n      }).catch(error => {\n        return false;\n      });\n\n    case 'delete':\n      return Axios.delete(ENDPOINT + url, token && {\n        'headers': {\n          'Authorization': token\n        },\n        responseType: contentsType,\n        data: data\n      }).then(result => {\n        if (result.data.status !== 200) {\n          Notiflix.Report.failure('삭제할 수 없습니다.', result.data.message, '확인');\n          return false;\n        }\n\n        return result;\n      }).catch(error => {\n        if (error.response.status === 400) {\n          Notiflix.Report.failure('삭제할 수 없습니다.', '입력값을 확인해주세요', '확인');\n        }\n\n        return false;\n      });\n  }\n};\nexport const RequestMethod = async (MethodType, apiType, data, token, responseType) => {\n  const tokenData = token !== null && token !== void 0 ? token : cookie.load('userInfo').token;\n\n  if (apiType === 'excelDownload') {\n    return Axios.post(ApiList[apiType], data, tokenData && {\n      'headers': {\n        'Authorization': tokenData\n      },\n      responseType: responseType\n    }).then(result => {\n      return result.data;\n    }).catch(error => {\n      if (error.response.status === 400) {\n        Notiflix.Report.failure('저장할 수 없습니다.', '입력값을 확인해주세요', '확인');\n      } else if (error.response.status === 500) {\n        Notiflix.Report.failure('서버 에러', '서버 에러입니다. 관리자에게 문의하세요', '확인');\n      }\n\n      return false;\n    });\n  } else if (apiType === 'excelFormatDownload') {\n    let tmpUrl = ApiList[apiType];\n\n    if (data) {\n      if (data.path) {\n        Object.values(data.path).map(v => {\n          if (v) {\n            tmpUrl += `/${v}`;\n          }\n        });\n      }\n\n      if (data.params) {\n        Object.keys(data.params).map((v, i) => {\n          if (i === 0) {\n            tmpUrl += `?${v}=${data.params[v]}`;\n          } else {\n            tmpUrl += `&${v}=${data.params[v]}`;\n          }\n        });\n      }\n    }\n\n    return Axios.get(tmpUrl, tokenData && {\n      'headers': {\n        'Authorization': tokenData\n      },\n      responseType: responseType\n    }).then(result => {\n      return result.data;\n    }).catch(error => {\n      if (error.response.status === 400) {\n        Notiflix.Report.failure('저장할 수 없습니다.', '입력값을 확인해주세요', '확인');\n      } else if (error.response.status === 500) {\n        Notiflix.Report.failure('서버 에러', '서버 에러입니다. 관리자에게 문의하세요', '확인');\n      }\n\n      return false;\n    });\n  } else {\n    const response = await requestApi(MethodType, ApiList[apiType], data, tokenData, responseType);\n    return response;\n  }\n};\nconst ApiList = {\n  //create\n  authorityCreate: `/api/v1/member/auth/create`,\n  //update\n  authorityUpdate: `/api/v1/member/auth/update`,\n  //save\n  memberSave: `/api/v1/member/save`,\n  customerSave: `/api/v1/customer/save`,\n  modelSave: `/api/v1/customer/model/save`,\n  processSave: `/api/v1/process/save`,\n  machineSave: `/api/v1/machine/save`,\n  productSave: `/api/v1/product/save`,\n  rawmaterialSave: `/api/v1/rawmaterial/save`,\n  moldSave: `/api/v1/mold/save`,\n  pauseSave: `/api/v1/process/reason/pause/save`,\n  defectSave: `/api/v1/process/reason/defect/save`,\n  rawinSave: `/api/v1/rawmaterial/warehouse/save`,\n  rawstockSave: `/api/v1/rawmaterial/warehouse/save`,\n  productprocessSave: `/api/v1/product/process/save`,\n  stockSummarySave: `/api/v1/stock/summary/save`,\n  operationSave: `/api/v1/operation/save`,\n  shipmentSave: `/api/v1/shipment/save`,\n  recordSave: `/api/v1/record/save`,\n  //modify\n  operationModify: `/api/v1/operation/modify`,\n  //load\n  authorityLoad: `/api/v1/member/auth/load`,\n  //recent\n  operationRecent: `/api/v1/operation/recent`,\n  //delete\n  authorityDelete: `/api/v1/member/auth/delete`,\n  memberDelete: `/api/v1/member/delete`,\n  customerDelete: `/api/v1/customer/delete`,\n  modelDelete: `/api/v1/customer/model/delete`,\n  processDelete: `/api/v1/process/delete`,\n  machineDelete: `/api/v1/machine/delete`,\n  productDelete: `/api/v1/product/delete`,\n  rawmaterialDelete: `/api/v1/rawmaterial/delete`,\n  moldDelete: `/api/v1/mold/delete`,\n  pauseDelete: `/api/v1/process/reason/pause/delete`,\n  defectDelete: `/api/v1/process/reason/defect/delete`,\n  rawinDelete: `/api/v1/rawmaterial/warehouse/delete`,\n  operationDelete: `/api/v1/operation/delete`,\n  shipmentDelete: '/api/v1/shipment/delete',\n  stockSummaryDelete: `/api/v1/stock/summary/delete`,\n  //list\n  authorityList: `/api/v1/member/auth/list`,\n  memberList: `/api/v1/member/list`,\n  customerList: `/api/v1/customer/list`,\n  modelList: `/api/v1/customer/model/list`,\n  processList: `/api/v1/process/list`,\n  machineList: `/api/v1/machine/list`,\n  productList: `/api/v1/product/list`,\n  rawmaterialList: `/api/v1/rawmaterial/list`,\n  moldList: `/api/v1/mold/list`,\n  pauseReasonList: '/api/v1/process/reason/pause/list',\n  defectReasonList: '/api/v1/process/reason/defect/list',\n  rawinList: `/api/v1/rawmaterial/warehouse/list`,\n  rawstockList: `/api/v1/rawmaterial/warehouse/list`,\n  productprocessList: `/api/v1/product/process/load`,\n  stockList: '/api/v1/stock/list',\n  stockProductList: '/api/v1/stock/summary',\n  stockSummaryList: '/api/v1/stock/summary/list',\n  operactionList: `/api/v1/operation/list`,\n  defectList: `/api/v1/quality/statistics/defect`,\n  shipmentList: '/api/v1/shipment/list',\n  recordList: `/api/v1/record/list`,\n  recordSumList: `/api/v1/record/summation/list`,\n  //search\n  memberSearch: `/api/v1/member/search`,\n  customerSearch: `/api/v1/customer/search`,\n  modelSearch: `/api/v1/customer/model/search`,\n  processSearch: `/api/v1/process/search`,\n  machineSearch: `/api/v1/machine/search`,\n  productSearch: `/api/v1/product/search`,\n  pauseSearch: `/api/v1/process/reason/pause/search`,\n  rawmaterialSearch: `/api/v1/rawmaterial/search`,\n  moldSearch: `/api/v1/mold/search`,\n  defectReasonSearch: `/api/v1/process/reason/defect/search`,\n  rawinSearch: `/api/v1/rawmaterial/warehouse/search`,\n  rawstockSearch: `/api/v1/rawmaterial/warehouse/search`,\n  stockSearch: '/api/v1/stock/search',\n  operationSearch: `/api/v1/operation/search`,\n  recordSearch: `/api/v1/record/search`,\n  shipmentSearch: `/api/v1/shipment/search`,\n  recordSumSearch: `/api/v1/record/summation/search`,\n  recordDefect: `/api/v1/record/defect`,\n  recordPause: `/api/v1/record/pause`,\n  itemList: `/api/v1/items/list`,\n  itemSave: `/api/v1/items/save`,\n  itemDelete: `/api/v1/items/delete`,\n  //all\n  authorityAll: `/api/v1/member/auth/all`,\n  //fetch\n  summaryFetch: `/api/v1/stock/summary/fetch`,\n  excelDownload: `${SF_ENDPOINT_EXCEL}/api/v1/download`,\n  excelFormatDownload: `${SF_ENDPOINT_EXCEL}/api/v1/format/download`,\n  excelUpload: `${SF_ENDPOINT_EXCEL}/api/v1/format/upload`\n};","map":{"version":3,"sources":["/Users/user/Desktop/sizl/mono_pop/packages/main/common/RequestFunctions.ts"],"names":["Axios","cookie","SF_ENDPOINT","SF_ENDPOINT_EXCEL","Notiflix","requestApi","type","url","data","token","contentsType","ENDPOINT","tmpUrl","path","Object","values","map","v","params","keys","i","get","responseType","then","result","catch","error","response","status","state","Report","failure","postUrl","indexOf","post","put","message","delete","RequestMethod","MethodType","apiType","tokenData","load","ApiList","authorityCreate","authorityUpdate","memberSave","customerSave","modelSave","processSave","machineSave","productSave","rawmaterialSave","moldSave","pauseSave","defectSave","rawinSave","rawstockSave","productprocessSave","stockSummarySave","operationSave","shipmentSave","recordSave","operationModify","authorityLoad","operationRecent","authorityDelete","memberDelete","customerDelete","modelDelete","processDelete","machineDelete","productDelete","rawmaterialDelete","moldDelete","pauseDelete","defectDelete","rawinDelete","operationDelete","shipmentDelete","stockSummaryDelete","authorityList","memberList","customerList","modelList","processList","machineList","productList","rawmaterialList","moldList","pauseReasonList","defectReasonList","rawinList","rawstockList","productprocessList","stockList","stockProductList","stockSummaryList","operactionList","defectList","shipmentList","recordList","recordSumList","memberSearch","customerSearch","modelSearch","processSearch","machineSearch","productSearch","pauseSearch","rawmaterialSearch","moldSearch","defectReasonSearch","rawinSearch","rawstockSearch","stockSearch","operationSearch","recordSearch","shipmentSearch","recordSumSearch","recordDefect","recordPause","itemList","itemSave","itemDelete","authorityAll","summaryFetch","excelDownload","excelFormatDownload","excelUpload"],"mappings":"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","sourcesContent":["import Axios, {AxiosError} from 'axios'\nimport cookie from 'react-cookies'\nimport {SF_ENDPOINT, SF_ENDPOINT_EXCEL} from './configset'\nimport Notiflix from 'notiflix'\n\ntype RequestType = 'get' | 'post' | 'delete' | 'put'\n\nexport const requestApi = async (type: RequestType,url: string, data?: any, token?: any, contentsType?: 'blob') => {\n\n  const ENDPOINT = `${SF_ENDPOINT}`\n\n  switch(type){\n    case 'get':\n      let tmpUrl = `${ENDPOINT}${url}`\n\n      if(data){\n        if(data.path){\n          Object.values(data.path).map(v => {\n            if(v){\n              tmpUrl += `/${v}`\n            }\n          })\n        }\n        if(data.params){\n          Object.keys(data.params).map((v, i) => {\n            if(i === 0) {\n              tmpUrl += `?${v}=${data.params[v]}`\n            }else{\n              tmpUrl += `&${v}=${data.params[v]}`\n            }\n          })\n        }\n      }\n      return Axios.get(tmpUrl, token && {'headers': {'Authorization': token}, responseType: contentsType})\n        .then((result) => {\n          // if(result.data.status !== 200){\n          //   Notiflix.Report.failure('불러올 수 없습니다.', result.data.message, '확인')\n          //   return false\n          // }\n          return result.data\n        })\n        .catch((error) => {\n          if(error.response.status === 406 || error.response.status === 401) {\n            return {\n              state: 401\n            }\n          }else if(error.response.status === 500){\n            Notiflix.Report.failure('서버 에러', '서버 에러입니다. 관리자에게 문의하세요', '확인')\n            return false\n          }\n        })\n    case 'post':\n      let postUrl:string = ''\n      if(url.indexOf('http://') !== -1){\n        postUrl = url\n      }else{\n        postUrl = ENDPOINT+url\n      }\n\n      return Axios.post(postUrl, data, token && {'headers': {'Authorization': token}, responseType: contentsType})\n        .then((result) => {\n          return result.data\n        })\n        .catch((error) => {\n          if(error.response.status === 400) {\n            Notiflix.Report.failure('저장할 수 없습니다.', '입력값을 확인해주세요', '확인')\n          }else if(error.response.status === 500){\n            Notiflix.Report.failure('서버 에러', '서버 에러입니다. 관리자에게 문의하세요', '확인')\n          }\n          return false\n        })\n    case 'put':\n      return Axios.put(ENDPOINT+url, data,token && {'headers': {'Authorization': token}, responseType: contentsType})\n        .then((result) => {\n          if(result.data.status !== 200){\n            Notiflix.Report.failure('저장할 수 없습니다.', result.data.message, '확인')\n            return false\n          }\n          return result\n        })\n        .catch((error: AxiosError) => {\n          return false\n        })\n    case 'delete':\n      return Axios.delete(ENDPOINT+url, token && {\n        'headers': {'Authorization': token}, responseType: contentsType,\n        data: data\n      })\n        .then((result) => {\n          if(result.data.status !== 200){\n            Notiflix.Report.failure('삭제할 수 없습니다.', result.data.message, '확인')\n            return false\n          }\n          return result\n        })\n        .catch((error) => {\n          if(error.response.status === 400) {\n            Notiflix.Report.failure('삭제할 수 없습니다.', '입력값을 확인해주세요', '확인')\n          }\n          return false\n        })\n  }\n}\n\nexport const RequestMethod = async (MethodType: RequestType, apiType: string, data?: any, token?: string, responseType?: 'blob') => {\n  const tokenData = token ?? cookie.load('userInfo').token\n  if(apiType === 'excelDownload'){\n    return Axios.post(ApiList[apiType], data, tokenData && {'headers': {'Authorization': tokenData}, responseType: responseType})\n      .then((result) => {\n        return result.data\n      })\n      .catch((error) => {\n        if(error.response.status === 400) {\n          Notiflix.Report.failure('저장할 수 없습니다.', '입력값을 확인해주세요', '확인')\n        }else if(error.response.status === 500){\n          Notiflix.Report.failure('서버 에러', '서버 에러입니다. 관리자에게 문의하세요', '확인')\n        }\n        return false\n      })\n  }else if( apiType === 'excelFormatDownload'){\n\n    let tmpUrl = ApiList[apiType]\n\n    if(data){\n      if(data.path){\n        Object.values(data.path).map(v => {\n          if(v){\n            tmpUrl += `/${v}`\n          }\n        })\n      }\n      if(data.params){\n        Object.keys(data.params).map((v, i) => {\n          if(i === 0) {\n            tmpUrl += `?${v}=${data.params[v]}`\n          }else{\n            tmpUrl += `&${v}=${data.params[v]}`\n          }\n        })\n      }\n    }\n\n    return Axios.get(tmpUrl, tokenData && {'headers': {'Authorization': tokenData}, responseType: responseType})\n      .then((result) => {\n        return result.data\n      })\n      .catch((error) => {\n        if(error.response.status === 400) {\n          Notiflix.Report.failure('저장할 수 없습니다.', '입력값을 확인해주세요', '확인')\n        }else if(error.response.status === 500){\n          Notiflix.Report.failure('서버 에러', '서버 에러입니다. 관리자에게 문의하세요', '확인')\n        }\n        return false\n      })\n  } else {\n    const response = await requestApi(MethodType, ApiList[apiType], data, tokenData, responseType)\n    return response\n  }\n}\n\n\nconst ApiList = {\n  //create\n  authorityCreate: `/api/v1/member/auth/create`,\n\n  //update\n  authorityUpdate: `/api/v1/member/auth/update`,\n\n  //save\n  memberSave: `/api/v1/member/save`,\n  customerSave: `/api/v1/customer/save`,\n  modelSave: `/api/v1/customer/model/save`,\n  processSave: `/api/v1/process/save`,\n  machineSave: `/api/v1/machine/save`,\n  productSave: `/api/v1/product/save`,\n  rawmaterialSave: `/api/v1/rawmaterial/save`,\n  moldSave: `/api/v1/mold/save`,\n  pauseSave: `/api/v1/process/reason/pause/save`,\n  defectSave: `/api/v1/process/reason/defect/save`,\n  rawinSave: `/api/v1/rawmaterial/warehouse/save`,\n  rawstockSave: `/api/v1/rawmaterial/warehouse/save`,\n  productprocessSave: `/api/v1/product/process/save`,\n  stockSummarySave: `/api/v1/stock/summary/save`,\n  operationSave: `/api/v1/operation/save`,\n  shipmentSave: `/api/v1/shipment/save`,\n  recordSave: `/api/v1/record/save`,\n\n  //modify\n  operationModify: `/api/v1/operation/modify`,\n\n  //load\n  authorityLoad: `/api/v1/member/auth/load`,\n\n  //recent\n  operationRecent:`/api/v1/operation/recent`,\n\n  //delete\n  authorityDelete: `/api/v1/member/auth/delete`,\n  memberDelete: `/api/v1/member/delete`,\n  customerDelete: `/api/v1/customer/delete`,\n  modelDelete: `/api/v1/customer/model/delete`,\n  processDelete: `/api/v1/process/delete`,\n  machineDelete: `/api/v1/machine/delete`,\n  productDelete: `/api/v1/product/delete`,\n  rawmaterialDelete: `/api/v1/rawmaterial/delete`,\n  moldDelete: `/api/v1/mold/delete`,\n  pauseDelete: `/api/v1/process/reason/pause/delete`,\n  defectDelete: `/api/v1/process/reason/defect/delete`,\n  rawinDelete: `/api/v1/rawmaterial/warehouse/delete`,\n  operationDelete: `/api/v1/operation/delete`,\n  shipmentDelete: '/api/v1/shipment/delete',\n  stockSummaryDelete: `/api/v1/stock/summary/delete`,\n\n  //list\n  authorityList: `/api/v1/member/auth/list`,\n  memberList: `/api/v1/member/list`,\n  customerList: `/api/v1/customer/list`,\n  modelList: `/api/v1/customer/model/list`,\n  processList: `/api/v1/process/list`,\n  machineList: `/api/v1/machine/list`,\n  productList: `/api/v1/product/list`,\n  rawmaterialList: `/api/v1/rawmaterial/list`,\n  moldList: `/api/v1/mold/list`,\n  pauseReasonList: '/api/v1/process/reason/pause/list',\n  defectReasonList: '/api/v1/process/reason/defect/list',\n  rawinList: `/api/v1/rawmaterial/warehouse/list`,\n  rawstockList: `/api/v1/rawmaterial/warehouse/list`,\n  productprocessList: `/api/v1/product/process/load`,\n  stockList: '/api/v1/stock/list',\n  stockProductList: '/api/v1/stock/summary',\n  stockSummaryList: '/api/v1/stock/summary/list',\n  operactionList: `/api/v1/operation/list`,\n  defectList: `/api/v1/quality/statistics/defect`,\n  shipmentList: '/api/v1/shipment/list',\n  recordList: `/api/v1/record/list`,\n  recordSumList: `/api/v1/record/summation/list`,\n\n  //search\n  memberSearch: `/api/v1/member/search`,\n  customerSearch: `/api/v1/customer/search`,\n  modelSearch: `/api/v1/customer/model/search`,\n  processSearch: `/api/v1/process/search`,\n  machineSearch: `/api/v1/machine/search`,\n  productSearch: `/api/v1/product/search`,\n  pauseSearch: `/api/v1/process/reason/pause/search`,\n  rawmaterialSearch: `/api/v1/rawmaterial/search`,\n  moldSearch: `/api/v1/mold/search`,\n  defectReasonSearch: `/api/v1/process/reason/defect/search`,\n  rawinSearch: `/api/v1/rawmaterial/warehouse/search`,\n  rawstockSearch: `/api/v1/rawmaterial/warehouse/search`,\n  stockSearch: '/api/v1/stock/search',\n  operationSearch: `/api/v1/operation/search`,\n  recordSearch: `/api/v1/record/search`,\n  shipmentSearch: `/api/v1/shipment/search`,\n  recordSumSearch: `/api/v1/record/summation/search`,\n\n  recordDefect: `/api/v1/record/defect`,\n  recordPause: `/api/v1/record/pause`,\n\n  itemList: `/api/v1/items/list`,\n  itemSave: `/api/v1/items/save`,\n  itemDelete: `/api/v1/items/delete`,\n\n  //all\n  authorityAll: `/api/v1/member/auth/all`,\n\n  //fetch\n  summaryFetch: `/api/v1/stock/summary/fetch`,\n  excelDownload: `${SF_ENDPOINT_EXCEL}/api/v1/download`,\n  excelFormatDownload: `${SF_ENDPOINT_EXCEL}/api/v1/format/download`,\n  excelUpload: `${SF_ENDPOINT_EXCEL}/api/v1/format/upload`\n}\n"]},"metadata":{},"sourceType":"module"}