{"ast":null,"code":"var _jsxFileName = \"/Users/user/Desktop/sizl/mono_pop/packages/shared/src/components/Modal/FactoryInfoModal.tsx\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport Modal from 'react-modal';\nconst optionList = ['제조번호', '제조사명', '기계명', '', '담당자명'];\n\nconst FactoryInfoModal = ({\n  column,\n  row,\n  onRowChange\n}) => {\n  const {\n    0: isOpen,\n    1: setIsOpen\n  } = useState(false);\n  return __jsx(Modal, {\n    isOpen: isOpen,\n    style: {\n      content: {\n        top: '50%',\n        left: '50%',\n        right: 'auto',\n        bottom: 'auto',\n        marginRight: '-50%',\n        transform: 'translate(-50%, -50%)',\n        padding: 0\n      },\n      overlay: {\n        background: 'rgba(0,0,0,.6)',\n        zIndex: 5\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  });\n};\n\nexport { FactoryInfoModal };","map":{"version":3,"sources":["/Users/user/Desktop/sizl/mono_pop/packages/shared/src/components/Modal/FactoryInfoModal.tsx"],"names":["React","useState","Modal","optionList","FactoryInfoModal","column","row","onRowChange","isOpen","setIsOpen","content","top","left","right","bottom","marginRight","transform","padding","overlay","background","zIndex"],"mappings":";;AAAA,OAAOA,KAAP,IAA0BC,QAA1B,QAAyC,OAAzC;AAGA,OAAOC,KAAP,MAAkB,aAAlB;AAqBA,MAAMC,UAAU,GAAG,CAAC,MAAD,EAAQ,MAAR,EAAe,KAAf,EAAqB,EAArB,EAAwB,MAAxB,CAAnB;;AAEA,MAAMC,gBAAgB,GAAG,CAAC;AAACC,EAAAA,MAAD;AAASC,EAAAA,GAAT;AAAcC,EAAAA;AAAd,CAAD,KAAwC;AAC/D,QAAM;AAAA,OAACC,MAAD;AAAA,OAASC;AAAT,MAAsBR,QAAQ,CAAU,KAAV,CAApC;AAEA,SACE,MAAC,KAAD;AAAO,IAAA,MAAM,EAAEO,MAAf;AAAuB,IAAA,KAAK,EAAE;AAC5BE,MAAAA,OAAO,EAAE;AACPC,QAAAA,GAAG,EAAE,KADE;AAEPC,QAAAA,IAAI,EAAE,KAFC;AAGPC,QAAAA,KAAK,EAAE,MAHA;AAIPC,QAAAA,MAAM,EAAE,MAJD;AAKPC,QAAAA,WAAW,EAAE,MALN;AAMPC,QAAAA,SAAS,EAAE,uBANJ;AAOPC,QAAAA,OAAO,EAAE;AAPF,OADmB;AAU5BC,MAAAA,OAAO,EAAE;AACPC,QAAAA,UAAU,EAAE,gBADL;AAEPC,QAAAA,MAAM,EAAE;AAFD;AAVmB,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAkBD,CArBD;;AAwBA,SAAQhB,gBAAR","sourcesContent":["import React, {useEffect, useState} from 'react'\nimport {IExcelHeaderType} from '../../common/@types/type'\nimport styled from 'styled-components'\nimport Modal from 'react-modal'\nimport {POINT_COLOR} from '../../common/configset'\n//@ts-ignore\nimport IcSearchButton from '../../../public/images/ic_search.png'\n//@ts-ignore\nimport IcX from '../../../public/images/ic_x.png'\nimport {ExcelTable} from '../Excel/ExcelTable'\nimport {searchModalList} from '../../common/modalInit'\n//@ts-ignore\nimport Search_icon from '../../../public/images/btn_search.png'\nimport {RequestMethod} from '../../common/RequestFunctions'\nimport {PaginationComponent}from '../Pagination/PaginationComponent'\nimport Notiflix from 'notiflix'\nimport {UploadButton} from '../../styles/styledComponents'\n\ninterface IProps {\n  column: IExcelHeaderType\n  row: any\n  onRowChange: (e: any) => void\n}\n\nconst optionList = ['제조번호','제조사명','기계명','','담당자명']\n\nconst FactoryInfoModal = ({column, row, onRowChange}: IProps) => {\n  const [isOpen, setIsOpen] = useState<boolean>(false)\n\n  return (\n    <Modal isOpen={isOpen} style={{\n      content: {\n        top: '50%',\n        left: '50%',\n        right: 'auto',\n        bottom: 'auto',\n        marginRight: '-50%',\n        transform: 'translate(-50%, -50%)',\n        padding: 0\n      },\n      overlay: {\n        background: 'rgba(0,0,0,.6)',\n        zIndex: 5\n      }\n    }}>\n    </Modal>\n  )\n}\n\n\nexport {FactoryInfoModal}\n"]},"metadata":{},"sourceType":"module"}