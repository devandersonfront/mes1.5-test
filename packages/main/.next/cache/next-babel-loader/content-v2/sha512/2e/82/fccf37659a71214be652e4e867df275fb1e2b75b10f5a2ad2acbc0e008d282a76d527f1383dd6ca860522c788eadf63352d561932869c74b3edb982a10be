{"ast":null,"code":"var _jsxFileName = \"/Users/user/Desktop/sizl/mono_pop/packages/main/pages/_app.tsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\n// import type { AppProps } from 'next/app'\n// import {Body} from '../styles/styledComponents'\n//\n// function MyApp({ Component, pageProps }: AppProps) {\n//   return <Body><Component {...pageProps} /></Body>\n// }\nimport React from 'react';\nimport Head from 'next/head'; // MUI Core\n\nimport { ThemeProvider as MaterialUiThemeProvider } from '@material-ui/core/styles';\nimport { ThemeProvider as StyledThemeProvider } from 'styled-components'; // Utils\n\nimport { theme } from '../common/theme';\nimport { global as GlobalStyles } from '../common/global';\nimport withRedux from 'next-redux-wrapper';\nimport { createStore, compose, applyMiddleware } from 'redux';\nimport reducer from '../reducer'; // Redux\n// import { composeWithDevTools } from 'redux-devtools-extension';\n// import { applyMiddleware, createStore } from 'redux';\n// import { Provider } from 'react-redux';\n// import reducer from \"../src/modules\";\n// import Cookies from 'js-cookie';\n// import ThemeToggleBtn from \"../src/components/ThemeToggleBtn\";\n// const store = createStore(reducer, composeWithDevTools(applyMiddleware()))\n\nimport '../styles/globals.css';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nconst App = ({\n  Component,\n  pageProps,\n  store\n}) => {\n  return __jsx(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, __jsx(Head, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, __jsx(\"title\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }\n  }, \"MES\"), __jsx(\"meta\", {\n    name: \"viewport\",\n    content: \"minimum-scale=1, initial-scale=1, width=device-width\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }\n  })), __jsx(MaterialUiThemeProvider, {\n    theme: theme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, __jsx(StyledThemeProvider, {\n    theme: theme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }\n  }, __jsx(GlobalStyles, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }), __jsx(Component, _extends({}, pageProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  })))));\n};\n\nexport const getServerSideProps = async ({\n  ctx,\n  Component\n}) => {\n  var _Component$getStaticP;\n\n  const pageProps = await ((_Component$getStaticP = Component.getStaticProps) === null || _Component$getStaticP === void 0 ? void 0 : _Component$getStaticP.call(Component, ctx));\n  return {\n    props: _objectSpread({}, pageProps)\n  };\n};\nexport const getInitialProps = async ({\n  Component,\n  router,\n  ctx\n}) => {\n  let pageProps = {};\n\n  if (Component.getInitialProps) {\n    pageProps = await Component.getInitialProps(ctx);\n  }\n\n  return {\n    pageProps\n  };\n};\n\nconst configureStore = (initialState, options) => {\n  const middlewares = [];\n  const enhancer = false ? compose(applyMiddleware(...middlewares)) : composeWithDevTools(applyMiddleware(...middlewares));\n  const store = createStore(reducer, initialState, enhancer);\n  return store;\n}; // @ts-ignore\n\n\nexport default withRedux(configureStore)(App);","map":{"version":3,"sources":["/Users/user/Desktop/sizl/mono_pop/packages/main/pages/_app.tsx"],"names":["React","Head","ThemeProvider","MaterialUiThemeProvider","StyledThemeProvider","theme","global","GlobalStyles","withRedux","createStore","compose","applyMiddleware","reducer","composeWithDevTools","App","Component","pageProps","store","getServerSideProps","ctx","getStaticProps","props","getInitialProps","router","configureStore","initialState","options","middlewares","enhancer"],"mappings":";;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB,C,CACA;;AACA,SAASC,aAAa,IAAIC,uBAA1B,QAAyD,0BAAzD;AACA,SAASD,aAAa,IAAIE,mBAA1B,QAAqD,mBAArD,C,CACA;;AACA,SAASC,KAAT,QAAsB,iBAAtB;AACA,SAASC,MAAM,IAAIC,YAAnB,QAAuC,kBAAvC;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AAEA,SAASC,WAAT,EAAsBC,OAAtB,EAA+BC,eAA/B,QAAsD,OAAtD;AACA,OAAOC,OAAP,MAAoB,YAApB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AACA,OAAO,uBAAP;AACA,SAAQC,mBAAR,QAAkC,0BAAlC;;AAEA,MAAMC,GAAG,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA,SAAb;AAAwBC,EAAAA;AAAxB,CAAD,KAA0C;AACpD,SACE,MAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADF,EAEE;AAAM,IAAA,IAAI,EAAC,UAAX;AAAsB,IAAA,OAAO,EAAC,sDAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADJ,EAKI,MAAC,uBAAD;AAAyB,IAAA,KAAK,EAAEZ,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,mBAAD;AAAqB,IAAA,KAAK,EAAEA,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,MAAC,SAAD,eAAeW,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAFF,CADF,CALJ,CADF;AAcD,CAfD;;AAiBA,OAAO,MAAME,kBAAkB,GAAG,OAAO;AAAEC,EAAAA,GAAF;AAAOJ,EAAAA;AAAP,CAAP,KAAmC;AAAA;;AACnE,QAAMC,SAAS,GAAG,gCAAMD,SAAS,CAACK,cAAhB,0DAAM,2BAAAL,SAAS,EAAkBI,GAAlB,CAAf,CAAlB;AACA,SAAO;AAAEE,IAAAA,KAAK,oBAAOL,SAAP;AAAP,GAAP;AACD,CAHM;AAKP,OAAO,MAAMM,eAAe,GAAG,OAAO;AAAEP,EAAAA,SAAF;AAAaQ,EAAAA,MAAb;AAAqBJ,EAAAA;AAArB,CAAP,KAA2C;AACxE,MAAIH,SAAS,GAAG,EAAhB;;AACA,MAAID,SAAS,CAACO,eAAd,EAA+B;AAC7BN,IAAAA,SAAS,GAAG,MAAMD,SAAS,CAACO,eAAV,CAA0BH,GAA1B,CAAlB;AACD;;AAED,SAAO;AAAEH,IAAAA;AAAF,GAAP;AACD,CAPM;;AASP,MAAMQ,cAAc,GAAG,CAACC,YAAD,EAAeC,OAAf,KAA2B;AAChD,QAAMC,WAAW,GAAG,EAApB;AACA,QAAMC,QAAQ,GAAG,QACflB,OAAO,CAACC,eAAe,CAAC,GAAGgB,WAAJ,CAAhB,CADQ,GAEfd,mBAAmB,CACjBF,eAAe,CAAC,GAAGgB,WAAJ,CADE,CAFrB;AAMA,QAAMV,KAAK,GAAGR,WAAW,CAACG,OAAD,EAAUa,YAAV,EAAwBG,QAAxB,CAAzB;AACA,SAAOX,KAAP;AACD,CAVD,C,CAYA;;;AACA,eAAeT,SAAS,CAACgB,cAAD,CAAT,CAA0BV,GAA1B,CAAf","sourcesContent":["// import type { AppProps } from 'next/app'\n// import {Body} from '../styles/styledComponents'\n//\n// function MyApp({ Component, pageProps }: AppProps) {\n//   return <Body><Component {...pageProps} /></Body>\n// }\n\nimport React from 'react';\nimport Head from 'next/head';\n// MUI Core\nimport { ThemeProvider as MaterialUiThemeProvider } from '@material-ui/core/styles';\nimport { ThemeProvider as StyledThemeProvider } from 'styled-components';\n// Utils\nimport { theme } from '../common/theme';\nimport { global as GlobalStyles } from '../common/global';\nimport withRedux from 'next-redux-wrapper'\nimport { Provider} from 'react-redux'\nimport { createStore, compose, applyMiddleware } from 'redux';\nimport reducer from '../reducer';\n\n// Redux\n// import { composeWithDevTools } from 'redux-devtools-extension';\n// import { applyMiddleware, createStore } from 'redux';\n// import { Provider } from 'react-redux';\n// import reducer from \"../src/modules\";\n// import Cookies from 'js-cookie';\n// import ThemeToggleBtn from \"../src/components/ThemeToggleBtn\";\n\n// const store = createStore(reducer, composeWithDevTools(applyMiddleware()))\nimport '../styles/globals.css'\nimport {composeWithDevTools} from 'redux-devtools-extension'\n\nconst App = ({ Component, pageProps, store }: any) => {\n  return (\n    <React.Fragment>\n        <Head>\n          <title>MES</title>\n          <meta name=\"viewport\" content=\"minimum-scale=1, initial-scale=1, width=device-width\" />\n        </Head>\n        <MaterialUiThemeProvider theme={theme}>\n          <StyledThemeProvider theme={theme}>\n            <GlobalStyles />\n            <Component {...pageProps} />\n          </StyledThemeProvider>\n        </MaterialUiThemeProvider>\n    </React.Fragment>\n  )\n}\n\nexport const getServerSideProps = async ({ ctx, Component }: any) => {\n  const pageProps = await Component.getStaticProps?.(ctx);\n  return { props: { ...pageProps } }\n}\n\nexport const getInitialProps = async ({ Component, router, ctx }: any) => {\n  let pageProps = { };\n  if (Component.getInitialProps) {\n    pageProps = await Component.getInitialProps(ctx);\n  }\n\n  return { pageProps };\n}\n\nconst configureStore = (initialState, options) => {\n  const middlewares = []\n  const enhancer = process.env.NODE_ENV === 'production' ?\n    compose(applyMiddleware(...middlewares)) :\n    composeWithDevTools(\n      applyMiddleware(...middlewares)\n    );\n\n  const store = createStore(reducer, initialState, enhancer);\n  return store;\n}\n\n// @ts-ignore\nexport default withRedux(configureStore)(App)\n\n"]},"metadata":{},"sourceType":"module"}