{"ast":null,"code":"var _jsxFileName = \"/Users/user/Desktop/sizl/mono_pop/packages/shared/src/components/CalendarBox/CalendarBox.tsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState } from 'react';\nimport { BoxWrap, DropBoxContainer, InnerBoxWrap } from '../../styles/styledComponents';\nimport Calendar from 'react-calendar';\nimport 'react-calendar/dist/Calendar.css';\nimport moment from 'moment';\nimport useOnclickOutside from 'react-cool-onclickoutside';\nimport Modal from 'react-modal';\nimport styled from 'styled-components'; //@ts-ignore\n\nimport calendarWhite from '../../../public/images/calendar_icon_white.png';\nimport { POINT_COLOR } from '../../common/configset';\n\nconst CalendarBox = ({\n  row,\n  column,\n  onRowChange\n}) => {\n  const {\n    0: isOpen,\n    1: setIsOpen\n  } = useState(false);\n  const {\n    0: select,\n    1: setSelect\n  } = useState(moment().toDate());\n  const ref = useOnclickOutside(() => setIsOpen(false));\n  React.useEffect(() => {\n    if (isOpen) {\n      if (row[column.key]) setSelect(moment(row[column.key]).toDate());else setSelect(moment().toDate());\n    }\n  }, [isOpen]);\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, __jsx(Background, {\n    onClick: () => {\n      setIsOpen(true);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, __jsx(\"p\", {\n    style: {\n      padding: 0,\n      margin: 0,\n      color: row[column.key] ? '#ffffff' : '#ffffff4d',\n      textAlign: 'center',\n      width: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, row[column.key] ? row[column.key] : column.placeholder), __jsx(\"img\", {\n    src: calendarWhite,\n    style: {\n      width: 24,\n      height: 24\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  })), __jsx(Modal, {\n    isOpen: isOpen,\n    style: {\n      content: {\n        top: '50%',\n        left: '50%',\n        right: 'auto',\n        bottom: 'auto',\n        marginRight: '-50%',\n        transform: 'translate(-50%, -50%)',\n        padding: 0\n      },\n      overlay: {\n        background: 'rgba(0,0,0,.6)',\n        zIndex: 101\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, __jsx(DropBoxContainer, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, __jsx(InnerBoxWrap, {\n    style: {\n      display: 'flex',\n      justifyContent: 'space-between',\n      alignItems: 'space-between',\n      flexDirection: 'column'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, __jsx(BoxWrap, {\n    style: {\n      backgroundColor: 'white',\n      flexDirection: 'row',\n      display: 'flex'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    style: {\n      display: 'inline-block',\n      float: 'left',\n      flex: 1,\n      marginRight: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }, __jsx(Calendar, {\n    maxDate: column.maxDate ? new Date() : moment('2999-12-31').subtract(1, 'days').toDate(),\n    onChange: date => {\n      setSelect(date);\n    },\n    value: select,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 15\n    }\n  }))), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    style: {\n      height: 40,\n      display: 'flex',\n      alignItems: 'flex-end'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    onClick: () => {\n      setIsOpen(false);\n    },\n    style: {\n      flex: 1,\n      height: 40,\n      backgroundColor: '#b3b3b3',\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 15\n    }\n  }, __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 17\n    }\n  }, \"\\uCDE8\\uC18C\")), __jsx(\"div\", {\n    onClick: () => {\n      onRowChange(_objectSpread(_objectSpread({}, row), {}, {\n        [column.key]: moment(select).format('YYYY-MM-DD'),\n        isChange: true\n      }));\n      setIsOpen(false);\n    },\n    style: {\n      flex: 1,\n      height: 40,\n      backgroundColor: POINT_COLOR,\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 15\n    }\n  }, __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 17\n    }\n  }, \"\\uD655\\uC778\"))))))));\n};\n\nconst Background = styled.div`\n    display:flex;\n    justify-content:flex-start;\n    align-items:center;\n    width:100%;\n    height:100%;\n    padding: 0 8px;\n    margin:0;\n`;\nexport { CalendarBox };","map":{"version":3,"sources":["/Users/user/Desktop/sizl/mono_pop/packages/shared/src/components/CalendarBox/CalendarBox.tsx"],"names":["React","useState","BoxWrap","DropBoxContainer","InnerBoxWrap","Calendar","moment","useOnclickOutside","Modal","styled","calendarWhite","POINT_COLOR","CalendarBox","row","column","onRowChange","isOpen","setIsOpen","select","setSelect","toDate","ref","useEffect","key","padding","margin","color","textAlign","width","placeholder","height","content","top","left","right","bottom","marginRight","transform","overlay","background","zIndex","display","justifyContent","alignItems","flexDirection","backgroundColor","float","flex","maxDate","Date","subtract","date","format","isChange","Background","div"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AAEA,SAAQC,OAAR,EAAiBC,gBAAjB,EAAmCC,YAAnC,QAAsD,+BAAtD;AACA,OAAOC,QAAP,MAAqB,gBAArB;AACA,OAAO,kCAAP;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,iBAAP,MAA8B,2BAA9B;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB,C,CACA;;AACA,OAAOC,aAAP,MAA0B,gDAA1B;AACA,SAAQC,WAAR,QAA0B,wBAA1B;;AAQA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA,GAAF;AAAOC,EAAAA,MAAP;AAAeC,EAAAA;AAAf,CAAD,KAA0C;AAC5D,QAAM;AAAA,OAACC,MAAD;AAAA,OAASC;AAAT,MAAsBhB,QAAQ,CAAU,KAAV,CAApC;AACA,QAAM;AAAA,OAACiB,MAAD;AAAA,OAASC;AAAT,MAAsBlB,QAAQ,CAAOK,MAAM,GAAGc,MAAT,EAAP,CAApC;AACA,QAAMC,GAAG,GAAGd,iBAAiB,CAAC,MAAMU,SAAS,CAAC,KAAD,CAAhB,CAA7B;AAEAjB,EAAAA,KAAK,CAACsB,SAAN,CAAgB,MAAM;AACpB,QAAGN,MAAH,EAAU;AACR,UAAGH,GAAG,CAACC,MAAM,CAACS,GAAR,CAAN,EAAoBJ,SAAS,CAACb,MAAM,CAACO,GAAG,CAACC,MAAM,CAACS,GAAR,CAAJ,CAAN,CAAwBH,MAAxB,EAAD,CAAT,CAApB,KACKD,SAAS,CAACb,MAAM,GAAGc,MAAT,EAAD,CAAT;AACN;AACF,GALD,EAKG,CAACJ,MAAD,CALH;AAOA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,UAAD;AAAY,IAAA,OAAO,EAAE,MAAM;AACzBC,MAAAA,SAAS,CAAC,IAAD,CAAT;AACD,KAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGE;AAAG,IAAA,KAAK,EAAE;AAACO,MAAAA,OAAO,EAAE,CAAV;AAAaC,MAAAA,MAAM,EAAE,CAArB;AAAwBC,MAAAA,KAAK,EAAEb,GAAG,CAACC,MAAM,CAACS,GAAR,CAAH,GAAkB,SAAlB,GAA8B,WAA7D;AAA0EI,MAAAA,SAAS,EAAE,QAArF;AAA+FC,MAAAA,KAAK,EAAE;AAAtG,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGf,GAAG,CAACC,MAAM,CAACS,GAAR,CAAH,GAAkBV,GAAG,CAACC,MAAM,CAACS,GAAR,CAArB,GAAoCT,MAAM,CAACe,WAD9C,CAHF,EAME;AAAK,IAAA,GAAG,EAAEnB,aAAV;AAAyB,IAAA,KAAK,EAAE;AAACkB,MAAAA,KAAK,EAAE,EAAR;AAAYE,MAAAA,MAAM,EAAE;AAApB,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CADF,EASE,MAAC,KAAD;AACE,IAAA,MAAM,EAAEd,MADV;AAEE,IAAA,KAAK,EAAE;AACLe,MAAAA,OAAO,EAAE;AACPC,QAAAA,GAAG,EAAE,KADE;AAEPC,QAAAA,IAAI,EAAE,KAFC;AAGPC,QAAAA,KAAK,EAAE,MAHA;AAIPC,QAAAA,MAAM,EAAE,MAJD;AAKPC,QAAAA,WAAW,EAAE,MALN;AAMPC,QAAAA,SAAS,EAAE,uBANJ;AAOPb,QAAAA,OAAO,EAAE;AAPF,OADJ;AAULc,MAAAA,OAAO,EAAE;AACPC,QAAAA,UAAU,EAAE,gBADL;AAEPC,QAAAA,MAAM,EAAE;AAFD;AAVJ,KAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAkBA,MAAC,gBAAD;AAAkB,IAAA,GAAG,EAAEnB,GAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,YAAD;AAAc,IAAA,KAAK,EAAE;AACnBoB,MAAAA,OAAO,EAAE,MADU;AAEnBC,MAAAA,cAAc,EAAE,eAFG;AAGnBC,MAAAA,UAAU,EAAE,eAHO;AAInBC,MAAAA,aAAa,EAAE;AAJI,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAME,MAAC,OAAD;AAAS,IAAA,KAAK,EAAE;AAACC,MAAAA,eAAe,EAAE,OAAlB;AAA2BD,MAAAA,aAAa,EAAE,KAA1C;AAAiDH,MAAAA,OAAO,EAAE;AAA1D,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAM,IAAA,KAAK,EAAE;AAACA,MAAAA,OAAO,EAAE,cAAV;AAA0BK,MAAAA,KAAK,EAAE,MAAjC;AAAyCC,MAAAA,IAAI,EAAE,CAA/C;AAAkDX,MAAAA,WAAW,EAAE;AAA/D,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,QAAD;AAEE,IAAA,OAAO,EAAEtB,MAAM,CAACkC,OAAP,GAAiB,IAAIC,IAAJ,EAAjB,GAA8B3C,MAAM,CAAC,YAAD,CAAN,CAAqB4C,QAArB,CAA8B,CAA9B,EAAiC,MAAjC,EAAyC9B,MAAzC,EAFzC;AAGE,IAAA,QAAQ,EAAG+B,IAAD,IAAU;AAClBhC,MAAAA,SAAS,CAACgC,IAAD,CAAT;AACD,KALH;AAME,IAAA,KAAK,EAAEjC,MANT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CANF,EAkBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,KAAK,EAAE;AAAEY,MAAAA,MAAM,EAAE,EAAV;AAAcW,MAAAA,OAAO,EAAE,MAAvB;AAA+BE,MAAAA,UAAU,EAAE;AAA3C,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,OAAO,EAAE,MAAM;AACb1B,MAAAA,SAAS,CAAC,KAAD,CAAT;AACD,KAHH;AAIE,IAAA,KAAK,EAAE;AAAC8B,MAAAA,IAAI,EAAE,CAAP;AAAUjB,MAAAA,MAAM,EAAE,EAAlB;AAAsBe,MAAAA,eAAe,EAAE,SAAvC;AAAkDJ,MAAAA,OAAO,EAAE,MAA3D;AAAmEC,MAAAA,cAAc,EAAE,QAAnF;AAA6FC,MAAAA,UAAU,EAAE;AAAzG,KAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBANF,CADF,EASE;AACE,IAAA,OAAO,EAAE,MAAM;AACb5B,MAAAA,WAAW,iCACNF,GADM;AAET,SAACC,MAAM,CAACS,GAAR,GAAcjB,MAAM,CAACY,MAAD,CAAN,CAAekC,MAAf,CAAsB,YAAtB,CAFL;AAGTC,QAAAA,QAAQ,EAAE;AAHD,SAAX;AAKApC,MAAAA,SAAS,CAAC,KAAD,CAAT;AACD,KARH;AASE,IAAA,KAAK,EAAE;AAAC8B,MAAAA,IAAI,EAAE,CAAP;AAAUjB,MAAAA,MAAM,EAAE,EAAlB;AAAsBe,MAAAA,eAAe,EAAElC,WAAvC;AAAoD8B,MAAAA,OAAO,EAAE,MAA7D;AAAqEC,MAAAA,cAAc,EAAE,QAArF;AAA+FC,MAAAA,UAAU,EAAE;AAA3G,KATT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAXF,CATF,CADF,CAlBF,CADF,CAlBA,CATF,CADF;AA6ED,CAzFD;;AA2FA,MAAMW,UAAU,GAAG7C,MAAM,CAAC8C,GAAI;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CARA;AAUA,SAAQ3C,WAAR","sourcesContent":["import React, {useState} from 'react'\nimport {IExcelHeaderType} from '../../common/@types/type'\nimport {BoxWrap, DropBoxContainer, InnerBoxWrap} from '../../styles/styledComponents'\nimport Calendar from 'react-calendar'\nimport 'react-calendar/dist/Calendar.css'\nimport moment from 'moment'\nimport useOnclickOutside from 'react-cool-onclickoutside'\nimport Modal from 'react-modal'\nimport styled from 'styled-components'\n//@ts-ignore\nimport calendarWhite from '../../../public/images/calendar_icon_white.png'\nimport {POINT_COLOR} from '../../common/configset'\n\ninterface IProps {\n  row: any\n  column: IExcelHeaderType\n  onRowChange: (e: any) => void\n}\n\nconst CalendarBox = ({ row, column, onRowChange }: IProps) => {\n  const [isOpen, setIsOpen] = useState<boolean>(false)\n  const [select, setSelect] = useState<Date>(moment().toDate())\n  const ref = useOnclickOutside(() => setIsOpen(false))\n\n  React.useEffect(() => {\n    if(isOpen){\n      if(row[column.key]) setSelect(moment(row[column.key]).toDate())\n      else setSelect(moment().toDate())\n    }\n  }, [isOpen])\n\n  return (\n    <div>\n      <Background onClick={() => {\n        setIsOpen(true)\n      }}>\n        <p style={{padding: 0, margin: 0, color: row[column.key] ? '#ffffff' : '#ffffff4d', textAlign: 'center', width: '100%' }}>\n          {row[column.key] ? row[column.key] : column.placeholder}\n        </p>\n        <img src={calendarWhite} style={{width: 24, height: 24}}/>\n      </Background>\n      <Modal\n        isOpen={isOpen}\n        style={{\n          content: {\n            top: '50%',\n            left: '50%',\n            right: 'auto',\n            bottom: 'auto',\n            marginRight: '-50%',\n            transform: 'translate(-50%, -50%)',\n            padding: 0\n          },\n          overlay: {\n            background: 'rgba(0,0,0,.6)',\n            zIndex: 101\n          }\n        }}\n      >\n      <DropBoxContainer ref={ref}>\n        <InnerBoxWrap style={{\n          display: 'flex',\n          justifyContent: 'space-between',\n          alignItems: 'space-between',\n          flexDirection: 'column'\n        }}>\n          <BoxWrap style={{backgroundColor: 'white', flexDirection: 'row', display: 'flex'}}>\n            <div  style={{display: 'inline-block', float: 'left', flex: 1, marginRight: 20}}>\n              <Calendar\n\n                maxDate={column.maxDate ? new Date() : moment('2999-12-31').subtract(1, 'days').toDate() }\n                onChange={(date) => {\n                  setSelect(date)\n                }}\n                value={select}\n              />\n            </div>\n          </BoxWrap>\n          <div>\n            <div style={{ height: 40, display: 'flex', alignItems: 'flex-end'}}>\n              <div\n                onClick={() => {\n                  setIsOpen(false)\n                }}\n                style={{flex: 1, height: 40, backgroundColor: '#b3b3b3', display: 'flex', justifyContent: 'center', alignItems: 'center'}}\n              >\n                <p>취소</p>\n              </div>\n              <div\n                onClick={() => {\n                  onRowChange({\n                    ...row,\n                    [column.key]: moment(select).format('YYYY-MM-DD'),\n                    isChange: true\n                  })\n                  setIsOpen(false)\n                }}\n                style={{flex: 1, height: 40, backgroundColor: POINT_COLOR, display: 'flex', justifyContent: 'center', alignItems: 'center'}}\n              >\n                <p>확인</p>\n              </div>\n            </div>\n          </div>\n        </InnerBoxWrap>\n      </DropBoxContainer>\n      </Modal>\n    </div>\n  );\n}\n\nconst Background = styled.div`\n    display:flex;\n    justify-content:flex-start;\n    align-items:center;\n    width:100%;\n    height:100%;\n    padding: 0 8px;\n    margin:0;\n`;\n\nexport {CalendarBox};\n"]},"metadata":{},"sourceType":"module"}