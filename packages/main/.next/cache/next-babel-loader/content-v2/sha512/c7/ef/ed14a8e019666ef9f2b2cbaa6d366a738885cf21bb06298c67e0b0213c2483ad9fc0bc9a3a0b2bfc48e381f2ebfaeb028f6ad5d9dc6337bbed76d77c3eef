{"ast":null,"code":"import _regeneratorRuntime from \"/Users/user/Desktop/sizl/mono_pop/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/user/Desktop/sizl/mono_pop/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { SF_ENDPOINT } from './configset';\nimport { requestApi } from './RequestFunctions';\n/**\n * uploadTempFile()\n * 파일을 임시 디비에 업로드 후 temp path를 리턴하는 매서드\n * @param {string} data BLOB 객체\n * @returns X\n */\n\nexport var uploadTempFile = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(data, isUrl) {\n    var formData, res, path;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            formData = new FormData();\n            formData.append('file', data);\n            _context.next = 4;\n            return requestApi('post', \"\".concat(SF_ENDPOINT, \"/anonymous/upload\"), formData);\n\n          case 4:\n            res = _context.sent;\n\n            if (!(res === false)) {\n              _context.next = 9;\n              break;\n            }\n\n            return _context.abrupt(\"return\", false);\n\n          case 9:\n            if (!(res.status === 200)) {\n              _context.next = 18;\n              break;\n            }\n\n            if (!isUrl) {\n              _context.next = 14;\n              break;\n            }\n\n            return _context.abrupt(\"return\", res);\n\n          case 14:\n            path = res.results; //const path: string = res.results; //const path: string = res[0];\n\n            return _context.abrupt(\"return\", path);\n\n          case 16:\n            _context.next = 20;\n            break;\n\n          case 18:\n            alert('해당 파일 업로드 실패하였습니다.');\n            return _context.abrupt(\"return\", false);\n\n          case 20:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function uploadTempFile(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();","map":{"version":3,"sources":["/Users/user/Desktop/sizl/mono_pop/packages/main/common/fileFuctuons.ts"],"names":["SF_ENDPOINT","requestApi","uploadTempFile","data","isUrl","formData","FormData","append","res","status","path","results","alert"],"mappings":";;AAAA,SAAQA,WAAR,QAA4D,aAA5D;AACA,SAAQC,UAAR,QAAyB,oBAAzB;AAGA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,IAAMC,cAAc;AAAA,sEAAG,iBAAOC,IAAP,EAAiBC,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAEtBC,YAAAA,QAFsB,GAEX,IAAIC,QAAJ,EAFW;AAG5BD,YAAAA,QAAQ,CAACE,MAAT,CAAgB,MAAhB,EAAwBJ,IAAxB;AAH4B;AAAA,mBAIVF,UAAU,CAAC,MAAD,YAAWD,WAAX,wBAA2CK,QAA3C,CAJA;;AAAA;AAItBG,YAAAA,GAJsB;;AAAA,kBAMxBA,GAAG,KAAK,KANgB;AAAA;AAAA;AAAA;;AAAA,6CAOnB,KAPmB;;AAAA;AAAA,kBAStBA,GAAG,CAACC,MAAJ,KAAe,GATO;AAAA;AAAA;AAAA;;AAAA,iBAUpBL,KAVoB;AAAA;AAAA;AAAA;;AAAA,6CAWfI,GAXe;;AAAA;AAahBE,YAAAA,IAbgB,GAaDF,GAAG,CAACG,OAbH,EAaW;;AAbX,6CAcfD,IAde;;AAAA;AAAA;AAAA;;AAAA;AAkBxBE,YAAAA,KAAK,CAAC,oBAAD,CAAL;AAlBwB,6CAmBjB,KAnBiB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAdV,cAAc;AAAA;AAAA;AAAA,GAApB","sourcesContent":["import {SF_ENDPOINT, SF_ENDPOINT_RESOURCE, TOKEN_NAME} from './configset'\nimport {requestApi} from './RequestFunctions'\n\n\n/**\n * uploadTempFile()\n * 파일을 임시 디비에 업로드 후 temp path를 리턴하는 매서드\n * @param {string} data BLOB 객체\n * @returns X\n */\nexport const uploadTempFile = async (data:any, isUrl?: boolean) => {\n\n  const formData = new FormData()\n  formData.append('file', data)\n  const res = await requestApi('post',`${SF_ENDPOINT}/anonymous/upload`, formData)\n\n  if (res === false) {\n    return false\n  } else {\n    if (res.status === 200) { //res.status === 200 //res !== null\n      if (isUrl) {\n        return res //const path: string = res.results; //const path: string = res[0];\n      } else {\n        const path: string = res.results //const path: string = res.results; //const path: string = res[0];\n        return path\n      }\n\n    } else {\n      alert('해당 파일 업로드 실패하였습니다.')\n      return false\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}