{"ast":null,"code":"import _regeneratorRuntime from \"/Users/user/Desktop/sizl/mono_pop/node_modules/@babel/runtime/regenerator\";\nimport _toConsumableArray from \"/Users/user/Desktop/sizl/mono_pop/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"/Users/user/Desktop/sizl/mono_pop/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _asyncToGenerator from \"/Users/user/Desktop/sizl/mono_pop/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/Users/user/Desktop/sizl/mono_pop/packages/main/pages/mes/basic/rawmaterial/index.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useState } from 'react';\nimport ExcelTable from '../../../../component/Excel/ExcelTable';\nimport MenuNavigation from '../../../../component/MenuNav/MenuNavigation';\nimport ProfileHeader from '../../../../component/Profile/ProfileHeader';\nimport PageHeader from '../../../../component/Header/Header'; // @ts-ignore\n\nimport { SelectColumn } from 'react-data-grid';\nimport { RequestMethod } from '../../../../common/RequestFunctions';\nimport { columnlist } from \"../../../../common/columnInit\";\nimport Notiflix from \"notiflix\";\nimport { useRouter } from 'next/router';\nimport { MAX_VALUE } from '../../../../common/configset';\nimport TextEditor from '../../../../component/InputBox/ExcelBasicInputBox';\nimport { excelDownload } from '../../../../common/excelDownloadFunction';\nimport PaginationComponent from '../../../../component/Pagination/PaginationComponent';\nimport ExcelDownloadModal from '../../../../component/Modal/ExcelDownloadMoadal';\n\nvar BasicContainer = function BasicContainer(_ref) {\n  _s();\n\n  var page = _ref.page,\n      keyword = _ref.keyword,\n      option = _ref.option;\n  var router = useRouter();\n\n  var _useState = useState(false),\n      excelOpen = _useState[0],\n      setExcelOpen = _useState[1];\n\n  var _useState2 = useState(false),\n      excelUploadOpen = _useState2[0],\n      setExcelUploadOpen = _useState2[1];\n\n  var _useState3 = useState([{\n    name: \"\",\n    id: \"\"\n  }]),\n      basicRow = _useState3[0],\n      setBasicRow = _useState3[1];\n\n  var _useState4 = useState(columnlist[\"rawmaterial\"]),\n      column = _useState4[0],\n      setColumn = _useState4[1];\n\n  var _useState5 = useState(new Set()),\n      selectList = _useState5[0],\n      setSelectList = _useState5[1];\n\n  var _useState6 = useState(['고객사명', '모델명', 'CODE', '품명', '재질']),\n      optionList = _useState6[0],\n      setOptionList = _useState6[1];\n\n  var _useState7 = useState(0),\n      optionIndex = _useState7[0],\n      setOptionIndex = _useState7[1];\n\n  var _useState8 = useState({\n    page: 1,\n    total: 1\n  }),\n      pageInfo = _useState8[0],\n      setPageInfo = _useState8[1];\n\n  useEffect(function () {\n    setOptionIndex(option);\n\n    if (keyword) {\n      SearchBasic(keyword, option, page).then(function () {\n        Notiflix.Loading.remove();\n      });\n    } else {\n      LoadBasic(page).then(function () {\n        Notiflix.Loading.remove();\n      });\n    }\n  }, [page, keyword, option]);\n\n  var loadAllSelectItems = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(column) {\n      var tmpColumn;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              tmpColumn = column.map( /*#__PURE__*/function () {\n                var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(v) {\n                  var tmpKey, res, pk;\n                  return _regeneratorRuntime.wrap(function _callee$(_context) {\n                    while (1) {\n                      switch (_context.prev = _context.next) {\n                        case 0:\n                          if (!(v.selectList && v.selectList.length === 0)) {\n                            _context.next = 11;\n                            break;\n                          }\n\n                          tmpKey = v.key;\n\n                          if (tmpKey === 'customer_id') {\n                            tmpKey = 'customer';\n                          } else if (tmpKey === 'cm_id') {\n                            tmpKey = 'model';\n                          }\n\n                          _context.next = 5;\n                          return RequestMethod('get', \"\".concat(tmpKey, \"List\"), {\n                            path: {\n                              page: 1,\n                              renderItem: MAX_VALUE\n                            }\n                          });\n\n                        case 5:\n                          res = _context.sent;\n                          pk = \"\";\n                          res.results.info_list && res.results.info_list.length && Object.keys(res.results.info_list[0]).map(function (v) {\n                            if (v.indexOf('_id') !== -1) {\n                              pk = v;\n                            }\n                          });\n                          return _context.abrupt(\"return\", _objectSpread(_objectSpread({}, v), {}, {\n                            selectList: _toConsumableArray(res.results.info_list.map(function (value) {\n                              return _objectSpread(_objectSpread({}, value), {}, {\n                                name: tmpKey === 'model' ? value.model : value.name,\n                                pk: value[pk]\n                              });\n                            }))\n                          }));\n\n                        case 11:\n                          if (!v.selectList) {\n                            _context.next = 15;\n                            break;\n                          }\n\n                          return _context.abrupt(\"return\", _objectSpread(_objectSpread({}, v), {}, {\n                            pk: v.unit_id\n                          }));\n\n                        case 15:\n                          return _context.abrupt(\"return\", v);\n\n                        case 16:\n                        case \"end\":\n                          return _context.stop();\n                      }\n                    }\n                  }, _callee);\n                }));\n\n                return function (_x2) {\n                  return _ref3.apply(this, arguments);\n                };\n              }()); // if(type !== 'productprocess'){\n\n              Promise.all(tmpColumn).then(function (res) {\n                setColumn(_toConsumableArray(res.map(function (v) {\n                  return _objectSpread(_objectSpread({}, v), {}, {\n                    name: v.moddable ? v.name + '(필수)' : v.name\n                  });\n                })));\n              }); // }\n\n            case 2:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function loadAllSelectItems(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var SaveBasic = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return RequestMethod('post', \"rawmaterialSave\", _defineProperty({}, 'raw_materials', basicRow.map(function (row, i) {\n                if (selectList.has(row.id)) {\n                  var selectKey = [];\n                  var additional = [];\n                  column.map(function (v) {\n                    if (v.selectList) {\n                      selectKey.push(v.key);\n                    }\n\n                    if (v.type === 'additional') {\n                      additional.push(v);\n                    }\n                  });\n                  var selectData = {};\n                  Object.keys(row).map(function (v) {\n                    if (v.indexOf('PK') !== -1) {\n                      selectData = _objectSpread(_objectSpread({}, selectData), {}, _defineProperty({}, v.split('PK')[0], row[v]));\n                    }\n\n                    if (v === 'unitWeight') {\n                      selectData = _objectSpread(_objectSpread({}, selectData), {}, {\n                        unitWeight: Number(row['unitWeight'])\n                      });\n                    }\n\n                    if (v === 'tmpId') {\n                      selectData = _objectSpread(_objectSpread({}, selectData), {}, {\n                        id: row['tmpId']\n                      });\n                    }\n                  });\n                  return _objectSpread(_objectSpread(_objectSpread({}, row), selectData), {}, {\n                    customer_id: row.customer_idPK,\n                    additional: _toConsumableArray(additional.map(function (v) {\n                      if (row[v.name]) {\n                        return {\n                          id: v.id,\n                          title: v.name,\n                          value: row[v.name],\n                          unit: v.unit\n                        };\n                      }\n                    }).filter(function (v) {\n                      return v;\n                    }))\n                  });\n                }\n              }).filter(function (v) {\n                return v;\n              })));\n\n            case 2:\n              res = _context3.sent;\n\n              if (res) {\n                if (res.status === 200) {\n                  Notiflix.Report.success('저장되었습니다.', '', '확인');\n\n                  if (keyword) {\n                    SearchBasic(keyword, option, page).then(function () {\n                      Notiflix.Loading.remove();\n                    });\n                  } else {\n                    LoadBasic(page).then(function () {\n                      Notiflix.Loading.remove();\n                    });\n                  }\n                }\n              }\n\n            case 4:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function SaveBasic() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  var LoadBasic = /*#__PURE__*/function () {\n    var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(page) {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              Notiflix.Loading.circle();\n              _context4.next = 3;\n              return RequestMethod('get', \"rawmaterialList\", {\n                path: {\n                  page: page || page !== 0 ? page : 1,\n                  renderItem: 18\n                }\n              });\n\n            case 3:\n              res = _context4.sent;\n\n              if (res && res.status === 200) {\n                if (res.results.totalPages < page) {\n                  LoadBasic(page - 1).then(function () {\n                    Notiflix.Loading.remove();\n                  });\n                } else {\n                  setPageInfo(_objectSpread(_objectSpread({}, pageInfo), {}, {\n                    page: res.results.page,\n                    total: res.results.totalPages\n                  }));\n                  cleanUpData(res);\n                }\n              } else if (res.state === 401) {\n                Notiflix.Report.failure('불러올 수 없습니다.', '권한이 없습니다.', '확인', function () {\n                  router.back();\n                });\n              }\n\n            case 5:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    return function LoadBasic(_x3) {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n\n  var SearchBasic = /*#__PURE__*/function () {\n    var _ref6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(keyword, option, isPaging) {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              Notiflix.Loading.circle();\n\n              if (!isPaging) {\n                setOptionIndex(option);\n              }\n\n              _context5.next = 4;\n              return RequestMethod('get', \"rawmaterialSearch\", {\n                path: {\n                  page: isPaging !== null && isPaging !== void 0 ? isPaging : 1,\n                  renderItem: 18\n                },\n                params: {\n                  keyword: keyword !== null && keyword !== void 0 ? keyword : '',\n                  opt: option !== null && option !== void 0 ? option : 0\n                }\n              });\n\n            case 4:\n              res = _context5.sent;\n\n              if (res && res.status === 200) {\n                setPageInfo(_objectSpread(_objectSpread({}, pageInfo), {}, {\n                  page: res.results.page,\n                  total: res.results.totalPages\n                }));\n                cleanUpData(res);\n              }\n\n            case 6:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5);\n    }));\n\n    return function SearchBasic(_x4, _x5, _x6) {\n      return _ref6.apply(this, arguments);\n    };\n  }();\n\n  var cleanUpBasicData = function cleanUpBasicData(res) {\n    var tmpRow = [];\n    tmpRow = res.results.info_list;\n  };\n\n  var cleanUpData = function cleanUpData(res) {\n    var tmpColumn = columnlist['rawmaterial'];\n    var tmpRow = [];\n    tmpColumn = tmpColumn.map(function (column) {\n      var menuData;\n      res.results.menus && res.results.menus.map(function (menu) {\n        if (menu.colName === column.key) {\n          menuData = {\n            id: menu.id,\n            name: menu.title,\n            width: menu.width,\n            tab: menu.tab,\n            unit: menu.unit,\n            moddable: !menu.moddable\n          };\n        } else if (menu.colName === 'id' && column.key === 'tmpId') {\n          menuData = {\n            id: menu.id,\n            name: menu.title,\n            width: menu.width,\n            tab: menu.tab,\n            unit: menu.unit,\n            moddable: !menu.moddable\n          };\n        }\n      });\n\n      if (menuData) {\n        return _objectSpread(_objectSpread({}, column), menuData);\n      }\n    }).filter(function (v) {\n      return v;\n    });\n    var additionalMenus = res.results.menus ? res.results.menus.map(function (menu) {\n      if (menu.colName === null) {\n        return {\n          id: menu.id,\n          name: menu.title,\n          width: menu.width,\n          key: menu.title,\n          editor: TextEditor,\n          type: 'additional',\n          unit: menu.unit\n        };\n      }\n    }).filter(function (v) {\n      return v;\n    }) : [];\n    tmpRow = res.results.info_list;\n    loadAllSelectItems([].concat(_toConsumableArray(tmpColumn), _toConsumableArray(additionalMenus)));\n    var selectKey = \"\";\n    var additionalData = [];\n    tmpColumn.map(function (v) {\n      if (v.selectList) {\n        selectKey = v.key;\n      }\n    });\n    additionalMenus.map(function (v) {\n      if (v.type === 'additional') {\n        additionalData.push(v.key);\n      }\n    });\n    var pk = \"\";\n    Object.keys(tmpRow).map(function (v) {\n      if (v.indexOf('_id') !== -1) {\n        pk = v;\n      }\n    });\n    var tmpBasicRow = tmpRow.map(function (row, index) {\n      var appendAdditional = {};\n      row.additional && row.additional.map(function (v) {\n        appendAdditional = _objectSpread(_objectSpread({}, appendAdditional), {}, _defineProperty({}, v.title, v.value));\n      });\n      var random_id = Math.random() * 1000;\n      return _objectSpread(_objectSpread({\n        rm_id: row.rm_id,\n        customer_id: row.model.customer.name,\n        customer_idPK: row.model.customer.customer_id,\n        cm_id: row.model.model,\n        cm_idPK: row.model.cm_id,\n        type: row.type,\n        code: row.code,\n        name: row.name,\n        texture: row.texture,\n        depth: row.depth,\n        width: row.width,\n        height: row.height\n      }, appendAdditional), {}, {\n        id: \"rawmaterial_\".concat(random_id)\n      });\n    });\n    setBasicRow(_toConsumableArray(tmpBasicRow));\n  };\n\n  var downloadExcel = function downloadExcel() {\n    var tmpSelectList = [];\n    basicRow.map(function (row) {\n      tmpSelectList.push(selectList.has(row.id));\n    });\n    excelDownload(column, basicRow, \"rawmaterial\", \"rawmaterial\", tmpSelectList);\n  };\n\n  var onClickHeaderButton = function onClickHeaderButton(index) {\n    switch (index) {\n      case 0:\n        setExcelOpen(true);\n        break;\n\n      case 1:\n        router.push(\"/mes/item/manage/rawmaterial\");\n        break;\n\n      case 2:\n        SaveBasic();\n        break;\n    }\n  };\n\n  return __jsx(\"div\", {\n    style: {\n      display: 'flex'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 402,\n      columnNumber: 9\n    }\n  }, __jsx(MenuNavigation, {\n    pageType: 'BASIC',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 403,\n      columnNumber: 13\n    }\n  }), __jsx(\"div\", {\n    style: {\n      paddingBottom: 40\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 404,\n      columnNumber: 13\n    }\n  }, __jsx(ProfileHeader, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 405,\n      columnNumber: 17\n    }\n  }), __jsx(PageHeader, {\n    isSearch: true,\n    searchKeyword: keyword,\n    onChangeSearchKeyword: function onChangeSearchKeyword(keyword) {\n      if (keyword) {\n        router.push(\"/mes/basic/rawmaterial?page=1&keyword=\".concat(keyword, \"&opt=\").concat(optionIndex));\n      } else {\n        router.push(\"/mes/basic/rawmaterial?page=1&keyword=\");\n      }\n    },\n    searchOptionList: optionList,\n    onChangeSearchOption: function onChangeSearchOption(option) {\n      setOptionIndex(option);\n    },\n    optionIndex: optionIndex,\n    title: \"원자재 기본정보\",\n    buttons: ['엑셀로 받기', '항목관리', '저장하기'],\n    buttonsOnclick: onClickHeaderButton,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 406,\n      columnNumber: 17\n    }\n  }), __jsx(ExcelTable, {\n    editable: true,\n    resizable: true,\n    headerList: [SelectColumn].concat(_toConsumableArray(column)),\n    row: basicRow // setRow={setBasicRow}\n    ,\n    setRow: function setRow(e) {\n      var tmp = selectList;\n      e.map(function (v) {\n        if (v.isChange) tmp.add(v.id);\n      });\n      setSelectList(tmp);\n      setBasicRow(e);\n    },\n    selectList: selectList //@ts-ignore\n    ,\n    setSelectList: setSelectList,\n    height: basicRow.length * 40 >= 40 * 18 + 56 ? 40 * 19 : basicRow.length * 40 + 56,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 427,\n      columnNumber: 17\n    }\n  }), __jsx(PaginationComponent, {\n    currentPage: pageInfo.page,\n    totalPage: pageInfo.total,\n    setPage: function setPage(page) {\n      if (keyword) {\n        router.push(\"/mes/basic/rawmaterial?page=\".concat(page, \"&keyword=\").concat(keyword, \"&opt=\").concat(option));\n      } else {\n        router.push(\"/mes/basic/rawmaterial?page=\".concat(page));\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 449,\n      columnNumber: 17\n    }\n  })), __jsx(ExcelDownloadModal, {\n    isOpen: excelOpen,\n    column: column,\n    basicRow: basicRow,\n    filename: \"\\uC6D0\\uC790\\uC7AC\\uAE30\\uBCF8\\uC815\\uBCF4\",\n    sheetname: \"\\uC6D0\\uC790\\uC7AC\\uAE30\\uBCF8\\uC815\\uBCF4\",\n    selectList: selectList,\n    tab: 'ROLE_BASE_06',\n    setIsOpen: setExcelOpen,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 461,\n      columnNumber: 13\n    }\n  }));\n};\n\n_s(BasicContainer, \"Uj2i/vOLzEA3x4h9p2PJMZuC2Dc=\", false, function () {\n  return [useRouter];\n});\n\n_c = BasicContainer;\n// BasicContainer.getInitialProps = async ({ query }) => {\n//     let { page, keyword, opt } = query\n//     if (typeof page === 'string')\n//         page = parseInt(page);\n//     if (typeof opt === 'string')\n//         opt = parseInt(opt);\n//     return { page, keyword, option: opt };\n// }\nexport var __N_SSP = true;\nexport default BasicContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"BasicContainer\");","map":{"version":3,"sources":["/Users/user/Desktop/sizl/mono_pop/packages/main/pages/mes/basic/rawmaterial/index.tsx"],"names":["React","useEffect","useState","ExcelTable","MenuNavigation","ProfileHeader","PageHeader","SelectColumn","RequestMethod","columnlist","Notiflix","useRouter","MAX_VALUE","TextEditor","excelDownload","PaginationComponent","ExcelDownloadModal","BasicContainer","page","keyword","option","router","excelOpen","setExcelOpen","excelUploadOpen","setExcelUploadOpen","name","id","basicRow","setBasicRow","column","setColumn","Set","selectList","setSelectList","optionList","setOptionList","optionIndex","setOptionIndex","total","pageInfo","setPageInfo","SearchBasic","then","Loading","remove","LoadBasic","loadAllSelectItems","tmpColumn","map","v","length","tmpKey","key","path","renderItem","res","pk","results","info_list","Object","keys","indexOf","value","model","unit_id","Promise","all","moddable","SaveBasic","row","i","has","selectKey","additional","push","type","selectData","split","unitWeight","Number","customer_id","customer_idPK","title","unit","filter","status","Report","success","circle","totalPages","cleanUpData","state","failure","back","isPaging","params","opt","cleanUpBasicData","tmpRow","menuData","menus","menu","colName","width","tab","additionalMenus","editor","additionalData","tmpBasicRow","index","appendAdditional","random_id","Math","random","rm_id","customer","cm_id","cm_idPK","code","texture","depth","height","downloadExcel","tmpSelectList","onClickHeaderButton","display","paddingBottom","e","tmp","isChange","add"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react'\nimport ExcelTable from '../../../../component/Excel/ExcelTable'\nimport MenuNavigation from '../../../../component/MenuNav/MenuNavigation'\nimport ProfileHeader from '../../../../component/Profile/ProfileHeader'\nimport PageHeader from '../../../../component/Header/Header'\n// @ts-ignore\nimport {SelectColumn} from 'react-data-grid'\nimport {IExcelHeaderType, IItemMenuType} from '../../../../common/@types/type'\nimport {RequestMethod} from '../../../../common/RequestFunctions'\nimport {columnlist} from \"../../../../common/columnInit\";\nimport Notiflix from \"notiflix\";\nimport {useRouter} from 'next/router'\nimport {MAX_VALUE} from '../../../../common/configset'\nimport DropDownEditor from '../../../../component/Dropdown/ExcelBasicDropdown'\nimport TextEditor from '../../../../component/InputBox/ExcelBasicInputBox'\nimport {excelDownload} from '../../../../common/excelDownloadFunction'\nimport {loadAll} from 'react-cookies'\nimport PaginationComponent from '../../../../component/Pagination/PaginationComponent'\nimport {NextPageContext} from 'next'\nimport ExcelDownloadModal from '../../../../component/Modal/ExcelDownloadMoadal'\nimport ExcelUploadModal from \"../../../../component/Modal/ExcelUploadModal\";\n\ninterface IProps {\n    children?: any\n    page?: number\n    keyword?: string\n    option?: number\n}\n\nconst BasicContainer = ({page, keyword, option}: IProps) => {\n    const router = useRouter()\n\n    const [excelOpen, setExcelOpen] = useState<boolean>(false)\n    const [excelUploadOpen, setExcelUploadOpen] = useState<boolean>(false)\n\n    const [basicRow, setBasicRow] = useState<Array<any>>([{\n        name: \"\", id: \"\"\n    }])\n\n    const [column, setColumn] = useState<Array<IExcelHeaderType>>(columnlist[\"rawmaterial\"]);\n    const [selectList, setSelectList] = useState<Set<number>>(new Set())\n    const [optionList, setOptionList] = useState<string[]>(['고객사명', '모델명', 'CODE', '품명', '재질'])\n    const [optionIndex, setOptionIndex] = useState<number>(0)\n\n    const [pageInfo, setPageInfo] = useState<{page: number, total: number}>({\n        page: 1,\n        total: 1\n    })\n\n    useEffect(() => {\n        setOptionIndex(option)\n        if(keyword){\n            SearchBasic(keyword, option, page).then(() => {\n                Notiflix.Loading.remove()\n            })\n        }else{\n            LoadBasic(page).then(() => {\n                Notiflix.Loading.remove()\n            })\n        }\n    }, [page, keyword, option])\n\n    const loadAllSelectItems = async (column: IExcelHeaderType[]) => {\n        let tmpColumn = column.map(async (v: any) => {\n            if(v.selectList && v.selectList.length === 0){\n                let tmpKey = v.key\n\n                if(tmpKey === 'customer_id'){\n                    tmpKey = 'customer'\n                }else if(tmpKey === 'cm_id'){\n                    tmpKey = 'model'\n                }\n                let res: any\n                    res = await RequestMethod('get', `${tmpKey}List`,{\n                        path: {\n                            page: 1,\n                            renderItem: MAX_VALUE,\n                        }\n                    })\n\n\n                    let pk = \"\";\n\n                    res.results.info_list && res.results.info_list.length && Object.keys(res.results.info_list[0]).map((v) => {\n                        if(v.indexOf('_id') !== -1){\n                            pk = v\n                        }\n                    })\n                    return {\n                        ...v,\n                        selectList: [...res.results.info_list.map((value: any) => {\n                            return {\n                                ...value,\n                                name: tmpKey === 'model' ? value.model : value.name,\n                                pk: value[pk]\n                            }\n                        })]\n                    }\n\n            }else{\n                if(v.selectList){\n                    return {\n                        ...v,\n                        pk: v.unit_id\n                    }\n                }else{\n                    return v\n                }\n            }\n        })\n\n        // if(type !== 'productprocess'){\n        Promise.all(tmpColumn).then(res => {\n            setColumn([...res.map(v=> {\n                return {\n                    ...v,\n                    name: v.moddable ? v.name+'(필수)' : v.name\n                }\n            })])\n        })\n        // }\n    }\n\n    const SaveBasic = async () => {\n        let res: any\n            res = await RequestMethod('post', `rawmaterialSave`,\n                {\n                    ['raw_materials']: basicRow.map((row, i) => {\n                        if(selectList.has(row.id)){\n                            let selectKey: string[] = []\n                            let additional:any[] = []\n                            column.map((v) => {\n                                if(v.selectList){\n                                    selectKey.push(v.key)\n                                }\n\n                                if(v.type === 'additional'){\n                                    additional.push(v)\n                                }\n                            })\n\n                            let selectData: any = {}\n\n                            Object.keys(row).map(v => {\n                                if(v.indexOf('PK') !== -1) {\n                                    selectData = {\n                                        ...selectData,\n                                        [v.split('PK')[0]]: row[v]\n                                    }\n                                }\n\n                                if(v === 'unitWeight') {\n                                    selectData = {\n                                        ...selectData,\n                                        unitWeight: Number(row['unitWeight'])\n                                    }\n                                }\n\n                                if(v === 'tmpId') {\n                                    selectData = {\n                                        ...selectData,\n                                        id: row['tmpId']\n                                    }\n                                }\n                            })\n\n                            return {\n                                ...row,\n                                ...selectData,\n                                customer_id: row.customer_idPK,\n                                additional: [\n                                    ...additional.map(v => {\n                                        if(row[v.name]) {\n                                            return {\n                                                id: v.id,\n                                                title: v.name,\n                                                value: row[v.name],\n                                                unit: v.unit\n                                            }\n                                        }\n                                    }).filter((v) => v)\n                                ]\n                            }\n\n                        }\n                    }).filter((v) => v)\n                })\n\n\n        if(res){\n            if(res.status === 200){\n                Notiflix.Report.success('저장되었습니다.','','확인');\n                if(keyword){\n                    SearchBasic(keyword, option, page).then(() => {\n                        Notiflix.Loading.remove()\n                    })\n                }else{\n                    LoadBasic(page).then(() => {\n                        Notiflix.Loading.remove()\n                    })\n                }\n            }\n        }\n    }\n\n\n    const LoadBasic = async (page?: number) => {\n        Notiflix.Loading.circle()\n            const res = await RequestMethod('get', `rawmaterialList`,{\n                path: {\n                    page: (page || page !== 0) ? page : 1,\n                    renderItem: 18,\n                }\n            })\n\n            if(res && res.status === 200){\n                if(res.results.totalPages < page){\n                    LoadBasic(page - 1).then(() => {\n                        Notiflix.Loading.remove()\n                    })\n                }else{\n                    setPageInfo({\n                        ...pageInfo,\n                        page: res.results.page,\n                        total: res.results.totalPages\n                    })\n                    cleanUpData(res)\n                }\n            }else if (res.state === 401) {\n                Notiflix.Report.failure('불러올 수 없습니다.', '권한이 없습니다.', '확인', () => {\n                    router.back()\n                })\n            }\n\n    }\n\n    const SearchBasic = async (keyword: any, option: number, isPaging?: number) => {\n        Notiflix.Loading.circle()\n        if(!isPaging){\n            setOptionIndex(option)\n        }\n        const res = await RequestMethod('get', `rawmaterialSearch`,{\n            path: {\n                page: isPaging ?? 1,\n                renderItem: 18,\n            },\n            params: {\n                keyword: keyword ?? '',\n                opt: option ?? 0\n            }\n        })\n\n        if(res && res.status === 200){\n            setPageInfo({\n                ...pageInfo,\n                page: res.results.page,\n                total: res.results.totalPages\n            })\n            cleanUpData(res)\n        }\n    }\n\n    const cleanUpBasicData = (res:any) => {\n        let tmpRow = []\n        tmpRow = res.results.info_list\n    }\n\n    const cleanUpData = (res: any) => {\n        let tmpColumn = columnlist['rawmaterial'];\n        let tmpRow = []\n        tmpColumn = tmpColumn.map((column: any) => {\n            let menuData: object | undefined;\n            res.results.menus && res.results.menus.map((menu: any) => {\n                if(menu.colName === column.key){\n                    menuData = {\n                        id: menu.id,\n                        name: menu.title,\n                        width: menu.width,\n                        tab:menu.tab,\n                        unit:menu.unit,\n                        moddable: !menu.moddable\n                    }\n                } else if(menu.colName === 'id' && column.key === 'tmpId'){\n                    menuData = {\n                        id: menu.id,\n                        name: menu.title,\n                        width: menu.width,\n                        tab:menu.tab,\n                        unit:menu.unit,\n                        moddable: !menu.moddable\n                    }\n                }\n            })\n\n            if(menuData){\n                return {\n                    ...column,\n                    ...menuData\n                }\n            }\n        }).filter((v:any) => v)\n\n        let additionalMenus = res.results.menus ? res.results.menus.map((menu:any) => {\n            if(menu.colName === null){\n                return {\n                    id: menu.id,\n                    name: menu.title,\n                    width: menu.width,\n                    key: menu.title,\n                    editor: TextEditor,\n                    type: 'additional',\n                    unit: menu.unit\n                }\n            }\n        }).filter((v: any) => v) : []\n\n\n        tmpRow = res.results.info_list\n\n            loadAllSelectItems( [\n                ...tmpColumn,\n                ...additionalMenus\n            ] )\n\n\n        let selectKey = \"\"\n        let additionalData: any[] = []\n        tmpColumn.map((v: any) => {\n            if(v.selectList){\n                selectKey = v.key\n            }\n        })\n\n        additionalMenus.map((v: any) => {\n            if(v.type === 'additional'){\n                additionalData.push(v.key)\n            }\n        })\n\n        let pk = \"\";\n        Object.keys(tmpRow).map((v) => {\n            if(v.indexOf('_id') !== -1){\n                pk = v\n            }\n        })\n\n        let tmpBasicRow = tmpRow.map((row: any, index: number) => {\n\n            let appendAdditional: any = {}\n\n            row.additional && row.additional.map((v: any) => {\n                appendAdditional = {\n                    ...appendAdditional,\n                    [v.title]: v.value\n                }\n            })\n            let random_id = Math.random()*1000;\n            return {\n                rm_id:row.rm_id,\n                customer_id:row.model.customer.name,\n                customer_idPK: row.model.customer.customer_id,\n                cm_id:row.model.model,\n                cm_idPK:row.model.cm_id,\n                type:row.type,\n                code: row.code,\n                name: row.name,\n                texture: row.texture,\n                depth: row.depth,\n                width: row.width,\n                height: row.height,\n                ...appendAdditional,\n                id: `rawmaterial_${random_id}`,\n            }\n        })\n\n        setBasicRow([...tmpBasicRow])\n    }\n\n    const downloadExcel = () => {\n        let tmpSelectList: boolean[] = []\n        basicRow.map(row => {\n            tmpSelectList.push(selectList.has(row.id))\n        })\n        excelDownload(column, basicRow, `rawmaterial`, \"rawmaterial\", tmpSelectList)\n    }\n\n    const onClickHeaderButton = (index: number) => {\n        switch(index){\n            case 0:\n                setExcelOpen(true)\n                break;\n            case 1:\n                router.push(`/mes/item/manage/rawmaterial`)\n                break;\n            case 2:\n                SaveBasic()\n                break;\n        }\n    }\n\n    return (\n        <div style={{display: 'flex', }}>\n            <MenuNavigation pageType={'BASIC'}/>\n            <div style={{paddingBottom: 40}}>\n                <ProfileHeader/>\n                <PageHeader\n                    isSearch\n                    searchKeyword={keyword}\n                    onChangeSearchKeyword={(keyword) => {\n                        if(keyword){\n                            router.push(`/mes/basic/rawmaterial?page=1&keyword=${keyword}&opt=${optionIndex}`)\n                        }else{\n                            router.push(`/mes/basic/rawmaterial?page=1&keyword=`)\n                        }\n                    }}\n                    searchOptionList={optionList}\n                    onChangeSearchOption={(option) => {\n                        setOptionIndex(option)\n                    }}\n                    optionIndex={optionIndex}\n                    title={\"원자재 기본정보\"}\n                    buttons={\n                             ['엑셀로 받기', '항목관리', '저장하기']\n                    }\n                    buttonsOnclick={onClickHeaderButton}\n                />\n                <ExcelTable\n                    editable\n                    resizable\n                    headerList={[\n                        SelectColumn,\n                        ...column\n                    ]}\n                    row={basicRow}\n                    // setRow={setBasicRow}\n                    setRow={(e) => {\n                        let tmp: Set<any> = selectList\n                        e.map(v => {\n                            if(v.isChange) tmp.add(v.id)\n                        })\n                        setSelectList(tmp)\n                        setBasicRow(e)\n                    }}\n                    selectList={selectList}\n                    //@ts-ignore\n                    setSelectList={setSelectList}\n                    height={basicRow.length * 40 >= 40*18+56 ? 40*19 : basicRow.length * 40 + 56}\n                />\n                <PaginationComponent\n                  currentPage={pageInfo.page}\n                  totalPage={pageInfo.total}\n                  setPage={(page) => {\n                      if(keyword){\n                          router.push(`/mes/basic/rawmaterial?page=${page}&keyword=${keyword}&opt=${option}`)\n                      }else{\n                          router.push(`/mes/basic/rawmaterial?page=${page}`)\n                      }\n                  }}\n                />\n            </div>\n            <ExcelDownloadModal\n              isOpen={excelOpen}\n              column={column}\n              basicRow={basicRow}\n              filename={`원자재기본정보`}\n              sheetname={`원자재기본정보`}\n              selectList={selectList}\n              tab={'ROLE_BASE_06'}\n              setIsOpen={setExcelOpen}\n            />\n        </div>\n    );\n}\n\nexport const getServerSideProps = (ctx: NextPageContext) => {\n    return {\n        props: {\n            page: ctx.query.page ?? 1,\n            keyword: ctx.query.keyword ?? \"\",\n            option: ctx.query.opt ?? 0,\n        }\n    }\n}\n\n// BasicContainer.getInitialProps = async ({ query }) => {\n//     let { page, keyword, opt } = query\n//     if (typeof page === 'string')\n//         page = parseInt(page);\n//     if (typeof opt === 'string')\n//         opt = parseInt(opt);\n//     return { page, keyword, option: opt };\n// }\n\nexport default BasicContainer;\n"]},"metadata":{},"sourceType":"module"}