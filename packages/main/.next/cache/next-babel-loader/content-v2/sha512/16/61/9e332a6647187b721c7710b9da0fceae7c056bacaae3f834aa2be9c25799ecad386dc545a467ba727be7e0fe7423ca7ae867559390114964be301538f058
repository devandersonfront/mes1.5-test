{"ast":null,"code":"import _defineProperty from \"/Users/user/Desktop/sizl/mono_pop/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"/Users/user/Desktop/sizl/mono_pop/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/user/Desktop/sizl/mono_pop/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/Users/user/Desktop/sizl/mono_pop/packages/main/container/loginPage/index.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport DefaultButton from '../../component/DefaultButton';\nimport WelcomeInput from '../../component/InputBox/WelcomeInput';\nimport WelcomeContainer from '../../component/Welcome/WelcomeContainer';\nimport { useRouter } from 'next/router';\nimport { requestApi } from '../../common/RequestFunctions';\nimport { setToken } from '../../common/tokenManager';\nimport Notiflix from 'notiflix';\nimport { useDispatch } from 'react-redux';\nimport { setUserInfoAction } from '../../reducer/userInfo';\n\nvar LoginPage = function LoginPage(_ref) {\n  _s();\n\n  var children = _ref.children,\n      data = _ref.data,\n      setData = _ref.setData;\n  var router = useRouter();\n  var dispatch = useDispatch();\n\n  var onClickLogin = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              Notiflix.Loading.dots('MES System 접속 중...');\n              _context.next = 3;\n              return requestApi('post', '/anonymous/login', data);\n\n            case 3:\n              res = _context.sent;\n\n              if (res) {\n                if (res.status === 200) {\n                  setToken(res.results);\n                  dispatch(setUserInfoAction({\n                    name: res.results.name,\n                    profile: res.results.profilePath\n                  }));\n                  router.push('/mes/dashboard').then();\n                } else {\n                  alert(res.message);\n                }\n              }\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function onClickLogin() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var onKeyDownEnter = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(key) {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              if (!(key === 'Enter')) {\n                _context2.next = 3;\n                break;\n              }\n\n              _context2.next = 3;\n              return onClickLogin().then(function () {\n                return Notiflix.Loading.remove(500);\n              });\n\n            case 3:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function onKeyDownEnter(_x) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(WelcomeContainer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    style: {\n      width: 320\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, __jsx(\"p\", {\n    style: {\n      fontSize: 36,\n      marginBottom: 26,\n      textAlign: 'left',\n      fontFamily: 'Roboto',\n      fontWeight: 'bold'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, \"Log In\"), __jsx(WelcomeInput, {\n    type: \"email\",\n    value: data.id,\n    title: 'ID (e-mail)',\n    onChangeEvent: function onChangeEvent(e) {\n      setData(_objectSpread(_objectSpread({}, data), {}, {\n        id: e.target.value\n      }));\n    },\n    hint: '이메일을 입력해주세요.',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }), __jsx(WelcomeInput, {\n    type: \"password\",\n    value: data.password,\n    title: 'Password',\n    onChangeEvent: function onChangeEvent(e) {\n      setData(_objectSpread(_objectSpread({}, data), {}, {\n        password: e.target.value\n      }));\n    },\n    hint: '비밀번호를 입력해주세요.',\n    onKeyDown: onKeyDownEnter,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }), __jsx(DefaultButton, {\n    title: '로그인',\n    onClick: function onClick() {\n      return onClickLogin().then(function () {\n        return Notiflix.Loading.remove(500);\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }), __jsx(\"p\", {\n    style: {\n      marginTop: \"15px\",\n      textDecoration: \"underline\",\n      cursor: 'pointer'\n    },\n    onClick: function onClick() {\n      router.push(\"/mes/modify/findpassword\");\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, \"\\uBE44\\uBC00\\uBC88\\uD638 \\uCC3E\\uAE30\")));\n};\n\n_s(LoginPage, \"zXnflAqd4rnyBpogtdAc6I4Vk2A=\", false, function () {\n  return [useRouter, useDispatch];\n});\n\n_c = LoginPage;\nexport default LoginPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"sources":["/Users/user/Desktop/sizl/mono_pop/packages/main/container/loginPage/index.tsx"],"names":["React","DefaultButton","WelcomeInput","WelcomeContainer","useRouter","requestApi","setToken","Notiflix","useDispatch","setUserInfoAction","LoginPage","children","data","setData","router","dispatch","onClickLogin","Loading","dots","res","status","results","name","profile","profilePath","push","then","alert","message","onKeyDownEnter","key","remove","width","fontSize","marginBottom","textAlign","fontFamily","fontWeight","id","e","target","value","password","marginTop","textDecoration","cursor"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { NextPage } from 'next'\nimport DefaultButton from '../../component/DefaultButton'\nimport WelcomeInput from '../../component/InputBox/WelcomeInput'\nimport WelcomeContainer from '../../component/Welcome/WelcomeContainer'\nimport { useRouter } from 'next/router'\nimport { requestApi } from '../../common/RequestFunctions'\nimport { IResponseType } from '../../common/@types/type'\nimport { setToken } from '../../common/tokenManager'\nimport Notiflix from 'notiflix'\nimport {useDispatch, useSelector} from 'react-redux'\nimport {setUserInfoAction} from '../../reducer/userInfo'\n\ninterface IProps {\n  children?: any\n  data: IReqType\n  setData: (data: IReqType) => void\n}\n\ninterface IReqType {\n  id: string,\n  password: string\n}\n\nconst LoginPage: NextPage<IProps> = ({children, data, setData }) => {\n  const router = useRouter()\n\n  const dispatch = useDispatch()\n\n\n  const onClickLogin = async () => {\n    Notiflix.Loading.dots('MES System 접속 중...')\n    const res:IResponseType = await requestApi('post', '/anonymous/login', data)\n\n    if(res) {\n      if(res.status === 200) {\n        setToken( res.results )\n        dispatch(setUserInfoAction({\n          name: res.results.name,\n          profile: res.results.profilePath\n        }))\n        router.push('/mes/dashboard').then()\n      } else {\n        alert(res.message)\n      }\n    }\n  }\n\n  const onKeyDownEnter = async (key: string) => {\n    if (key === 'Enter')\n      await onClickLogin().then(() => Notiflix.Loading.remove(500))\n  }\n\n  return (\n    <WelcomeContainer>\n      <div style={{width: 320}}>\n        <p style={{fontSize: 36, marginBottom: 26, textAlign: 'left', fontFamily: 'Roboto', fontWeight: 'bold'}}>Log In</p>\n        <WelcomeInput type=\"email\" value={data.id} title={'ID (e-mail)'}\n                     onChangeEvent={(e: React.ChangeEvent<HTMLInputElement>): void => {\n                       setData({...data, id: e.target.value})\n                   }} hint={'이메일을 입력해주세요.'}/>\n        <WelcomeInput type=\"password\" value={data.password} title={'Password'}\n                     onChangeEvent={(e: React.ChangeEvent<HTMLInputElement>): void => {\n                         setData({...data, password: e.target.value})\n                     }} hint={'비밀번호를 입력해주세요.'} onKeyDown={onKeyDownEnter}/>\n        <DefaultButton title={'로그인'} onClick={() => onClickLogin().then(() => Notiflix.Loading.remove(500) ) } />\n        <p style={{marginTop:\"15px\", textDecoration:\"underline\", cursor: 'pointer'}} onClick={()=>{ router.push(\"/mes/modify/findpassword\")}}>\n          비밀번호 찾기\n        </p>\n      </div>\n    </WelcomeContainer>\n  )\n}\n\nexport default LoginPage\n"]},"metadata":{},"sourceType":"module"}