{"ast":null,"code":"import _regeneratorRuntime from \"/Users/user/Desktop/sizl/mono_pop/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/user/Desktop/sizl/mono_pop/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _toConsumableArray from \"/Users/user/Desktop/sizl/mono_pop/node_modules/next/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"/Users/user/Desktop/sizl/mono_pop/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nvar _jsxFileName = \"/Users/user/Desktop/sizl/mono_pop/packages/basic/src/container/BasicPause.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useState } from 'react';\nimport { ExcelTable, Header as PageHeader, RequestMethod, columnlist, excelDownload } from 'shared'; // @ts-ignore\n\nimport { SelectColumn } from 'react-data-grid';\nimport Notiflix from \"notiflix\";\nimport { useRouter } from 'next/router';\nimport ButtonGroup from '../../../main/component/ButtonGroup';\n\nvar BasicPause = function BasicPause(_ref) {\n  _s();\n\n  var page = _ref.page,\n      keyword = _ref.keyword,\n      option = _ref.option;\n\n  var _useState = useState([]),\n      processBasicRow = _useState[0],\n      setProcessBasicRow = _useState[1];\n\n  var _useState2 = useState(columnlist[\"pause\"]),\n      processColumn = _useState2[0],\n      setProcessColumn = _useState2[1];\n\n  var _useState3 = useState(0),\n      processId = _useState3[0],\n      setProcessId = _useState3[1];\n\n  var _useState4 = useState([]),\n      pauseBasicRow = _useState4[0],\n      setPauseBasicRow = _useState4[1];\n\n  var _useState5 = useState(columnlist[\"pauseReason\"]),\n      pauseColumn = _useState5[0],\n      setPauseColumn = _useState5[1];\n\n  var _useState6 = useState(0),\n      selectRow = _useState6[0],\n      setSelectRow = _useState6[1];\n\n  var _useState7 = useState(false),\n      state = _useState7[0],\n      setState = _useState7[1];\n\n  var _useState8 = useState(new Set()),\n      selectList = _useState8[0],\n      setSelectList = _useState8[1];\n\n  var _useState9 = useState(false),\n      excelUploadOpen = _useState9[0],\n      setExcelUploadOpen = _useState9[1];\n\n  var router = useRouter();\n  useEffect(function () {\n    if (processBasicRow.length > 0) {\n      LoadPauseList(processBasicRow[selectRow].process_id);\n    }\n  }, [selectRow]);\n\n  var cleanUpBasicData = function cleanUpBasicData(res) {\n    var tmpRow = [];\n    tmpRow = res.data.results.info_list.map(function (column, index) {\n      var menuData = {};\n      menuData = {\n        index: index + 1,\n        width: column.width\n      };\n      var random_id = Math.random() * 1000;\n      return _objectSpread(_objectSpread({\n        id: random_id\n      }, column), menuData);\n    });\n    setPauseBasicRow(_toConsumableArray(tmpRow));\n  };\n\n  var LoadPauseList = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(value) {\n      var res, tmpColumn, tmpRow;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return RequestMethod(\"get\", \"pauseReasonList\", {\n                path: {\n                  page: 1,\n                  renderItem: 51,\n                  process_id: value\n                }\n              });\n\n            case 2:\n              res = _context.sent;\n\n              if (res && res.status === 200) {\n                tmpColumn = columnlist[\"pauseReason\"];\n                tmpColumn = tmpColumn.map(function (value, index) {\n                  return _objectSpread(_objectSpread({}, value), {}, {\n                    key: value.key,\n                    name: value.name,\n                    width: value.width\n                  });\n                });\n                setPauseColumn(tmpColumn);\n                tmpRow = [];\n                tmpRow = res.results.info_list.map(function (column, index) {\n                  var menuData = {};\n                  menuData = {\n                    index: index + 1,\n                    width: column.width\n                  };\n                  var random_id = Math.random() * 1000;\n                  return _objectSpread(_objectSpread({\n                    id: random_id\n                  }, column), menuData);\n                });\n                Notiflix.Loading.remove(300);\n                setPauseBasicRow(_toConsumableArray(tmpRow));\n              }\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function LoadPauseList(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var LoadBasic = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var res, tmpColumn, tmpRow;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              Notiflix.Loading.standard();\n              _context2.next = 3;\n              return RequestMethod('get', \"processList\", {\n                path: {\n                  page: 1,\n                  renderItem: 51\n                }\n              });\n\n            case 3:\n              res = _context2.sent;\n\n              if (res && res.status === 200) {\n                tmpColumn = columnlist[\"pause\"];\n\n                if (res.results.info_list.length > 0) {\n                  setProcessId(res.results.info_list[selectRow].process_id);\n                }\n\n                tmpRow = [];\n                tmpColumn = tmpColumn.map(function (column) {\n                  var menuData = {};\n                  res.results.menus.map(function (menu) {\n                    if (menu.colName === column.key) {\n                      menuData = {\n                        id: menu.id,\n                        name: menu.title,\n                        width: 1560\n                      };\n                    }\n                  });\n                  return _objectSpread(_objectSpread({}, column), menuData);\n                });\n                tmpRow = res.results.info_list;\n\n                if (res.results.info_list.length > 0) {\n                  LoadPauseList(res.results.info_list[selectRow].process_id);\n                } else {\n                  Notiflix.Loading.remove(300);\n                }\n\n                setProcessColumn(tmpColumn);\n                setProcessBasicRow(_toConsumableArray(tmpRow.map(function (row) {\n                  return _objectSpread({}, row);\n                })));\n                Notiflix.Loading.remove(300);\n              } else if (res.state === 401) {\n                Notiflix.Report.failure('불러올 수 없습니다.', '권한이 없습니다.', '확인', function () {\n                  router.back();\n                });\n              }\n\n            case 5:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function LoadBasic() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var downloadExcel = function downloadExcel() {\n    var tmpSelectList = [];\n    pauseBasicRow.map(function (row) {\n      tmpSelectList.push(selectList.has(row.id));\n    });\n    excelDownload(pauseColumn, pauseBasicRow, \"\\uC77C\\uC2DC\\uC815\\uC9C0 \\uC720\\uD615 \\uB4F1\\uB85D\", '일시정지 유형 등록', tmpSelectList);\n  };\n\n  var buttonEvents = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(index) {\n      var dataRow, savePauseBasicRow;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.t0 = index;\n              _context4.next = _context4.t0 === 0 ? 3 : _context4.t0 === 1 ? 5 : _context4.t0 === 2 ? 7 : _context4.t0 === 3 ? 11 : _context4.t0 === 4 ? 16 : 17;\n              break;\n\n            case 3:\n              setExcelUploadOpen(true);\n              return _context4.abrupt(\"return\");\n\n            case 5:\n              downloadExcel();\n              return _context4.abrupt(\"return\");\n\n            case 7:\n              dataRow = {};\n              columnlist[\"pauseReason\"].map(function (key, index) {\n                if (key.key === \"index\") {\n                  dataRow[key.key] = pauseBasicRow.length + 1;\n                  dataRow.id = Math.random() * 100; // dataRow.id = index+1;\n                } else {\n                  dataRow[key.key] = \"\";\n                }\n              });\n\n              if (processId !== 0) {\n                pauseBasicRow.push(_objectSpread({}, dataRow));\n                setPauseBasicRow(_toConsumableArray(pauseBasicRow));\n              } else {\n                Notiflix.Report.warning(\"선택된 공정이 없습니다.\", \"\", \"확인\");\n              }\n\n              return _context4.abrupt(\"return\");\n\n            case 11:\n              Notiflix.Loading.standard();\n              savePauseBasicRow = [];\n              pauseBasicRow.map(function (value) {\n                if (value.reason === \"\" || value.reason === undefined) {} else {\n                  savePauseBasicRow.push(value);\n                }\n              });\n\n              if (pauseBasicRow.length > 0) {\n                RequestMethod(\"post\", \"pauseSave\", {\n                  process_id: processBasicRow[selectRow].process_id,\n                  reasons: savePauseBasicRow\n                }).then(function () {\n                  Notiflix.Report.success(\"저장되었습니다.\", \"\", \"확인\");\n                  LoadBasic();\n                })[\"catch\"](function (e) {\n                  Notiflix.Loading.remove(300);\n                  Notiflix.Report.warning(\"관리자에게 문의하세요.\", \"\", \"확인\");\n                });\n              } else {\n                Notiflix.Loading.remove(300);\n                Notiflix.Report.warning(\"저장할 데이터가 없습니다\", \"\", \"확인\");\n              }\n\n              return _context4.abrupt(\"return\");\n\n            case 16:\n              Notiflix.Confirm.show(\"경고\", \"삭제하시겠습니까?\", \"확인\", \"취소\", /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n                var idList, spliceArray, tmpPauseBasicRow, res;\n                return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n                  while (1) {\n                    switch (_context3.prev = _context3.next) {\n                      case 0:\n                        idList = [];\n                        spliceArray = [];\n                        pauseBasicRow.map(function (v, i) {\n                          if (selectList.has(v.id)) {\n                            spliceArray.push(i);\n                            idList.push(v.ppr_id);\n                          }\n                        });\n                        tmpPauseBasicRow = _toConsumableArray(pauseBasicRow);\n                        spliceArray.reverse();\n                        spliceArray.map(function (value, index) {\n                          tmpPauseBasicRow.splice(value, 1);\n                        });\n                        _context3.next = 8;\n                        return RequestMethod(\"delete\", \"pauseDelete\", {\n                          reasons: idList.filter(function (v) {\n                            return v;\n                          })\n                        });\n\n                      case 8:\n                        res = _context3.sent;\n\n                        if (res && res.status === 200) {\n                          Notiflix.Report.success(\"삭제되었습니다.\", \"\", \" 확인\");\n                          sortObject(tmpPauseBasicRow); // LoadPauseList(processBasicRow[selectRow].process_id);\n                        }\n\n                      case 10:\n                      case \"end\":\n                        return _context3.stop();\n                    }\n                  }\n                }, _callee3);\n              })), function () {});\n\n            case 17:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    return function buttonEvents(_x2) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  var sortObject = function sortObject(object) {\n    var compare_qty = function compare_qty(a, b) {\n      // a should come before b in the sorted order\n      if (a.lengthIndex < b.lengthIndex) {\n        return -1; // a should come after b in the sorted order\n      } else if (a.lengthIndex > b.lengthIndex) {\n        return 1; // a and b are the same\n      } else {\n        return 0;\n      }\n    };\n\n    object.sort(compare_qty);\n    var sortData = object.map(function (v, index) {\n      return _objectSpread(_objectSpread({}, v), {}, {\n        index: index + 1,\n        lengthIndex: index + 1\n      });\n    });\n    setPauseBasicRow(_toConsumableArray(sortData));\n  };\n\n  useEffect(function () {\n    LoadBasic();\n  }, []);\n  useEffect(function () {\n    if (state) {\n      sortObject(pauseBasicRow);\n      setState(false);\n    }\n  }, [pauseBasicRow]);\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 5\n    }\n  }, __jsx(PageHeader, {\n    title: \"일시정지 유형 등록\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 7\n    }\n  }), __jsx(\"div\", {\n    style: {\n      marginTop: 15\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 7\n    }\n  }, __jsx(ExcelTable, {\n    editable: true,\n    headerList: _toConsumableArray(processColumn),\n    row: processBasicRow,\n    setRow: setProcessBasicRow,\n    setSelectRow: setSelectRow,\n    width: 1576,\n    height: 280,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 9\n    }\n  }), __jsx(\"div\", {\n    style: {\n      display: \"flex\",\n      justifyContent: \"space-between\",\n      margin: \"15px 0\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 9\n    }\n  }, __jsx(\"span\", {\n    style: {\n      color: \"white\",\n      fontSize: 22,\n      fontWeight: \"bold\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 25\n    }\n  }, processBasicRow[selectRow] && processBasicRow[selectRow].name), __jsx(ButtonGroup, {\n    buttons: [\"엑셀로 업로드\", \"엑셀로 받기\", \"행 추가\", \"저장하기\", \"삭제\"],\n    buttonsOnclick: buttonEvents,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 11\n    }\n  })), __jsx(ExcelTable, {\n    editable: true,\n    headerList: [SelectColumn].concat(_toConsumableArray(pauseColumn)),\n    row: pauseBasicRow,\n    setRow: function setRow(e) {\n      var tmp = selectList;\n      e.map(function (v) {\n        if (v.isChange) tmp.add(v.id);\n      });\n      setSelectList(tmp);\n      setState(true);\n      setPauseBasicRow(e);\n    },\n    width: 1576,\n    height: 440 // setSelectList={changeSetSelectList}\n    //@ts-ignore\n    ,\n    setSelectList: setSelectList,\n    selectList: selectList,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 9\n    }\n  })));\n};\n\n_s(BasicPause, \"qo0F4QvhsrJ9HTVrY1kH3IGUbug=\", false, function () {\n  return [useRouter];\n});\n\n_c = BasicPause;\nexport var getServerSideProps = function getServerSideProps(ctx) {\n  var _ctx$query$page, _ctx$query$keyword, _ctx$query$opt;\n\n  return {\n    props: {\n      page: (_ctx$query$page = ctx.query.page) !== null && _ctx$query$page !== void 0 ? _ctx$query$page : 1,\n      keyword: (_ctx$query$keyword = ctx.query.keyword) !== null && _ctx$query$keyword !== void 0 ? _ctx$query$keyword : \"\",\n      option: (_ctx$query$opt = ctx.query.opt) !== null && _ctx$query$opt !== void 0 ? _ctx$query$opt : 0\n    }\n  };\n};\nexport { BasicPause };\n\nvar _c;\n\n$RefreshReg$(_c, \"BasicPause\");","map":{"version":3,"sources":["/Users/user/Desktop/sizl/mono_pop/packages/basic/src/container/BasicPause.tsx"],"names":["React","useEffect","useState","ExcelTable","Header","PageHeader","RequestMethod","columnlist","excelDownload","SelectColumn","Notiflix","useRouter","ButtonGroup","BasicPause","page","keyword","option","processBasicRow","setProcessBasicRow","processColumn","setProcessColumn","processId","setProcessId","pauseBasicRow","setPauseBasicRow","pauseColumn","setPauseColumn","selectRow","setSelectRow","state","setState","Set","selectList","setSelectList","excelUploadOpen","setExcelUploadOpen","router","length","LoadPauseList","process_id","cleanUpBasicData","res","tmpRow","data","results","info_list","map","column","index","menuData","width","random_id","Math","random","id","value","path","renderItem","status","tmpColumn","key","name","Loading","remove","LoadBasic","standard","menus","menu","colName","title","row","Report","failure","back","downloadExcel","tmpSelectList","push","has","buttonEvents","dataRow","warning","savePauseBasicRow","reason","undefined","reasons","then","success","e","Confirm","show","idList","spliceArray","v","i","ppr_id","tmpPauseBasicRow","reverse","splice","filter","sortObject","object","compare_qty","a","b","lengthIndex","sort","sortData","marginTop","display","justifyContent","margin","color","fontSize","fontWeight","tmp","isChange","add","getServerSideProps","ctx","props","query","opt"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react'\nimport {\n  ExcelTable,\n  Header as PageHeader,\n  RequestMethod,\n  columnlist,\n  MAX_VALUE,\n  DropDownEditor,\n  TextEditor,\n  excelDownload,\n  PaginationComponent,\n  ExcelDownloadModal,\n  IExcelHeaderType, IItemMenuType\n} from 'shared'\n// @ts-ignore\nimport {SelectColumn} from 'react-data-grid'\nimport Notiflix from \"notiflix\";\nimport {useRouter} from 'next/router'\nimport {loadAll} from 'react-cookies'\nimport {NextPageContext} from 'next'\nimport ButtonGroup from '../../../main/component/ButtonGroup'\n\nexport interface IProps {\n  children?: any\n  page?: number\n  keyword?: string\n  option?: number\n}\n\nconst BasicPause = ({page, keyword, option}: IProps) => {\n\n  const [processBasicRow, setProcessBasicRow] = useState<any[]>([]);\n  const [processColumn, setProcessColumn] = useState<Array<IExcelHeaderType>>(columnlist[`pause`]);\n\n  const [processId, setProcessId] = useState<number>(0);\n\n  const [pauseBasicRow, setPauseBasicRow] = useState<any[]>([]);\n  const [pauseColumn, setPauseColumn] = useState<Array<IExcelHeaderType>>(columnlist[`pauseReason`]);\n  const [selectRow, setSelectRow] = useState<any>(0);\n\n  const [state, setState] = useState<boolean>(false);\n\n  const [selectList, setSelectList] = useState<Set<any>>(new Set());\n\n  const [excelUploadOpen, setExcelUploadOpen] = useState<boolean>(false);\n\n  const router = useRouter()\n\n  useEffect(()=>{\n    if(processBasicRow.length > 0){\n      LoadPauseList(processBasicRow[selectRow].process_id);\n    }\n  },[selectRow])\n\n  const cleanUpBasicData = (res:any) => {\n    let tmpRow = [];\n    tmpRow = res.data.results.info_list.map((column: any,index:number) => {\n      let menuData: object = {};\n\n      menuData = {\n        index:index+1,\n        width: column.width,\n      }\n      let random_id = Math.random()*1000;\n      return {\n        id: random_id,\n        ...column,\n        ...menuData\n      }\n    })\n    setPauseBasicRow([...tmpRow]);\n  }\n\n  const LoadPauseList = async (value:string) => {\n    const res = await RequestMethod(\"get\", `pauseReasonList`,{\n      path: {\n        page:1,\n        renderItem:51,\n        process_id:value\n      }\n    })\n\n    if(res && res.status === 200){\n      let tmpColumn = columnlist[`pauseReason`];\n      tmpColumn = tmpColumn.map((value:any,index:number) => {\n        return {...value, key:value.key, name:value.name, width:value.width}\n      })\n      setPauseColumn(tmpColumn);\n\n      let tmpRow = [];\n      tmpRow = res.results.info_list.map((column: any,index:number) => {\n        let menuData: object = {};\n\n        menuData = {\n          index:index+1,\n          width: column.width,\n        }\n        let random_id = Math.random()*1000;\n        return {\n          id: random_id,\n          ...column,\n          ...menuData\n        }\n      })\n      Notiflix.Loading.remove(300);\n      setPauseBasicRow([...tmpRow]);\n    }\n  }\n\n  const LoadBasic = async () => {\n    Notiflix.Loading.standard();\n    const res = await RequestMethod('get', `processList`,{\n      path: {\n        page: 1,\n        renderItem: 51,\n      }\n    })\n    if(res && res.status === 200){\n      let tmpColumn = columnlist[`pause`];\n      if(res.results.info_list.length > 0){\n        setProcessId(res.results.info_list[selectRow].process_id);\n      }\n      let tmpRow = []\n      tmpColumn = tmpColumn.map((column: any) => {\n        let menuData: object = {};\n\n        res.results.menus.map((menu: any) => {\n          if(menu.colName === column.key){\n            menuData = {\n              id: menu.id,\n              name: menu.title,\n              width: 1560\n            }\n          }\n        })\n\n        return {\n          ...column,\n          ...menuData\n        }\n      })\n      tmpRow = res.results.info_list\n      if(res.results.info_list.length > 0){\n        LoadPauseList(res.results.info_list[selectRow].process_id);\n      }else{\n        Notiflix.Loading.remove(300);\n      }\n      setProcessColumn(tmpColumn);\n      setProcessBasicRow([...tmpRow.map((row: any) => {\n        return {\n          ...row,\n        }\n      })])\n      Notiflix.Loading.remove(300);\n    }else if (res.state === 401) {\n      Notiflix.Report.failure('불러올 수 없습니다.', '권한이 없습니다.', '확인', () => {\n        router.back()\n      })\n    }\n  }\n  const downloadExcel = () => {\n    let tmpSelectList: boolean[] = []\n    pauseBasicRow.map(row => {\n      tmpSelectList.push(selectList.has(row.id))\n    })\n\n    excelDownload(pauseColumn, pauseBasicRow, `일시정지 유형 등록`, '일시정지 유형 등록', tmpSelectList)\n  }\n\n  const buttonEvents = async(index:number) => {\n    switch (index) {\n      case 0 :\n        setExcelUploadOpen(true)\n        return\n      case 1 :\n        downloadExcel();\n        return\n      case 2 :\n        let dataRow:any = {};\n\n        columnlist[`pauseReason`].map((key:any,index:number)=>{\n          if(key.key === \"index\"){\n            dataRow[key.key] = pauseBasicRow.length+1;\n            dataRow.id = Math.random()*100;\n            // dataRow.id = index+1;\n          }else{\n            dataRow[key.key] = \"\";\n          }\n        })\n\n        if(processId !== 0){\n          pauseBasicRow.push({...dataRow})\n          setPauseBasicRow([...pauseBasicRow])\n        }else{\n          Notiflix.Report.warning(\"선택된 공정이 없습니다.\",\"\",\"확인\");\n        }\n        return\n      case 3 :\n        Notiflix.Loading.standard();\n        let savePauseBasicRow:any[] = [];\n        pauseBasicRow.map((value)=>{\n          if(value.reason === \"\" || value.reason === undefined){\n          }else{\n            savePauseBasicRow.push(value);\n          }\n        })\n\n        if(pauseBasicRow.length > 0 ) {\n          RequestMethod(\"post\", `pauseSave`, {\n            process_id: processBasicRow[selectRow].process_id,\n            reasons: savePauseBasicRow\n          }).then(() => {\n            Notiflix.Report.success(\"저장되었습니다.\", \"\", \"확인\");\n            LoadBasic();\n          }).catch((e) => {\n            Notiflix.Loading.remove(300);\n            Notiflix.Report.warning(\"관리자에게 문의하세요.\", \"\", \"확인\");\n          })\n        }else{\n          Notiflix.Loading.remove(300);\n          Notiflix.Report.warning(\"저장할 데이터가 없습니다\", \"\", \"확인\");\n        }\n        return\n\n      case 4 :\n        Notiflix.Confirm.show(\"경고\",\"삭제하시겠습니까?\",\"확인\",\"취소\",\n          async()=>{\n            const idList:number[] = [];\n            const spliceArray:number[] = [];\n\n            pauseBasicRow.map((v,i)=> {\n              if(selectList.has(v.id)){\n                spliceArray.push(i);\n                idList.push(v.ppr_id)\n              }\n            })\n\n            const tmpPauseBasicRow = [...pauseBasicRow];\n            spliceArray.reverse();\n            spliceArray.map((value, index)=>{\n              tmpPauseBasicRow.splice(value, 1);\n            })\n\n            const res = await RequestMethod(\"delete\", `pauseDelete`, {reasons:idList.filter(v => v) } );\n\n            if(res && res.status === 200){\n              Notiflix.Report.success(\"삭제되었습니다.\",\"\",\" 확인\");\n              sortObject(tmpPauseBasicRow);\n              // LoadPauseList(processBasicRow[selectRow].process_id);\n            }\n          },\n          ()=>{}\n        )\n    }\n  }\n\n  const sortObject = (object:any) => {\n    const  compare_qty = (a:any, b:any) => {\n      // a should come before b in the sorted order\n      if(a.lengthIndex < b.lengthIndex){\n        return -1;\n        // a should come after b in the sorted order\n      }else if(a.lengthIndex > b.lengthIndex){\n        return 1;\n        // a and b are the same\n      }else{\n        return 0;\n      }\n    }\n\n    object.sort(compare_qty)\n    let sortData = object.map((v:object, index:number)=>{\n      return {...v, index:index+1, lengthIndex:index+1}\n    });\n    setPauseBasicRow([...sortData]);\n\n  }\n\n  useEffect(()=>{\n    LoadBasic();\n  },[])\n\n  useEffect(()=>{\n    if(state){\n      sortObject(pauseBasicRow);\n      setState(false);\n    }\n  },[pauseBasicRow])\n\n  return (\n    <div>\n      <PageHeader title={\"일시정지 유형 등록\"} />\n      <div style={{marginTop:15}}>\n        <ExcelTable\n          editable\n          headerList={[\n            ...processColumn\n          ]}\n          row={processBasicRow}\n          setRow={setProcessBasicRow}\n          setSelectRow={setSelectRow}\n          width={1576}\n          height={280}\n        />\n        <div style={{display:\"flex\", justifyContent:\"space-between\", margin:\"15px 0\"}}>\n                        <span style={{color:\"white\", fontSize:22, fontWeight:\"bold\"}}>\n                            {processBasicRow[selectRow] && processBasicRow[selectRow].name}\n                        </span>\n          <ButtonGroup buttons={[\"엑셀로 업로드\", \"엑셀로 받기\", \"행 추가\", \"저장하기\", \"삭제\"]} buttonsOnclick={buttonEvents}/>\n        </div>\n        <ExcelTable\n          editable\n          headerList={[\n            SelectColumn,\n            ...pauseColumn\n          ]}\n          row={pauseBasicRow}\n          setRow={(e) => {\n            let tmp: Set<any> = selectList\n            e.map(v => {\n              if(v.isChange) tmp.add(v.id)\n            })\n            setSelectList(tmp)\n            setState(true)\n            setPauseBasicRow(e)\n          }}\n          width={1576}\n          height={440}\n          // setSelectList={changeSetSelectList}\n          //@ts-ignore\n          setSelectList={setSelectList}\n          selectList={selectList}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport const getServerSideProps = (ctx: NextPageContext) => {\n  return {\n    props: {\n      page: ctx.query.page ?? 1,\n      keyword: ctx.query.keyword ?? \"\",\n      option: ctx.query.opt ?? 0,\n    }\n  }\n}\n\nexport {BasicPause};\n"]},"metadata":{},"sourceType":"module"}