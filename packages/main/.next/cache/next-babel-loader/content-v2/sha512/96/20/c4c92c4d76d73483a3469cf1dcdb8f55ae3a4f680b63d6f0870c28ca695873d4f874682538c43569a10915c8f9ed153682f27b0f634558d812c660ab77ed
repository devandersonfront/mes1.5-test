{"ast":null,"code":"var _jsxFileName = \"/Users/user/Desktop/sizl/mono_pop/packages/main/pages/_document.tsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react'; // Modules\n\nimport Document, { Html, Head, Main, NextScript } from 'next/document'; // MUI Core\n\nimport { ServerStyleSheets } from '@material-ui/core/styles';\nimport { ServerStyleSheet as StyledServerStyleSheets } from 'styled-components'; // Utils\n\nimport { theme } from '../common/theme';\n\nclass MyDocument extends Document {\n  render() {\n    return __jsx(Html, {\n      lang: \"en\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 7\n      }\n    }, __jsx(Head, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }\n    }, __jsx(\"meta\", {\n      name: \"theme-color\",\n      content: theme.palette.primary.main,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 11\n      }\n    }), __jsx(\"link\", {\n      rel: \"stylesheet\",\n      href: \"https://fonts.googleapis.com/css2?family=Open+Sans:wght@300;400;600;700&display=swap\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 11\n      }\n    })), __jsx(\"body\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }\n    }, __jsx(Main, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }\n    }), __jsx(NextScript, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }\n    })));\n  }\n\n} // `getInitialProps` belongs to `_document` (instead of `_app`),\n// it's compatible with server-side generation (SSG).\n\n\nMyDocument.getInitialProps = async ctx => {\n  // Resolution order\n  //\n  // On the server:\n  // 1. app.getInitialProps\n  // 2. page.getInitialProps\n  // 3. document.getInitialProps\n  // 4. app.render\n  // 5. page.render\n  // 6. document.render\n  //\n  // On the server with error:\n  // 1. document.getInitialProps\n  // 2. app.render\n  // 3. page.render\n  // 4. document.render\n  //\n  // On the client\n  // 1. app.getInitialProps\n  // 2. page.getInitialProps\n  // 3. app.render\n  // 4. page.render\n  // Render app and page and get the context of the page with collected side effects.\n  const sheets = new ServerStyleSheets();\n  const styledSheets = new StyledServerStyleSheets();\n  const originalRenderPage = ctx.renderPage;\n\n  try {\n    ctx.renderPage = () => originalRenderPage({\n      enhanceApp: App => props => styledSheets.collectStyles(sheets.collect(__jsx(App, _extends({}, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 77\n        }\n      }))))\n    });\n\n    const initialProps = await Document.getInitialProps(ctx);\n    return _objectSpread(_objectSpread({}, initialProps), {}, {\n      styles: __jsx(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 9\n        }\n      }, initialProps.styles, sheets.getStyleElement(), styledSheets.getStyleElement())\n    });\n  } finally {\n    styledSheets.seal();\n  } // when using material-ui only\n  // ctx.renderPage = () => originalRenderPage({\n  //     enhanceApp: (App) => (props) => sheets.collect(<App {...props} />),\n  // });\n  //\n  // const initialProps = await Document.getInitialProps(ctx);\n  //\n  // return {\n  //     ...initialProps,\n  //     // Styles fragment is rendered after the app and page rendering finish.\n  //     styles: [\n  //         ...React.Children.toArray(initialProps.styles),\n  //         sheets.getStyleElement(),\n  //     ],\n  // };\n\n};\n\nexport default MyDocument;","map":{"version":3,"sources":["/Users/user/Desktop/sizl/mono_pop/packages/main/pages/_document.tsx"],"names":["React","Document","Html","Head","Main","NextScript","ServerStyleSheets","ServerStyleSheet","StyledServerStyleSheets","theme","MyDocument","render","palette","primary","main","getInitialProps","ctx","sheets","styledSheets","originalRenderPage","renderPage","enhanceApp","App","props","collectStyles","collect","initialProps","styles","getStyleElement","seal"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,OAAOC,QAAP,IAAmBC,IAAnB,EAAyBC,IAAzB,EAA+BC,IAA/B,EAAqCC,UAArC,QAAuD,eAAvD,C,CACA;;AACA,SAASC,iBAAT,QAAkC,0BAAlC;AACA,SAASC,gBAAgB,IAAIC,uBAA7B,QAA4D,mBAA5D,C,CACA;;AACA,SAASC,KAAT,QAAsB,iBAAtB;;AAEA,MAAMC,UAAN,SAAyBT,QAAzB,CAAkC;AAChCU,EAAAA,MAAM,GAAG;AACP,WACE,MAAC,IAAD;AAAM,MAAA,IAAI,EAAC,IAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAM,MAAA,IAAI,EAAC,aAAX;AAAyB,MAAA,OAAO,EAAEF,KAAK,CAACG,OAAN,CAAcC,OAAd,CAAsBC,IAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE;AAAM,MAAA,GAAG,EAAC,YAAV;AAAuB,MAAA,IAAI,EAAC,sFAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,EAEA,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFA,CALF,CADF;AAYD;;AAd+B,C,CAiBlC;AACA;;;AACAJ,UAAU,CAACK,eAAX,GAA6B,MAAOC,GAAP,IAAe;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA,QAAMC,MAAM,GAAG,IAAIX,iBAAJ,EAAf;AACA,QAAMY,YAAY,GAAG,IAAIV,uBAAJ,EAArB;AACA,QAAMW,kBAAkB,GAAGH,GAAG,CAACI,UAA/B;;AAEA,MAAI;AACFJ,IAAAA,GAAG,CAACI,UAAJ,GAAiB,MAAMD,kBAAkB,CAAC;AACxCE,MAAAA,UAAU,EAAEC,GAAG,IAAIC,KAAK,IAAIL,YAAY,CAACM,aAAb,CAA2BP,MAAM,CAACQ,OAAP,CAAe,MAAC,GAAD,eAASF,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAf,CAA3B;AADY,KAAD,CAAzC;;AAGA,UAAMG,YAAY,GAAG,MAAMzB,QAAQ,CAACc,eAAT,CAAyBC,GAAzB,CAA3B;AACA,2CACKU,YADL;AAEEC,MAAAA,MAAM,EACJ,MAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGD,YAAY,CAACC,MADhB,EAEGV,MAAM,CAACW,eAAP,EAFH,EAGGV,YAAY,CAACU,eAAb,EAHH;AAHJ;AAUD,GAfD,SAeU;AACRV,IAAAA,YAAY,CAACW,IAAb;AACD,GA7CyC,CA+C1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACD,CA9DD;;AAgEA,eAAenB,UAAf","sourcesContent":["import React from 'react';\n// Modules\nimport Document, { Html, Head, Main, NextScript } from 'next/document';\n// MUI Core\nimport { ServerStyleSheets } from '@material-ui/core/styles';\nimport { ServerStyleSheet as StyledServerStyleSheets } from 'styled-components';\n// Utils\nimport { theme } from '../common/theme';\n\nclass MyDocument extends Document {\n  render() {\n    return (\n      <Html lang=\"en\">\n        <Head>\n          <meta name=\"theme-color\" content={theme.palette.primary.main} />\n          <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/css2?family=Open+Sans:wght@300;400;600;700&display=swap\" />\n        </Head>\n        <body>\n        <Main />\n        <NextScript />\n        </body>\n      </Html>\n    );\n  }\n}\n\n// `getInitialProps` belongs to `_document` (instead of `_app`),\n// it's compatible with server-side generation (SSG).\nMyDocument.getInitialProps = async (ctx) => {\n  // Resolution order\n  //\n  // On the server:\n  // 1. app.getInitialProps\n  // 2. page.getInitialProps\n  // 3. document.getInitialProps\n  // 4. app.render\n  // 5. page.render\n  // 6. document.render\n  //\n  // On the server with error:\n  // 1. document.getInitialProps\n  // 2. app.render\n  // 3. page.render\n  // 4. document.render\n  //\n  // On the client\n  // 1. app.getInitialProps\n  // 2. page.getInitialProps\n  // 3. app.render\n  // 4. page.render\n\n  // Render app and page and get the context of the page with collected side effects.\n  const sheets = new ServerStyleSheets();\n  const styledSheets = new StyledServerStyleSheets();\n  const originalRenderPage = ctx.renderPage;\n\n  try {\n    ctx.renderPage = () => originalRenderPage({\n      enhanceApp: App => props => styledSheets.collectStyles(sheets.collect(<App {...props} />))\n    })\n    const initialProps = await Document.getInitialProps(ctx)\n    return {\n      ...initialProps,\n      styles: (\n        <React.Fragment>\n          {initialProps.styles}\n          {sheets.getStyleElement()}\n          {styledSheets.getStyleElement()}\n        </React.Fragment>\n      )\n    }\n  } finally {\n    styledSheets.seal()\n  }\n\n  // when using material-ui only\n  // ctx.renderPage = () => originalRenderPage({\n  //     enhanceApp: (App) => (props) => sheets.collect(<App {...props} />),\n  // });\n  //\n  // const initialProps = await Document.getInitialProps(ctx);\n  //\n  // return {\n  //     ...initialProps,\n  //     // Styles fragment is rendered after the app and page rendering finish.\n  //     styles: [\n  //         ...React.Children.toArray(initialProps.styles),\n  //         sheets.getStyleElement(),\n  //     ],\n  // };\n};\n\nexport default MyDocument;\n"]},"metadata":{},"sourceType":"module"}