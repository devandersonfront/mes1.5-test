{"ast":null,"code":"var _jsxFileName = \"/Users/user/Desktop/sizl/mono_pop/packages/shared/src/components/Buttons/CellButtom.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport { CellButton } from '../../styles/styledComponents';\nimport { useRouter } from 'next/router';\nimport Notiflix from 'notiflix';\n\nvar CellButtonComponent = function CellButtonComponent(_ref) {\n  _s();\n\n  var row = _ref.row,\n      column = _ref.column,\n      setRow = _ref.setRow;\n\n  var _useState = useState(\"\"),\n      title = _useState[0],\n      setTitle = _useState[1];\n\n  var router = useRouter();\n  useEffect(function () {\n    if (column.key === 'pp_id') {\n      if (row[column.key]) {\n        setTitle('생산 공정 보기');\n      } else {\n        setTitle('생산 공정 등록');\n      }\n    }\n  }, [column.key]);\n  return __jsx(CellButton, {\n    onClick: function onClick() {\n      if (row.product_id) {\n        var _row$pp_id, _row$product_id;\n\n        router.push({\n          pathname: '/mes/basic/product/process',\n          query: {\n            pp_id: (_row$pp_id = row.pp_id) !== null && _row$pp_id !== void 0 ? _row$pp_id : \"\",\n            product_id: (_row$product_id = row.product_id) !== null && _row$product_id !== void 0 ? _row$product_id : \"\",\n            product_data: encodeURI(JSON.stringify(row))\n          }\n        });\n      } else {\n        Notiflix.Report.failure('접근할 수 없습니다.', '품목을 선택해 주세요', '확인');\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, title);\n};\n\n_s(CellButtonComponent, \"Uer7i7GkN/sDaVkJ4V2HDFF5j4g=\", false, function () {\n  return [useRouter];\n});\n\n_c = CellButtonComponent;\nexport { CellButtonComponent };\n\nvar _c;\n\n$RefreshReg$(_c, \"CellButtonComponent\");","map":{"version":3,"sources":["/Users/user/Desktop/sizl/mono_pop/packages/shared/src/components/Buttons/CellButtom.tsx"],"names":["React","useEffect","useState","CellButton","useRouter","Notiflix","CellButtonComponent","row","column","setRow","title","setTitle","router","key","product_id","push","pathname","query","pp_id","product_data","encodeURI","JSON","stringify","Report","failure"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AAEA,SAAQC,UAAR,QAAyB,+BAAzB;AACA,SAAQC,SAAR,QAAwB,aAAxB;AACA,OAAOC,QAAP,MAAqB,UAArB;;AAQA,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,OAAoC;AAAA;;AAAA,MAAjCC,GAAiC,QAAjCA,GAAiC;AAAA,MAA5BC,MAA4B,QAA5BA,MAA4B;AAAA,MAApBC,MAAoB,QAApBA,MAAoB;;AAAA,kBACpCP,QAAQ,CAAS,EAAT,CAD4B;AAAA,MACvDQ,KADuD;AAAA,MAChDC,QADgD;;AAG9D,MAAMC,MAAM,GAAGR,SAAS,EAAxB;AAEAH,EAAAA,SAAS,CAAC,YAAM;AACd,QAAGO,MAAM,CAACK,GAAP,KAAe,OAAlB,EAA0B;AACxB,UAAGN,GAAG,CAACC,MAAM,CAACK,GAAR,CAAN,EAAmB;AACjBF,QAAAA,QAAQ,CAAC,UAAD,CAAR;AACD,OAFD,MAEO;AACLA,QAAAA,QAAQ,CAAC,UAAD,CAAR;AACD;AACF;AACF,GARQ,EAQN,CAACH,MAAM,CAACK,GAAR,CARM,CAAT;AAUA,SACE,MAAC,UAAD;AAAY,IAAA,OAAO,EAAE,mBAAM;AACzB,UAAGN,GAAG,CAACO,UAAP,EAAkB;AAAA;;AAChBF,QAAAA,MAAM,CAACG,IAAP,CAAY;AACVC,UAAAA,QAAQ,EAAE,4BADA;AAEVC,UAAAA,KAAK,EAAE;AACLC,YAAAA,KAAK,gBAAEX,GAAG,CAACW,KAAN,mDAAe,EADf;AAELJ,YAAAA,UAAU,qBAAEP,GAAG,CAACO,UAAN,6DAAoB,EAFzB;AAGLK,YAAAA,YAAY,EAAEC,SAAS,CAACC,IAAI,CAACC,SAAL,CAAef,GAAf,CAAD;AAHlB;AAFG,SAAZ;AAQD,OATD,MASK;AACHF,QAAAA,QAAQ,CAACkB,MAAT,CAAgBC,OAAhB,CAAwB,aAAxB,EAAuC,aAAvC,EAAsD,IAAtD;AACD;AACF,KAbD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAcGd,KAdH,CADF;AAkBD,CAjCD;;GAAMJ,mB;UAGWF,S;;;KAHXE,mB;AAmCN,SAAQA,mBAAR","sourcesContent":["import React, {useEffect, useState} from 'react'\nimport {IExcelHeaderType} from '../../common/@types/type'\nimport {CellButton} from '../../styles/styledComponents'\nimport {useRouter} from 'next/router'\nimport Notiflix from 'notiflix'\n\ninterface IProps {\n  row: any\n  column: IExcelHeaderType\n  setRow: (row: any) => void\n}\n\nconst CellButtonComponent = ({ row, column, setRow}: IProps) => {\n  const [title, setTitle] = useState<string>(\"\")\n\n  const router = useRouter()\n\n  useEffect(() => {\n    if(column.key === 'pp_id'){\n      if(row[column.key]){\n        setTitle('생산 공정 보기')\n      } else {\n        setTitle('생산 공정 등록')\n      }\n    }\n  }, [column.key])\n\n  return (\n    <CellButton onClick={() => {\n      if(row.product_id){\n        router.push({\n          pathname: '/mes/basic/product/process',\n          query: {\n            pp_id: row.pp_id ?? \"\",\n            product_id: row.product_id ?? \"\",\n            product_data: encodeURI(JSON.stringify(row))\n          }\n        })\n      }else{\n        Notiflix.Report.failure('접근할 수 없습니다.', '품목을 선택해 주세요', '확인')\n      }\n    }}>\n      {title}\n    </CellButton>\n  );\n}\n\nexport {CellButtonComponent};\n"]},"metadata":{},"sourceType":"module"}