{"ast":null,"code":"var _jsxFileName = \"/Users/user/Desktop/sizl/mono_pop/packages/shared/src/components/Modal/InfoModal/index.tsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport styled from 'styled-components';\nimport Modal from 'react-modal';\nimport { POINT_COLOR } from '../../../common/configset'; //@ts-ignore\n\n//@ts-ignore\nimport IcX from '../../../../public/images/ic_x.png';\nimport { ExcelTable } from '../../Excel/ExcelTable';\nimport { searchModalList } from '../../../common/modalInit'; //@ts-ignore\n\nimport { UploadButton } from '../../../styles/styledComponents';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { insert_summary_info } from '../../../reducer/infoModal';\nimport { InfoInit, SummaryInfoInit } from './InfoModalInit';\nconst optionList = ['제조번호', '제조사명', '기계명', '', '담당자명'];\n\nconst InfoModal = ({\n  column,\n  row,\n  onRowChange\n}) => {\n  const dispatch = useDispatch();\n  const tabRef = useRef(null);\n  const {\n    0: bomDummy,\n    1: setBomDummy\n  } = useState([{\n    code: 'SU-20210701-1',\n    name: 'SU900-1',\n    material_type: '반제품',\n    process: '프레스',\n    cavity: '1',\n    unit: 'EA'\n  }]);\n  const {\n    0: isOpen,\n    1: setIsOpen\n  } = useState(false);\n  const {\n    0: infoModalInit,\n    1: setInfoModalInit\n  } = useState();\n  const {\n    0: title,\n    1: setTitle\n  } = useState('기계');\n  const {\n    0: optionIndex,\n    1: setOptionIndex\n  } = useState(0);\n  const {\n    0: keyword,\n    1: setKeyword\n  } = useState('');\n  const {\n    0: selectRow,\n    1: setSelectRow\n  } = useState();\n  const {\n    0: searchList,\n    1: setSearchList\n  } = useState([{\n    seq: 1\n  }]);\n  const {\n    0: searchKeyword,\n    1: setSearchKeyword\n  } = useState('');\n  const {\n    0: focusIndex,\n    1: setFocusIndex\n  } = useState(0);\n  const {\n    0: pageInfo,\n    1: setPageInfo\n  } = useState({\n    page: 1,\n    total: 1\n  });\n  const selector = useSelector(state => state.infoModal);\n  useEffect(() => {\n    if (column.type) {\n      console.log(column);\n      setInfoModalInit(InfoInit[column.type]);\n    }\n  }, [column.type]);\n  useEffect(() => {\n    console.log(infoModalInit);\n  }, [infoModalInit]);\n  useEffect(() => {\n    if (isOpen) {\n      dispatch(insert_summary_info({\n        index: selector.index,\n        data: row\n      }));\n    }\n  }, [row, isOpen]);\n\n  const deleteTab = index => {\n    if (bomDummy.length - 1 === focusIndex) {\n      setFocusIndex(focusIndex - 1);\n    }\n\n    if (bomDummy.length === 1) {\n      return setIsOpen(false);\n    }\n\n    let tmp = bomDummy;\n    tmp.splice(index, 1);\n    setBomDummy([...tmp]);\n  };\n\n  const addNewTab = index => {\n    let tmp = bomDummy;\n    tmp.push({\n      code: 'SU-20210701-' + index,\n      name: 'SU900-' + index,\n      material_type: '반제품',\n      process: '프레스',\n      cavity: '1',\n      unit: 'EA'\n    });\n    setBomDummy([...tmp]);\n  };\n\n  const getSummaryInfo = info => {\n    // selector.data[selector.index][info.key]\n    return '-';\n  };\n\n  const ModalContents = () => {\n    if (infoModalInit) {\n      if (infoModalInit.readonly || row[column.key]) {\n        return __jsx(React.Fragment, null, __jsx(\"div\", {\n          style: {\n            padding: '3.5px 0px 0px 3.5px',\n            width: '100%'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 11\n          }\n        }, __jsx(UploadButton, {\n          style: {\n            width: '100%',\n            backgroundColor: '#ffffff00'\n          },\n          onClick: () => {\n            setIsOpen(true);\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }\n        }, __jsx(\"p\", {\n          style: {\n            color: 'white',\n            textDecoration: 'underline'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 15\n          }\n        }, infoModalInit.existText))));\n      } else {\n        return __jsx(React.Fragment, null, __jsx(\"div\", {\n          style: {\n            padding: '3.5px 0px 0px 3.5px',\n            width: '100%'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 11\n          }\n        }, __jsx(UploadButton, {\n          onClick: () => {\n            setIsOpen(true);\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }\n        }, __jsx(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 15\n          }\n        }, infoModalInit.buttonText))));\n      }\n    }\n  };\n\n  const rightExcelData = menuItem => {\n    if (!menuItem) {\n      return;\n    }\n\n    switch (menuItem.type) {\n      case 'excelEventButtons':\n        return __jsx(\"div\", {\n          style: {\n            display: 'flex',\n            marginBottom: 8,\n            marginRight: 56\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 11\n          }\n        }, __jsx(Button, {\n          onClick: () => {\n            let tmp = searchList;\n            setSearchList([...searchList, {\n              seq: searchList.length + 1\n            }]);\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 14\n          }\n        }, __jsx(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 18\n          }\n        }, \"\\uD589 \\uCD94\\uAC00\")), __jsx(Button, {\n          style: {\n            marginLeft: 16\n          },\n          onClick: () => {\n            if (selectRow === 0) {\n              return;\n            }\n\n            let tmpRow = searchList;\n            let tmp = tmpRow[selectRow];\n            tmpRow[selectRow] = tmpRow[selectRow - 1];\n            tmpRow[selectRow - 1] = tmp;\n            setSearchList([...tmpRow.map((v, i) => {\n              return _objectSpread(_objectSpread({}, v), {}, {\n                seq: i + 1\n              });\n            })]);\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 14\n          }\n        }, __jsx(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 18\n          }\n        }, \"\\uC704\\uB85C\")), __jsx(Button, {\n          style: {\n            marginLeft: 16\n          },\n          onClick: () => {\n            if (selectRow === searchList.length - 1) {\n              return;\n            }\n\n            let tmpRow = searchList;\n            let tmp = tmpRow[selectRow];\n            tmpRow[selectRow] = tmpRow[selectRow + 1];\n            tmpRow[selectRow + 1] = tmp;\n            setSearchList([...tmpRow.map((v, i) => {\n              return _objectSpread(_objectSpread({}, v), {}, {\n                seq: i + 1\n              });\n            })]);\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 14\n          }\n        }, __jsx(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 18\n          }\n        }, \"\\uC544\\uB798\\uB85C\")));\n    }\n  };\n\n  const leftExcelData = menuItem => {\n    if (!menuItem) {\n      return;\n    }\n\n    switch (menuItem.type) {\n      case 'titleButton':\n        return __jsx(Button, {\n          style: {\n            marginLeft: 16,\n            marginBottom: 8,\n            backgroundColor: '#19B9DF',\n            alignSelf: 'space-between'\n          },\n          onClick: () => {\n            let tmp = searchList;\n            setSearchList([...searchList, {\n              seq: searchList.length + 1\n            }]);\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 11\n          }\n        }, __jsx(\"p\", {\n          style: {\n            fontWeight: 'bold'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 13\n          }\n        }, menuItem.title));\n\n      case 'titleTabMenu':\n        return __jsx(\"div\", {\n          style: {\n            height: '100%',\n            display: 'flex',\n            alignItems: 'flex-end',\n            paddingLeft: 16\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 11\n          }\n        }, __jsx(\"div\", {\n          style: {\n            display: 'flex',\n            width: 1200\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 13\n          }\n        }, bomDummy.map((v, i) => {\n          return __jsx(TabBox, {\n            ref: i === 0 ? tabRef : null,\n            style: focusIndex === i ? {\n              opacity: 1\n            } : {},\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 24\n            }\n          }, tabRef.current && tabRef.current.clientWidth < 63 ? focusIndex !== i ? __jsx(React.Fragment, null, __jsx(\"p\", {\n            onClick: () => {\n              setFocusIndex(i);\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 27\n            }\n          }, v.code)) : __jsx(React.Fragment, null, __jsx(\"div\", {\n            style: {\n              cursor: 'pointer',\n              marginLeft: 20,\n              width: 20,\n              height: 20\n            },\n            onClick: () => {\n              deleteTab(i);\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 25\n            }\n          }, __jsx(\"img\", {\n            style: {\n              width: 20,\n              height: 20\n            },\n            src: IcX,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 27\n            }\n          }))) : __jsx(React.Fragment, null, __jsx(\"p\", {\n            onClick: () => {\n              setFocusIndex(i);\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 25\n            }\n          }, v.code), __jsx(\"div\", {\n            style: {\n              cursor: 'pointer',\n              width: 20,\n              height: 20\n            },\n            onClick: () => {\n              deleteTab(i);\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 25\n            }\n          }, __jsx(\"img\", {\n            style: {\n              width: 20,\n              height: 20\n            },\n            src: IcX,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 27\n            }\n          }))));\n        })));\n    }\n  };\n\n  return __jsx(SearchModalWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 5\n    }\n  }, ModalContents(), __jsx(Modal, {\n    isOpen: isOpen,\n    style: {\n      content: {\n        top: '50%',\n        left: '50%',\n        right: 'auto',\n        bottom: 'auto',\n        marginRight: '-50%',\n        transform: 'translate(-50%, -50%)',\n        padding: 0\n      },\n      overlay: {\n        background: 'rgba(0,0,0,.6)',\n        zIndex: 5\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    style: {\n      width: 1776,\n      height: 816,\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'space-between'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    style: {\n      height: 776\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    style: {\n      margin: '24px 16px 16px',\n      display: 'flex',\n      justifyContent: 'space-between'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 13\n    }\n  }, __jsx(\"p\", {\n    style: {\n      color: 'black',\n      fontSize: 22,\n      fontWeight: 'bold',\n      margin: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 15\n    }\n  }, infoModalInit && infoModalInit.title), __jsx(\"div\", {\n    style: {\n      display: 'flex'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 15\n    }\n  }, __jsx(Button, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 17\n    }\n  }, __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 19\n    }\n  }, \"\\uC5D1\\uC140\\uB85C \\uBC1B\\uAE30\")), __jsx(\"div\", {\n    style: {\n      cursor: 'pointer',\n      marginLeft: 20\n    },\n    onClick: () => {\n      setIsOpen(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 17\n    }\n  }, __jsx(\"img\", {\n    style: {\n      width: 20,\n      height: 20\n    },\n    src: IcX,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 19\n    }\n  })))), SummaryInfoInit[column.summaryType] && SummaryInfoInit[column.summaryType].map((infos, index) => {\n    return __jsx(HeaderTable, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 19\n      }\n    }, infos.map(info => {\n      var _info$width;\n\n      return __jsx(React.Fragment, null, __jsx(HeaderTableTitle, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 29\n        }\n      }, __jsx(HeaderTableText, {\n        style: {\n          fontWeight: 'bold'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 31\n        }\n      }, info.title)), __jsx(HeaderTableTextInput, {\n        style: {\n          width: (_info$width = info.width) !== null && _info$width !== void 0 ? _info$width : '144px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 29\n        }\n      }, __jsx(HeaderTableText, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 31\n        }\n      }, getSummaryInfo(info)), info.unit && __jsx(\"div\", {\n        style: {\n          marginRight: 8,\n          fontSize: 15\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 45\n        }\n      }, info.unit)));\n    }));\n  }), __jsx(\"div\", {\n    style: {\n      width: '100%',\n      height: 64,\n      display: 'flex'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    style: {\n      width: '50%',\n      display: 'flex',\n      justifyContent: 'flex-start',\n      alignItems: 'flex-end'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 15\n    }\n  }, infoModalInit && leftExcelData(infoModalInit.leftTopHeader)), __jsx(\"div\", {\n    style: {\n      width: '50%',\n      display: 'flex',\n      justifyContent: 'flex-end',\n      alignItems: 'flex-end'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 15\n    }\n  }, infoModalInit && rightExcelData(infoModalInit.rightTopHeader))), __jsx(\"div\", {\n    style: {\n      padding: '0 16px',\n      width: 1776\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 395,\n      columnNumber: 13\n    }\n  }, __jsx(ExcelTable, {\n    headerList: infoModalInit ? searchModalList[infoModalInit.excelColumnType] : [],\n    row: searchList !== null && searchList !== void 0 ? searchList : [{}],\n    setRow: e => {\n      let tmp = e.map((v, index) => {\n        if (v.newTab === true) {\n          const newTabIndex = bomDummy.length + 1;\n          addNewTab(newTabIndex);\n          setFocusIndex(newTabIndex - 1);\n        }\n\n        return _objectSpread(_objectSpread({}, v), {}, {\n          newTab: false\n        });\n      });\n      setSearchList([...tmp]);\n      setSearchList([...e]);\n    },\n    width: 1746,\n    rowHeight: 32,\n    height: 543 // setSelectRow={(e) => {\n    //   setSelectRow(e)\n    // }}\n    ,\n    setSelectRow: e => {\n      // if(!searchList[e].border){\n      //   searchList.map((v,i)=>{\n      //     v.border = false;\n      //   })\n      //   searchList[e].border = true\n      //   setSearchList([...searchList])\n      // }\n      setSelectRow(e);\n    },\n    type: 'searchModal',\n    headerAlign: 'center',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 396,\n      columnNumber: 15\n    }\n  }))), __jsx(\"div\", {\n    style: {\n      height: 40,\n      display: 'flex',\n      alignItems: 'flex-end'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 438,\n      columnNumber: 11\n    }\n  }, __jsx(FooterButton, {\n    onClick: () => {\n      setIsOpen(false);\n    },\n    style: {\n      backgroundColor: infoModalInit && infoModalInit.readonly ? POINT_COLOR : '#E7E9EB'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 439,\n      columnNumber: 13\n    }\n  }, __jsx(\"p\", {\n    style: {\n      color: infoModalInit && infoModalInit.readonly ? '#0D0D0D' : '#717C90'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 447,\n      columnNumber: 15\n    }\n  }, infoModalInit && infoModalInit.readonly ? \"확인\" : \"취소\")), infoModalInit && !infoModalInit.readonly && __jsx(FooterButton, {\n    onClick: () => {\n      if (selectRow !== undefined && selectRow !== null) {\n        onRowChange(_objectSpread(_objectSpread(_objectSpread({}, row), searchList[selectRow]), {}, {\n          name: row.name,\n          isChange: true\n        }));\n      }\n\n      setIsOpen(false);\n    },\n    style: {\n      backgroundColor: POINT_COLOR\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 449,\n      columnNumber: 59\n    }\n  }, __jsx(\"p\", {\n    style: {\n      color: '#0D0D0D'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 465,\n      columnNumber: 15\n    }\n  }, \"\\uB4F1\\uB85D\\uD558\\uAE30\"))))));\n};\n\nconst SearchModalWrapper = styled.div`\n  display: flex;\n  width: 100%;\n`;\nconst Button = styled.button`\n    width:112px;\n    height:32px;\n    color:white;\n    font-size:15px;\n    border:none;\n    border-radius:6px;\n    background:#717C90;\n    display:flex;\n    justify-content:center;\n    align-items:center;\n    cursor:pointer;\n\n`;\nconst HeaderTable = styled.div`\n  width: 1744px;\n  height: 32px;\n  margin: 0 16px;\n  background-color: #F4F6FA;\n  border: 0.5px solid #B3B3B3;\n  display: flex\n`;\nconst HeaderTableTextInput = styled.div`\n  background-color: #ffffff;\n  padding-left: 8px;\n  height: 27px;\n  border: 0.5px solid #B3B3B3;\n  margin-top:2px;\n  margin-right: 66px;\n  display: flex;\n  align-items: center;\n`;\nconst HeaderTableText = styled.p`\n  margin: 0;\n  font-size: 15px;\n  width: 100%;\n`;\nconst HeaderTableTitle = styled.div`\n  width: 112px;\n  padding: 0 8px;\n  display: flex;\n  align-items: center;\n`;\nconst TabBox = styled.button`\n  max-width: 214.5px;\n  min-width: 40px;\n  height: 32px;\n  background-color: #19B9DF;\n  opacity: 0.5;\n  border: 0;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-right: 4px;\n  cursor: pointer;\n  flex: 1;\n  p {\n    font-size: 15px;\n    width: 168px;\n    text-overflow: ellipsis;\n    color: white;\n    padding-left: 8px;\n    text-align: left;\n    overflow: hidden;\n    white-space: nowrap;\n  }\n`;\nconst FooterButton = styled.div`\n  width: 50%; \n  height: 40px;\n  display: flex; \n  justify-content: center;\n  align-items: center;\n  p {\n    font-size: 14px;\n    font-weight: bold;\n  }\n`;\nexport { InfoModal };","map":{"version":3,"sources":["/Users/user/Desktop/sizl/mono_pop/packages/shared/src/components/Modal/InfoModal/index.tsx"],"names":["React","useEffect","useRef","useState","styled","Modal","POINT_COLOR","IcX","ExcelTable","searchModalList","UploadButton","useDispatch","useSelector","insert_summary_info","InfoInit","SummaryInfoInit","optionList","InfoModal","column","row","onRowChange","dispatch","tabRef","bomDummy","setBomDummy","code","name","material_type","process","cavity","unit","isOpen","setIsOpen","infoModalInit","setInfoModalInit","title","setTitle","optionIndex","setOptionIndex","keyword","setKeyword","selectRow","setSelectRow","searchList","setSearchList","seq","searchKeyword","setSearchKeyword","focusIndex","setFocusIndex","pageInfo","setPageInfo","page","total","selector","state","infoModal","type","console","log","index","data","deleteTab","length","tmp","splice","addNewTab","push","getSummaryInfo","info","ModalContents","readonly","key","padding","width","backgroundColor","color","textDecoration","existText","buttonText","rightExcelData","menuItem","display","marginBottom","marginRight","marginLeft","tmpRow","map","v","i","leftExcelData","alignSelf","fontWeight","height","alignItems","paddingLeft","opacity","current","clientWidth","cursor","content","top","left","right","bottom","transform","overlay","background","zIndex","flexDirection","justifyContent","margin","fontSize","summaryType","infos","leftTopHeader","rightTopHeader","excelColumnType","e","newTab","newTabIndex","undefined","isChange","SearchModalWrapper","div","Button","button","HeaderTable","HeaderTableTextInput","HeaderTableText","p","HeaderTableTitle","TabBox","FooterButton"],"mappings":"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","sourcesContent":["import React, {useEffect, useRef, useState} from 'react'\nimport {IExcelHeaderType} from '../../../common/@types/type'\nimport styled from 'styled-components'\nimport Modal from 'react-modal'\nimport {POINT_COLOR} from '../../../common/configset'\n//@ts-ignore\nimport IcSearchButton from '../../../../public/images/ic_search.png'\n//@ts-ignore\nimport IcX from '../../../../public/images/ic_x.png'\nimport {ExcelTable} from '../../Excel/ExcelTable'\nimport {searchModalList} from '../../../common/modalInit'\n//@ts-ignore\nimport Search_icon from '../../../../public/images/btn_search.png'\nimport {RequestMethod} from '../../../common/RequestFunctions'\nimport {PaginationComponent}from '../../Pagination/PaginationComponent'\nimport Notiflix from 'notiflix'\nimport {UploadButton} from '../../../styles/styledComponents'\nimport {useDispatch, useSelector} from 'react-redux'\nimport {insert_summary_info} from '../../../reducer/infoModal'\nimport {RootState} from '../../../../../main/reducer'\nimport {SearchInit} from '../SearchModalTest/SearchModalInit'\nimport {InfoInit, InfoInitType, SummaryInfoInit} from './InfoModalInit'\n\ninterface IProps {\n  column: IExcelHeaderType\n  row: any\n  onRowChange: (e: any) => void\n}\n\nconst optionList = ['제조번호','제조사명','기계명','','담당자명']\n\nconst InfoModal = ({column, row, onRowChange}: IProps) => {\n  const dispatch = useDispatch()\n  const tabRef = useRef(null)\n\n  const [bomDummy, setBomDummy] = useState<any[]>([\n    {code: 'SU-20210701-1', name: 'SU900-1', material_type: '반제품', process:'프레스', cavity: '1', unit: 'EA'},\n  ])\n\n  const [isOpen, setIsOpen] = useState<boolean>(false)\n  const [infoModalInit, setInfoModalInit] = useState<InfoInitType>()\n  const [title, setTitle] = useState<string>('기계')\n  const [optionIndex, setOptionIndex] = useState<number>(0)\n  const [keyword, setKeyword] = useState<string>('')\n  const [selectRow, setSelectRow] = useState<number>()\n  const [searchList, setSearchList] = useState<any[]>([{seq: 1}])\n  const [searchKeyword, setSearchKeyword] = useState<string>('')\n\n  const [focusIndex, setFocusIndex] = useState<number>(0)\n\n  const [pageInfo, setPageInfo] = useState<{page: number, total: number}>({\n    page: 1,\n    total: 1\n  })\n\n  const selector = useSelector((state:RootState) => state.infoModal)\n\n  useEffect(() => {\n    if(column.type){\n      console.log(column)\n      setInfoModalInit(InfoInit[column.type])\n    }\n  }, [column.type])\n\n  useEffect(() => {\n    console.log(infoModalInit)\n  }, [infoModalInit])\n\n  useEffect(() => {\n    if(isOpen){\n      dispatch(insert_summary_info({\n        index: selector.index,\n        data: row\n      }))\n    }\n  }, [row, isOpen])\n\n  const deleteTab = (index: number) => {\n    if(bomDummy.length - 1 === focusIndex){\n      setFocusIndex(focusIndex-1)\n    }\n    if(bomDummy.length === 1) {\n      return setIsOpen(false)\n    }\n\n    let tmp = bomDummy\n    tmp.splice(index, 1)\n    setBomDummy([...tmp])\n  }\n\n\n  const addNewTab = (index: number) => {\n    let tmp = bomDummy\n    tmp.push({code: 'SU-20210701-'+index, name: 'SU900-'+index, material_type: '반제품', process:'프레스', cavity: '1', unit: 'EA'},)\n    setBomDummy([...tmp])\n  }\n\n  const getSummaryInfo = (info) => {\n    // selector.data[selector.index][info.key]\n      return '-'\n\n  }\n\n  const ModalContents = () => {\n    if(infoModalInit){\n      if(infoModalInit.readonly || row[column.key]){\n        return <>\n          <div style={{\n            padding: '3.5px 0px 0px 3.5px',\n            width: '100%'\n          }}>\n            <UploadButton style={{width: '100%', backgroundColor: '#ffffff00'}} onClick={() => {\n              setIsOpen(true)\n            }}>\n              <p style={{color: 'white', textDecoration: 'underline'}}>{infoModalInit.existText}</p>\n            </UploadButton>\n          </div>\n        </>\n      }else{\n        return <>\n          <div style={{\n            padding: '3.5px 0px 0px 3.5px',\n            width: '100%'\n          }}>\n            <UploadButton onClick={() => {\n              setIsOpen(true)\n            }}>\n              <p>{infoModalInit.buttonText}</p>\n            </UploadButton>\n          </div>\n        </>\n      }\n    }\n  }\n\n  const rightExcelData = (menuItem: any) => {\n    if(!menuItem){\n      return\n    }\n    switch(menuItem.type) {\n      case 'excelEventButtons':\n        return (\n          <div style={{display: 'flex', marginBottom: 8, marginRight: 56}}>\n             <Button onClick={() => {\n               let tmp = searchList\n\n               setSearchList([\n                 ...searchList,\n                 {\n                   seq: searchList.length + 1\n                 }\n               ])\n             }}>\n                 <p>행 추가</p>\n             </Button>\n             <Button style={{marginLeft: 16}} onClick={() => {\n               if (selectRow === 0) {\n                 return\n               }\n               let tmpRow = searchList\n\n               let tmp = tmpRow[selectRow]\n               tmpRow[selectRow] = tmpRow[selectRow - 1]\n               tmpRow[selectRow - 1] = tmp\n\n               setSearchList([...tmpRow.map((v, i) => {\n                 return {\n                   ...v,\n                   seq: i + 1\n                 }\n               })])\n             }}>\n                 <p>위로</p>\n             </Button>\n             <Button style={{marginLeft: 16}} onClick={() => {\n               if (selectRow === searchList.length - 1) {\n                 return\n               }\n               let tmpRow = searchList\n\n               let tmp = tmpRow[selectRow]\n               tmpRow[selectRow] = tmpRow[selectRow + 1]\n               tmpRow[selectRow + 1] = tmp\n\n               setSearchList([...tmpRow.map((v, i) => {\n                 return {\n                   ...v,\n                   seq: i + 1\n                 }\n               })])\n             }}>\n                 <p>아래로</p>\n             </Button>\n           </div>\n        )\n    }\n  }\n\n  const leftExcelData = (menuItem: any) => {\n    if(!menuItem){\n      return\n    }\n    switch(menuItem.type) {\n      case 'titleButton':\n        return (\n          <Button style={{marginLeft: 16, marginBottom: 8, backgroundColor: '#19B9DF', alignSelf: 'space-between'}} onClick={() => {\n            let tmp = searchList\n\n            setSearchList([\n              ...searchList,\n              {\n                seq: searchList.length+1\n              }\n            ])\n          }}>\n            <p style={{fontWeight: 'bold'}}>{menuItem.title}</p>\n          </Button>\n        )\n      case 'titleTabMenu':\n        return(\n          <div style={{height: '100%', display: 'flex', alignItems: 'flex-end', paddingLeft: 16,}}>\n            <div style={{ display: 'flex', width: 1200}}>\n              {bomDummy.map((v, i) => {\n                return <TabBox ref={i === 0 ? tabRef : null} style={ focusIndex === i ? {opacity: 1} : {}}>\n                  {\n                    tabRef.current && tabRef.current.clientWidth < 63\n                      ? focusIndex !== i\n                      ? <><p onClick={() => {setFocusIndex(i)}}>{v.code}</p></>\n                      : <>\n                        <div style={{cursor: 'pointer', marginLeft: 20, width: 20, height: 20}} onClick={() => {\n                          deleteTab(i)\n                        }}>\n                          <img style={{width: 20, height: 20}} src={IcX}/>\n                        </div>\n                      </>\n                      : <>\n                        <p onClick={() => {setFocusIndex(i)}}>{v.code}</p>\n                        <div style={{cursor: 'pointer', width: 20, height: 20}} onClick={() => {\n                          deleteTab(i)\n                        }}>\n                          <img style={{width: 20, height: 20}} src={IcX}/>\n                        </div>\n                      </>\n                  }\n                </TabBox>\n              })}\n            </div>\n          </div>\n        )\n    }\n  }\n\n  return (\n    <SearchModalWrapper >\n      { ModalContents() }\n      <Modal isOpen={isOpen} style={{\n        content: {\n          top: '50%',\n          left: '50%',\n          right: 'auto',\n          bottom: 'auto',\n          marginRight: '-50%',\n          transform: 'translate(-50%, -50%)',\n          padding: 0\n        },\n        overlay: {\n          background: 'rgba(0,0,0,.6)',\n          zIndex: 5\n        }\n      }}>\n        <div style={{\n          width: 1776,\n          height: 816,\n          display: 'flex',\n          flexDirection: 'column',\n          justifyContent: 'space-between'\n        }}>\n          <div style={{height: 776}}>\n            <div style={{\n              margin: '24px 16px 16px',\n              display: 'flex',\n              justifyContent: 'space-between'\n            }}>\n              <p style={{\n                color: 'black',\n                fontSize: 22,\n                fontWeight: 'bold',\n                margin: 0,\n              }}>{infoModalInit && infoModalInit.title}</p>\n              <div style={{display: 'flex'}}>\n                <Button>\n                  <p>엑셀로 받기</p>\n                </Button>\n                <div style={{cursor: 'pointer', marginLeft: 20}} onClick={() => {\n                  setIsOpen(false)\n                }}>\n                  <img style={{width: 20, height: 20}} src={IcX}/>\n                </div>\n              </div>\n            </div>\n            {\n              SummaryInfoInit[column.summaryType] && SummaryInfoInit[column.summaryType].map((infos, index) => {\n                return (\n                  <HeaderTable>\n                    {\n                      infos.map(info => {\n                        return (\n                          <>\n                            <HeaderTableTitle>\n                              <HeaderTableText style={{fontWeight: 'bold'}}>{info.title}</HeaderTableText>\n                            </HeaderTableTitle>\n                            <HeaderTableTextInput style={{width: info.width ?? '144px'}}>\n                              <HeaderTableText>\n                                {getSummaryInfo(info)}\n                              </HeaderTableText>\n                              {info.unit && <div style={{marginRight:8, fontSize: 15}}>{info.unit}</div>}\n                            </HeaderTableTextInput>\n                          </>\n                        )\n                      })\n                    }\n                  </HeaderTable>\n                )\n              })\n            }\n            <div style={{width: '100%', height: 64, display: 'flex'}}>\n              <div style={{width: '50%', display: 'flex', justifyContent: 'flex-start', alignItems: 'flex-end'}}>\n                {infoModalInit && leftExcelData(infoModalInit.leftTopHeader)}\n              </div>\n              <div style={{width: '50%', display: 'flex', justifyContent: 'flex-end', alignItems: 'flex-end'}}>\n                {infoModalInit && rightExcelData(infoModalInit.rightTopHeader)}\n              </div>\n            </div>\n\n             {/*<div style={{display: 'flex', justifyContent: 'space-between', padding: '24px 48px 0 16px'}}>*/}\n             {/*  {*/}\n             {/*    columnInitData.tableTitleButton && <Button style={{backgroundColor: '#19B9DF', alignSelf: 'space-between'}} onClick={() => {*/}\n             {/*      let tmp = searchList*/}\n\n             {/*      setSearchList([*/}\n             {/*        ...searchList,*/}\n             {/*        {*/}\n             {/*          seq: searchList.length+1*/}\n             {/*        }*/}\n             {/*      ])*/}\n             {/*    }}>*/}\n             {/*      <p style={{fontWeight: 'bold'}}>{columnInitData.tableTitleButton}</p>*/}\n             {/*    </Button>*/}\n             {/*  }*/}\n             {/*  {*/}\n             {/*    <div style={{ display: 'flex', width: 1200, marginTop: 8}}>*/}\n             {/*      {bomDummy.map((v, i) => {*/}\n             {/*        return <TabBox ref={i === 0 ? tabRef : null} style={ focusIndex === i ? {opacity: 1} : {}}>*/}\n             {/*          {*/}\n             {/*            tabRef.current && tabRef.current.clientWidth < 63*/}\n             {/*              ? focusIndex !== i*/}\n             {/*              ? <><p onClick={() => {setFocusIndex(i)}}>{v.code}</p></>*/}\n             {/*              : <>*/}\n             {/*                <div style={{cursor: 'pointer', marginLeft: 20, width: 20, height: 20}} onClick={() => {*/}\n             {/*                  deleteTab(i)*/}\n             {/*                }}>*/}\n             {/*                  <img style={{width: 20, height: 20}} src={IcX}/>*/}\n             {/*                </div>*/}\n             {/*              </>*/}\n             {/*              : <>*/}\n             {/*                <p onClick={() => {setFocusIndex(i)}}>{v.code}</p>*/}\n             {/*                <div style={{cursor: 'pointer', width: 20, height: 20}} onClick={() => {*/}\n             {/*                  deleteTab(i)*/}\n             {/*                }}>*/}\n             {/*                  <img style={{width: 20, height: 20}} src={IcX}/>*/}\n             {/*                </div>*/}\n             {/*              </>*/}\n             {/*          }*/}\n             {/*        </TabBox>*/}\n             {/*      })}*/}\n             {/*    </div>*/}\n             {/*  }*/}\n             {/*   <div></div>*/}\n             {/* {*/}\n             {/*  {*/}\n             {/*    columnInitData.tableMoveButton && <Button style={{backgroundColor: '#717C90', alignSelf: 'space-between'}} onClick={() => {*/}\n             {/*      let tmp = searchList*/}\n\n             {/*      setSearchList([*/}\n             {/*        ...searchList,*/}\n             {/*        {*/}\n             {/*          seq: searchList.length+1*/}\n             {/*        }*/}\n             {/*      ])*/}\n             {/*    }}>*/}\n             {/*        <p style={{fontWeight: 'bold'}}>{columnInitData.tableMoveButton}</p>*/}\n             {/*    </Button>*/}\n             {/*  }*/}\n             {/* </div>*/}\n            <div style={{padding: '0 16px', width: 1776}}>\n              <ExcelTable\n                headerList={infoModalInit ? searchModalList[infoModalInit.excelColumnType] : []}\n                row={searchList ?? [{}]}\n                setRow={\n                  (e) => {\n                    let tmp = e.map((v, index) => {\n                      if(v.newTab === true){\n                        const newTabIndex = bomDummy.length+1\n                        addNewTab(newTabIndex)\n                        setFocusIndex(newTabIndex-1)\n                      }\n\n                      return {\n                        ...v,\n                        newTab: false\n                      }\n                    })\n                    setSearchList([...tmp])\n                    setSearchList([...e])\n                  }\n                }\n                width={1746}\n                rowHeight={32}\n                height={543}\n                // setSelectRow={(e) => {\n                //   setSelectRow(e)\n                // }}\n                setSelectRow={(e) => {\n                  // if(!searchList[e].border){\n                  //   searchList.map((v,i)=>{\n                  //     v.border = false;\n                  //   })\n                  //   searchList[e].border = true\n                  //   setSearchList([...searchList])\n                  // }\n                  setSelectRow(e)\n                }}\n                type={'searchModal'}\n                headerAlign={'center'}\n              />\n            </div>\n          </div>\n          <div style={{ height: 40, display: 'flex', alignItems: 'flex-end'}}>\n            <FooterButton\n              onClick={() => {\n                setIsOpen(false)\n              }}\n              style={{\n                backgroundColor: infoModalInit && infoModalInit.readonly ? POINT_COLOR : '#E7E9EB',\n              }}\n            >\n              <p style={{color: infoModalInit && infoModalInit.readonly ? '#0D0D0D' : '#717C90'}}>{infoModalInit && infoModalInit.readonly ? \"확인\" : \"취소\"}</p>\n            </FooterButton>\n            { infoModalInit && !infoModalInit.readonly && <FooterButton\n              onClick={() => {\n                if (selectRow !== undefined && selectRow !== null) {\n                  onRowChange({\n                    ...row,\n                    ...searchList[selectRow],\n                    name: row.name,\n                    isChange: true\n                  })\n                }\n                setIsOpen(false)\n              }}\n              style={{\n                backgroundColor: POINT_COLOR,\n              }}\n            >\n              <p style={{color: '#0D0D0D'}}>등록하기</p>\n            </FooterButton>}\n          </div>\n        </div>\n      </Modal>\n    </SearchModalWrapper>\n  )\n}\n\nconst SearchModalWrapper = styled.div`\n  display: flex;\n  width: 100%;\n`\n\nconst Button = styled.button`\n    width:112px;\n    height:32px;\n    color:white;\n    font-size:15px;\n    border:none;\n    border-radius:6px;\n    background:#717C90;\n    display:flex;\n    justify-content:center;\n    align-items:center;\n    cursor:pointer;\n\n`;\n\nconst HeaderTable = styled.div`\n  width: 1744px;\n  height: 32px;\n  margin: 0 16px;\n  background-color: #F4F6FA;\n  border: 0.5px solid #B3B3B3;\n  display: flex\n`\n\nconst HeaderTableTextInput = styled.div`\n  background-color: #ffffff;\n  padding-left: 8px;\n  height: 27px;\n  border: 0.5px solid #B3B3B3;\n  margin-top:2px;\n  margin-right: 66px;\n  display: flex;\n  align-items: center;\n`\n\nconst HeaderTableText = styled.p`\n  margin: 0;\n  font-size: 15px;\n  width: 100%;\n`\n\nconst HeaderTableTitle = styled.div`\n  width: 112px;\n  padding: 0 8px;\n  display: flex;\n  align-items: center;\n`\n\nconst TabBox = styled.button`\n  max-width: 214.5px;\n  min-width: 40px;\n  height: 32px;\n  background-color: #19B9DF;\n  opacity: 0.5;\n  border: 0;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-right: 4px;\n  cursor: pointer;\n  flex: 1;\n  p {\n    font-size: 15px;\n    width: 168px;\n    text-overflow: ellipsis;\n    color: white;\n    padding-left: 8px;\n    text-align: left;\n    overflow: hidden;\n    white-space: nowrap;\n  }\n`;\n\nconst FooterButton = styled.div`\n  width: 50%; \n  height: 40px;\n  display: flex; \n  justify-content: center;\n  align-items: center;\n  p {\n    font-size: 14px;\n    font-weight: bold;\n  }\n`\n\nexport {InfoModal}\n"]},"metadata":{},"sourceType":"module"}