{"ast":null,"code":"import _regeneratorRuntime from \"/Users/user/Desktop/sizl/mono_pop/node_modules/@babel/runtime/regenerator\";\nimport _toConsumableArray from \"/Users/user/Desktop/sizl/mono_pop/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"/Users/user/Desktop/sizl/mono_pop/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _asyncToGenerator from \"/Users/user/Desktop/sizl/mono_pop/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/Users/user/Desktop/sizl/mono_pop/packages/main/pages/mes/basic/customer/model.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useState } from 'react';\nimport ExcelTable from '../../../../component/Excel/ExcelTable';\nimport MenuNavigation from '../../../../component/MenuNav/MenuNavigation';\nimport ProfileHeader from '../../../../component/Profile/ProfileHeader';\nimport PageHeader from '../../../../component/Header/Header'; // @ts-ignore\n\nimport { SelectColumn } from 'react-data-grid';\nimport { RequestMethod } from '../../../../common/RequestFunctions';\nimport { columnlist } from \"../../../../common/columnInit\";\nimport Notiflix from \"notiflix\";\nimport { useRouter } from 'next/router';\nimport { MAX_VALUE } from '../../../../common/configset';\nimport TextEditor from '../../../../component/InputBox/ExcelBasicInputBox';\nimport { excelDownload } from '../../../../common/excelDownloadFunction';\nimport PaginationComponent from '../../../../component/Pagination/PaginationComponent';\nimport ExcelDownloadModal from '../../../../component/Modal/ExcelDownloadMoadal';\nimport ExcelUploadModal from \"../../../../component/Modal/ExcelUploadModal\";\n\nvar BasicContainer = function BasicContainer(_ref) {\n  _s();\n\n  var page = _ref.page,\n      keyword = _ref.keyword,\n      option = _ref.option;\n  var router = useRouter();\n\n  var _useState = useState(false),\n      excelOpen = _useState[0],\n      setExcelOpen = _useState[1];\n\n  var _useState2 = useState(false),\n      excelUploadOpen = _useState2[0],\n      setExcelUploadOpen = _useState2[1];\n\n  var _useState3 = useState([{\n    name: \"\",\n    id: \"\"\n  }]),\n      basicRow = _useState3[0],\n      setBasicRow = _useState3[1];\n\n  var _useState4 = useState(columnlist[\"model\"]),\n      column = _useState4[0],\n      setColumn = _useState4[1];\n\n  var _useState5 = useState(new Set()),\n      selectList = _useState5[0],\n      setSelectList = _useState5[1];\n\n  var _useState6 = useState(['고객사명', '사업자 번호', '모델명']),\n      optionList = _useState6[0],\n      setOptionList = _useState6[1];\n\n  var _useState7 = useState(0),\n      optionIndex = _useState7[0],\n      setOptionIndex = _useState7[1];\n\n  var _useState8 = useState({\n    page: 1,\n    total: 1\n  }),\n      pageInfo = _useState8[0],\n      setPageInfo = _useState8[1];\n\n  useEffect(function () {\n    if (keyword) {\n      SearchBasic(keyword, option, page).then(function () {\n        Notiflix.Loading.remove();\n      });\n    } else {\n      LoadBasic(page).then(function () {\n        Notiflix.Loading.remove();\n      });\n    }\n  }, [page, keyword, option]);\n\n  var loadAllSelectItems = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(column) {\n      var tmpColumn;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              tmpColumn = column.map( /*#__PURE__*/function () {\n                var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(v) {\n                  var tmpKey, res, pk;\n                  return _regeneratorRuntime.wrap(function _callee$(_context) {\n                    while (1) {\n                      switch (_context.prev = _context.next) {\n                        case 0:\n                          if (!(v.selectList && v.selectList.length === 0)) {\n                            _context.next = 10;\n                            break;\n                          }\n\n                          tmpKey = v.key;\n                          _context.next = 4;\n                          return RequestMethod('get', \"\".concat(tmpKey, \"List\"), {\n                            path: {\n                              page: 1,\n                              renderItem: MAX_VALUE\n                            }\n                          });\n\n                        case 4:\n                          res = _context.sent;\n                          pk = \"\";\n                          res.results.info_list && res.results.info_list.length && Object.keys(res.results.info_list[0]).map(function (v) {\n                            if (v.indexOf('_id') !== -1) {\n                              pk = v;\n                            }\n                          });\n                          return _context.abrupt(\"return\", _objectSpread(_objectSpread({}, v), {}, {\n                            selectList: _toConsumableArray(res.results.info_list.map(function (value) {\n                              return _objectSpread(_objectSpread({}, value), {}, {\n                                name: value.name,\n                                // name: tmpKey === 'model' ? value.model : value.name,\n                                pk: value[pk]\n                              });\n                            }))\n                          }));\n\n                        case 10:\n                          if (!v.selectList) {\n                            _context.next = 14;\n                            break;\n                          }\n\n                          return _context.abrupt(\"return\", _objectSpread(_objectSpread({}, v), {}, {\n                            pk: v.unit_id\n                          }));\n\n                        case 14:\n                          return _context.abrupt(\"return\", v);\n\n                        case 15:\n                        case \"end\":\n                          return _context.stop();\n                      }\n                    }\n                  }, _callee);\n                }));\n\n                return function (_x2) {\n                  return _ref3.apply(this, arguments);\n                };\n              }()); // if(type !== 'productprocess'){\n\n              Promise.all(tmpColumn).then(function (res) {\n                setColumn(_toConsumableArray(res.map(function (v) {\n                  return _objectSpread(_objectSpread({}, v), {}, {\n                    name: v.moddable ? v.name + '(필수)' : v.name\n                  });\n                })));\n              }); // }\n\n            case 2:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function loadAllSelectItems(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var SaveBasic = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return RequestMethod('post', \"modelSave\", _defineProperty({}, 'models', basicRow.map(function (row, i) {\n                if (selectList.has(row.id)) {\n                  var selectKey = [];\n                  var additional = [];\n                  column.map(function (v) {\n                    if (v.selectList) {\n                      selectKey.push(v.key);\n                    }\n\n                    if (v.type === 'additional') {\n                      additional.push(v);\n                    }\n                  });\n                  var selectData = {};\n                  Object.keys(row).map(function (v) {\n                    if (v.indexOf('PK') !== -1) {\n                      selectData = _objectSpread(_objectSpread({}, selectData), {}, _defineProperty({}, v.split('PK')[0], row[v]));\n                    }\n\n                    if (v === 'unitWeight') {\n                      selectData = _objectSpread(_objectSpread({}, selectData), {}, {\n                        unitWeight: Number(row['unitWeight'])\n                      });\n                    }\n\n                    if (v === 'tmpId') {\n                      selectData = _objectSpread(_objectSpread({}, selectData), {}, {\n                        id: row['tmpId']\n                      });\n                    }\n                  });\n                  return _objectSpread(_objectSpread(_objectSpread({}, row), selectData), {}, {\n                    additional: _toConsumableArray(additional.map(function (v) {\n                      if (row[v.name]) {\n                        return {\n                          id: v.id,\n                          title: v.name,\n                          value: row[v.name],\n                          unit: v.unit\n                        };\n                      }\n                    }).filter(function (v) {\n                      return v;\n                    }))\n                  });\n                }\n              }).filter(function (v) {\n                return v;\n              })));\n\n            case 2:\n              res = _context3.sent;\n\n              if (res) {\n                if (res.status === 200) {\n                  Notiflix.Report.success('저장되었습니다.', '', '확인');\n\n                  if (keyword) {\n                    SearchBasic(keyword, option, page).then(function () {\n                      Notiflix.Loading.remove();\n                    });\n                  } else {\n                    LoadBasic(page).then(function () {\n                      Notiflix.Loading.remove();\n                    });\n                  }\n                }\n              }\n\n            case 4:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function SaveBasic() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  var DeleteBasic = /*#__PURE__*/function () {\n    var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.next = 2;\n              return RequestMethod('delete', \"modelDelete\", _defineProperty({}, 'models', basicRow.map(function (row, i) {\n                if (selectList.has(row.id)) {\n                  var pk = \"\";\n                  Object.keys(row).map(function (v) {\n                    if (v.indexOf(\"_id\") !== -1) {\n                      pk = v;\n                    }\n                  });\n                  pk = 'cm_id';\n                  return row[pk];\n                }\n              }).filter(function (v) {\n                return v;\n              })));\n\n            case 2:\n              res = _context4.sent;\n\n              if (res) {\n                if (res.status === 200) {\n                  Notiflix.Report.success('삭제 성공!', '', '확인', function () {\n                    if (Number(page) === 1) {\n                      LoadBasic(1).then(function () {\n                        Notiflix.Loading.remove();\n                      });\n                    } else {\n                      if (keyword) {\n                        router.push(\"/mes/basic/customer/model?page=1&keyword=\".concat(keyword, \"&opt=\").concat(option));\n                      } else {\n                        router.push(\"/mes/basic/customer/model?page=1\");\n                      }\n                    }\n                  });\n                }\n              }\n\n            case 4:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    return function DeleteBasic() {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n\n  var LoadBasic = /*#__PURE__*/function () {\n    var _ref6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(page) {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              Notiflix.Loading.circle();\n              _context5.next = 3;\n              return RequestMethod('get', \"modelList\", {\n                path: {\n                  page: page || page !== 0 ? page : 1,\n                  renderItem: 19\n                }\n              });\n\n            case 3:\n              res = _context5.sent;\n\n              if (res && res.status === 200) {\n                if (res.results.totalPages < page) {\n                  LoadBasic(page - 1).then(function () {\n                    Notiflix.Loading.remove();\n                  });\n                } else {\n                  setPageInfo(_objectSpread(_objectSpread({}, pageInfo), {}, {\n                    page: res.results.page,\n                    total: res.results.totalPages\n                  }));\n                  cleanUpData(res);\n                }\n              } else if (res.state === 401) {\n                Notiflix.Report.failure('불러올 수 없습니다.', '권한이 없습니다.', '확인', function () {\n                  router.back();\n                });\n              }\n\n            case 5:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5);\n    }));\n\n    return function LoadBasic(_x3) {\n      return _ref6.apply(this, arguments);\n    };\n  }();\n\n  var SearchBasic = /*#__PURE__*/function () {\n    var _ref7 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(keyword, option, isPaging) {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              Notiflix.Loading.circle();\n\n              if (!isPaging) {\n                setOptionIndex(option);\n              }\n\n              _context6.next = 4;\n              return RequestMethod('get', \"modelSearch\", {\n                path: {\n                  page: isPaging !== null && isPaging !== void 0 ? isPaging : 1,\n                  renderItem: 18\n                },\n                params: {\n                  keyword: keyword !== null && keyword !== void 0 ? keyword : '',\n                  opt: option !== null && option !== void 0 ? option : 0\n                }\n              });\n\n            case 4:\n              res = _context6.sent;\n\n              if (res && res.status === 200) {\n                setPageInfo(_objectSpread(_objectSpread({}, pageInfo), {}, {\n                  page: res.results.page,\n                  total: res.results.totalPages\n                }));\n                cleanUpData(res);\n              }\n\n            case 6:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6);\n    }));\n\n    return function SearchBasic(_x4, _x5, _x6) {\n      return _ref7.apply(this, arguments);\n    };\n  }();\n\n  var cleanUpBasicData = function cleanUpBasicData(res) {\n    var tmpRow = res.data.results.info_list;\n    var tmpBasicRow = tmpRow.map(function (row, index) {\n      var appendAdditional = {};\n      row.additional && row.additional.map(function (v) {\n        appendAdditional = _objectSpread(_objectSpread({}, appendAdditional), {}, _defineProperty({}, v.title, v.value));\n      });\n      var random_id = Math.random() * 1000;\n      return _objectSpread(_objectSpread({\n        cm_id: row.cm_id,\n        customer: row.customer.name,\n        customer_id: row.customer.name,\n        customer_idPK: row.customer.customer_id,\n        customerPK: row.customer.customer_id,\n        model: row.model,\n        crn: row.customer.crn\n      }, appendAdditional), {}, {\n        id: \"model_\".concat(random_id)\n      });\n    });\n    setBasicRow(_toConsumableArray(tmpBasicRow));\n  };\n\n  var cleanUpData = function cleanUpData(res) {\n    var tmpColumn = columnlist[\"model\"];\n    var tmpRow = [];\n    tmpColumn = tmpColumn.map(function (column) {\n      var menuData;\n      res.results.menus && res.results.menus.map(function (menu) {\n        if (menu.colName === column.key) {\n          menuData = {\n            id: menu.id,\n            name: menu.title,\n            width: menu.width,\n            tab: menu.tab,\n            unit: menu.unit,\n            moddable: !menu.moddable\n          };\n        } else if (menu.colName === 'id' && column.key === 'tmpId') {\n          menuData = {\n            id: menu.id,\n            name: menu.title,\n            width: menu.width,\n            tab: menu.tab,\n            unit: menu.unit,\n            moddable: !menu.moddable\n          };\n        }\n      });\n\n      if (menuData) {\n        return _objectSpread(_objectSpread({}, column), menuData);\n      }\n    }).filter(function (v) {\n      return v;\n    });\n    var additionalMenus = res.results.menus ? res.results.menus.map(function (menu) {\n      if (menu.colName === null) {\n        return {\n          id: menu.id,\n          name: menu.title,\n          width: menu.width,\n          key: menu.title,\n          editor: TextEditor,\n          type: 'additional',\n          unit: menu.unit\n        };\n      }\n    }).filter(function (v) {\n      return v;\n    }) : [];\n    tmpRow = res.results.info_list;\n    loadAllSelectItems([].concat(_toConsumableArray(tmpColumn), _toConsumableArray(additionalMenus)));\n    var selectKey = \"\";\n    var additionalData = [];\n    tmpColumn.map(function (v) {\n      if (v.selectList) {\n        selectKey = v.key;\n      }\n    });\n    additionalMenus.map(function (v) {\n      if (v.type === 'additional') {\n        additionalData.push(v.key);\n      }\n    });\n    var pk = \"\";\n    Object.keys(tmpRow).map(function (v) {\n      if (v.indexOf('_id') !== -1) {\n        pk = v;\n      }\n    });\n    var tmpBasicRow = tmpRow.map(function (row, index) {\n      var appendAdditional = {};\n      row.additional && row.additional.map(function (v) {\n        appendAdditional = _objectSpread(_objectSpread({}, appendAdditional), {}, _defineProperty({}, v.title, v.value));\n      });\n      var random_id = Math.random() * 1000;\n      return _objectSpread(_objectSpread({\n        cm_id: row.cm_id,\n        customer: row.customer.name,\n        customer_id: row.customer.name,\n        customer_idPK: row.customer.customer_id,\n        customerPK: row.customer.customer_id,\n        model: row.model,\n        crn: row.customer.crn\n      }, appendAdditional), {}, {\n        id: \"model_\".concat(random_id)\n      });\n    });\n    setBasicRow(_toConsumableArray(tmpBasicRow));\n  };\n\n  var downloadExcel = function downloadExcel() {\n    var tmpSelectList = [];\n    basicRow.map(function (row) {\n      tmpSelectList.push(selectList.has(row.id));\n    });\n    excelDownload(column, basicRow, \"model\", \"model\", tmpSelectList);\n  };\n\n  var onClickHeaderButton = function onClickHeaderButton(index) {\n    switch (index) {\n      case 0:\n        setExcelUploadOpen(true);\n        break;\n\n      case 1:\n        setExcelOpen(true);\n        break;\n\n      case 2:\n        router.push(\"/mes/item/manage/model\");\n        break;\n\n      case 3:\n        var items = {};\n        column.map(function (value) {\n          if (value.selectList && value.selectList.length) {\n            if (value.key === 'customer') {\n              var _objectSpread5;\n\n              items = _objectSpread(_objectSpread({}, value.selectList[0]), {}, (_objectSpread5 = {}, _defineProperty(_objectSpread5, value.key, value.selectList[0].name), _defineProperty(_objectSpread5, value.key + 'PK', value.selectList[0].customer_id), _objectSpread5), items);\n            }\n          }\n\n          if (value.key === 'seq') {\n            items = _defineProperty({}, value.key, basicRow.length + 1);\n          }\n\n          if (value.key === 'id') {\n            items = {\n              tmpId: \"\"\n            };\n          }\n        });\n        var random_id = Math.random() * 1000;\n        setBasicRow([_objectSpread(_objectSpread({}, items), {}, {\n          id: \"model_\".concat(random_id),\n          name: null,\n          additional: []\n        })].concat(_toConsumableArray(basicRow)));\n        break;\n\n      case 4:\n        SaveBasic();\n        break;\n\n      case 5:\n        Notiflix.Confirm.show(\"경고\", \"삭제하시겠습니까?\", \"확인\", \"취소\", function () {\n          DeleteBasic();\n        }, function () {});\n        break;\n    }\n  };\n\n  return __jsx(\"div\", {\n    style: {\n      display: 'flex'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 508,\n      columnNumber: 9\n    }\n  }, __jsx(MenuNavigation, {\n    pageType: 'BASIC',\n    subType: 1,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 509,\n      columnNumber: 13\n    }\n  }), __jsx(\"div\", {\n    style: {\n      paddingBottom: 40\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 510,\n      columnNumber: 13\n    }\n  }, __jsx(ProfileHeader, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 511,\n      columnNumber: 17\n    }\n  }), __jsx(PageHeader, {\n    isSearch: true,\n    searchKeyword: keyword,\n    onChangeSearchKeyword: function onChangeSearchKeyword(keyword) {\n      if (keyword) {\n        router.push(\"/mes/basic/customer/model?page=1&keyword=\".concat(keyword, \"&opt=\").concat(optionIndex));\n      } else {\n        router.push(\"/mes/basic/customer/model?page=1&keyword=\");\n      }\n    },\n    searchOptionList: optionList,\n    onChangeSearchOption: function onChangeSearchOption(option) {\n      setOptionIndex(option);\n    },\n    optionIndex: optionIndex,\n    title: \"고객사 모델 관리\",\n    buttons: ['엑셀로 등록', '엑셀로 받기', '항목관리', '행 추가', '저장하기', '삭제'],\n    buttonsOnclick: onClickHeaderButton,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 512,\n      columnNumber: 17\n    }\n  }), __jsx(ExcelTable, {\n    editable: true,\n    resizable: true,\n    headerList: [SelectColumn].concat(_toConsumableArray(column)),\n    row: basicRow // setRow={setBasicRow}\n    ,\n    setRow: function setRow(e) {\n      var tmp = selectList;\n      e.map(function (v) {\n        if (v.isChange) tmp.add(v.id);\n      });\n      setSelectList(tmp);\n      setBasicRow(e);\n    },\n    selectList: selectList //@ts-ignore\n    ,\n    setSelectList: setSelectList,\n    height: basicRow.length * 40 >= 40 * 18 + 56 ? 40 * 19 : basicRow.length * 40 + 56,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 533,\n      columnNumber: 17\n    }\n  }), __jsx(PaginationComponent, {\n    currentPage: pageInfo.page,\n    totalPage: pageInfo.total,\n    setPage: function setPage(page) {\n      if (keyword) {\n        router.push(\"/mes/basic/customer/model?page=\".concat(page, \"&keyword=\").concat(keyword, \"&opt=\").concat(option));\n      } else {\n        router.push(\"/mes/basic/customer/model?page=\".concat(page));\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 555,\n      columnNumber: 17\n    }\n  })), __jsx(ExcelDownloadModal, {\n    isOpen: excelOpen,\n    column: column,\n    basicRow: basicRow,\n    filename: \"\\uACE0\\uAC1D\\uC0AC\\uBAA8\\uB378\\uAD00\\uB9AC\",\n    sheetname: \"\\uACE0\\uAC1D\\uC0AC\\uBAA8\\uB378\\uAD00\\uB9AC\",\n    selectList: selectList,\n    tab: 'ROLE_BASE_08',\n    setIsOpen: setExcelOpen,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 567,\n      columnNumber: 13\n    }\n  }), __jsx(ExcelUploadModal, {\n    isOpen: excelUploadOpen,\n    setIsOpen: setExcelUploadOpen,\n    tab: 'ROLE_BASE_08',\n    cleanUpBasicData: cleanUpBasicData,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 577,\n      columnNumber: 13\n    }\n  }));\n};\n\n_s(BasicContainer, \"xiYf2MmW6Am/4ESlqkoR73ZqIbM=\", false, function () {\n  return [useRouter];\n});\n\n_c = BasicContainer;\n// BasicContainer.getInitialProps = async ({ query }) => {\n//     let { page, keyword, opt } = query\n//     if (typeof page === 'string')\n//         page = parseInt(page);\n//     if (typeof opt === 'string')\n//         opt = parseInt(opt);\n//     return { page, keyword, option: opt };\n// }\nexport var __N_SSP = true;\nexport default BasicContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"BasicContainer\");","map":{"version":3,"sources":["/Users/user/Desktop/sizl/mono_pop/packages/main/pages/mes/basic/customer/model.tsx"],"names":["React","useEffect","useState","ExcelTable","MenuNavigation","ProfileHeader","PageHeader","SelectColumn","RequestMethod","columnlist","Notiflix","useRouter","MAX_VALUE","TextEditor","excelDownload","PaginationComponent","ExcelDownloadModal","ExcelUploadModal","BasicContainer","page","keyword","option","router","excelOpen","setExcelOpen","excelUploadOpen","setExcelUploadOpen","name","id","basicRow","setBasicRow","column","setColumn","Set","selectList","setSelectList","optionList","setOptionList","optionIndex","setOptionIndex","total","pageInfo","setPageInfo","SearchBasic","then","Loading","remove","LoadBasic","loadAllSelectItems","tmpColumn","map","v","length","tmpKey","key","path","renderItem","res","pk","results","info_list","Object","keys","indexOf","value","unit_id","Promise","all","moddable","SaveBasic","row","i","has","selectKey","additional","push","type","selectData","split","unitWeight","Number","title","unit","filter","status","Report","success","DeleteBasic","circle","totalPages","cleanUpData","state","failure","back","isPaging","params","opt","cleanUpBasicData","tmpRow","data","tmpBasicRow","index","appendAdditional","random_id","Math","random","cm_id","customer","customer_id","customer_idPK","customerPK","model","crn","menuData","menus","menu","colName","width","tab","additionalMenus","editor","additionalData","downloadExcel","tmpSelectList","onClickHeaderButton","items","tmpId","Confirm","show","display","paddingBottom","e","tmp","isChange","add"],"mappings":";;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,UAAP,MAAuB,wCAAvB;AACA,OAAOC,cAAP,MAA2B,8CAA3B;AACA,OAAOC,aAAP,MAA0B,6CAA1B;AACA,OAAOC,UAAP,MAAuB,qCAAvB,C,CACA;;AACA,SAAQC,YAAR,QAA2B,iBAA3B;AAEA,SAAQC,aAAR,QAA4B,qCAA5B;AACA,SAAQC,UAAR,QAAyB,+BAAzB;AACA,OAAOC,QAAP,MAAqB,UAArB;AACA,SAAQC,SAAR,QAAwB,aAAxB;AACA,SAAQC,SAAR,QAAwB,8BAAxB;AAEA,OAAOC,UAAP,MAAuB,mDAAvB;AACA,SAAQC,aAAR,QAA4B,0CAA5B;AAEA,OAAOC,mBAAP,MAAgC,sDAAhC;AAEA,OAAOC,kBAAP,MAA+B,iDAA/B;AACA,OAAOC,gBAAP,MAA6B,8CAA7B;;AASA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,OAAqC;AAAA;;AAAA,MAAnCC,IAAmC,QAAnCA,IAAmC;AAAA,MAA7BC,OAA6B,QAA7BA,OAA6B;AAAA,MAApBC,MAAoB,QAApBA,MAAoB;AACxD,MAAMC,MAAM,GAAGX,SAAS,EAAxB;;AADwD,kBAGtBT,QAAQ,CAAU,KAAV,CAHc;AAAA,MAGjDqB,SAHiD;AAAA,MAGtCC,YAHsC;;AAAA,mBAIVtB,QAAQ,CAAU,KAAV,CAJE;AAAA,MAIjDuB,eAJiD;AAAA,MAIhCC,kBAJgC;;AAAA,mBAMxBxB,QAAQ,CAAa,CAAC;AAClDyB,IAAAA,IAAI,EAAE,EAD4C;AACxCC,IAAAA,EAAE,EAAE;AADoC,GAAD,CAAb,CANgB;AAAA,MAMjDC,QANiD;AAAA,MAMvCC,WANuC;;AAAA,mBAS5B5B,QAAQ,CAA0BO,UAAU,CAAC,OAAD,CAApC,CAToB;AAAA,MASjDsB,MATiD;AAAA,MASzCC,SATyC;;AAAA,mBAUpB9B,QAAQ,CAAc,IAAI+B,GAAJ,EAAd,CAVY;AAAA,MAUjDC,UAViD;AAAA,MAUrCC,aAVqC;;AAAA,mBAWpBjC,QAAQ,CAAW,CAAC,MAAD,EAAQ,QAAR,EAAkB,KAAlB,CAAX,CAXY;AAAA,MAWjDkC,UAXiD;AAAA,MAWrCC,aAXqC;;AAAA,mBAYlBnC,QAAQ,CAAS,CAAT,CAZU;AAAA,MAYjDoC,WAZiD;AAAA,MAYpCC,cAZoC;;AAAA,mBAcxBrC,QAAQ,CAAgC;AACpEiB,IAAAA,IAAI,EAAE,CAD8D;AAEpEqB,IAAAA,KAAK,EAAE;AAF6D,GAAhC,CAdgB;AAAA,MAcjDC,QAdiD;AAAA,MAcvCC,WAduC;;AAmBxDzC,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAGmB,OAAH,EAAW;AACPuB,MAAAA,WAAW,CAACvB,OAAD,EAAUC,MAAV,EAAkBF,IAAlB,CAAX,CAAmCyB,IAAnC,CAAwC,YAAM;AAC1ClC,QAAAA,QAAQ,CAACmC,OAAT,CAAiBC,MAAjB;AACH,OAFD;AAGH,KAJD,MAIK;AACDC,MAAAA,SAAS,CAAC5B,IAAD,CAAT,CAAgByB,IAAhB,CAAqB,YAAM;AACvBlC,QAAAA,QAAQ,CAACmC,OAAT,CAAiBC,MAAjB;AACH,OAFD;AAGH;AACJ,GAVQ,EAUN,CAAC3B,IAAD,EAAOC,OAAP,EAAgBC,MAAhB,CAVM,CAAT;;AAYA,MAAM2B,kBAAkB;AAAA,yEAAG,kBAAOjB,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACnBkB,cAAAA,SADmB,GACPlB,MAAM,CAACmB,GAAP;AAAA,qFAAW,iBAAOC,CAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCACpBA,CAAC,CAACjB,UAAF,IAAgBiB,CAAC,CAACjB,UAAF,CAAakB,MAAb,KAAwB,CADpB;AAAA;AAAA;AAAA;;AAEfC,0BAAAA,MAFe,GAENF,CAAC,CAACG,GAFI;AAAA;AAAA,iCAKH9C,aAAa,CAAC,KAAD,YAAW6C,MAAX,WAAwB;AAC7CE,4BAAAA,IAAI,EAAE;AACFpC,8BAAAA,IAAI,EAAE,CADJ;AAEFqC,8BAAAA,UAAU,EAAE5C;AAFV;AADuC,2BAAxB,CALV;;AAAA;AAKf6C,0BAAAA,GALe;AAaXC,0BAAAA,EAbW,GAaN,EAbM;AAefD,0BAAAA,GAAG,CAACE,OAAJ,CAAYC,SAAZ,IAAyBH,GAAG,CAACE,OAAJ,CAAYC,SAAZ,CAAsBR,MAA/C,IAAyDS,MAAM,CAACC,IAAP,CAAYL,GAAG,CAACE,OAAJ,CAAYC,SAAZ,CAAsB,CAAtB,CAAZ,EAAsCV,GAAtC,CAA0C,UAACC,CAAD,EAAO;AACtG,gCAAGA,CAAC,CAACY,OAAF,CAAU,KAAV,MAAqB,CAAC,CAAzB,EAA2B;AACvBL,8BAAAA,EAAE,GAAGP,CAAL;AACH;AACJ,2BAJwD,CAAzD;AAfe,2FAsBJA,CAtBI;AAuBPjB,4BAAAA,UAAU,qBAAMuB,GAAG,CAACE,OAAJ,CAAYC,SAAZ,CAAsBV,GAAtB,CAA0B,UAACc,KAAD,EAAgB;AACtD,qEACOA,KADP;AAEIrC,gCAAAA,IAAI,EAAEqC,KAAK,CAACrC,IAFhB;AAGI;AACA+B,gCAAAA,EAAE,EAAEM,KAAK,CAACN,EAAD;AAJb;AAMH,6BAPe,CAAN;AAvBH;;AAAA;AAAA,+BAmChBP,CAAC,CAACjB,UAnCc;AAAA;AAAA;AAAA;;AAAA,2FAqCRiB,CArCQ;AAsCXO,4BAAAA,EAAE,EAAEP,CAAC,CAACc;AAtCK;;AAAA;AAAA,2DAyCRd,CAzCQ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAX;;AAAA;AAAA;AAAA;AAAA,kBADO,EA+CvB;;AACAe,cAAAA,OAAO,CAACC,GAAR,CAAYlB,SAAZ,EAAuBL,IAAvB,CAA4B,UAAAa,GAAG,EAAI;AAC/BzB,gBAAAA,SAAS,oBAAKyB,GAAG,CAACP,GAAJ,CAAQ,UAAAC,CAAC,EAAG;AACtB,yDACOA,CADP;AAEIxB,oBAAAA,IAAI,EAAEwB,CAAC,CAACiB,QAAF,GAAajB,CAAC,CAACxB,IAAF,GAAO,MAApB,GAA6BwB,CAAC,CAACxB;AAFzC;AAIH,iBALa,CAAL,EAAT;AAMH,eAPD,EAhDuB,CAwDvB;;AAxDuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAlBqB,kBAAkB;AAAA;AAAA;AAAA,KAAxB;;AA2DA,MAAMqB,SAAS;AAAA,yEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAEE7D,aAAa,CAAC,MAAD,mCAEhB,QAFgB,EAELqB,QAAQ,CAACqB,GAAT,CAAa,UAACoB,GAAD,EAAMC,CAAN,EAAY;AACjC,oBAAGrC,UAAU,CAACsC,GAAX,CAAeF,GAAG,CAAC1C,EAAnB,CAAH,EAA0B;AACtB,sBAAI6C,SAAmB,GAAG,EAA1B;AACA,sBAAIC,UAAgB,GAAG,EAAvB;AACA3C,kBAAAA,MAAM,CAACmB,GAAP,CAAW,UAACC,CAAD,EAAO;AACd,wBAAGA,CAAC,CAACjB,UAAL,EAAgB;AACZuC,sBAAAA,SAAS,CAACE,IAAV,CAAexB,CAAC,CAACG,GAAjB;AACH;;AAED,wBAAGH,CAAC,CAACyB,IAAF,KAAW,YAAd,EAA2B;AACvBF,sBAAAA,UAAU,CAACC,IAAX,CAAgBxB,CAAhB;AACH;AACJ,mBARD;AAUA,sBAAI0B,UAAe,GAAG,EAAtB;AAEAhB,kBAAAA,MAAM,CAACC,IAAP,CAAYQ,GAAZ,EAAiBpB,GAAjB,CAAqB,UAAAC,CAAC,EAAI;AACtB,wBAAGA,CAAC,CAACY,OAAF,CAAU,IAAV,MAAoB,CAAC,CAAxB,EAA2B;AACvBc,sBAAAA,UAAU,mCACHA,UADG,2BAEL1B,CAAC,CAAC2B,KAAF,CAAQ,IAAR,EAAc,CAAd,CAFK,EAEcR,GAAG,CAACnB,CAAD,CAFjB,EAAV;AAIH;;AAED,wBAAGA,CAAC,KAAK,YAAT,EAAuB;AACnB0B,sBAAAA,UAAU,mCACHA,UADG;AAENE,wBAAAA,UAAU,EAAEC,MAAM,CAACV,GAAG,CAAC,YAAD,CAAJ;AAFZ,wBAAV;AAIH;;AAED,wBAAGnB,CAAC,KAAK,OAAT,EAAkB;AACd0B,sBAAAA,UAAU,mCACHA,UADG;AAENjD,wBAAAA,EAAE,EAAE0C,GAAG,CAAC,OAAD;AAFD,wBAAV;AAIH;AACJ,mBArBD;AAuBA,uEACOA,GADP,GAEOO,UAFP;AAGIH,oBAAAA,UAAU,qBACHA,UAAU,CAACxB,GAAX,CAAe,UAAAC,CAAC,EAAI;AACnB,0BAAGmB,GAAG,CAACnB,CAAC,CAACxB,IAAH,CAAN,EAAgB;AACZ,+BAAO;AACHC,0BAAAA,EAAE,EAAEuB,CAAC,CAACvB,EADH;AAEHqD,0BAAAA,KAAK,EAAE9B,CAAC,CAACxB,IAFN;AAGHqC,0BAAAA,KAAK,EAAEM,GAAG,CAACnB,CAAC,CAACxB,IAAH,CAHP;AAIHuD,0BAAAA,IAAI,EAAE/B,CAAC,CAAC+B;AAJL,yBAAP;AAMH;AACJ,qBATE,EASAC,MATA,CASO,UAAChC,CAAD;AAAA,6BAAOA,CAAP;AAAA,qBATP,CADG;AAHd;AAiBH;AACJ,eAzDW,EAyDTgC,MAzDS,CAyDF,UAAChC,CAAD;AAAA,uBAAOA,CAAP;AAAA,eAzDE,CAFK,EAFf;;AAAA;AAEVM,cAAAA,GAFU;;AAiEd,kBAAGA,GAAH,EAAO;AACH,oBAAGA,GAAG,CAAC2B,MAAJ,KAAe,GAAlB,EAAsB;AAClB1E,kBAAAA,QAAQ,CAAC2E,MAAT,CAAgBC,OAAhB,CAAwB,UAAxB,EAAmC,EAAnC,EAAsC,IAAtC;;AACA,sBAAGlE,OAAH,EAAW;AACPuB,oBAAAA,WAAW,CAACvB,OAAD,EAAUC,MAAV,EAAkBF,IAAlB,CAAX,CAAmCyB,IAAnC,CAAwC,YAAM;AAC1ClC,sBAAAA,QAAQ,CAACmC,OAAT,CAAiBC,MAAjB;AACH,qBAFD;AAGH,mBAJD,MAIK;AACDC,oBAAAA,SAAS,CAAC5B,IAAD,CAAT,CAAgByB,IAAhB,CAAqB,YAAM;AACvBlC,sBAAAA,QAAQ,CAACmC,OAAT,CAAiBC,MAAjB;AACH,qBAFD;AAGH;AACJ;AACJ;;AA9Ea;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAATuB,SAAS;AAAA;AAAA;AAAA,KAAf;;AAiFA,MAAMkB,WAAW;AAAA,yEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACE/E,aAAa,CAAC,QAAD,qCAEtB,QAFsB,EAEXqB,QAAQ,CAACqB,GAAT,CAAa,UAACoB,GAAD,EAAMC,CAAN,EAAY;AACjC,oBAAGrC,UAAU,CAACsC,GAAX,CAAeF,GAAG,CAAC1C,EAAnB,CAAH,EAA0B;AACtB,sBAAI8B,EAAE,GAAG,EAAT;AACAG,kBAAAA,MAAM,CAACC,IAAP,CAAYQ,GAAZ,EAAiBpB,GAAjB,CAAqB,UAACC,CAAD,EAAc;AAC/B,wBAAGA,CAAC,CAACY,OAAF,CAAU,KAAV,MAAqB,CAAC,CAAzB,EAA2B;AACvBL,sBAAAA,EAAE,GAAGP,CAAL;AACH;AACJ,mBAJD;AAMIO,kBAAAA,EAAE,GAAG,OAAL;AAEJ,yBAAOY,GAAG,CAACZ,EAAD,CAAV;AAEH;AACJ,eAdW,EAcTyB,MAdS,CAcF,UAAChC,CAAD;AAAA,uBAAOA,CAAP;AAAA,eAdE,CAFW,EADf;;AAAA;AACVM,cAAAA,GADU;;AAoBhB,kBAAGA,GAAH,EAAQ;AACJ,oBAAGA,GAAG,CAAC2B,MAAJ,KAAe,GAAlB,EAAsB;AAClB1E,kBAAAA,QAAQ,CAAC2E,MAAT,CAAgBC,OAAhB,CAAwB,QAAxB,EAAkC,EAAlC,EAAsC,IAAtC,EAA4C,YAAM;AAC9C,wBAAGN,MAAM,CAAC7D,IAAD,CAAN,KAAiB,CAApB,EAAsB;AAClB4B,sBAAAA,SAAS,CAAC,CAAD,CAAT,CAAaH,IAAb,CAAkB,YAAM;AACpBlC,wBAAAA,QAAQ,CAACmC,OAAT,CAAiBC,MAAjB;AACH,uBAFD;AAGH,qBAJD,MAIK;AACD,0BAAG1B,OAAH,EAAW;AACPE,wBAAAA,MAAM,CAACqD,IAAP,oDAAwDvD,OAAxD,kBAAuEC,MAAvE;AACH,uBAFD,MAEK;AACDC,wBAAAA,MAAM,CAACqD,IAAP;AACH;AACJ;AACJ,mBAZD;AAaH;AACJ;;AApCe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAXY,WAAW;AAAA;AAAA;AAAA,KAAjB;;AAuCA,MAAMxC,SAAS;AAAA,yEAAG,kBAAO5B,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACdT,cAAAA,QAAQ,CAACmC,OAAT,CAAiB2C,MAAjB;AADc;AAAA,qBAEIhF,aAAa,CAAC,KAAD,eAAoB;AAC/C+C,gBAAAA,IAAI,EAAE;AACFpC,kBAAAA,IAAI,EAAGA,IAAI,IAAIA,IAAI,KAAK,CAAlB,GAAuBA,IAAvB,GAA8B,CADlC;AAEFqC,kBAAAA,UAAU,EAAE;AAFV;AADyC,eAApB,CAFjB;;AAAA;AAERC,cAAAA,GAFQ;;AASd,kBAAGA,GAAG,IAAIA,GAAG,CAAC2B,MAAJ,KAAe,GAAzB,EAA6B;AACzB,oBAAG3B,GAAG,CAACE,OAAJ,CAAY8B,UAAZ,GAAyBtE,IAA5B,EAAiC;AAC7B4B,kBAAAA,SAAS,CAAC5B,IAAI,GAAG,CAAR,CAAT,CAAoByB,IAApB,CAAyB,YAAM;AAC3BlC,oBAAAA,QAAQ,CAACmC,OAAT,CAAiBC,MAAjB;AACH,mBAFD;AAGH,iBAJD,MAIK;AACDJ,kBAAAA,WAAW,iCACJD,QADI;AAEPtB,oBAAAA,IAAI,EAAEsC,GAAG,CAACE,OAAJ,CAAYxC,IAFX;AAGPqB,oBAAAA,KAAK,EAAEiB,GAAG,CAACE,OAAJ,CAAY8B;AAHZ,qBAAX;AAKAC,kBAAAA,WAAW,CAACjC,GAAD,CAAX;AACH;AACJ,eAbD,MAaM,IAAIA,GAAG,CAACkC,KAAJ,KAAc,GAAlB,EAAuB;AACzBjF,gBAAAA,QAAQ,CAAC2E,MAAT,CAAgBO,OAAhB,CAAwB,aAAxB,EAAuC,WAAvC,EAAoD,IAApD,EAA0D,YAAM;AAC5DtE,kBAAAA,MAAM,CAACuE,IAAP;AACH,iBAFD;AAGH;;AA1Ba;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAT9C,SAAS;AAAA;AAAA;AAAA,KAAf;;AA6BA,MAAMJ,WAAW;AAAA,yEAAG,kBAAOvB,OAAP,EAAqBC,MAArB,EAAqCyE,QAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAChBpF,cAAAA,QAAQ,CAACmC,OAAT,CAAiB2C,MAAjB;;AACA,kBAAG,CAACM,QAAJ,EAAa;AACTvD,gBAAAA,cAAc,CAAClB,MAAD,CAAd;AACH;;AAJe;AAAA,qBAMEb,aAAa,CAAC,KAAD,iBAAsB;AACjD+C,gBAAAA,IAAI,EAAE;AACFpC,kBAAAA,IAAI,EAAE2E,QAAF,aAAEA,QAAF,cAAEA,QAAF,GAAc,CADhB;AAEFtC,kBAAAA,UAAU,EAAE;AAFV,iBAD2C;AAKjDuC,gBAAAA,MAAM,EAAE;AACJ3E,kBAAAA,OAAO,EAAEA,OAAF,aAAEA,OAAF,cAAEA,OAAF,GAAa,EADhB;AAEJ4E,kBAAAA,GAAG,EAAE3E,MAAF,aAAEA,MAAF,cAAEA,MAAF,GAAY;AAFX;AALyC,eAAtB,CANf;;AAAA;AAMVoC,cAAAA,GANU;;AAiBhB,kBAAGA,GAAG,IAAIA,GAAG,CAAC2B,MAAJ,KAAe,GAAzB,EAA6B;AACzB1C,gBAAAA,WAAW,iCACJD,QADI;AAEPtB,kBAAAA,IAAI,EAAEsC,GAAG,CAACE,OAAJ,CAAYxC,IAFX;AAGPqB,kBAAAA,KAAK,EAAEiB,GAAG,CAACE,OAAJ,CAAY8B;AAHZ,mBAAX;AAKAC,gBAAAA,WAAW,CAACjC,GAAD,CAAX;AACH;;AAxBe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAXd,WAAW;AAAA;AAAA;AAAA,KAAjB;;AA0BA,MAAMsD,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACxC,GAAD,EAAa;AAClC,QAAIyC,MAAM,GAAGzC,GAAG,CAAC0C,IAAJ,CAASxC,OAAT,CAAiBC,SAA9B;AAEA,QAAIwC,WAAW,GAAGF,MAAM,CAAChD,GAAP,CAAW,UAACoB,GAAD,EAAW+B,KAAX,EAA6B;AACtD,UAAIC,gBAAqB,GAAG,EAA5B;AAEAhC,MAAAA,GAAG,CAACI,UAAJ,IAAkBJ,GAAG,CAACI,UAAJ,CAAexB,GAAf,CAAmB,UAACC,CAAD,EAAY;AAC7CmD,QAAAA,gBAAgB,mCACTA,gBADS,2BAEXnD,CAAC,CAAC8B,KAFS,EAED9B,CAAC,CAACa,KAFD,EAAhB;AAKH,OANiB,CAAlB;AAOA,UAAIuC,SAAS,GAAGC,IAAI,CAACC,MAAL,KAAc,IAA9B;AACA;AACIC,QAAAA,KAAK,EAACpC,GAAG,CAACoC,KADd;AAEIC,QAAAA,QAAQ,EAAErC,GAAG,CAACqC,QAAJ,CAAahF,IAF3B;AAGIiF,QAAAA,WAAW,EAAEtC,GAAG,CAACqC,QAAJ,CAAahF,IAH9B;AAIIkF,QAAAA,aAAa,EAAEvC,GAAG,CAACqC,QAAJ,CAAaC,WAJhC;AAKIE,QAAAA,UAAU,EAAExC,GAAG,CAACqC,QAAJ,CAAaC,WAL7B;AAMIG,QAAAA,KAAK,EAACzC,GAAG,CAACyC,KANd;AAOIC,QAAAA,GAAG,EAAC1C,GAAG,CAACqC,QAAJ,CAAaK;AAPrB,SAQOV,gBARP;AASI1E,QAAAA,EAAE,kBAAW2E,SAAX;AATN;AAYH,KAvBiB,CAAlB;AAwBAzE,IAAAA,WAAW,oBAAKsE,WAAL,EAAX;AACH,GA5BD;;AA8BA,MAAMV,WAAW,GAAG,SAAdA,WAAc,CAACjC,GAAD,EAAc;AAC9B,QAAIR,SAAS,GAAGxC,UAAU,CAAC,OAAD,CAA1B;AACA,QAAIyF,MAAM,GAAG,EAAb;AACAjD,IAAAA,SAAS,GAAGA,SAAS,CAACC,GAAV,CAAc,UAACnB,MAAD,EAAiB;AACvC,UAAIkF,QAAJ;AACAxD,MAAAA,GAAG,CAACE,OAAJ,CAAYuD,KAAZ,IAAqBzD,GAAG,CAACE,OAAJ,CAAYuD,KAAZ,CAAkBhE,GAAlB,CAAsB,UAACiE,IAAD,EAAe;AACtD,YAAGA,IAAI,CAACC,OAAL,KAAiBrF,MAAM,CAACuB,GAA3B,EAA+B;AAC3B2D,UAAAA,QAAQ,GAAG;AACPrF,YAAAA,EAAE,EAAEuF,IAAI,CAACvF,EADF;AAEPD,YAAAA,IAAI,EAAEwF,IAAI,CAAClC,KAFJ;AAGPoC,YAAAA,KAAK,EAAEF,IAAI,CAACE,KAHL;AAIPC,YAAAA,GAAG,EAACH,IAAI,CAACG,GAJF;AAKPpC,YAAAA,IAAI,EAACiC,IAAI,CAACjC,IALH;AAMPd,YAAAA,QAAQ,EAAE,CAAC+C,IAAI,CAAC/C;AANT,WAAX;AAQH,SATD,MASO,IAAG+C,IAAI,CAACC,OAAL,KAAiB,IAAjB,IAAyBrF,MAAM,CAACuB,GAAP,KAAe,OAA3C,EAAmD;AACtD2D,UAAAA,QAAQ,GAAG;AACPrF,YAAAA,EAAE,EAAEuF,IAAI,CAACvF,EADF;AAEPD,YAAAA,IAAI,EAAEwF,IAAI,CAAClC,KAFJ;AAGPoC,YAAAA,KAAK,EAAEF,IAAI,CAACE,KAHL;AAIPC,YAAAA,GAAG,EAACH,IAAI,CAACG,GAJF;AAKPpC,YAAAA,IAAI,EAACiC,IAAI,CAACjC,IALH;AAMPd,YAAAA,QAAQ,EAAE,CAAC+C,IAAI,CAAC/C;AANT,WAAX;AAQH;AACJ,OApBoB,CAArB;;AAsBA,UAAG6C,QAAH,EAAY;AACR,+CACOlF,MADP,GAEOkF,QAFP;AAIH;AACJ,KA9BW,EA8BT9B,MA9BS,CA8BF,UAAChC,CAAD;AAAA,aAAWA,CAAX;AAAA,KA9BE,CAAZ;AAgCA,QAAIoE,eAAe,GAAG9D,GAAG,CAACE,OAAJ,CAAYuD,KAAZ,GAAoBzD,GAAG,CAACE,OAAJ,CAAYuD,KAAZ,CAAkBhE,GAAlB,CAAsB,UAACiE,IAAD,EAAc;AAC1E,UAAGA,IAAI,CAACC,OAAL,KAAiB,IAApB,EAAyB;AACrB,eAAO;AACHxF,UAAAA,EAAE,EAAEuF,IAAI,CAACvF,EADN;AAEHD,UAAAA,IAAI,EAAEwF,IAAI,CAAClC,KAFR;AAGHoC,UAAAA,KAAK,EAAEF,IAAI,CAACE,KAHT;AAIH/D,UAAAA,GAAG,EAAE6D,IAAI,CAAClC,KAJP;AAKHuC,UAAAA,MAAM,EAAE3G,UALL;AAMH+D,UAAAA,IAAI,EAAE,YANH;AAOHM,UAAAA,IAAI,EAAEiC,IAAI,CAACjC;AAPR,SAAP;AASH;AACJ,KAZyC,EAYvCC,MAZuC,CAYhC,UAAChC,CAAD;AAAA,aAAYA,CAAZ;AAAA,KAZgC,CAApB,GAYK,EAZ3B;AAeA+C,IAAAA,MAAM,GAAGzC,GAAG,CAACE,OAAJ,CAAYC,SAArB;AAEIZ,IAAAA,kBAAkB,8BACXC,SADW,sBAEXsE,eAFW,GAAlB;AAMJ,QAAI9C,SAAS,GAAG,EAAhB;AACA,QAAIgD,cAAqB,GAAG,EAA5B;AACAxE,IAAAA,SAAS,CAACC,GAAV,CAAc,UAACC,CAAD,EAAY;AACtB,UAAGA,CAAC,CAACjB,UAAL,EAAgB;AACZuC,QAAAA,SAAS,GAAGtB,CAAC,CAACG,GAAd;AACH;AACJ,KAJD;AAMAiE,IAAAA,eAAe,CAACrE,GAAhB,CAAoB,UAACC,CAAD,EAAY;AAC5B,UAAGA,CAAC,CAACyB,IAAF,KAAW,YAAd,EAA2B;AACvB6C,QAAAA,cAAc,CAAC9C,IAAf,CAAoBxB,CAAC,CAACG,GAAtB;AACH;AACJ,KAJD;AAMA,QAAII,EAAE,GAAG,EAAT;AACAG,IAAAA,MAAM,CAACC,IAAP,CAAYoC,MAAZ,EAAoBhD,GAApB,CAAwB,UAACC,CAAD,EAAO;AAC3B,UAAGA,CAAC,CAACY,OAAF,CAAU,KAAV,MAAqB,CAAC,CAAzB,EAA2B;AACvBL,QAAAA,EAAE,GAAGP,CAAL;AACH;AACJ,KAJD;AAOA,QAAIiD,WAAW,GAAGF,MAAM,CAAChD,GAAP,CAAW,UAACoB,GAAD,EAAW+B,KAAX,EAA6B;AACtD,UAAIC,gBAAqB,GAAG,EAA5B;AAEAhC,MAAAA,GAAG,CAACI,UAAJ,IAAkBJ,GAAG,CAACI,UAAJ,CAAexB,GAAf,CAAmB,UAACC,CAAD,EAAY;AAC7CmD,QAAAA,gBAAgB,mCACTA,gBADS,2BAEXnD,CAAC,CAAC8B,KAFS,EAED9B,CAAC,CAACa,KAFD,EAAhB;AAKH,OANiB,CAAlB;AAOA,UAAIuC,SAAS,GAAGC,IAAI,CAACC,MAAL,KAAc,IAA9B;AACA;AACIC,QAAAA,KAAK,EAACpC,GAAG,CAACoC,KADd;AAEIC,QAAAA,QAAQ,EAAErC,GAAG,CAACqC,QAAJ,CAAahF,IAF3B;AAGIiF,QAAAA,WAAW,EAAEtC,GAAG,CAACqC,QAAJ,CAAahF,IAH9B;AAIIkF,QAAAA,aAAa,EAAEvC,GAAG,CAACqC,QAAJ,CAAaC,WAJhC;AAKIE,QAAAA,UAAU,EAAExC,GAAG,CAACqC,QAAJ,CAAaC,WAL7B;AAMIG,QAAAA,KAAK,EAACzC,GAAG,CAACyC,KANd;AAOIC,QAAAA,GAAG,EAAC1C,GAAG,CAACqC,QAAJ,CAAaK;AAPrB,SAQOV,gBARP;AASI1E,QAAAA,EAAE,kBAAW2E,SAAX;AATN;AAYH,KAvBiB,CAAlB;AAyBAzE,IAAAA,WAAW,oBAAKsE,WAAL,EAAX;AACH,GA1GD;;AA4GA,MAAMsB,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AACxB,QAAIC,aAAwB,GAAG,EAA/B;AACA9F,IAAAA,QAAQ,CAACqB,GAAT,CAAa,UAAAoB,GAAG,EAAI;AAChBqD,MAAAA,aAAa,CAAChD,IAAd,CAAmBzC,UAAU,CAACsC,GAAX,CAAeF,GAAG,CAAC1C,EAAnB,CAAnB;AACH,KAFD;AAGAd,IAAAA,aAAa,CAACiB,MAAD,EAASF,QAAT,WAA4B,OAA5B,EAAqC8F,aAArC,CAAb;AACH,GAND;;AAQA,MAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACvB,KAAD,EAAmB;AAC3C,YAAOA,KAAP;AACI,WAAK,CAAL;AACI3E,QAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACA;;AACJ,WAAK,CAAL;AACIF,QAAAA,YAAY,CAAC,IAAD,CAAZ;AACA;;AACJ,WAAK,CAAL;AACIF,QAAAA,MAAM,CAACqD,IAAP;AACA;;AACJ,WAAK,CAAL;AACQ,YAAIkD,KAAK,GAAG,EAAZ;AAEA9F,QAAAA,MAAM,CAACmB,GAAP,CAAW,UAACc,KAAD,EAAW;AAClB,cAAGA,KAAK,CAAC9B,UAAN,IAAoB8B,KAAK,CAAC9B,UAAN,CAAiBkB,MAAxC,EAA+C;AAC3C,gBAAGY,KAAK,CAACV,GAAN,KAAc,UAAjB,EAA6B;AAAA;;AACzBuE,cAAAA,KAAK,mCACE7D,KAAK,CAAC9B,UAAN,CAAiB,CAAjB,CADF,6DAEA8B,KAAK,CAACV,GAFN,EAEaU,KAAK,CAAC9B,UAAN,CAAiB,CAAjB,EAAoBP,IAFjC,mCAGAqC,KAAK,CAACV,GAAN,GAAU,IAHV,EAGkBU,KAAK,CAAC9B,UAAN,CAAiB,CAAjB,EAAoB0E,WAHtC,oBAIEiB,KAJF,CAAL;AAMH;AAEJ;;AAED,cAAG7D,KAAK,CAACV,GAAN,KAAc,KAAjB,EAAwB;AACpBuE,YAAAA,KAAK,uBACA7D,KAAK,CAACV,GADN,EACYzB,QAAQ,CAACuB,MAAT,GAAgB,CAD5B,CAAL;AAGH;;AAED,cAAGY,KAAK,CAACV,GAAN,KAAc,IAAjB,EAAuB;AACnBuE,YAAAA,KAAK,GAAG;AACJC,cAAAA,KAAK,EAAE;AADH,aAAR;AAGH;AAEJ,SAzBD;AA0BA,YAAIvB,SAAS,GAAGC,IAAI,CAACC,MAAL,KAAc,IAA9B;AACA3E,QAAAA,WAAW,kCAEA+F,KAFA;AAGHjG,UAAAA,EAAE,kBAAW2E,SAAX,CAHC;AAIH5E,UAAAA,IAAI,EAAE,IAJH;AAKH+C,UAAAA,UAAU,EAAE;AALT,sCAOJ7C,QAPI,GAAX;AASJ;;AACJ,WAAK,CAAL;AACIwC,QAAAA,SAAS;AACT;;AACJ,WAAK,CAAL;AACI3D,QAAAA,QAAQ,CAACqH,OAAT,CAAiBC,IAAjB,CAAsB,IAAtB,EAA2B,WAA3B,EAAuC,IAAvC,EAA4C,IAA5C,EACI,YAAI;AACAzC,UAAAA,WAAW;AACd,SAHL,EAIA,YAAI,CAAE,CAJN;AAMA;AA5DR;AA+DH,GAhED;;AAkEA,SACI;AAAK,IAAA,KAAK,EAAE;AAAC0C,MAAAA,OAAO,EAAE;AAAV,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,cAAD;AAAgB,IAAA,QAAQ,EAAE,OAA1B;AAAmC,IAAA,OAAO,EAAE,CAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI;AAAK,IAAA,KAAK,EAAE;AAACC,MAAAA,aAAa,EAAE;AAAhB,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,MAAC,UAAD;AACI,IAAA,QAAQ,MADZ;AAEI,IAAA,aAAa,EAAE9G,OAFnB;AAGI,IAAA,qBAAqB,EAAE,+BAACA,OAAD,EAAa;AAChC,UAAGA,OAAH,EAAW;AACPE,QAAAA,MAAM,CAACqD,IAAP,oDAAwDvD,OAAxD,kBAAuEkB,WAAvE;AACH,OAFD,MAEK;AACDhB,QAAAA,MAAM,CAACqD,IAAP;AACH;AACJ,KATL;AAUI,IAAA,gBAAgB,EAAEvC,UAVtB;AAWI,IAAA,oBAAoB,EAAE,8BAACf,MAAD,EAAY;AAC9BkB,MAAAA,cAAc,CAAClB,MAAD,CAAd;AACH,KAbL;AAcI,IAAA,WAAW,EAAEiB,WAdjB;AAeI,IAAA,KAAK,EAAE,WAfX;AAgBI,IAAA,OAAO,EACL,CAAC,QAAD,EAAU,QAAV,EAAoB,MAApB,EAA4B,MAA5B,EAAoC,MAApC,EAA4C,IAA5C,CAjBN;AAmBI,IAAA,cAAc,EAAEsF,mBAnBpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAuBI,MAAC,UAAD;AACI,IAAA,QAAQ,MADZ;AAEI,IAAA,SAAS,MAFb;AAGI,IAAA,UAAU,GACNrH,YADM,4BAEHwB,MAFG,EAHd;AAOI,IAAA,GAAG,EAAEF,QAPT,CAQI;AARJ;AASI,IAAA,MAAM,EAAE,gBAACsG,CAAD,EAAO;AACX,UAAIC,GAAa,GAAGlG,UAApB;AACAiG,MAAAA,CAAC,CAACjF,GAAF,CAAM,UAAAC,CAAC,EAAI;AACP,YAAGA,CAAC,CAACkF,QAAL,EAAeD,GAAG,CAACE,GAAJ,CAAQnF,CAAC,CAACvB,EAAV;AAClB,OAFD;AAGAO,MAAAA,aAAa,CAACiG,GAAD,CAAb;AACAtG,MAAAA,WAAW,CAACqG,CAAD,CAAX;AACH,KAhBL;AAiBI,IAAA,UAAU,EAAEjG,UAjBhB,CAkBI;AAlBJ;AAmBI,IAAA,aAAa,EAAEC,aAnBnB;AAoBI,IAAA,MAAM,EAAEN,QAAQ,CAACuB,MAAT,GAAkB,EAAlB,IAAwB,KAAG,EAAH,GAAM,EAA9B,GAAmC,KAAG,EAAtC,GAA2CvB,QAAQ,CAACuB,MAAT,GAAkB,EAAlB,GAAuB,EApB9E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAvBJ,EA6CI,MAAC,mBAAD;AACE,IAAA,WAAW,EAAEX,QAAQ,CAACtB,IADxB;AAEE,IAAA,SAAS,EAAEsB,QAAQ,CAACD,KAFtB;AAGE,IAAA,OAAO,EAAE,iBAACrB,IAAD,EAAU;AACf,UAAGC,OAAH,EAAW;AACPE,QAAAA,MAAM,CAACqD,IAAP,0CAA8CxD,IAA9C,sBAA8DC,OAA9D,kBAA6EC,MAA7E;AACH,OAFD,MAEK;AACDC,QAAAA,MAAM,CAACqD,IAAP,0CAA8CxD,IAA9C;AACH;AACJ,KATH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA7CJ,CAFJ,EA2DI,MAAC,kBAAD;AACE,IAAA,MAAM,EAAEI,SADV;AAEE,IAAA,MAAM,EAAEQ,MAFV;AAGE,IAAA,QAAQ,EAAEF,QAHZ;AAIE,IAAA,QAAQ,8CAJV;AAKE,IAAA,SAAS,8CALX;AAME,IAAA,UAAU,EAAEK,UANd;AAOE,IAAA,GAAG,EAAE,cAPP;AAQE,IAAA,SAAS,EAAEV,YARb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA3DJ,EAqEI,MAAC,gBAAD;AAAkB,IAAA,MAAM,EAAEC,eAA1B;AAA2C,IAAA,SAAS,EAAEC,kBAAtD;AAA0E,IAAA,GAAG,EAAE,cAA/E;AAA+F,IAAA,gBAAgB,EAAEuE,gBAAjH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IArEJ,CADJ;AAyEH,CAtiBD;;GAAM/E,c;UACaP,S;;;KADbO,c;AAkjBN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAeA,cAAf","sourcesContent":["import React, {useEffect, useState} from 'react'\nimport ExcelTable from '../../../../component/Excel/ExcelTable'\nimport MenuNavigation from '../../../../component/MenuNav/MenuNavigation'\nimport ProfileHeader from '../../../../component/Profile/ProfileHeader'\nimport PageHeader from '../../../../component/Header/Header'\n// @ts-ignore\nimport {SelectColumn} from 'react-data-grid'\nimport {IExcelHeaderType, IItemMenuType} from '../../../../common/@types/type'\nimport {RequestMethod} from '../../../../common/RequestFunctions'\nimport {columnlist} from \"../../../../common/columnInit\";\nimport Notiflix from \"notiflix\";\nimport {useRouter} from 'next/router'\nimport {MAX_VALUE} from '../../../../common/configset'\nimport DropDownEditor from '../../../../component/Dropdown/ExcelBasicDropdown'\nimport TextEditor from '../../../../component/InputBox/ExcelBasicInputBox'\nimport {excelDownload} from '../../../../common/excelDownloadFunction'\nimport {loadAll} from 'react-cookies'\nimport PaginationComponent from '../../../../component/Pagination/PaginationComponent'\nimport {NextPageContext} from 'next'\nimport ExcelDownloadModal from '../../../../component/Modal/ExcelDownloadMoadal'\nimport ExcelUploadModal from \"../../../../component/Modal/ExcelUploadModal\";\n\ninterface IProps {\n    children?: any\n    page?: number\n    keyword?: string\n    option?: number\n}\n\nconst BasicContainer = ({page, keyword, option}: IProps) => {\n    const router = useRouter()\n\n    const [excelOpen, setExcelOpen] = useState<boolean>(false)\n    const [excelUploadOpen, setExcelUploadOpen] = useState<boolean>(false)\n\n    const [basicRow, setBasicRow] = useState<Array<any>>([{\n        name: \"\", id: \"\"\n    }])\n    const [column, setColumn] = useState<Array<IExcelHeaderType>>(columnlist[\"model\"])\n    const [selectList, setSelectList] = useState<Set<number>>(new Set())\n    const [optionList, setOptionList] = useState<string[]>(['고객사명','사업자 번호', '모델명'])\n    const [optionIndex, setOptionIndex] = useState<number>(0)\n\n    const [pageInfo, setPageInfo] = useState<{page: number, total: number}>({\n        page: 1,\n        total: 1\n    })\n\n    useEffect(() => {\n        if(keyword){\n            SearchBasic(keyword, option, page).then(() => {\n                Notiflix.Loading.remove()\n            })\n        }else{\n            LoadBasic(page).then(() => {\n                Notiflix.Loading.remove()\n            })\n        }\n    }, [page, keyword, option])\n\n    const loadAllSelectItems = async (column: IExcelHeaderType[]) => {\n        let tmpColumn = column.map(async (v: any) => {\n            if(v.selectList && v.selectList.length === 0){\n                let tmpKey = v.key\n                let res: any\n\n                    res = await RequestMethod('get', `${tmpKey}List`,{\n                        path: {\n                            page: 1,\n                            renderItem: MAX_VALUE,\n                        }\n                    })\n\n\n                    let pk = \"\";\n\n                    res.results.info_list && res.results.info_list.length && Object.keys(res.results.info_list[0]).map((v) => {\n                        if(v.indexOf('_id') !== -1){\n                            pk = v\n                        }\n                    })\n\n                        return {\n                            ...v,\n                            selectList: [...res.results.info_list.map((value: any) => {\n                                return {\n                                    ...value,\n                                    name: value.name,\n                                    // name: tmpKey === 'model' ? value.model : value.name,\n                                    pk: value[pk]\n                                }\n                            })]\n                        }\n\n\n            }else{\n                if(v.selectList){\n                    return {\n                        ...v,\n                        pk: v.unit_id\n                    }\n                }else{\n                    return v\n                }\n            }\n        })\n\n        // if(type !== 'productprocess'){\n        Promise.all(tmpColumn).then(res => {\n            setColumn([...res.map(v=> {\n                return {\n                    ...v,\n                    name: v.moddable ? v.name+'(필수)' : v.name\n                }\n            })])\n        })\n        // }\n    }\n\n    const SaveBasic = async () => {\n        let res: any\n            res = await RequestMethod('post', `modelSave`,\n                {\n                    ['models']: basicRow.map((row, i) => {\n                        if(selectList.has(row.id)){\n                            let selectKey: string[] = []\n                            let additional:any[] = []\n                            column.map((v) => {\n                                if(v.selectList){\n                                    selectKey.push(v.key)\n                                }\n\n                                if(v.type === 'additional'){\n                                    additional.push(v)\n                                }\n                            })\n\n                            let selectData: any = {}\n\n                            Object.keys(row).map(v => {\n                                if(v.indexOf('PK') !== -1) {\n                                    selectData = {\n                                        ...selectData,\n                                        [v.split('PK')[0]]: row[v]\n                                    }\n                                }\n\n                                if(v === 'unitWeight') {\n                                    selectData = {\n                                        ...selectData,\n                                        unitWeight: Number(row['unitWeight'])\n                                    }\n                                }\n\n                                if(v === 'tmpId') {\n                                    selectData = {\n                                        ...selectData,\n                                        id: row['tmpId']\n                                    }\n                                }\n                            })\n\n                            return {\n                                ...row,\n                                ...selectData,\n                                additional: [\n                                    ...additional.map(v => {\n                                        if(row[v.name]) {\n                                            return {\n                                                id: v.id,\n                                                title: v.name,\n                                                value: row[v.name],\n                                                unit: v.unit\n                                            }\n                                        }\n                                    }).filter((v) => v)\n                                ]\n                            }\n\n                        }\n                    }).filter((v) => v)\n                })\n\n\n        if(res){\n            if(res.status === 200){\n                Notiflix.Report.success('저장되었습니다.','','확인');\n                if(keyword){\n                    SearchBasic(keyword, option, page).then(() => {\n                        Notiflix.Loading.remove()\n                    })\n                }else{\n                    LoadBasic(page).then(() => {\n                        Notiflix.Loading.remove()\n                    })\n                }\n            }\n        }\n    }\n\n    const DeleteBasic = async () => {\n        const res = await RequestMethod('delete', `modelDelete`,\n            {\n                ['models']: basicRow.map((row, i) => {\n                    if(selectList.has(row.id)){\n                        let pk = \"\"\n                        Object.keys(row).map((v:string) => {\n                            if(v.indexOf(\"_id\") !== -1){\n                                pk = v\n                            }\n                        })\n\n                            pk = 'cm_id'\n\n                        return row[pk]\n\n                    }\n                }).filter((v) => v)\n            })\n\n        if(res) {\n            if(res.status === 200){\n                Notiflix.Report.success('삭제 성공!', '', '확인', () => {\n                    if(Number(page) === 1){\n                        LoadBasic(1).then(() => {\n                            Notiflix.Loading.remove()\n                        })\n                    }else{\n                        if(keyword){\n                            router.push(`/mes/basic/customer/model?page=1&keyword=${keyword}&opt=${option}`)\n                        }else{\n                            router.push(`/mes/basic/customer/model?page=1`)\n                        }\n                    }\n                })\n            }\n        }\n    }\n\n    const LoadBasic = async (page?: number) => {\n        Notiflix.Loading.circle()\n        const res = await RequestMethod('get', `modelList`,{\n            path: {\n                page: (page || page !== 0) ? page : 1,\n                renderItem: 19,\n            }\n        })\n\n        if(res && res.status === 200){\n            if(res.results.totalPages < page){\n                LoadBasic(page - 1).then(() => {\n                    Notiflix.Loading.remove()\n                })\n            }else{\n                setPageInfo({\n                    ...pageInfo,\n                    page: res.results.page,\n                    total: res.results.totalPages\n                })\n                cleanUpData(res)\n            }\n        }else if (res.state === 401) {\n            Notiflix.Report.failure('불러올 수 없습니다.', '권한이 없습니다.', '확인', () => {\n                router.back()\n            })\n        }\n    }\n\n    const SearchBasic = async (keyword: any, option: number, isPaging?: string | string[] | number) => {\n        Notiflix.Loading.circle()\n        if(!isPaging){\n            setOptionIndex(option)\n        }\n\n        const res = await RequestMethod('get', `modelSearch`,{\n            path: {\n                page: isPaging ?? 1,\n                renderItem: 18,\n            },\n            params: {\n                keyword: keyword ?? '',\n                opt: option ?? 0\n            }\n        })\n\n        if(res && res.status === 200){\n            setPageInfo({\n                ...pageInfo,\n                page: res.results.page,\n                total: res.results.totalPages\n            })\n            cleanUpData(res)\n        }\n    }\n    const cleanUpBasicData = (res:any) => {\n        let tmpRow = res.data.results.info_list;\n\n        let tmpBasicRow = tmpRow.map((row: any, index: number) => {\n            let appendAdditional: any = {}\n\n            row.additional && row.additional.map((v: any) => {\n                appendAdditional = {\n                    ...appendAdditional,\n                    [v.title]: v.value\n\n                }\n            })\n            let random_id = Math.random()*1000;\n            return {\n                cm_id:row.cm_id,\n                customer: row.customer.name,\n                customer_id: row.customer.name,\n                customer_idPK: row.customer.customer_id,\n                customerPK: row.customer.customer_id,\n                model:row.model,\n                crn:row.customer.crn,\n                ...appendAdditional,\n                id: `model_${random_id}`,\n\n            }\n        })\n        setBasicRow([...tmpBasicRow])\n    }\n\n    const cleanUpData = (res: any) => {\n        let tmpColumn = columnlist[\"model\"];\n        let tmpRow = []\n        tmpColumn = tmpColumn.map((column: any) => {\n            let menuData: object | undefined;\n            res.results.menus && res.results.menus.map((menu: any) => {\n                if(menu.colName === column.key){\n                    menuData = {\n                        id: menu.id,\n                        name: menu.title,\n                        width: menu.width,\n                        tab:menu.tab,\n                        unit:menu.unit,\n                        moddable: !menu.moddable\n                    }\n                } else if(menu.colName === 'id' && column.key === 'tmpId'){\n                    menuData = {\n                        id: menu.id,\n                        name: menu.title,\n                        width: menu.width,\n                        tab:menu.tab,\n                        unit:menu.unit,\n                        moddable: !menu.moddable\n                    }\n                }\n            })\n\n            if(menuData){\n                return {\n                    ...column,\n                    ...menuData\n                }\n            }\n        }).filter((v:any) => v)\n\n        let additionalMenus = res.results.menus ? res.results.menus.map((menu:any) => {\n            if(menu.colName === null){\n                return {\n                    id: menu.id,\n                    name: menu.title,\n                    width: menu.width,\n                    key: menu.title,\n                    editor: TextEditor,\n                    type: 'additional',\n                    unit: menu.unit\n                }\n            }\n        }).filter((v: any) => v) : []\n\n\n        tmpRow = res.results.info_list\n\n            loadAllSelectItems( [\n                ...tmpColumn,\n                ...additionalMenus\n            ] )\n\n\n        let selectKey = \"\"\n        let additionalData: any[] = []\n        tmpColumn.map((v: any) => {\n            if(v.selectList){\n                selectKey = v.key\n            }\n        })\n\n        additionalMenus.map((v: any) => {\n            if(v.type === 'additional'){\n                additionalData.push(v.key)\n            }\n        })\n\n        let pk = \"\";\n        Object.keys(tmpRow).map((v) => {\n            if(v.indexOf('_id') !== -1){\n                pk = v\n            }\n        })\n\n\n        let tmpBasicRow = tmpRow.map((row: any, index: number) => {\n            let appendAdditional: any = {}\n\n            row.additional && row.additional.map((v: any) => {\n                appendAdditional = {\n                    ...appendAdditional,\n                    [v.title]: v.value\n\n                }\n            })\n            let random_id = Math.random()*1000;\n            return {\n                cm_id:row.cm_id,\n                customer: row.customer.name,\n                customer_id: row.customer.name,\n                customer_idPK: row.customer.customer_id,\n                customerPK: row.customer.customer_id,\n                model:row.model,\n                crn:row.customer.crn,\n                ...appendAdditional,\n                id: `model_${random_id}`,\n\n            }\n        })\n\n        setBasicRow([...tmpBasicRow])\n    }\n\n    const downloadExcel = () => {\n        let tmpSelectList: boolean[] = []\n        basicRow.map(row => {\n            tmpSelectList.push(selectList.has(row.id))\n        })\n        excelDownload(column, basicRow, `model`, \"model\", tmpSelectList)\n    }\n\n    const onClickHeaderButton = (index: number) => {\n        switch(index){\n            case 0:\n                setExcelUploadOpen(true)\n                break;\n            case 1:\n                setExcelOpen(true)\n                break;\n            case 2:\n                router.push(`/mes/item/manage/model`)\n                break;\n            case 3:\n                    let items = {}\n\n                    column.map((value) => {\n                        if(value.selectList && value.selectList.length){\n                            if(value.key === 'customer') {\n                                items = {\n                                    ...value.selectList[0],\n                                    [value.key] : value.selectList[0].name,\n                                    [value.key+'PK'] : value.selectList[0].customer_id,//여기 봐야됨!\n                                    ...items,\n                                }\n                            }\n\n                        }\n\n                        if(value.key === 'seq') {\n                            items = {\n                                [value.key]: basicRow.length+1\n                            }\n                        }\n\n                        if(value.key === 'id') {\n                            items = {\n                                tmpId: \"\",\n                            }\n                        }\n\n                    })\n                    let random_id = Math.random()*1000;\n                    setBasicRow([\n                        {\n                            ...items,\n                            id: `model_${random_id}`,\n                            name: null,\n                            additional: [],\n                        },\n                        ...basicRow\n                    ])\n                break;\n            case 4:\n                SaveBasic()\n                break;\n            case 5:\n                Notiflix.Confirm.show(\"경고\",\"삭제하시겠습니까?\",\"확인\",\"취소\",\n                    ()=>{\n                        DeleteBasic()\n                    } ,\n                ()=>{},\n            )\n                break;\n\n        }\n    }\n\n    return (\n        <div style={{display: 'flex', }}>\n            <MenuNavigation pageType={'BASIC'} subType={1}/>\n            <div style={{paddingBottom: 40}}>\n                <ProfileHeader/>\n                <PageHeader\n                    isSearch\n                    searchKeyword={keyword}\n                    onChangeSearchKeyword={(keyword) => {\n                        if(keyword){\n                            router.push(`/mes/basic/customer/model?page=1&keyword=${keyword}&opt=${optionIndex}`)\n                        }else{\n                            router.push(`/mes/basic/customer/model?page=1&keyword=`)\n                        }\n                    }}\n                    searchOptionList={optionList}\n                    onChangeSearchOption={(option) => {\n                        setOptionIndex(option)\n                    }}\n                    optionIndex={optionIndex}\n                    title={\"고객사 모델 관리\"}\n                    buttons={\n                      ['엑셀로 등록','엑셀로 받기', '항목관리', '행 추가', '저장하기', '삭제']\n                    }\n                    buttonsOnclick={onClickHeaderButton}\n                />\n                <ExcelTable\n                    editable\n                    resizable\n                    headerList={[\n                        SelectColumn,\n                        ...column\n                    ]}\n                    row={basicRow}\n                    // setRow={setBasicRow}\n                    setRow={(e) => {\n                        let tmp: Set<any> = selectList\n                        e.map(v => {\n                            if(v.isChange) tmp.add(v.id)\n                        })\n                        setSelectList(tmp)\n                        setBasicRow(e)\n                    }}\n                    selectList={selectList}\n                    //@ts-ignore\n                    setSelectList={setSelectList}\n                    height={basicRow.length * 40 >= 40*18+56 ? 40*19 : basicRow.length * 40 + 56}\n                />\n                <PaginationComponent\n                  currentPage={pageInfo.page}\n                  totalPage={pageInfo.total}\n                  setPage={(page) => {\n                      if(keyword){\n                          router.push(`/mes/basic/customer/model?page=${page}&keyword=${keyword}&opt=${option}`)\n                      }else{\n                          router.push(`/mes/basic/customer/model?page=${page}`)\n                      }\n                  }}\n                />\n            </div>\n            <ExcelDownloadModal\n              isOpen={excelOpen}\n              column={column}\n              basicRow={basicRow}\n              filename={`고객사모델관리`}\n              sheetname={`고객사모델관리`}\n              selectList={selectList}\n              tab={'ROLE_BASE_08'}\n              setIsOpen={setExcelOpen}\n            />\n            <ExcelUploadModal isOpen={excelUploadOpen} setIsOpen={setExcelUploadOpen} tab={'ROLE_BASE_08'} cleanUpBasicData={cleanUpBasicData} />\n        </div>\n    );\n}\n\nexport const getServerSideProps = (ctx: NextPageContext) => {\n    return {\n        props: {\n            page: ctx.query.page ?? 1,\n            keyword: ctx.query.keyword ?? \"\",\n            option: ctx.query.opt ?? 0,\n        }\n    }\n}\n\n// BasicContainer.getInitialProps = async ({ query }) => {\n//     let { page, keyword, opt } = query\n//     if (typeof page === 'string')\n//         page = parseInt(page);\n//     if (typeof opt === 'string')\n//         opt = parseInt(opt);\n//     return { page, keyword, option: opt };\n// }\n\nexport default BasicContainer;\n"]},"metadata":{},"sourceType":"module"}