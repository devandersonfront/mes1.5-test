{"ast":null,"code":"var _jsxFileName = \"/Users/user/Desktop/sizl/mono_pop/packages/main/component/Modal/StockSearchModal.tsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport Modal from 'react-modal';\nimport { POINT_COLOR } from '../../common/configset'; //@ts-ignore\n\n//@ts-ignore\nimport IcX from '../../public/images/ic_x.png';\nimport ExcelTable from '../Excel/ExcelTable';\nimport { searchModalList } from '../../common/modalInit'; //@ts-ignore\n\nimport Search_icon from '../../public/images/btn_search.png';\nimport { RequestMethod } from '../../common/RequestFunctions'; //@ts-ignore\n\nimport Calendar_icon from \"../../public/images/calendar_icon_black.png\";\nimport Calendar from \"react-calendar\";\nimport moment from \"moment\";\n//@ts-ignore\nimport Notiflix from \"notiflix\"; //@ts-ignore\n\nimport { SelectColumn } from \"react-data-grid\";\n\n// const optionList = ['고객사명','대표자명','담당자명', '', '', '주소', '사업자 번호']\n//{column, row, onRowChange}: IProps\nconst StockSearchModal = ({\n  onDataLoadModal,\n  setOnDataLoadModal,\n  onChangeSelectDate,\n  setModalResult,\n  setState,\n  changeSelectMonth\n}) => {\n  const {\n    0: title,\n    1: setTitle\n  } = useState('고객사');\n  const {\n    0: optionIndex,\n    1: setOptionIndex\n  } = useState(0);\n  const {\n    0: keyword,\n    1: setKeyword\n  } = useState('');\n  const {\n    0: selectRow,\n    1: setSelectRow\n  } = useState();\n  const {\n    0: searchList,\n    1: setSearchList\n  } = useState([]);\n  const {\n    0: onCalendar,\n    1: setOnCalendar\n  } = useState(false);\n  const [selectDate, setSelectDate] = React.useState(moment(new Date()).format(\"yyyy.MM\"));\n  const {\n    0: selectDate_total,\n    1: setSelectDate_total\n  } = useState({\n    from: moment(new Date()).startOf(\"month\").format('YYYY-MM-DD'),\n    to: moment(new Date()).endOf(\"month\").format('YYYY-MM-DD')\n  });\n  const {\n    0: deleteSelect,\n    1: setDeleteSelect\n  } = useState([]);\n  useEffect(() => {\n    SearchBasic(keyword, 0).then(() => {\n      Notiflix.Loading.remove();\n    });\n  }, [selectDate_total]);\n\n  const changeRow = (row, key) => {\n    let tmpData = _objectSpread(_objectSpread({}, row), {}, {\n      name: row.name,\n      from: row.from,\n      to: row.to,\n      id: row.summary_id\n    });\n\n    return tmpData;\n  };\n\n  const SearchBasic = async (keyword, option) => {\n    Notiflix.Loading.circle();\n    setKeyword(keyword);\n    setOptionIndex(option);\n    const res = await RequestMethod('get', \"stockSummaryList\", {\n      path: {\n        page: 1,\n        renderItem: 19\n      },\n      params: {\n        keyword: keyword,\n        from: selectDate_total.from,\n        to: selectDate_total.to\n      }\n    });\n\n    if (res && res.status === 200) {\n      Notiflix.Loading.remove(300);\n      let searchList = res.results.info_list.map((row, index) => {\n        return changeRow(row);\n      });\n      setSearchList([...searchList]);\n    } else {\n      Notiflix.Loading.remove(3000);\n      Notiflix.Report.warning(\"에러가 발생하였습니다.\", \"관리자에게 문의하세요.\", \"확인\");\n    }\n  };\n\n  const DeleteSummaryList = async result => {\n    const res = await RequestMethod(\"delete\", \"stockSummaryDelete\", {\n      summaries: result\n    });\n\n    if (res && res.status === 200) {\n      Notiflix.Report.success(\"삭제되었습니다.\", \"\", \"확인\");\n      SearchBasic(keyword, 0);\n    }\n  };\n\n  return __jsx(Modal, {\n    isOpen: onDataLoadModal,\n    style: {\n      content: {\n        top: '50%',\n        left: '50%',\n        right: 'auto',\n        bottom: 'auto',\n        marginRight: '-50%',\n        transform: 'translate(-50%, -50%)',\n        padding: 0\n      },\n      overlay: {\n        background: 'rgba(0,0,0,.6)',\n        zIndex: 5\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    style: {\n      width: 888,\n      height: 480\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 17\n    }\n  }, __jsx(\"div\", {\n    style: {\n      marginTop: 24,\n      marginLeft: 16,\n      marginRight: 16,\n      display: 'flex',\n      justifyContent: 'space-between'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 21\n    }\n  }, __jsx(\"p\", {\n    style: {\n      color: 'black',\n      fontSize: 22,\n      fontWeight: 'bold',\n      margin: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 25\n    }\n  }, title, \" \\uAC80\\uC0C9\"), __jsx(\"div\", {\n    style: {\n      cursor: 'pointer'\n    },\n    onClick: () => {\n      setOnDataLoadModal(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 25\n    }\n  }, __jsx(\"img\", {\n    style: {\n      width: 20,\n      height: 20\n    },\n    src: IcX,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 29\n    }\n  }))), __jsx(\"div\", {\n    style: {\n      width: 856,\n      height: 32,\n      margin: '16px 0 16px 16px',\n      display: 'flex',\n      justifyContent: \"space-between\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 21\n    }\n  }, __jsx(\"div\", {\n    style: {\n      background: \"#B3B3B3\",\n      width: 215,\n      height: 32,\n      display: \"flex\",\n      justifyContent: \"space-between\",\n      alignItems: \"center\",\n      padding: \"0 10px\",\n      fontWeight: 550,\n      borderRadius: 6\n    },\n    onClick: () => {\n      setOnCalendar(!onCalendar);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 25\n    }\n  }, \"\\uAE30\\uAC04\\uC120\\uD0DD\", __jsx(\"p\", {\n    style: {\n      display: \"flex\",\n      alignItems: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 29\n    }\n  }, __jsx(SelectDateText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 33\n    }\n  }, selectDate), __jsx(\"img\", {\n    src: Calendar_icon,\n    style: {\n      width: 32,\n      height: 32,\n      fill: \"black\",\n      marginLeft: 6\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 33\n    }\n  })), onCalendar && __jsx(\"div\", {\n    style: {\n      position: \"absolute\",\n      top: 50,\n      zIndex: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 33\n    }\n  }, __jsx(Calendar, {\n    defaultView: \"year\",\n    value: new Date(new Date(selectDate)),\n    onClickMonth: e => {\n      //value={new Date(new Date(selectDate).getMonth())}\n      setSelectDate(moment(e).format(\"YYYY.MM\"));\n      setSelectDate_total({\n        from: moment(e).startOf(\"month\").format('YYYY-MM-DD'),\n        to: moment(e).endOf(\"month\").format('YYYY-MM-DD')\n      }); // onChangeSelectDate(moment(e).startOf(\"month\").format('YYYY-MM-DD'), moment(e).endOf(\"month\").format('YYYY-MM-DD'))\n      // onChangeSelectDate(moment(e).format(\"YYYY.MM\"));\n\n      setSelectRow(undefined);\n      setOnCalendar(false);\n    },\n    maxDate: new Date(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 37\n    }\n  }))), __jsx(Button, {\n    style: {},\n    onClick: () => {\n      let resultDelete = [];\n      deleteSelect.map(v => {\n        resultDelete.push(searchList[v].summary_id);\n      });\n      DeleteSummaryList(resultDelete);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 25\n    }\n  }, \"\\uC0AD\\uC81C\")), __jsx(\"div\", {\n    style: {\n      width: 856,\n      height: 32,\n      margin: '16px 0 16px 16px',\n      display: 'flex'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 21\n    }\n  }, __jsx(\"input\", {\n    value: keyword !== null && keyword !== void 0 ? keyword : \"\",\n    type: \"text\",\n    placeholder: \"\\uAC80\\uC0C9\\uC5B4\\uB97C \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694.\",\n    onChange: e => {\n      setKeyword(e.target.value);\n    },\n    onKeyDown: e => {\n      if (e.key === 'Enter') {\n        SearchBasic(keyword, optionIndex).then(() => {\n          Notiflix.Loading.remove();\n        });\n      }\n    },\n    style: {\n      width: \"825px\",\n      height: \"32px\",\n      paddingLeft: \"10px\",\n      border: \"0.5px solid #B3B3B3\",\n      backgroundColor: 'rgba(0,0,0,0)'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 25\n    }\n  }), __jsx(\"div\", {\n    style: {\n      background: \"#19B9DF\",\n      width: \"32px\",\n      height: \"32px\",\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      cursor: 'pointer'\n    },\n    onClick: () => {\n      SearchBasic(keyword, optionIndex).then(() => {\n        Notiflix.Loading.remove();\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 25\n    }\n  }, __jsx(\"img\", {\n    src: Search_icon,\n    style: {\n      width: \"16px\",\n      height: \"16px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 29\n    }\n  }))), __jsx(\"div\", {\n    style: {\n      padding: '0 16px 0 16px',\n      width: 856\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 21\n    }\n  }, __jsx(ExcelTable, {\n    headerList: [SelectColumn, ...searchModalList.stockSummary],\n    row: searchList !== null && searchList !== void 0 ? searchList : [],\n    setRow: () => {},\n    width: 856,\n    rowHeight: 32,\n    height: 268,\n    setSelectRow: e => {\n      setDeleteSelect([...deleteSelect, e]);\n      setSelectRow(e);\n    },\n    type: 'searchModal',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 25\n    }\n  })), __jsx(\"div\", {\n    style: {\n      height: 70,\n      display: 'flex',\n      alignItems: 'flex-end'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 21\n    }\n  }, __jsx(\"div\", {\n    onClick: () => {\n      setOnDataLoadModal(false);\n    },\n    style: {\n      width: 444,\n      height: 40,\n      backgroundColor: '#b3b3b3',\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 25\n    }\n  }, __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 29\n    }\n  }, \"\\uCDE8\\uC18C\")), __jsx(\"div\", {\n    onClick: () => {\n      if (selectRow !== undefined) {\n        setState(\"select\");\n        onChangeSelectDate(searchList[selectRow].from, searchList[selectRow].to);\n        setModalResult(searchList[selectRow]);\n        changeSelectMonth(selectDate);\n        setOnDataLoadModal(false);\n      } else {\n        Notiflix.Report.warning('선택한 데이터가 없습니다.', \"\", \"확인\");\n      }\n    },\n    style: {\n      width: 444,\n      height: 40,\n      backgroundColor: POINT_COLOR,\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 25\n    }\n  }, __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 29\n    }\n  }, \"\\uBD88\\uB7EC\\uC624\\uAE30\")))));\n};\n\nconst SearchModalWrapper = styled.div`\n  display: flex;\n  width: 100%;\n`;\nconst SelectDateText = styled.span`\n    width:70px;\n    height:32px;\n    display:flex;\n    justify-content:center;\n    align-items:center;\n    &:hover{\n        background:#cdcdcd;\n    }\n    cursor:pointer;\n`;\nconst Button = styled.button`\n    width:100px;\n    height:30px;\n    background:#b3b3b3;\n    font-size:16px;\n    font-weight:bold;\n    border:none;\n    cursor:pointer;\n    border-radius:6px;\n`;\nexport default StockSearchModal;","map":{"version":3,"sources":["/Users/user/Desktop/sizl/mono_pop/packages/main/component/Modal/StockSearchModal.tsx"],"names":["React","useEffect","useState","styled","Modal","POINT_COLOR","IcX","ExcelTable","searchModalList","Search_icon","RequestMethod","Calendar_icon","Calendar","moment","Notiflix","SelectColumn","StockSearchModal","onDataLoadModal","setOnDataLoadModal","onChangeSelectDate","setModalResult","setState","changeSelectMonth","title","setTitle","optionIndex","setOptionIndex","keyword","setKeyword","selectRow","setSelectRow","searchList","setSearchList","onCalendar","setOnCalendar","selectDate","setSelectDate","Date","format","selectDate_total","setSelectDate_total","from","startOf","to","endOf","deleteSelect","setDeleteSelect","SearchBasic","then","Loading","remove","changeRow","row","key","tmpData","name","id","summary_id","option","circle","res","path","page","renderItem","params","status","results","info_list","map","index","Report","warning","DeleteSummaryList","result","summaries","success","content","top","left","right","bottom","marginRight","transform","padding","overlay","background","zIndex","width","height","marginTop","marginLeft","display","justifyContent","color","fontSize","fontWeight","margin","cursor","alignItems","borderRadius","fill","position","e","undefined","resultDelete","v","push","target","value","paddingLeft","border","backgroundColor","stockSummary","SearchModalWrapper","div","SelectDateText","span","Button","button"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AAEA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAAQC,WAAR,QAA0B,wBAA1B,C,CACA;;AAEA;AACA,OAAOC,GAAP,MAAgB,8BAAhB;AACA,OAAOC,UAAP,MAAuB,qBAAvB;AACA,SAAQC,eAAR,QAA8B,wBAA9B,C,CACA;;AACA,OAAOC,WAAP,MAAwB,oCAAxB;AACA,SAAQC,aAAR,QAA4B,+BAA5B,C,CACA;;AACA,OAAOC,aAAP,MAA0B,6CAA1B;AACA,OAAOC,QAAP,MAAqB,gBAArB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AAGA;AACA,OAAOC,QAAP,MAAqB,UAArB,C,CACA;;AACA,SAAQC,YAAR,QAA2B,iBAA3B;;AAeA;AACA;AACA,MAAMC,gBAAgB,GAAG,CAAC;AAACC,EAAAA,eAAD;AAAkBC,EAAAA,kBAAlB;AAAsCC,EAAAA,kBAAtC;AAA0DC,EAAAA,cAA1D;AAA0EC,EAAAA,QAA1E;AAAoFC,EAAAA;AAApF,CAAD,KAAmH;AAExI,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBtB,QAAQ,CAAS,KAAT,CAAlC;AACA,QAAM;AAAA,OAACuB,WAAD;AAAA,OAAcC;AAAd,MAAgCxB,QAAQ,CAAS,CAAT,CAA9C;AACA,QAAM;AAAA,OAACyB,OAAD;AAAA,OAAUC;AAAV,MAAwB1B,QAAQ,CAAS,EAAT,CAAtC;AACA,QAAM;AAAA,OAAC2B,SAAD;AAAA,OAAYC;AAAZ,MAA4B5B,QAAQ,EAA1C;AACA,QAAM;AAAA,OAAC6B,UAAD;AAAA,OAAaC;AAAb,MAA8B9B,QAAQ,CAAQ,EAAR,CAA5C;AAEA,QAAM;AAAA,OAAC+B,UAAD;AAAA,OAAaC;AAAb,MAA8BhC,QAAQ,CAAU,KAAV,CAA5C;AAEA,QAAM,CAACiC,UAAD,EAAaC,aAAb,IAA6BpC,KAAK,CAACE,QAAN,CAAuBW,MAAM,CAAC,IAAIwB,IAAJ,EAAD,CAAN,CAAmBC,MAAnB,CAA0B,SAA1B,CAAvB,CAAnC;AAEA,QAAM;AAAA,OAACC,gBAAD;AAAA,OAAmBC;AAAnB,MAA0CtC,QAAQ,CAA+B;AACnFuC,IAAAA,IAAI,EAAE5B,MAAM,CAAC,IAAIwB,IAAJ,EAAD,CAAN,CAAmBK,OAAnB,CAA2B,OAA3B,EAAoCJ,MAApC,CAA2C,YAA3C,CAD6E;AAEnFK,IAAAA,EAAE,EAAE9B,MAAM,CAAC,IAAIwB,IAAJ,EAAD,CAAN,CAAmBO,KAAnB,CAAyB,OAAzB,EAAkCN,MAAlC,CAAyC,YAAzC;AAF+E,GAA/B,CAAxD;AAKA,QAAM;AAAA,OAACO,YAAD;AAAA,OAAeC;AAAf,MAAkC5C,QAAQ,CAAW,EAAX,CAAhD;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACX8C,IAAAA,WAAW,CAACpB,OAAD,EAAU,CAAV,CAAX,CAAwBqB,IAAxB,CAA6B,MAAM;AAC/BlC,MAAAA,QAAQ,CAACmC,OAAT,CAAiBC,MAAjB;AACH,KAFD;AAGJ,GAJQ,EAIN,CAACX,gBAAD,CAJM,CAAT;;AAMA,QAAMY,SAAS,GAAG,CAACC,GAAD,EAAWC,GAAX,KAA4B;AAC1C,QAAIC,OAAO,mCACJF,GADI;AAEPG,MAAAA,IAAI,EAAEH,GAAG,CAACG,IAFH;AAGPd,MAAAA,IAAI,EAAEW,GAAG,CAACX,IAHH;AAIPE,MAAAA,EAAE,EAAES,GAAG,CAACT,EAJD;AAKPa,MAAAA,EAAE,EAAEJ,GAAG,CAACK;AALD,MAAX;;AAQA,WAAOH,OAAP;AACH,GAVD;;AAYA,QAAMP,WAAW,GAAG,OAAOpB,OAAP,EAAqB+B,MAArB,KAAwC;AACxD5C,IAAAA,QAAQ,CAACmC,OAAT,CAAiBU,MAAjB;AACA/B,IAAAA,UAAU,CAACD,OAAD,CAAV;AACAD,IAAAA,cAAc,CAACgC,MAAD,CAAd;AACA,UAAME,GAAG,GAAG,MAAMlD,aAAa,CAAC,KAAD,EAAQ,kBAAR,EAA4B;AACvDmD,MAAAA,IAAI,EAAE;AACFC,QAAAA,IAAI,EAAC,CADH;AAEFC,QAAAA,UAAU,EAAC;AAFT,OADiD;AAKvDC,MAAAA,MAAM,EAAC;AACHrC,QAAAA,OAAO,EAACA,OADL;AAEHc,QAAAA,IAAI,EAACF,gBAAgB,CAACE,IAFnB;AAGHE,QAAAA,EAAE,EAACJ,gBAAgB,CAACI;AAHjB;AALgD,KAA5B,CAA/B;;AAYA,QAAGiB,GAAG,IAAIA,GAAG,CAACK,MAAJ,KAAe,GAAzB,EAA6B;AACzBnD,MAAAA,QAAQ,CAACmC,OAAT,CAAiBC,MAAjB,CAAwB,GAAxB;AACA,UAAInB,UAAU,GAAG6B,GAAG,CAACM,OAAJ,CAAYC,SAAZ,CAAsBC,GAAtB,CAA0B,CAAChB,GAAD,EAAUiB,KAAV,KAAyB;AAChE,eAAOlB,SAAS,CAACC,GAAD,CAAhB;AACH,OAFgB,CAAjB;AAGApB,MAAAA,aAAa,CAAC,CAAC,GAAGD,UAAJ,CAAD,CAAb;AACH,KAND,MAMK;AACDjB,MAAAA,QAAQ,CAACmC,OAAT,CAAiBC,MAAjB,CAAwB,IAAxB;AACApC,MAAAA,QAAQ,CAACwD,MAAT,CAAgBC,OAAhB,CAAwB,cAAxB,EAAuC,cAAvC,EAAuD,IAAvD;AACH;AACJ,GA1BD;;AA4BA,QAAMC,iBAAiB,GAAG,MAAMC,MAAN,IAA0B;AAChD,UAAMb,GAAG,GAAG,MAAMlD,aAAa,CAAC,QAAD,EAAW,oBAAX,EAAiC;AAC5DgE,MAAAA,SAAS,EAACD;AADkD,KAAjC,CAA/B;;AAIA,QAAGb,GAAG,IAAIA,GAAG,CAACK,MAAJ,KAAe,GAAzB,EAA6B;AACzBnD,MAAAA,QAAQ,CAACwD,MAAT,CAAgBK,OAAhB,CAAwB,UAAxB,EAAoC,EAApC,EAAwC,IAAxC;AACA5B,MAAAA,WAAW,CAACpB,OAAD,EAAU,CAAV,CAAX;AACH;AACJ,GATD;;AAWA,SACQ,MAAC,KAAD;AAAO,IAAA,MAAM,EAAEV,eAAf;AAAgC,IAAA,KAAK,EAAE;AACnC2D,MAAAA,OAAO,EAAE;AACLC,QAAAA,GAAG,EAAE,KADA;AAELC,QAAAA,IAAI,EAAE,KAFD;AAGLC,QAAAA,KAAK,EAAE,MAHF;AAILC,QAAAA,MAAM,EAAE,MAJH;AAKLC,QAAAA,WAAW,EAAE,MALR;AAMLC,QAAAA,SAAS,EAAE,uBANN;AAOLC,QAAAA,OAAO,EAAE;AAPJ,OAD0B;AAUnCC,MAAAA,OAAO,EAAE;AACLC,QAAAA,UAAU,EAAE,gBADP;AAELC,QAAAA,MAAM,EAAE;AAFH;AAV0B,KAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAeI;AAAK,IAAA,KAAK,EAAE;AACRC,MAAAA,KAAK,EAAE,GADC;AAERC,MAAAA,MAAM,EAAE;AAFA,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAII;AAAK,IAAA,KAAK,EAAE;AACRC,MAAAA,SAAS,EAAE,EADH;AAERC,MAAAA,UAAU,EAAE,EAFJ;AAGRT,MAAAA,WAAW,EAAE,EAHL;AAIRU,MAAAA,OAAO,EAAE,MAJD;AAKRC,MAAAA,cAAc,EAAE;AALR,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOI;AAAG,IAAA,KAAK,EAAE;AACNC,MAAAA,KAAK,EAAE,OADD;AAENC,MAAAA,QAAQ,EAAE,EAFJ;AAGNC,MAAAA,UAAU,EAAE,MAHN;AAINC,MAAAA,MAAM,EAAE;AAJF,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKIzE,KALJ,kBAPJ,EAaI;AAAK,IAAA,KAAK,EAAE;AAAC0E,MAAAA,MAAM,EAAE;AAAT,KAAZ;AAAiC,IAAA,OAAO,EAAE,MAAM;AAC5C/E,MAAAA,kBAAkB,CAAC,KAAD,CAAlB;AACH,KAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGI;AAAK,IAAA,KAAK,EAAE;AAACqE,MAAAA,KAAK,EAAE,EAAR;AAAYC,MAAAA,MAAM,EAAE;AAApB,KAAZ;AAAqC,IAAA,GAAG,EAAElF,GAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,CAbJ,CAJJ,EA2BI;AAAK,IAAA,KAAK,EAAE;AACRiF,MAAAA,KAAK,EAAE,GADC;AACIC,MAAAA,MAAM,EAAE,EADZ;AACgBQ,MAAAA,MAAM,EAAE,kBADxB;AAERL,MAAAA,OAAO,EAAE,MAFD;AAGRC,MAAAA,cAAc,EAAC;AAHP,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKI;AAAK,IAAA,KAAK,EAAE;AAACP,MAAAA,UAAU,EAAC,SAAZ;AAAuBE,MAAAA,KAAK,EAAC,GAA7B;AAAkCC,MAAAA,MAAM,EAAC,EAAzC;AAA6CG,MAAAA,OAAO,EAAC,MAArD;AAA8DC,MAAAA,cAAc,EAAC,eAA7E;AAA8FM,MAAAA,UAAU,EAAC,QAAzG;AAAmHf,MAAAA,OAAO,EAAC,QAA3H;AAAqIY,MAAAA,UAAU,EAAC,GAAhJ;AAAqJI,MAAAA,YAAY,EAAC;AAAlK,KAAZ;AAAmL,IAAA,OAAO,EAAE,MAAI;AAC5LjE,MAAAA,aAAa,CAAC,CAACD,UAAF,CAAb;AACH,KAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAII;AAAG,IAAA,KAAK,EAAE;AAAC0D,MAAAA,OAAO,EAAC,MAAT;AAAiBO,MAAAA,UAAU,EAAC;AAA5B,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiB/D,UAAjB,CADJ,EAEI;AAAK,IAAA,GAAG,EAAExB,aAAV;AAAyB,IAAA,KAAK,EAAE;AAAC4E,MAAAA,KAAK,EAAC,EAAP;AAAUC,MAAAA,MAAM,EAAC,EAAjB;AAAoBY,MAAAA,IAAI,EAAC,OAAzB;AAAkCV,MAAAA,UAAU,EAAC;AAA7C,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CAJJ,EASQzD,UAAU,IACV;AAAK,IAAA,KAAK,EAAE;AAACoE,MAAAA,QAAQ,EAAC,UAAV;AAAsBxB,MAAAA,GAAG,EAAC,EAA1B;AAA8BS,MAAAA,MAAM,EAAC;AAArC,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,QAAD;AAAU,IAAA,WAAW,EAAE,MAAvB;AAA+B,IAAA,KAAK,EAAE,IAAIjD,IAAJ,CAAS,IAAIA,IAAJ,CAASF,UAAT,CAAT,CAAtC;AAAsE,IAAA,YAAY,EAAGmE,CAAD,IAAK;AAAE;AACvFlE,MAAAA,aAAa,CAACvB,MAAM,CAACyF,CAAD,CAAN,CAAUhE,MAAV,CAAiB,SAAjB,CAAD,CAAb;AACAE,MAAAA,mBAAmB,CAAC;AAACC,QAAAA,IAAI,EAAC5B,MAAM,CAACyF,CAAD,CAAN,CAAU5D,OAAV,CAAkB,OAAlB,EAA2BJ,MAA3B,CAAkC,YAAlC,CAAN;AAAuDK,QAAAA,EAAE,EAAC9B,MAAM,CAACyF,CAAD,CAAN,CAAU1D,KAAV,CAAgB,OAAhB,EAAyBN,MAAzB,CAAgC,YAAhC;AAA1D,OAAD,CAAnB,CAFqF,CAGrF;AACA;;AACAR,MAAAA,YAAY,CAACyE,SAAD,CAAZ;AACArE,MAAAA,aAAa,CAAC,KAAD,CAAb;AACH,KAPD;AAQU,IAAA,OAAO,EAAE,IAAIG,IAAJ,EARnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAVR,CALJ,EA8BI,MAAC,MAAD;AAAQ,IAAA,KAAK,EAAE,EAAf;AAAmB,IAAA,OAAO,EAAE,MAAI;AAC5B,UAAImE,YAAY,GAAG,EAAnB;AACA3D,MAAAA,YAAY,CAACuB,GAAb,CAAkBqC,CAAD,IAAK;AAClBD,QAAAA,YAAY,CAACE,IAAb,CAAkB3E,UAAU,CAAC0E,CAAD,CAAV,CAAchD,UAAhC;AACH,OAFD;AAGAe,MAAAA,iBAAiB,CAACgC,YAAD,CAAjB;AACH,KAND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBA9BJ,CA3BJ,EAmEI;AAAK,IAAA,KAAK,EAAE;AACRjB,MAAAA,KAAK,EAAE,GADC;AACIC,MAAAA,MAAM,EAAE,EADZ;AACgBQ,MAAAA,MAAM,EAAE,kBADxB;AAERL,MAAAA,OAAO,EAAE;AAFD,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAII;AACI,IAAA,KAAK,EAAEhE,OAAF,aAAEA,OAAF,cAAEA,OAAF,GAAa,EADtB;AAEI,IAAA,IAAI,EAAE,MAFV;AAGI,IAAA,WAAW,EAAC,gEAHhB;AAII,IAAA,QAAQ,EAAG2E,CAAD,IAAO;AAAC1E,MAAAA,UAAU,CAAC0E,CAAC,CAACK,MAAF,CAASC,KAAV,CAAV;AAA2B,KAJjD;AAKI,IAAA,SAAS,EAAGN,CAAD,IAAO;AACd,UAAGA,CAAC,CAACjD,GAAF,KAAU,OAAb,EAAqB;AACjBN,QAAAA,WAAW,CAACpB,OAAD,EAAUF,WAAV,CAAX,CAAkCuB,IAAlC,CAAuC,MAAM;AACzClC,UAAAA,QAAQ,CAACmC,OAAT,CAAiBC,MAAjB;AACH,SAFD;AAGH;AACJ,KAXL;AAYI,IAAA,KAAK,EAAE;AACHqC,MAAAA,KAAK,EAAC,OADH;AAEHC,MAAAA,MAAM,EAAC,MAFJ;AAGHqB,MAAAA,WAAW,EAAC,MAHT;AAIHC,MAAAA,MAAM,EAAC,qBAJJ;AAKHC,MAAAA,eAAe,EAAE;AALd,KAZX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,EAwBI;AACI,IAAA,KAAK,EAAE;AAAC1B,MAAAA,UAAU,EAAC,SAAZ;AAAuBE,MAAAA,KAAK,EAAC,MAA7B;AAAoCC,MAAAA,MAAM,EAAC,MAA3C;AAAkDG,MAAAA,OAAO,EAAC,MAA1D;AAAiEC,MAAAA,cAAc,EAAC,QAAhF;AAAyFM,MAAAA,UAAU,EAAC,QAApG;AAA8GD,MAAAA,MAAM,EAAE;AAAtH,KADX;AAEI,IAAA,OAAO,EAAE,MAAM;AACXlD,MAAAA,WAAW,CAACpB,OAAD,EAAUF,WAAV,CAAX,CAAkCuB,IAAlC,CAAuC,MAAM;AACzClC,QAAAA,QAAQ,CAACmC,OAAT,CAAiBC,MAAjB;AACH,OAFD;AAGH,KANL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQI;AAAK,IAAA,GAAG,EAAEzC,WAAV;AAAuB,IAAA,KAAK,EAAE;AAAC8E,MAAAA,KAAK,EAAC,MAAP;AAAcC,MAAAA,MAAM,EAAC;AAArB,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARJ,CAxBJ,CAnEJ,EAsGI;AAAK,IAAA,KAAK,EAAE;AAACL,MAAAA,OAAO,EAAE,eAAV;AAA2BI,MAAAA,KAAK,EAAE;AAAlC,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,UAAD;AACI,IAAA,UAAU,EAAE,CACRxE,YADQ,EAER,GAAGP,eAAe,CAACwG,YAFX,CADhB;AAKI,IAAA,GAAG,EAAEjF,UAAF,aAAEA,UAAF,cAAEA,UAAF,GAAgB,EALvB;AAMI,IAAA,MAAM,EAAE,MAAM,CAAE,CANpB;AAOI,IAAA,KAAK,EAAE,GAPX;AAQI,IAAA,SAAS,EAAE,EARf;AASI,IAAA,MAAM,EAAE,GATZ;AAUI,IAAA,YAAY,EAAGuE,CAAD,IAAO;AACjBxD,MAAAA,eAAe,CAAC,CAAC,GAAGD,YAAJ,EAAkByD,CAAlB,CAAD,CAAf;AACAxE,MAAAA,YAAY,CAACwE,CAAD,CAAZ;AACH,KAbL;AAcI,IAAA,IAAI,EAAE,aAdV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAtGJ,EAwHI;AAAK,IAAA,KAAK,EAAE;AAAEd,MAAAA,MAAM,EAAE,EAAV;AAAcG,MAAAA,OAAO,EAAE,MAAvB;AAA+BO,MAAAA,UAAU,EAAE;AAA3C,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AACI,IAAA,OAAO,EAAE,MAAM;AACXhF,MAAAA,kBAAkB,CAAC,KAAD,CAAlB;AACH,KAHL;AAII,IAAA,KAAK,EAAE;AAACqE,MAAAA,KAAK,EAAE,GAAR;AAAaC,MAAAA,MAAM,EAAE,EAArB;AAAyBuB,MAAAA,eAAe,EAAE,SAA1C;AAAqDpB,MAAAA,OAAO,EAAE,MAA9D;AAAsEC,MAAAA,cAAc,EAAE,QAAtF;AAAgGM,MAAAA,UAAU,EAAE;AAA5G,KAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBANJ,CADJ,EASI;AACI,IAAA,OAAO,EAAE,MAAM;AACX,UAAGrE,SAAS,KAAK0E,SAAjB,EAA2B;AACvBlF,QAAAA,QAAQ,CAAC,QAAD,CAAR;AACAF,QAAAA,kBAAkB,CAACY,UAAU,CAACF,SAAD,CAAV,CAAsBY,IAAvB,EAA6BV,UAAU,CAACF,SAAD,CAAV,CAAsBc,EAAnD,CAAlB;AACAvB,QAAAA,cAAc,CAACW,UAAU,CAACF,SAAD,CAAX,CAAd;AACAP,QAAAA,iBAAiB,CAACa,UAAD,CAAjB;AACAjB,QAAAA,kBAAkB,CAAC,KAAD,CAAlB;AACH,OAND,MAMK;AACDJ,QAAAA,QAAQ,CAACwD,MAAT,CAAgBC,OAAhB,CAAwB,gBAAxB,EAAyC,EAAzC,EAA4C,IAA5C;AACH;AACJ,KAXL;AAYI,IAAA,KAAK,EAAE;AAACgB,MAAAA,KAAK,EAAE,GAAR;AAAaC,MAAAA,MAAM,EAAE,EAArB;AAAyBuB,MAAAA,eAAe,EAAE1G,WAA1C;AAAuDsF,MAAAA,OAAO,EAAE,MAAhE;AAAwEC,MAAAA,cAAc,EAAE,QAAxF;AAAkGM,MAAAA,UAAU,EAAE;AAA9G,KAZX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAcI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAdJ,CATJ,CAxHJ,CAfJ,CADR;AAqKH,CAjPD;;AAmPA,MAAMe,kBAAkB,GAAG9G,MAAM,CAAC+G,GAAI;AACtC;AACA;AACA,CAHA;AAKA,MAAMC,cAAc,GAAGhH,MAAM,CAACiH,IAAK;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAVA;AAYA,MAAMC,MAAM,GAAGlH,MAAM,CAACmH,MAAO;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CATA;AAWA,eAAetG,gBAAf","sourcesContent":["import React, {useEffect, useState} from 'react'\nimport {IExcelHeaderType} from '../../common/@types/type'\nimport styled from 'styled-components'\nimport Modal from 'react-modal'\nimport {POINT_COLOR} from '../../common/configset'\n//@ts-ignore\nimport IcSearchButton from '../../public/images/ic_search.png'\n//@ts-ignore\nimport IcX from '../../public/images/ic_x.png'\nimport ExcelTable from '../Excel/ExcelTable'\nimport {searchModalList} from '../../common/modalInit'\n//@ts-ignore\nimport Search_icon from '../../public/images/btn_search.png'\nimport {RequestMethod} from '../../common/RequestFunctions'\n//@ts-ignore\nimport Calendar_icon from \"../../public/images/calendar_icon_black.png\";\nimport Calendar from \"react-calendar\";\nimport moment from \"moment\";\nimport MonthSelectCalendar from \"../Header/MonthSelectCalendar\";\n\n//@ts-ignore\nimport Notiflix from \"notiflix\";\n//@ts-ignore\nimport {SelectColumn} from \"react-data-grid\";\n\n\ninterface IProps {\n    // column: IExcelHeaderType\n    // row: any\n    // onRowChange: (e: any) => void\n    onDataLoadModal:boolean\n    setOnDataLoadModal:(value:boolean) => void\n    onChangeSelectDate?:(from:string, to:string) => void\n    setModalResult?:(value:any) => void\n    setState?:(value:\"local\" | \"select\") => void\n    changeSelectMonth?:(value:string) => void\n}\n\n// const optionList = ['고객사명','대표자명','담당자명', '', '', '주소', '사업자 번호']\n//{column, row, onRowChange}: IProps\nconst StockSearchModal = ({onDataLoadModal, setOnDataLoadModal, onChangeSelectDate, setModalResult, setState, changeSelectMonth}:IProps) => {\n\n    const [title, setTitle] = useState<string>('고객사')\n    const [optionIndex, setOptionIndex] = useState<number>(0)\n    const [keyword, setKeyword] = useState<string>('')\n    const [selectRow, setSelectRow] = useState<number>()\n    const [searchList, setSearchList] = useState<any[]>([])\n\n    const [onCalendar, setOnCalendar] = useState<boolean>(false);\n\n    const [selectDate, setSelectDate]= React.useState<string>(moment(new Date()).format(\"yyyy.MM\"));\n\n    const [selectDate_total, setSelectDate_total] = useState<{ from: string, to: string }>({\n        from: moment(new Date()).startOf(\"month\").format('YYYY-MM-DD'),\n        to: moment(new Date()).endOf(\"month\").format('YYYY-MM-DD')\n    })\n\n    const [deleteSelect, setDeleteSelect] = useState<number[]>([]);\n\n    useEffect(() => {\n         SearchBasic(keyword, 0).then(() => {\n             Notiflix.Loading.remove()\n         })\n    }, [selectDate_total])\n\n    const changeRow = (row: any, key?: string) => {\n        let tmpData = {\n            ...row,\n            name: row.name,\n            from: row.from,\n            to: row.to,\n            id: row.summary_id\n        }\n\n        return tmpData\n    }\n\n    const SearchBasic = async (keyword: any, option: number) => {\n        Notiflix.Loading.circle()\n        setKeyword(keyword)\n        setOptionIndex(option)\n        const res = await RequestMethod('get', \"stockSummaryList\", {\n            path: {\n                page:1,\n                renderItem:19\n            },\n            params:{\n                keyword:keyword,\n                from:selectDate_total.from,\n                to:selectDate_total.to,\n            }\n        });\n\n        if(res && res.status === 200){\n            Notiflix.Loading.remove(300);\n            let searchList = res.results.info_list.map((row:any, index:number)=>{\n                return changeRow(row);\n            })\n            setSearchList([...searchList])\n        }else{\n            Notiflix.Loading.remove(3000);\n            Notiflix.Report.warning(\"에러가 발생하였습니다.\",\"관리자에게 문의하세요.\", \"확인\");\n        }\n    }\n\n    const DeleteSummaryList = async(result:number[]) => {\n        const res = await RequestMethod(\"delete\", \"stockSummaryDelete\", {\n            summaries:result\n        })\n\n        if(res && res.status === 200){\n            Notiflix.Report.success(\"삭제되었습니다.\", \"\", \"확인\");\n            SearchBasic(keyword, 0)\n        }\n    }\n\n    return (\n            <Modal isOpen={onDataLoadModal} style={{\n                content: {\n                    top: '50%',\n                    left: '50%',\n                    right: 'auto',\n                    bottom: 'auto',\n                    marginRight: '-50%',\n                    transform: 'translate(-50%, -50%)',\n                    padding: 0\n                },\n                overlay: {\n                    background: 'rgba(0,0,0,.6)',\n                    zIndex: 5\n                }\n            }}>\n                <div style={{\n                    width: 888,\n                    height: 480\n                }}>\n                    <div style={{\n                        marginTop: 24,\n                        marginLeft: 16,\n                        marginRight: 16,\n                        display: 'flex',\n                        justifyContent: 'space-between'\n                    }}>\n                        <p style={{\n                            color: 'black',\n                            fontSize: 22,\n                            fontWeight: 'bold',\n                            margin: 0,\n                        }}>{title} 검색</p>\n                        <div style={{cursor: 'pointer'}} onClick={() => {\n                            setOnDataLoadModal(false)\n                        }}>\n                            <img style={{width: 20, height: 20}} src={IcX}/>\n                        </div>\n                    </div>\n                    {/*<div style={{margin:16}}>*/}\n                    {/*    <MonthSelectCalendar selectDate={selectDate} setSelectDate={setSelectDate} onChangeSelectDate={onChangeSelectDate} setState={setState} />*/}\n                    {/*</div>*/}\n\n                    <div style={{\n                        width: 856, height: 32, margin: '16px 0 16px 16px',\n                        display: 'flex',\n                        justifyContent:\"space-between\"\n                    }}>\n                        <div style={{background:\"#B3B3B3\", width:215, height:32, display:\"flex\",  justifyContent:\"space-between\", alignItems:\"center\", padding:\"0 10px\", fontWeight:550, borderRadius:6 }} onClick={()=>{\n                            setOnCalendar(!onCalendar);\n                        }}>\n                            기간선택\n                            <p style={{display:\"flex\", alignItems:\"center\"}}>\n                                <SelectDateText>{selectDate}</SelectDateText>\n                                <img src={Calendar_icon} style={{width:32,height:32,fill:\"black\", marginLeft:6}}/>\n                            </p>\n                            {\n                                onCalendar &&\n                                <div style={{position:\"absolute\", top:50, zIndex:10}}>\n                                    <Calendar defaultView={\"year\"} value={new Date(new Date(selectDate))} onClickMonth={(e)=>{ //value={new Date(new Date(selectDate).getMonth())}\n                                        setSelectDate(moment(e).format(\"YYYY.MM\"));\n                                        setSelectDate_total({from:moment(e).startOf(\"month\").format('YYYY-MM-DD'), to:moment(e).endOf(\"month\").format('YYYY-MM-DD')})\n                                        // onChangeSelectDate(moment(e).startOf(\"month\").format('YYYY-MM-DD'), moment(e).endOf(\"month\").format('YYYY-MM-DD'))\n                                        // onChangeSelectDate(moment(e).format(\"YYYY.MM\"));\n                                        setSelectRow(undefined);\n                                        setOnCalendar(false);\n                                    }}\n                                              maxDate={new Date()}\n                                    />\n                                </div>\n                            }\n                        </div>\n\n                        <Button style={{}} onClick={()=>{\n                            let resultDelete = [];\n                            deleteSelect.map((v)=>{\n                                resultDelete.push(searchList[v].summary_id)\n                            })\n                            DeleteSummaryList(resultDelete);\n                        }}>삭제</Button>\n\n                    </div>\n\n                    <div style={{\n                        width: 856, height: 32, margin: '16px 0 16px 16px',\n                        display: 'flex'\n                    }}>\n                        <input\n                            value={keyword ?? \"\"}\n                            type={\"text\"}\n                            placeholder=\"검색어를 입력해주세요.\"\n                            onChange={(e) => {setKeyword(e.target.value)}}\n                            onKeyDown={(e) => {\n                                if(e.key === 'Enter'){\n                                    SearchBasic(keyword, optionIndex).then(() => {\n                                        Notiflix.Loading.remove()\n                                    })\n                                }\n                            }}\n                            style={{\n                                width:\"825px\",\n                                height:\"32px\",\n                                paddingLeft:\"10px\",\n                                border:\"0.5px solid #B3B3B3\",\n                                backgroundColor: 'rgba(0,0,0,0)'\n                            }}\n                        />\n                        <div\n                            style={{background:\"#19B9DF\", width:\"32px\",height:\"32px\",display:\"flex\",justifyContent:\"center\",alignItems:\"center\", cursor: 'pointer'}}\n                            onClick={() => {\n                                SearchBasic(keyword, optionIndex).then(() => {\n                                    Notiflix.Loading.remove()\n                                })\n                            }}\n                        >\n                            <img src={Search_icon} style={{width:\"16px\",height:\"16px\"}} />\n                        </div>\n                    </div>\n                    <div style={{padding: '0 16px 0 16px', width: 856}}>\n                        <ExcelTable\n                            headerList={[\n                                SelectColumn,\n                                ...searchModalList.stockSummary\n                            ]}\n                            row={searchList ?? []}\n                            setRow={() => {}}\n                            width={856}\n                            rowHeight={32}\n                            height={268}\n                            setSelectRow={(e) => {\n                                setDeleteSelect([...deleteSelect, e]);\n                                setSelectRow(e)\n                            }}\n                            type={'searchModal'}\n                        />\n                    </div>\n                    <div style={{ height: 70, display: 'flex', alignItems: 'flex-end'}}>\n                        <div\n                            onClick={() => {\n                                setOnDataLoadModal(false)\n                            }}\n                            style={{width: 444, height: 40, backgroundColor: '#b3b3b3', display: 'flex', justifyContent: 'center', alignItems: 'center'}}\n                        >\n                            <p>취소</p>\n                        </div>\n                        <div\n                            onClick={() => {\n                                if(selectRow !== undefined){\n                                    setState(\"select\");\n                                    onChangeSelectDate(searchList[selectRow].from, searchList[selectRow].to);\n                                    setModalResult(searchList[selectRow]);\n                                    changeSelectMonth(selectDate);\n                                    setOnDataLoadModal(false)\n                                }else{\n                                    Notiflix.Report.warning('선택한 데이터가 없습니다.',\"\",\"확인\");\n                                }\n                            }}\n                            style={{width: 444, height: 40, backgroundColor: POINT_COLOR, display: 'flex', justifyContent: 'center', alignItems: 'center'}}\n                        >\n                            <p>불러오기</p>\n                        </div>\n                    </div>\n                </div>\n            </Modal>\n    )\n}\n\nconst SearchModalWrapper = styled.div`\n  display: flex;\n  width: 100%;\n`\n\nconst SelectDateText = styled.span`\n    width:70px;\n    height:32px;\n    display:flex;\n    justify-content:center;\n    align-items:center;\n    &:hover{\n        background:#cdcdcd;\n    }\n    cursor:pointer;\n`;\n\nconst Button = styled.button`\n    width:100px;\n    height:30px;\n    background:#b3b3b3;\n    font-size:16px;\n    font-weight:bold;\n    border:none;\n    cursor:pointer;\n    border-radius:6px;\n`;\n\nexport default StockSearchModal;\n"]},"metadata":{},"sourceType":"module"}