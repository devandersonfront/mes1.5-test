{"ast":null,"code":"import { SF_ENDPOINT } from './configset';\nimport { requestApi } from './RequestFunctions';\n/**\n * uploadTempFile()\n * 파일을 임시 디비에 업로드 후 temp path를 리턴하는 매서드\n * @param {string} data BLOB 객체\n * @returns X\n */\n\nexport const uploadTempFile = async (data, isUrl) => {\n  const formData = new FormData();\n  formData.append('file', data);\n  const res = await requestApi('post', `${SF_ENDPOINT}/anonymous/upload`, formData);\n\n  if (res === false) {\n    return false;\n  } else {\n    if (res.status === 200) {\n      //res.status === 200 //res !== null\n      if (isUrl) {\n        return res; //const path: string = res.results; //const path: string = res[0];\n      } else {\n        const path = res.results; //const path: string = res.results; //const path: string = res[0];\n\n        return path;\n      }\n    } else {\n      alert('해당 파일 업로드 실패하였습니다.');\n      return false;\n    }\n  }\n};","map":{"version":3,"sources":["/Users/user/Desktop/sizl/mono_pop/packages/main/common/fileFuctuons.ts"],"names":["SF_ENDPOINT","requestApi","uploadTempFile","data","isUrl","formData","FormData","append","res","status","path","results","alert"],"mappings":"AAAA,SAAQA,WAAR,QAA4D,aAA5D;AACA,SAAQC,UAAR,QAAyB,oBAAzB;AAGA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,MAAMC,cAAc,GAAG,OAAOC,IAAP,EAAiBC,KAAjB,KAAqC;AAEjE,QAAMC,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;AACAD,EAAAA,QAAQ,CAACE,MAAT,CAAgB,MAAhB,EAAwBJ,IAAxB;AACA,QAAMK,GAAG,GAAG,MAAMP,UAAU,CAAC,MAAD,EAAS,GAAED,WAAY,mBAAvB,EAA2CK,QAA3C,CAA5B;;AAEA,MAAIG,GAAG,KAAK,KAAZ,EAAmB;AACjB,WAAO,KAAP;AACD,GAFD,MAEO;AACL,QAAIA,GAAG,CAACC,MAAJ,KAAe,GAAnB,EAAwB;AAAE;AACxB,UAAIL,KAAJ,EAAW;AACT,eAAOI,GAAP,CADS,CACE;AACZ,OAFD,MAEO;AACL,cAAME,IAAY,GAAGF,GAAG,CAACG,OAAzB,CADK,CAC4B;;AACjC,eAAOD,IAAP;AACD;AAEF,KARD,MAQO;AACLE,MAAAA,KAAK,CAAC,oBAAD,CAAL;AACA,aAAO,KAAP;AACD;AACF;AACF,CAtBM","sourcesContent":["import {SF_ENDPOINT, SF_ENDPOINT_RESOURCE, TOKEN_NAME} from './configset'\nimport {requestApi} from './RequestFunctions'\n\n\n/**\n * uploadTempFile()\n * 파일을 임시 디비에 업로드 후 temp path를 리턴하는 매서드\n * @param {string} data BLOB 객체\n * @returns X\n */\nexport const uploadTempFile = async (data:any, isUrl?: boolean) => {\n\n  const formData = new FormData()\n  formData.append('file', data)\n  const res = await requestApi('post',`${SF_ENDPOINT}/anonymous/upload`, formData)\n\n  if (res === false) {\n    return false\n  } else {\n    if (res.status === 200) { //res.status === 200 //res !== null\n      if (isUrl) {\n        return res //const path: string = res.results; //const path: string = res[0];\n      } else {\n        const path: string = res.results //const path: string = res.results; //const path: string = res[0];\n        return path\n      }\n\n    } else {\n      alert('해당 파일 업로드 실패하였습니다.')\n      return false\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}