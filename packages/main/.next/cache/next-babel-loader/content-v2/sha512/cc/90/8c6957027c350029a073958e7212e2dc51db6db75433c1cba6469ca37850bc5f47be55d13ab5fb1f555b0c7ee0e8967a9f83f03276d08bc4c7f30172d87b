{"ast":null,"code":"var _jsxFileName = \"/Users/user/Desktop/sizl/mono_pop/packages/mes/src/container/Record/MesRecordList.tsx\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport { ExcelTable, Header as PageHeader, columnlist, PaginationComponent, ExcelDownloadModal } from 'shared'; // @ts-ignore\n\nimport { SelectColumn } from 'react-data-grid';\nimport Notiflix from \"notiflix\";\nimport { useRouter } from 'next/router';\nimport moment from 'moment';\nlet now = moment().format('YYYY-MM-DD');\n\nconst MesRecordList = ({\n  page,\n  keyword,\n  option\n}) => {\n  const router = useRouter();\n  const {\n    0: excelOpen,\n    1: setExcelOpen\n  } = useState(false);\n  const {\n    0: basicRow,\n    1: setBasicRow\n  } = useState([{\n    order_num: '-',\n    operation_num: '20210401-01',\n    start: now,\n    end: now,\n    lot: '20210518-001',\n    worker: '잭슨',\n    code: 'SU-20210701-3',\n    product: 'SU900-1',\n    type: '완제품',\n    unit: 'EA',\n    process: '프레스',\n    goal: '50',\n    total: '0',\n    good: '0',\n    uph: '14'\n  }, {\n    order_num: '-',\n    operation_num: '20210401-02',\n    start: now,\n    end: now,\n    lot: '20210518-001',\n    worker: '토니',\n    code: 'SU-20210701-3',\n    product: 'SU900-1',\n    type: '반제품',\n    unit: 'EA',\n    process: '프레스',\n    goal: '50',\n    total: '0',\n    good: '0',\n    uph: '14'\n  }]);\n  const {\n    0: column,\n    1: setColumn\n  } = useState(columnlist[\"recordListV2\"]);\n  const {\n    0: selectList,\n    1: setSelectList\n  } = useState(new Set());\n  const {\n    0: optionList,\n    1: setOptionList\n  } = useState(['고객사명', '모델명', 'CODE', '품명', '금형명']);\n  const {\n    0: optionIndex,\n    1: setOptionIndex\n  } = useState(0);\n  const {\n    0: selectDate,\n    1: setSelectDate\n  } = useState({\n    from: moment(new Date()).startOf(\"month\").format('YYYY-MM-DD'),\n    to: moment(new Date()).endOf(\"month\").format('YYYY-MM-DD')\n  });\n  const {\n    0: pageInfo,\n    1: setPageInfo\n  } = useState({\n    page: 1,\n    total: 1\n  });\n  useEffect(() => {\n    Notiflix.Loading.remove();\n  }, []);\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }\n  }, __jsx(PageHeader, {\n    isSearch: true,\n    isCalendar: true,\n    searchKeyword: \"\",\n    searchOptionList: optionList,\n    calendarTitle: '종료일',\n    calendarType: 'period',\n    selectDate: selectDate //@ts-ignore\n    ,\n    setSelectDate: date => setSelectDate(date),\n    title: \"작업지시서 리스트\",\n    buttons: ['엑셀로 받기', '수정하기'],\n    title: \"작업 일보 리스트\",\n    buttons: ['엑셀로 받기', '수정 하기'],\n    buttonsOnclick: () => {} // onClickHeaderButton\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }), __jsx(ExcelTable, {\n    editable: true,\n    resizable: true,\n    headerList: [SelectColumn, ...column],\n    row: basicRow // setRow={setBasicRow}\n    ,\n    setRow: e => {\n      let tmp = selectList;\n      e.map(v => {\n        if (v.isChange) tmp.add(v.id);\n      });\n      setSelectList(tmp);\n      setBasicRow(e);\n    },\n    selectList: selectList //@ts-ignore\n    ,\n    setSelectList: setSelectList,\n    height: basicRow.length * 40 >= 40 * 18 + 56 ? 40 * 19 : basicRow.length * 40 + 56,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }\n  }), __jsx(PaginationComponent, {\n    currentPage: pageInfo.page,\n    totalPage: pageInfo.total,\n    setPage: page => {\n      if (keyword) {\n        router.push(`/mes/basic/mold?page=${page}&keyword=${keyword}&opt=${option}`);\n      } else {\n        router.push(`/mes/basic/mold?page=${page}`);\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }\n  }), __jsx(ExcelDownloadModal, {\n    isOpen: excelOpen,\n    column: column,\n    basicRow: basicRow,\n    filename: `금형기본정보`,\n    sheetname: `금형기본정보`,\n    selectList: selectList,\n    tab: 'ROLE_BASE_07',\n    setIsOpen: setExcelOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport const getServerSideProps = ctx => {\n  var _ctx$query$page, _ctx$query$keyword, _ctx$query$opt;\n\n  return {\n    props: {\n      page: (_ctx$query$page = ctx.query.page) !== null && _ctx$query$page !== void 0 ? _ctx$query$page : 1,\n      keyword: (_ctx$query$keyword = ctx.query.keyword) !== null && _ctx$query$keyword !== void 0 ? _ctx$query$keyword : \"\",\n      option: (_ctx$query$opt = ctx.query.opt) !== null && _ctx$query$opt !== void 0 ? _ctx$query$opt : 0\n    }\n  };\n};\nexport { MesRecordList };","map":{"version":3,"sources":["/Users/user/Desktop/sizl/mono_pop/packages/mes/src/container/Record/MesRecordList.tsx"],"names":["React","useEffect","useState","ExcelTable","Header","PageHeader","columnlist","PaginationComponent","ExcelDownloadModal","SelectColumn","Notiflix","useRouter","moment","now","format","MesRecordList","page","keyword","option","router","excelOpen","setExcelOpen","basicRow","setBasicRow","order_num","operation_num","start","end","lot","worker","code","product","type","unit","process","goal","total","good","uph","column","setColumn","selectList","setSelectList","Set","optionList","setOptionList","optionIndex","setOptionIndex","selectDate","setSelectDate","from","Date","startOf","to","endOf","pageInfo","setPageInfo","Loading","remove","date","e","tmp","map","v","isChange","add","id","length","push","getServerSideProps","ctx","props","query","opt"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SACEC,UADF,EAEEC,MAAM,IAAIC,UAFZ,EAIEC,UAJF,EASEC,mBATF,EAUEC,kBAVF,QAYO,QAZP,C,CAaA;;AACA,SAAQC,YAAR,QAA2B,iBAA3B;AACA,OAAOC,QAAP,MAAqB,UAArB;AACA,SAAQC,SAAR,QAAwB,aAAxB;AAGA,OAAOC,MAAP,MAAmB,QAAnB;AASA,IAAIC,GAAG,GAAGD,MAAM,GAAGE,MAAT,CAAgB,YAAhB,CAAV;;AAEA,MAAMC,aAAa,GAAG,CAAC;AAACC,EAAAA,IAAD;AAAOC,EAAAA,OAAP;AAAgBC,EAAAA;AAAhB,CAAD,KAAqC;AACzD,QAAMC,MAAM,GAAGR,SAAS,EAAxB;AAEA,QAAM;AAAA,OAACS,SAAD;AAAA,OAAYC;AAAZ,MAA4BnB,QAAQ,CAAU,KAAV,CAA1C;AAEA,QAAM;AAAA,OAACoB,QAAD;AAAA,OAAWC;AAAX,MAA0BrB,QAAQ,CAAa,CAAC;AACpDsB,IAAAA,SAAS,EAAE,GADyC;AACpCC,IAAAA,aAAa,EAAE,aADqB;AAEpDC,IAAAA,KAAK,EAAEb,GAF6C;AAExCc,IAAAA,GAAG,EAAEd,GAFmC;AAE9Be,IAAAA,GAAG,EAAE,cAFyB;AAETC,IAAAA,MAAM,EAAE,IAFC;AAGpDC,IAAAA,IAAI,EAAE,eAH8C;AAG7BC,IAAAA,OAAO,EAAE,SAHoB;AAGTC,IAAAA,IAAI,EAAE,KAHG;AAGIC,IAAAA,IAAI,EAAE,IAHV;AAGgBC,IAAAA,OAAO,EAAE,KAHzB;AAIpDC,IAAAA,IAAI,EAAE,IAJ8C;AAIxCC,IAAAA,KAAK,EAAE,GAJiC;AAI5BC,IAAAA,IAAI,EAAE,GAJsB;AAIjBC,IAAAA,GAAG,EAAE;AAJY,GAAD,EAKlD;AACDd,IAAAA,SAAS,EAAE,GADV;AACeC,IAAAA,aAAa,EAAE,aAD9B;AAEDC,IAAAA,KAAK,EAAEb,GAFN;AAEWc,IAAAA,GAAG,EAAEd,GAFhB;AAEqBe,IAAAA,GAAG,EAAE,cAF1B;AAE0CC,IAAAA,MAAM,EAAE,IAFlD;AAGDC,IAAAA,IAAI,EAAE,eAHL;AAGsBC,IAAAA,OAAO,EAAE,SAH/B;AAG0CC,IAAAA,IAAI,EAAE,KAHhD;AAGuDC,IAAAA,IAAI,EAAE,IAH7D;AAGmEC,IAAAA,OAAO,EAAE,KAH5E;AAIDC,IAAAA,IAAI,EAAE,IAJL;AAIWC,IAAAA,KAAK,EAAE,GAJlB;AAIuBC,IAAAA,IAAI,EAAE,GAJ7B;AAIkCC,IAAAA,GAAG,EAAE;AAJvC,GALkD,CAAb,CAAxC;AAWA,QAAM;AAAA,OAACC,MAAD;AAAA,OAASC;AAAT,MAAsBtC,QAAQ,CAA2BI,UAAU,CAAC,cAAD,CAArC,CAApC;AACA,QAAM;AAAA,OAACmC,UAAD;AAAA,OAAaC;AAAb,MAA8BxC,QAAQ,CAAc,IAAIyC,GAAJ,EAAd,CAA5C;AACA,QAAM;AAAA,OAACC,UAAD;AAAA,OAAaC;AAAb,MAA8B3C,QAAQ,CAAW,CAAC,MAAD,EAAQ,KAAR,EAAe,MAAf,EAAuB,IAAvB,EAA6B,KAA7B,CAAX,CAA5C;AACA,QAAM;AAAA,OAAC4C,WAAD;AAAA,OAAcC;AAAd,MAAgC7C,QAAQ,CAAS,CAAT,CAA9C;AACA,QAAM;AAAA,OAAC8C,UAAD;AAAA,OAAaC;AAAb,MAA8B/C,QAAQ,CAA2B;AACrEgD,IAAAA,IAAI,EAAEtC,MAAM,CAAC,IAAIuC,IAAJ,EAAD,CAAN,CAAmBC,OAAnB,CAA2B,OAA3B,EAAoCtC,MAApC,CAA2C,YAA3C,CAD+D;AAErEuC,IAAAA,EAAE,EAAGzC,MAAM,CAAC,IAAIuC,IAAJ,EAAD,CAAN,CAAmBG,KAAnB,CAAyB,OAAzB,EAAkCxC,MAAlC,CAAyC,YAAzC;AAFgE,GAA3B,CAA5C;AAKA,QAAM;AAAA,OAACyC,QAAD;AAAA,OAAWC;AAAX,MAA0BtD,QAAQ,CAAgC;AACtEc,IAAAA,IAAI,EAAE,CADgE;AAEtEoB,IAAAA,KAAK,EAAE;AAF+D,GAAhC,CAAxC;AAKAnC,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,QAAQ,CAAC+C,OAAT,CAAiBC,MAAjB;AACD,GAFQ,EAEN,EAFM,CAAT;AAIA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,UAAD;AACE,IAAA,QAAQ,MADV;AAEE,IAAA,UAAU,MAFZ;AAGE,IAAA,aAAa,EAAE,EAHjB;AAIE,IAAA,gBAAgB,EAAEd,UAJpB;AAKE,IAAA,aAAa,EAAE,KALjB;AAME,IAAA,YAAY,EAAE,QANhB;AAOE,IAAA,UAAU,EAAEI,UAPd,CAQE;AARF;AASE,IAAA,aAAa,EAAGW,IAAD,IAAUV,aAAa,CAACU,IAAD,CATxC;AAUE,IAAA,KAAK,EAAE,WAVT;AAWE,IAAA,OAAO,EACL,CAAC,QAAD,EAAW,MAAX,CAZJ;AAcE,IAAA,KAAK,EAAE,WAdT;AAeE,IAAA,OAAO,EACL,CAAC,QAAD,EAAW,OAAX,CAhBJ;AAkBE,IAAA,cAAc,EACZ,MAAM,CAAE,CADI,CAEZ;AApBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAwBE,MAAC,UAAD;AACE,IAAA,QAAQ,MADV;AAEE,IAAA,SAAS,MAFX;AAGE,IAAA,UAAU,EAAE,CACVlD,YADU,EAEV,GAAG8B,MAFO,CAHd;AAOE,IAAA,GAAG,EAAEjB,QAPP,CAQE;AARF;AASE,IAAA,MAAM,EAAGsC,CAAD,IAAO;AACb,UAAIC,GAAa,GAAGpB,UAApB;AACAmB,MAAAA,CAAC,CAACE,GAAF,CAAMC,CAAC,IAAI;AACT,YAAGA,CAAC,CAACC,QAAL,EAAeH,GAAG,CAACI,GAAJ,CAAQF,CAAC,CAACG,EAAV;AAChB,OAFD;AAGAxB,MAAAA,aAAa,CAACmB,GAAD,CAAb;AACAtC,MAAAA,WAAW,CAACqC,CAAD,CAAX;AACD,KAhBH;AAiBE,IAAA,UAAU,EAAEnB,UAjBd,CAkBE;AAlBF;AAmBE,IAAA,aAAa,EAAEC,aAnBjB;AAoBE,IAAA,MAAM,EAAEpB,QAAQ,CAAC6C,MAAT,GAAkB,EAAlB,IAAwB,KAAG,EAAH,GAAM,EAA9B,GAAmC,KAAG,EAAtC,GAA2C7C,QAAQ,CAAC6C,MAAT,GAAkB,EAAlB,GAAuB,EApB5E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAxBF,EA8CE,MAAC,mBAAD;AACE,IAAA,WAAW,EAAEZ,QAAQ,CAACvC,IADxB;AAEE,IAAA,SAAS,EAAEuC,QAAQ,CAACnB,KAFtB;AAGE,IAAA,OAAO,EAAGpB,IAAD,IAAU;AACjB,UAAGC,OAAH,EAAW;AACTE,QAAAA,MAAM,CAACiD,IAAP,CAAa,wBAAuBpD,IAAK,YAAWC,OAAQ,QAAOC,MAAO,EAA1E;AACD,OAFD,MAEK;AACHC,QAAAA,MAAM,CAACiD,IAAP,CAAa,wBAAuBpD,IAAK,EAAzC;AACD;AACF,KATH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA9CF,EAyDE,MAAC,kBAAD;AACE,IAAA,MAAM,EAAEI,SADV;AAEE,IAAA,MAAM,EAAEmB,MAFV;AAGE,IAAA,QAAQ,EAAEjB,QAHZ;AAIE,IAAA,QAAQ,EAAG,QAJb;AAKE,IAAA,SAAS,EAAG,QALd;AAME,IAAA,UAAU,EAAEmB,UANd;AAOE,IAAA,GAAG,EAAE,cAPP;AAQE,IAAA,SAAS,EAAEpB,YARb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAzDF,CADF;AAsED,CAxGD;;AA0GA,OAAO,MAAMgD,kBAAkB,GAAIC,GAAD,IAA0B;AAAA;;AAC1D,SAAO;AACLC,IAAAA,KAAK,EAAE;AACLvD,MAAAA,IAAI,qBAAEsD,GAAG,CAACE,KAAJ,CAAUxD,IAAZ,6DAAoB,CADnB;AAELC,MAAAA,OAAO,wBAAEqD,GAAG,CAACE,KAAJ,CAAUvD,OAAZ,mEAAuB,EAFzB;AAGLC,MAAAA,MAAM,oBAAEoD,GAAG,CAACE,KAAJ,CAAUC,GAAZ,2DAAmB;AAHpB;AADF,GAAP;AAOD,CARM;AAUP,SAAQ1D,aAAR","sourcesContent":["import React, {useEffect, useState} from 'react'\nimport {\n  ExcelTable,\n  Header as PageHeader,\n  RequestMethod,\n  columnlist,\n  MAX_VALUE,\n  DropDownEditor,\n  TextEditor,\n  excelDownload,\n  PaginationComponent,\n  ExcelDownloadModal,\n  IExcelHeaderType, IItemMenuType\n} from 'shared'\n// @ts-ignore\nimport {SelectColumn} from 'react-data-grid'\nimport Notiflix from \"notiflix\";\nimport {useRouter} from 'next/router'\nimport {loadAll} from 'react-cookies'\nimport {NextPageContext} from 'next'\nimport moment from 'moment'\n\ninterface IProps {\n  children?: any\n  page?: number\n  keyword?: string\n  option?: number\n}\n\nlet now = moment().format('YYYY-MM-DD')\n\nconst MesRecordList = ({page, keyword, option}: IProps) => {\n  const router = useRouter()\n\n  const [excelOpen, setExcelOpen] = useState<boolean>(false)\n\n  const [basicRow, setBasicRow] = useState<Array<any>>([{\n    order_num: '-', operation_num: '20210401-01',\n    start: now, end: now, lot: '20210518-001', worker: '잭슨',\n    code: 'SU-20210701-3', product: 'SU900-1', type: '완제품', unit: 'EA', process: '프레스',\n    goal: '50', total: '0', good: '0', uph: '14'\n  }, {\n    order_num: '-', operation_num: '20210401-02',\n    start: now, end: now, lot: '20210518-001', worker: '토니',\n    code: 'SU-20210701-3', product: 'SU900-1', type: '반제품', unit: 'EA', process: '프레스',\n    goal: '50', total: '0', good: '0', uph: '14'\n  },])\n  const [column, setColumn] = useState<Array<IExcelHeaderType>>( columnlist[\"recordListV2\"])\n  const [selectList, setSelectList] = useState<Set<number>>(new Set())\n  const [optionList, setOptionList] = useState<string[]>(['고객사명','모델명', 'CODE', '품명', '금형명'])\n  const [optionIndex, setOptionIndex] = useState<number>(0)\n  const [selectDate, setSelectDate] = useState<{from:string, to:string}>({\n    from: moment(new Date()).startOf(\"month\").format('YYYY-MM-DD') ,\n    to:  moment(new Date()).endOf(\"month\").format('YYYY-MM-DD')\n  });\n\n  const [pageInfo, setPageInfo] = useState<{page: number, total: number}>({\n    page: 1,\n    total: 1\n  })\n\n  useEffect(() => {\n    Notiflix.Loading.remove()\n  }, [])\n\n  return (\n    <div>\n      <PageHeader\n        isSearch\n        isCalendar\n        searchKeyword={\"\"}\n        searchOptionList={optionList}\n        calendarTitle={'종료일'}\n        calendarType={'period'}\n        selectDate={selectDate}\n        //@ts-ignore\n        setSelectDate={(date) => setSelectDate(date)}\n        title={\"작업지시서 리스트\"}\n        buttons={\n          ['엑셀로 받기', '수정하기']\n        }\n        title={\"작업 일보 리스트\"}\n        buttons={\n          ['엑셀로 받기', '수정 하기']\n        }\n        buttonsOnclick={\n          () => {}\n          // onClickHeaderButton\n        }\n      />\n      <ExcelTable\n        editable\n        resizable\n        headerList={[\n          SelectColumn,\n          ...column\n        ]}\n        row={basicRow}\n        // setRow={setBasicRow}\n        setRow={(e) => {\n          let tmp: Set<any> = selectList\n          e.map(v => {\n            if(v.isChange) tmp.add(v.id)\n          })\n          setSelectList(tmp)\n          setBasicRow(e)\n        }}\n        selectList={selectList}\n        //@ts-ignore\n        setSelectList={setSelectList}\n        height={basicRow.length * 40 >= 40*18+56 ? 40*19 : basicRow.length * 40 + 56}\n      />\n      <PaginationComponent\n        currentPage={pageInfo.page}\n        totalPage={pageInfo.total}\n        setPage={(page) => {\n          if(keyword){\n            router.push(`/mes/basic/mold?page=${page}&keyword=${keyword}&opt=${option}`)\n          }else{\n            router.push(`/mes/basic/mold?page=${page}`)\n          }\n        }}\n      />\n      <ExcelDownloadModal\n        isOpen={excelOpen}\n        column={column}\n        basicRow={basicRow}\n        filename={`금형기본정보`}\n        sheetname={`금형기본정보`}\n        selectList={selectList}\n        tab={'ROLE_BASE_07'}\n        setIsOpen={setExcelOpen}\n      />\n    </div>\n  );\n}\n\nexport const getServerSideProps = (ctx: NextPageContext) => {\n  return {\n    props: {\n      page: ctx.query.page ?? 1,\n      keyword: ctx.query.keyword ?? \"\",\n      option: ctx.query.opt ?? 0,\n    }\n  }\n}\n\nexport {MesRecordList};\n"]},"metadata":{},"sourceType":"module"}