{"ast":null,"code":"import _toConsumableArray from \"/Users/user/Desktop/sizl/mono_pop/node_modules/next/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"/Users/user/Desktop/sizl/mono_pop/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"/Users/user/Desktop/sizl/mono_pop/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/user/Desktop/sizl/mono_pop/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/Users/user/Desktop/sizl/mono_pop/packages/mes/src/container/Operation/MesOperationRegister.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\nimport { ExcelTable, Header as PageHeader, RequestMethod, columnlist, TextEditor, excelDownload, PaginationComponent, ExcelDownloadModal } from 'shared'; // @ts-ignore\n\nimport { SelectColumn } from 'react-data-grid';\nimport Notiflix from \"notiflix\";\nimport { useRouter } from 'next/router';\nimport moment from 'moment';\n\nvar MesOperationRegister = function MesOperationRegister(_ref) {\n  _s();\n\n  var page = _ref.page,\n      keyword = _ref.keyword,\n      option = _ref.option;\n  var router = useRouter();\n\n  var _useState = useState(false),\n      excelOpen = _useState[0],\n      setExcelOpen = _useState[1];\n\n  var _useState2 = useState([{\n    name: \"\",\n    id: \"\",\n    start_date: moment().format('YYYY-MM-DD'),\n    limit_date: moment().format('YYYY-MM-DD')\n  }]),\n      basicRow = _useState2[0],\n      setBasicRow = _useState2[1];\n\n  var _useState3 = useState(columnlist[\"operationRegisterV2\"]),\n      column = _useState3[0],\n      setColumn = _useState3[1];\n\n  var _useState4 = useState(new Set()),\n      selectList = _useState4[0],\n      setSelectList = _useState4[1];\n\n  var _useState5 = useState(['고객사명', '모델명', 'CODE', '품명', '금형명']),\n      optionList = _useState5[0],\n      setOptionList = _useState5[1];\n\n  var _useState6 = useState(0),\n      optionIndex = _useState6[0],\n      setOptionIndex = _useState6[1];\n\n  var _useState7 = useState({\n    page: 1,\n    total: 1\n  }),\n      pageInfo = _useState7[0],\n      setPageInfo = _useState7[1]; // useEffect(() => {\n  //   setOptionIndex(option)\n  //   if(keyword){\n  //     SearchBasic(keyword, option, page).then(() => {\n  //       Notiflix.Loading.remove()\n  //     })\n  //   }else{\n  //     LoadBasic(page).then(() => {\n  //       Notiflix.Loading.remove()\n  //     })\n  //   }\n  // }, [page, keyword, option])\n\n\n  var loadAllSelectItems = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(column) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function loadAllSelectItems(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var SaveBasic = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return RequestMethod('post', \"moldSave\", _defineProperty({}, 'molds', basicRow.map(function (row, i) {\n                if (selectList.has(row.id)) {\n                  var selectKey = [];\n                  var additional = [];\n                  column.map(function (v) {\n                    if (v.selectList) {\n                      selectKey.push(v.key);\n                    }\n\n                    if (v.type === 'additional') {\n                      additional.push(v);\n                    }\n                  });\n                  var selectData = {};\n                  Object.keys(row).map(function (v) {\n                    if (v.indexOf('PK') !== -1) {\n                      selectData = _objectSpread(_objectSpread({}, selectData), {}, _defineProperty({}, v.split('PK')[0], row[v]));\n                    }\n\n                    if (v === 'unitWeight') {\n                      selectData = _objectSpread(_objectSpread({}, selectData), {}, {\n                        unitWeight: Number(row['unitWeight'])\n                      });\n                    }\n\n                    if (v === 'tmpId') {\n                      selectData = _objectSpread(_objectSpread({}, selectData), {}, {\n                        id: row['tmpId']\n                      });\n                    }\n                  });\n                  return _objectSpread(_objectSpread(_objectSpread({}, row), selectData), {}, {\n                    additional: _toConsumableArray(additional.map(function (v) {\n                      if (row[v.name]) {\n                        return {\n                          id: v.id,\n                          title: v.name,\n                          value: row[v.name],\n                          unit: v.unit\n                        };\n                      }\n                    }).filter(function (v) {\n                      return v;\n                    }))\n                  });\n                }\n              }).filter(function (v) {\n                return v;\n              })));\n\n            case 2:\n              res = _context2.sent;\n\n              if (res) {\n                if (res.status === 200) {\n                  Notiflix.Report.success('저장되었습니다.', '', '확인');\n\n                  if (keyword) {\n                    SearchBasic(keyword, option, page).then(function () {\n                      Notiflix.Loading.remove();\n                    });\n                  } else {\n                    LoadBasic(page).then(function () {\n                      Notiflix.Loading.remove();\n                    });\n                  }\n                }\n              }\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function SaveBasic() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var LoadBasic = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(page) {\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              Notiflix.Loading.circle(); // const res = await RequestMethod('get', `moldList`,{\n              //   path: {\n              //     page: (page || page !== 0) ? page : 1,\n              //     renderItem: 18,\n              //   }\n              // })\n              //\n              // if(res && res.status === 200){\n              //   setPageInfo({\n              //     ...pageInfo,\n              //     page: res.results.page,\n              //     total: res.results.totalPages\n              //   })\n              //   cleanUpData(res)\n              // }else if (res.state === 401) {\n              //   Notiflix.Report.failure('불러올 수 없습니다.', '권한이 없습니다.', '확인', () => {\n              //     router.back()\n              //   })\n              // }\n\n              Notiflix.Loading.remove();\n\n            case 2:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function LoadBasic(_x2) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  var SearchBasic = /*#__PURE__*/function () {\n    var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(keyword, option, isPaging) {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              Notiflix.Loading.circle();\n\n              if (!isPaging) {\n                setOptionIndex(option);\n              }\n\n              _context4.next = 4;\n              return RequestMethod('get', \"moldSearch\", {\n                path: {\n                  page: isPaging !== null && isPaging !== void 0 ? isPaging : 1,\n                  renderItem: 18\n                },\n                params: {\n                  keyword: keyword !== null && keyword !== void 0 ? keyword : '',\n                  opt: option !== null && option !== void 0 ? option : 0\n                }\n              });\n\n            case 4:\n              res = _context4.sent;\n\n              if (res && res.status === 200) {\n                setPageInfo(_objectSpread(_objectSpread({}, pageInfo), {}, {\n                  page: res.results.page,\n                  total: res.results.totalPages\n                }));\n                cleanUpData(res);\n              }\n\n            case 6:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    return function SearchBasic(_x3, _x4, _x5) {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n\n  var cleanUpData = function cleanUpData(res) {\n    var tmpColumn = columnlist[\"mold\"];\n    var tmpRow = [];\n    tmpColumn = tmpColumn.map(function (column) {\n      var menuData;\n      res.results.menus && res.results.menus.map(function (menu) {\n        if (menu.colName === column.key) {\n          menuData = {\n            id: menu.id,\n            name: menu.title,\n            width: menu.width,\n            tab: menu.tab,\n            unit: menu.unit\n          };\n        } else if (menu.colName === 'id' && column.key === 'tmpId') {\n          menuData = {\n            id: menu.id,\n            name: menu.title,\n            width: menu.width,\n            tab: menu.tab,\n            unit: menu.unit\n          };\n        }\n      });\n\n      if (menuData) {\n        return _objectSpread(_objectSpread({}, column), menuData);\n      }\n    }).filter(function (v) {\n      return v;\n    });\n    var additionalMenus = res.results.menus ? res.results.menus.map(function (menu) {\n      if (menu.colName === null) {\n        return {\n          id: menu.id,\n          name: menu.title,\n          width: menu.width,\n          key: menu.title,\n          editor: TextEditor,\n          type: 'additional',\n          unit: menu.unit\n        };\n      }\n    }).filter(function (v) {\n      return v;\n    }) : [];\n    tmpRow = res.results.info_list;\n    loadAllSelectItems([].concat(_toConsumableArray(tmpColumn), _toConsumableArray(additionalMenus)));\n    var selectKey = \"\";\n    var additionalData = [];\n    tmpColumn.map(function (v) {\n      if (v.selectList) {\n        selectKey = v.key;\n      }\n    });\n    additionalMenus.map(function (v) {\n      if (v.type === 'additional') {\n        additionalData.push(v.key);\n      }\n    });\n    var pk = \"\";\n    Object.keys(tmpRow).map(function (v) {\n      if (v.indexOf('_id') !== -1) {\n        pk = v;\n      }\n    });\n    var tmpBasicRow = tmpRow.map(function (row, index) {\n      var appendAdditional = {};\n      row.additional && row.additional.map(function (v) {\n        appendAdditional = _objectSpread(_objectSpread({}, appendAdditional), {}, _defineProperty({}, v.title, v.value));\n      });\n      var random_id = Math.random() * 1000;\n      return _objectSpread(_objectSpread({\n        cm_id: index === 0 || row.ppd.seq === 1 ? row.product.raw_material.model.model : undefined,\n        cm_idPK: row.product.raw_material.model.cm_id,\n        mold_id: row.mold_id,\n        mold_name: row.ppd.mold_name,\n        limit: row.limit,\n        inspect: row.inspect,\n        current: row.current,\n        customer_id: index === 0 || row.ppd.seq === 1 ? row.product.raw_material.model.customer.name : undefined,\n        customer_idPK: row.product.raw_material.model.customer.customer_id,\n        code: index === 0 || row.ppd.seq === 1 ? row.product.raw_material.code : undefined,\n        name: index === 0 || row.ppd.seq === 1 ? row.product.raw_material.name : undefined,\n        seq: row.ppd.seq,\n        cavity: row.ppd.cavity,\n        spm: row.spm,\n        slideHeight: row.slideHeight,\n        process_id: row.ppd.process.name\n      }, appendAdditional), {}, {\n        id: \"mold_\".concat(random_id)\n      });\n    });\n    setBasicRow(_toConsumableArray(tmpBasicRow));\n  };\n\n  var downloadExcel = function downloadExcel() {\n    var tmpSelectList = [];\n    basicRow.map(function (row) {\n      tmpSelectList.push(selectList.has(row.id));\n    });\n    excelDownload(column, basicRow, \"mold\", \"mold\", tmpSelectList);\n  };\n\n  var onClickHeaderButton = function onClickHeaderButton(index) {\n    switch (index) {\n      case 0:\n        setExcelOpen(true);\n        break;\n\n      case 1:\n        router.push(\"/mes/item/manage/mold\");\n        break;\n\n      case 2:\n        SaveBasic();\n        break;\n    }\n  };\n\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 387,\n      columnNumber: 5\n    }\n  }, __jsx(PageHeader, {\n    title: \"작업지시서 등록\",\n    buttons: ['엑셀로 받기', '행추가', '저장하기', '삭제'],\n    buttonsOnclick: function buttonsOnclick() {} // onClickHeaderButton\n    ,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 388,\n      columnNumber: 7\n    }\n  }), __jsx(ExcelTable, {\n    editable: true,\n    resizable: true,\n    headerList: [SelectColumn].concat(_toConsumableArray(column)),\n    row: basicRow // setRow={setBasicRow}\n    ,\n    setRow: function setRow(e) {\n      var tmp = selectList;\n      e.map(function (v) {\n        if (v.isChange) tmp.add(v.id);\n      });\n      setSelectList(tmp);\n      setBasicRow(e);\n    },\n    selectList: selectList //@ts-ignore\n    ,\n    setSelectList: setSelectList,\n    height: basicRow.length * 40 >= 40 * 18 + 56 ? 40 * 19 : basicRow.length * 40 + 56,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 398,\n      columnNumber: 7\n    }\n  }), __jsx(PaginationComponent, {\n    currentPage: pageInfo.page,\n    totalPage: pageInfo.total,\n    setPage: function setPage(page) {\n      if (keyword) {\n        router.push(\"/mes/basic/mold?page=\".concat(page, \"&keyword=\").concat(keyword, \"&opt=\").concat(option));\n      } else {\n        router.push(\"/mes/basic/mold?page=\".concat(page));\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 420,\n      columnNumber: 7\n    }\n  }), __jsx(ExcelDownloadModal, {\n    isOpen: excelOpen,\n    column: column,\n    basicRow: basicRow,\n    filename: \"\\uAE08\\uD615\\uAE30\\uBCF8\\uC815\\uBCF4\",\n    sheetname: \"\\uAE08\\uD615\\uAE30\\uBCF8\\uC815\\uBCF4\",\n    selectList: selectList,\n    tab: 'ROLE_BASE_07',\n    setIsOpen: setExcelOpen,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 431,\n      columnNumber: 7\n    }\n  }));\n};\n\n_s(MesOperationRegister, \"WeEC26uXKV0KpfCySGI2cIkPAK0=\", false, function () {\n  return [useRouter];\n});\n\n_c = MesOperationRegister;\nexport var getServerSideProps = function getServerSideProps(ctx) {\n  var _ctx$query$page, _ctx$query$keyword, _ctx$query$opt;\n\n  return {\n    props: {\n      page: (_ctx$query$page = ctx.query.page) !== null && _ctx$query$page !== void 0 ? _ctx$query$page : 1,\n      keyword: (_ctx$query$keyword = ctx.query.keyword) !== null && _ctx$query$keyword !== void 0 ? _ctx$query$keyword : \"\",\n      option: (_ctx$query$opt = ctx.query.opt) !== null && _ctx$query$opt !== void 0 ? _ctx$query$opt : 0\n    }\n  };\n};\nexport { MesOperationRegister };\n\nvar _c;\n\n$RefreshReg$(_c, \"MesOperationRegister\");","map":{"version":3,"sources":["/Users/user/Desktop/sizl/mono_pop/packages/mes/src/container/Operation/MesOperationRegister.tsx"],"names":["React","useState","ExcelTable","Header","PageHeader","RequestMethod","columnlist","TextEditor","excelDownload","PaginationComponent","ExcelDownloadModal","SelectColumn","Notiflix","useRouter","moment","MesOperationRegister","page","keyword","option","router","excelOpen","setExcelOpen","name","id","start_date","format","limit_date","basicRow","setBasicRow","column","setColumn","Set","selectList","setSelectList","optionList","setOptionList","optionIndex","setOptionIndex","total","pageInfo","setPageInfo","loadAllSelectItems","SaveBasic","map","row","i","has","selectKey","additional","v","push","key","type","selectData","Object","keys","indexOf","split","unitWeight","Number","title","value","unit","filter","res","status","Report","success","SearchBasic","then","Loading","remove","LoadBasic","circle","isPaging","path","renderItem","params","opt","results","totalPages","cleanUpData","tmpColumn","tmpRow","menuData","menus","menu","colName","width","tab","additionalMenus","editor","info_list","additionalData","pk","tmpBasicRow","index","appendAdditional","random_id","Math","random","cm_id","ppd","seq","product","raw_material","model","undefined","cm_idPK","mold_id","mold_name","limit","inspect","current","customer_id","customer","customer_idPK","code","cavity","spm","slideHeight","process_id","process","downloadExcel","tmpSelectList","onClickHeaderButton","e","tmp","isChange","add","length","getServerSideProps","ctx","props","query"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react'\nimport {\n  ExcelTable,\n  Header as PageHeader,\n  RequestMethod,\n  columnlist,\n  MAX_VALUE,\n  DropDownEditor,\n  TextEditor,\n  excelDownload,\n  PaginationComponent,\n  ExcelDownloadModal,\n  IExcelHeaderType, IItemMenuType\n} from 'shared'\n// @ts-ignore\nimport {SelectColumn} from 'react-data-grid'\nimport Notiflix from \"notiflix\";\nimport {useRouter} from 'next/router'\nimport {loadAll} from 'react-cookies'\nimport {NextPageContext} from 'next'\nimport moment from 'moment'\n\ninterface IProps {\n  children?: any\n  page?: number\n  keyword?: string\n  option?: number\n}\n\nconst MesOperationRegister = ({page, keyword, option}: IProps) => {\n  const router = useRouter()\n\n  const [excelOpen, setExcelOpen] = useState<boolean>(false)\n\n  const [basicRow, setBasicRow] = useState<Array<any>>([{\n    name: \"\", id: \"\", start_date: moment().format('YYYY-MM-DD'),\n    limit_date: moment().format('YYYY-MM-DD')\n  }])\n  const [column, setColumn] = useState<Array<IExcelHeaderType>>( columnlist[\"operationRegisterV2\"])\n  const [selectList, setSelectList] = useState<Set<number>>(new Set())\n  const [optionList, setOptionList] = useState<string[]>(['고객사명','모델명', 'CODE', '품명', '금형명'])\n  const [optionIndex, setOptionIndex] = useState<number>(0)\n\n  const [pageInfo, setPageInfo] = useState<{page: number, total: number}>({\n    page: 1,\n    total: 1\n  })\n\n  // useEffect(() => {\n  //   setOptionIndex(option)\n  //   if(keyword){\n  //     SearchBasic(keyword, option, page).then(() => {\n  //       Notiflix.Loading.remove()\n  //     })\n  //   }else{\n  //     LoadBasic(page).then(() => {\n  //       Notiflix.Loading.remove()\n  //     })\n  //   }\n  // }, [page, keyword, option])\n\n\n  const loadAllSelectItems = async (column: IExcelHeaderType[]) => {\n    // let tmpColumn = column.map(async (v: any) => {\n    //   if(v.selectList && v.selectList.length === 0){\n    //     let tmpKey = v.key\n    //\n    //\n    //     let res: any\n    //     res = await RequestMethod('get', `${tmpKey}List`,{\n    //       path: {\n    //         page: 1,\n    //         renderItem: MAX_VALUE,\n    //       }\n    //     })\n    //\n    //\n    //     let pk = \"\";\n    //\n    //     res.results.info_list && res.results.info_list.length && Object.keys(res.results.info_list[0]).map((v) => {\n    //       if(v.indexOf('_id') !== -1){\n    //         pk = v\n    //       }\n    //     })\n    //     return {\n    //       ...v,\n    //       selectList: [...res.results.info_list.map((value: any) => {\n    //         return {\n    //           ...value,\n    //           name: tmpKey === 'model' ? value.model : value.name,\n    //           pk: value[pk]\n    //         }\n    //       })]\n    //     }\n    //\n    //   }else{\n    //     if(v.selectList){\n    //       return {\n    //         ...v,\n    //         pk: v.unit_id\n    //       }\n    //     }else{\n    //       return v\n    //     }\n    //   }\n    // })\n    //\n    // // if(type !== 'productprocess'){\n    // Promise.all(tmpColumn).then(res => {\n    //   setColumn([...res])\n    // })\n    // // }\n  }\n\n  const SaveBasic = async () => {\n    let res: any\n    res = await RequestMethod('post', `moldSave`,\n      {\n        ['molds']: basicRow.map((row, i) => {\n          if(selectList.has(row.id)){\n            let selectKey: string[] = []\n            let additional:any[] = []\n            column.map((v) => {\n              if(v.selectList){\n                selectKey.push(v.key)\n              }\n\n              if(v.type === 'additional'){\n                additional.push(v)\n              }\n            })\n\n            let selectData: any = {}\n\n            Object.keys(row).map(v => {\n              if(v.indexOf('PK') !== -1) {\n                selectData = {\n                  ...selectData,\n                  [v.split('PK')[0]]: row[v]\n                }\n              }\n\n              if(v === 'unitWeight') {\n                selectData = {\n                  ...selectData,\n                  unitWeight: Number(row['unitWeight'])\n                }\n              }\n\n              if(v === 'tmpId') {\n                selectData = {\n                  ...selectData,\n                  id: row['tmpId']\n                }\n              }\n            })\n\n            return {\n              ...row,\n              ...selectData,\n              additional: [\n                ...additional.map(v => {\n                  if(row[v.name]) {\n                    return {\n                      id: v.id,\n                      title: v.name,\n                      value: row[v.name],\n                      unit: v.unit\n                    }\n                  }\n                }).filter((v) => v)\n              ]\n            }\n\n          }\n        }).filter((v) => v)\n      })\n\n\n    if(res){\n      if(res.status === 200){\n        Notiflix.Report.success('저장되었습니다.','','확인');\n        if(keyword){\n          SearchBasic(keyword, option, page).then(() => {\n            Notiflix.Loading.remove()\n          })\n        }else{\n          LoadBasic(page).then(() => {\n            Notiflix.Loading.remove()\n          })\n        }\n      }\n    }\n  }\n\n\n  const LoadBasic = async (page?: number) => {\n    Notiflix.Loading.circle()\n    // const res = await RequestMethod('get', `moldList`,{\n    //   path: {\n    //     page: (page || page !== 0) ? page : 1,\n    //     renderItem: 18,\n    //   }\n    // })\n    //\n    // if(res && res.status === 200){\n    //   setPageInfo({\n    //     ...pageInfo,\n    //     page: res.results.page,\n    //     total: res.results.totalPages\n    //   })\n    //   cleanUpData(res)\n    // }else if (res.state === 401) {\n    //   Notiflix.Report.failure('불러올 수 없습니다.', '권한이 없습니다.', '확인', () => {\n    //     router.back()\n    //   })\n    // }\n    Notiflix.Loading.remove()\n  }\n\n  const SearchBasic = async (keyword: any, option: number, isPaging?: number) => {\n    Notiflix.Loading.circle()\n    if(!isPaging){\n      setOptionIndex(option)\n    }\n    const res = await RequestMethod('get', `moldSearch`,{\n      path: {\n        page: isPaging ?? 1,\n        renderItem: 18,\n      },\n      params: {\n        keyword: keyword ?? '',\n        opt: option ?? 0\n      }\n    })\n\n    if(res && res.status === 200){\n      setPageInfo({\n        ...pageInfo,\n        page: res.results.page,\n        total: res.results.totalPages\n      })\n      cleanUpData(res)\n    }\n  }\n\n  const cleanUpData = (res: any) => {\n    let tmpColumn = columnlist[\"mold\"];\n    let tmpRow = []\n    tmpColumn = tmpColumn.map((column: any) => {\n      let menuData: object | undefined;\n      res.results.menus && res.results.menus.map((menu: any) => {\n        if(menu.colName === column.key){\n          menuData = {\n            id: menu.id,\n            name: menu.title,\n            width: menu.width,\n            tab:menu.tab,\n            unit:menu.unit\n          }\n        } else if(menu.colName === 'id' && column.key === 'tmpId'){\n          menuData = {\n            id: menu.id,\n            name: menu.title,\n            width: menu.width,\n            tab:menu.tab,\n            unit:menu.unit\n          }\n        }\n      })\n\n      if(menuData){\n        return {\n          ...column,\n          ...menuData\n        }\n      }\n    }).filter((v:any) => v)\n\n    let additionalMenus = res.results.menus ? res.results.menus.map((menu:any) => {\n      if(menu.colName === null){\n        return {\n          id: menu.id,\n          name: menu.title,\n          width: menu.width,\n          key: menu.title,\n          editor: TextEditor,\n          type: 'additional',\n          unit: menu.unit\n        }\n      }\n    }).filter((v: any) => v) : []\n\n\n    tmpRow = res.results.info_list\n\n\n    loadAllSelectItems( [\n      ...tmpColumn,\n      ...additionalMenus\n    ] )\n\n\n    let selectKey = \"\"\n    let additionalData: any[] = []\n    tmpColumn.map((v: any) => {\n      if(v.selectList){\n        selectKey = v.key\n      }\n    })\n\n    additionalMenus.map((v: any) => {\n      if(v.type === 'additional'){\n        additionalData.push(v.key)\n      }\n    })\n\n    let pk = \"\";\n    Object.keys(tmpRow).map((v) => {\n      if(v.indexOf('_id') !== -1){\n        pk = v\n      }\n    })\n\n    let tmpBasicRow = tmpRow.map((row: any, index: number) => {\n\n      let appendAdditional: any = {}\n\n      row.additional && row.additional.map((v: any) => {\n        appendAdditional = {\n          ...appendAdditional,\n          [v.title]: v.value\n        }\n      })\n\n      let random_id = Math.random()*1000;\n      return {\n        cm_id:(index === 0 || row.ppd.seq === 1) ? row.product.raw_material.model.model : undefined,\n        cm_idPK:row.product.raw_material.model.cm_id,\n        mold_id:row.mold_id,\n        mold_name:row.ppd.mold_name,\n        limit:row.limit,\n        inspect:row.inspect,\n        current:row.current,\n        customer_id: (index === 0 || row.ppd.seq === 1) ? row.product.raw_material.model.customer.name : undefined,\n        customer_idPK: row.product.raw_material.model.customer.customer_id,\n        code: (index === 0 || row.ppd.seq === 1) ? row.product.raw_material.code : undefined,\n        name: (index === 0 || row.ppd.seq === 1) ? row.product.raw_material.name : undefined,\n        seq: row.ppd.seq,\n        cavity: row.ppd.cavity,\n        spm: row.spm,\n        slideHeight: row.slideHeight,\n        process_id: row.ppd.process.name,\n        ...appendAdditional,\n        id: `mold_${random_id}`,\n      }\n    })\n\n    setBasicRow([...tmpBasicRow])\n  }\n\n  const downloadExcel = () => {\n    let tmpSelectList: boolean[] = []\n    basicRow.map(row => {\n      tmpSelectList.push(selectList.has(row.id))\n    })\n    excelDownload(column, basicRow, `mold`, \"mold\", tmpSelectList)\n  }\n\n  const onClickHeaderButton = (index: number) => {\n    switch(index){\n      case 0:\n        setExcelOpen(true)\n        break;\n      case 1:\n\n        router.push(`/mes/item/manage/mold`)\n\n        break;\n      case 2:\n        SaveBasic()\n        break;\n    }\n  }\n\n  return (\n    <div>\n      <PageHeader\n        title={\"작업지시서 등록\"}\n        buttons={\n          ['엑셀로 받기', '행추가', '저장하기', '삭제']\n        }\n        buttonsOnclick={\n          () => {}\n          // onClickHeaderButton\n        }\n      />\n      <ExcelTable\n        editable\n        resizable\n        headerList={[\n          SelectColumn,\n          ...column\n        ]}\n        row={basicRow}\n        // setRow={setBasicRow}\n        setRow={(e) => {\n          let tmp: Set<any> = selectList\n          e.map(v => {\n            if(v.isChange) tmp.add(v.id)\n          })\n          setSelectList(tmp)\n          setBasicRow(e)\n        }}\n        selectList={selectList}\n        //@ts-ignore\n        setSelectList={setSelectList}\n        height={basicRow.length * 40 >= 40*18+56 ? 40*19 : basicRow.length * 40 + 56}\n      />\n      <PaginationComponent\n        currentPage={pageInfo.page}\n        totalPage={pageInfo.total}\n        setPage={(page) => {\n          if(keyword){\n            router.push(`/mes/basic/mold?page=${page}&keyword=${keyword}&opt=${option}`)\n          }else{\n            router.push(`/mes/basic/mold?page=${page}`)\n          }\n        }}\n      />\n      <ExcelDownloadModal\n        isOpen={excelOpen}\n        column={column}\n        basicRow={basicRow}\n        filename={`금형기본정보`}\n        sheetname={`금형기본정보`}\n        selectList={selectList}\n        tab={'ROLE_BASE_07'}\n        setIsOpen={setExcelOpen}\n      />\n    </div>\n  );\n}\n\nexport const getServerSideProps = (ctx: NextPageContext) => {\n  return {\n    props: {\n      page: ctx.query.page ?? 1,\n      keyword: ctx.query.keyword ?? \"\",\n      option: ctx.query.opt ?? 0,\n    }\n  }\n}\n\nexport {MesOperationRegister};\n"]},"metadata":{},"sourceType":"module"}