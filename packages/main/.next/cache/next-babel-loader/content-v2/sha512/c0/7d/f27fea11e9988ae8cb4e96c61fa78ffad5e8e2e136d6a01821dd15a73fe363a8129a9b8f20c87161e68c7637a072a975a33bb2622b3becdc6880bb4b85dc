{"ast":null,"code":"import _regeneratorRuntime from \"/Users/user/Desktop/sizl/mono_pop/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _toConsumableArray from \"/Users/user/Desktop/sizl/mono_pop/node_modules/next/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"/Users/user/Desktop/sizl/mono_pop/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _asyncToGenerator from \"/Users/user/Desktop/sizl/mono_pop/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/Users/user/Desktop/sizl/mono_pop/packages/mes/src/container/RawMaterial/MesRawMaterialStock.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\nimport { ExcelTable, Header as PageHeader, RequestMethod, columnlist, MAX_VALUE, TextEditor, excelDownload, PaginationComponent, ExcelDownloadModal } from 'shared'; // @ts-ignore\n\nimport { SelectColumn } from 'react-data-grid';\nimport Notiflix from \"notiflix\";\nimport { useRouter } from 'next/router';\nimport moment from 'moment';\n\nvar MesRawMaterialStock = function MesRawMaterialStock(_ref) {\n  _s();\n\n  var page = _ref.page,\n      keyword = _ref.keyword,\n      option = _ref.option;\n  var router = useRouter();\n\n  var _useState = useState(false),\n      excelOpen = _useState[0],\n      setExcelOpen = _useState[1];\n\n  var _useState2 = useState([{\n    date: moment().subtract(10, 'days').format('YYYY-MM-DD'),\n    useDate: 10,\n    code: 'SUS-111',\n    name: 'SUS360',\n    texture: 'SUS360',\n    depth: '1.2'\n  }]),\n      basicRow = _useState2[0],\n      setBasicRow = _useState2[1];\n\n  var _useState3 = useState(columnlist[\"rawstockV1u\"]),\n      column = _useState3[0],\n      setColumn = _useState3[1];\n\n  var _useState4 = useState(new Set()),\n      selectList = _useState4[0],\n      setSelectList = _useState4[1];\n\n  var _useState5 = useState(['고객사명', '모델명', 'CODE', '품명', '금형명']),\n      optionList = _useState5[0],\n      setOptionList = _useState5[1];\n\n  var _useState6 = useState(0),\n      optionIndex = _useState6[0],\n      setOptionIndex = _useState6[1];\n\n  var _useState7 = useState({\n    page: 1,\n    total: 1\n  }),\n      pageInfo = _useState7[0],\n      setPageInfo = _useState7[1]; // useEffect(() => {\n  //   setOptionIndex(option)\n  //   if(keyword){\n  //     SearchBasic(keyword, option, page).then(() => {\n  //       Notiflix.Loading.remove()\n  //     })\n  //   }else{\n  //     LoadBasic(page).then(() => {\n  //       Notiflix.Loading.remove()\n  //     })\n  //   }\n  // }, [page, keyword, option])\n\n\n  var loadAllSelectItems = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(column) {\n      var tmpColumn;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              tmpColumn = column.map( /*#__PURE__*/function () {\n                var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(v) {\n                  var tmpKey, res, pk;\n                  return _regeneratorRuntime.wrap(function _callee$(_context) {\n                    while (1) {\n                      switch (_context.prev = _context.next) {\n                        case 0:\n                          if (!(v.selectList && v.selectList.length === 0)) {\n                            _context.next = 10;\n                            break;\n                          }\n\n                          tmpKey = v.key;\n                          _context.next = 4;\n                          return RequestMethod('get', \"\".concat(tmpKey, \"List\"), {\n                            path: {\n                              page: 1,\n                              renderItem: MAX_VALUE\n                            }\n                          });\n\n                        case 4:\n                          res = _context.sent;\n                          pk = \"\";\n                          res.results.info_list && res.results.info_list.length && Object.keys(res.results.info_list[0]).map(function (v) {\n                            if (v.indexOf('_id') !== -1) {\n                              pk = v;\n                            }\n                          });\n                          return _context.abrupt(\"return\", _objectSpread(_objectSpread({}, v), {}, {\n                            selectList: _toConsumableArray(res.results.info_list.map(function (value) {\n                              return _objectSpread(_objectSpread({}, value), {}, {\n                                name: tmpKey === 'model' ? value.model : value.name,\n                                pk: value[pk]\n                              });\n                            }))\n                          }));\n\n                        case 10:\n                          if (!v.selectList) {\n                            _context.next = 14;\n                            break;\n                          }\n\n                          return _context.abrupt(\"return\", _objectSpread(_objectSpread({}, v), {}, {\n                            pk: v.unit_id\n                          }));\n\n                        case 14:\n                          return _context.abrupt(\"return\", v);\n\n                        case 15:\n                        case \"end\":\n                          return _context.stop();\n                      }\n                    }\n                  }, _callee);\n                }));\n\n                return function (_x2) {\n                  return _ref3.apply(this, arguments);\n                };\n              }()); // if(type !== 'productprocess'){\n\n              Promise.all(tmpColumn).then(function (res) {\n                setColumn(_toConsumableArray(res));\n              }); // }\n\n            case 2:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function loadAllSelectItems(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var SaveBasic = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return RequestMethod('post', \"moldSave\", _defineProperty({}, 'molds', basicRow.map(function (row, i) {\n                if (selectList.has(row.id)) {\n                  var selectKey = [];\n                  var additional = [];\n                  column.map(function (v) {\n                    if (v.selectList) {\n                      selectKey.push(v.key);\n                    }\n\n                    if (v.type === 'additional') {\n                      additional.push(v);\n                    }\n                  });\n                  var selectData = {};\n                  Object.keys(row).map(function (v) {\n                    if (v.indexOf('PK') !== -1) {\n                      selectData = _objectSpread(_objectSpread({}, selectData), {}, _defineProperty({}, v.split('PK')[0], row[v]));\n                    }\n\n                    if (v === 'unitWeight') {\n                      selectData = _objectSpread(_objectSpread({}, selectData), {}, {\n                        unitWeight: Number(row['unitWeight'])\n                      });\n                    }\n\n                    if (v === 'tmpId') {\n                      selectData = _objectSpread(_objectSpread({}, selectData), {}, {\n                        id: row['tmpId']\n                      });\n                    }\n                  });\n                  return _objectSpread(_objectSpread(_objectSpread({}, row), selectData), {}, {\n                    additional: _toConsumableArray(additional.map(function (v) {\n                      if (row[v.name]) {\n                        return {\n                          id: v.id,\n                          title: v.name,\n                          value: row[v.name],\n                          unit: v.unit\n                        };\n                      }\n                    }).filter(function (v) {\n                      return v;\n                    }))\n                  });\n                }\n              }).filter(function (v) {\n                return v;\n              })));\n\n            case 2:\n              res = _context3.sent;\n\n              if (res) {\n                if (res.status === 200) {\n                  Notiflix.Report.success('저장되었습니다.', '', '확인');\n\n                  if (keyword) {\n                    SearchBasic(keyword, option, page).then(function () {\n                      Notiflix.Loading.remove();\n                    });\n                  } else {\n                    LoadBasic(page).then(function () {\n                      Notiflix.Loading.remove();\n                    });\n                  }\n                }\n              }\n\n            case 4:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function SaveBasic() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  var LoadBasic = /*#__PURE__*/function () {\n    var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(page) {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              Notiflix.Loading.circle();\n              _context4.next = 3;\n              return RequestMethod('get', \"moldList\", {\n                path: {\n                  page: page || page !== 0 ? page : 1,\n                  renderItem: 18\n                }\n              });\n\n            case 3:\n              res = _context4.sent;\n\n              if (res && res.status === 200) {\n                setPageInfo(_objectSpread(_objectSpread({}, pageInfo), {}, {\n                  page: res.results.page,\n                  total: res.results.totalPages\n                }));\n                cleanUpData(res);\n              } else if (res.state === 401) {\n                Notiflix.Report.failure('불러올 수 없습니다.', '권한이 없습니다.', '확인', function () {\n                  router.back();\n                });\n              }\n\n            case 5:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    return function LoadBasic(_x3) {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n\n  var SearchBasic = /*#__PURE__*/function () {\n    var _ref6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(keyword, option, isPaging) {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              Notiflix.Loading.circle();\n\n              if (!isPaging) {\n                setOptionIndex(option);\n              }\n\n              _context5.next = 4;\n              return RequestMethod('get', \"moldSearch\", {\n                path: {\n                  page: isPaging !== null && isPaging !== void 0 ? isPaging : 1,\n                  renderItem: 18\n                },\n                params: {\n                  keyword: keyword !== null && keyword !== void 0 ? keyword : '',\n                  opt: option !== null && option !== void 0 ? option : 0\n                }\n              });\n\n            case 4:\n              res = _context5.sent;\n\n              if (res && res.status === 200) {\n                setPageInfo(_objectSpread(_objectSpread({}, pageInfo), {}, {\n                  page: res.results.page,\n                  total: res.results.totalPages\n                }));\n                cleanUpData(res);\n              }\n\n            case 6:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5);\n    }));\n\n    return function SearchBasic(_x4, _x5, _x6) {\n      return _ref6.apply(this, arguments);\n    };\n  }();\n\n  var cleanUpData = function cleanUpData(res) {\n    var tmpColumn = columnlist[\"mold\"];\n    var tmpRow = [];\n    tmpColumn = tmpColumn.map(function (column) {\n      var menuData;\n      res.results.menus && res.results.menus.map(function (menu) {\n        if (menu.colName === column.key) {\n          menuData = {\n            id: menu.id,\n            name: menu.title,\n            width: menu.width,\n            tab: menu.tab,\n            unit: menu.unit\n          };\n        } else if (menu.colName === 'id' && column.key === 'tmpId') {\n          menuData = {\n            id: menu.id,\n            name: menu.title,\n            width: menu.width,\n            tab: menu.tab,\n            unit: menu.unit\n          };\n        }\n      });\n\n      if (menuData) {\n        return _objectSpread(_objectSpread({}, column), menuData);\n      }\n    }).filter(function (v) {\n      return v;\n    });\n    var additionalMenus = res.results.menus ? res.results.menus.map(function (menu) {\n      if (menu.colName === null) {\n        return {\n          id: menu.id,\n          name: menu.title,\n          width: menu.width,\n          key: menu.title,\n          editor: TextEditor,\n          type: 'additional',\n          unit: menu.unit\n        };\n      }\n    }).filter(function (v) {\n      return v;\n    }) : [];\n    tmpRow = res.results.info_list;\n    loadAllSelectItems([].concat(_toConsumableArray(tmpColumn), _toConsumableArray(additionalMenus)));\n    var selectKey = \"\";\n    var additionalData = [];\n    tmpColumn.map(function (v) {\n      if (v.selectList) {\n        selectKey = v.key;\n      }\n    });\n    additionalMenus.map(function (v) {\n      if (v.type === 'additional') {\n        additionalData.push(v.key);\n      }\n    });\n    var pk = \"\";\n    Object.keys(tmpRow).map(function (v) {\n      if (v.indexOf('_id') !== -1) {\n        pk = v;\n      }\n    });\n    var tmpBasicRow = tmpRow.map(function (row, index) {\n      var appendAdditional = {};\n      row.additional && row.additional.map(function (v) {\n        appendAdditional = _objectSpread(_objectSpread({}, appendAdditional), {}, _defineProperty({}, v.title, v.value));\n      });\n      var random_id = Math.random() * 1000;\n      return _objectSpread(_objectSpread({\n        cm_id: index === 0 || row.ppd.seq === 1 ? row.product.raw_material.model.model : undefined,\n        cm_idPK: row.product.raw_material.model.cm_id,\n        mold_id: row.mold_id,\n        mold_name: row.ppd.mold_name,\n        limit: row.limit,\n        inspect: row.inspect,\n        current: row.current,\n        customer_id: index === 0 || row.ppd.seq === 1 ? row.product.raw_material.model.customer.name : undefined,\n        customer_idPK: row.product.raw_material.model.customer.customer_id,\n        code: index === 0 || row.ppd.seq === 1 ? row.product.raw_material.code : undefined,\n        name: index === 0 || row.ppd.seq === 1 ? row.product.raw_material.name : undefined,\n        seq: row.ppd.seq,\n        cavity: row.ppd.cavity,\n        spm: row.spm,\n        slideHeight: row.slideHeight,\n        process_id: row.ppd.process.name\n      }, appendAdditional), {}, {\n        id: \"mold_\".concat(random_id)\n      });\n    });\n    setBasicRow(_toConsumableArray(tmpBasicRow));\n  };\n\n  var downloadExcel = function downloadExcel() {\n    var tmpSelectList = [];\n    basicRow.map(function (row) {\n      tmpSelectList.push(selectList.has(row.id));\n    });\n    excelDownload(column, basicRow, \"mold\", \"mold\", tmpSelectList);\n  };\n\n  var onClickHeaderButton = function onClickHeaderButton(index) {\n    switch (index) {\n      case 0:\n        setExcelOpen(true);\n        break;\n\n      case 1:\n        router.push(\"/mes/item/manage/mold\");\n        break;\n\n      case 2:\n        SaveBasic();\n        break;\n    }\n  };\n\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 387,\n      columnNumber: 5\n    }\n  }, __jsx(PageHeader, {\n    title: \"원자재 입고 등록\",\n    buttons: ['엑셀로 받기', '행추가', '저장하기', '삭제'],\n    buttonsOnclick: function buttonsOnclick() {} // onClickHeaderButton\n    ,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 388,\n      columnNumber: 7\n    }\n  }), __jsx(ExcelTable, {\n    editable: true,\n    resizable: true,\n    headerList: [SelectColumn].concat(_toConsumableArray(column)),\n    row: basicRow // setRow={setBasicRow}\n    ,\n    setRow: function setRow(e) {\n      var tmp = selectList;\n      e.map(function (v) {\n        if (v.isChange) tmp.add(v.id);\n      });\n      setSelectList(tmp);\n      setBasicRow(e);\n    },\n    selectList: selectList //@ts-ignore\n    ,\n    setSelectList: setSelectList,\n    height: basicRow.length * 40 >= 40 * 18 + 56 ? 40 * 19 : basicRow.length * 40 + 56,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 398,\n      columnNumber: 7\n    }\n  }), __jsx(PaginationComponent, {\n    currentPage: pageInfo.page,\n    totalPage: pageInfo.total,\n    setPage: function setPage(page) {\n      if (keyword) {\n        router.push(\"/mes/basic/mold?page=\".concat(page, \"&keyword=\").concat(keyword, \"&opt=\").concat(option));\n      } else {\n        router.push(\"/mes/basic/mold?page=\".concat(page));\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 420,\n      columnNumber: 7\n    }\n  }), __jsx(ExcelDownloadModal, {\n    isOpen: excelOpen,\n    column: column,\n    basicRow: basicRow,\n    filename: \"\\uAE08\\uD615\\uAE30\\uBCF8\\uC815\\uBCF4\",\n    sheetname: \"\\uAE08\\uD615\\uAE30\\uBCF8\\uC815\\uBCF4\",\n    selectList: selectList,\n    tab: 'ROLE_BASE_07',\n    setIsOpen: setExcelOpen,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 431,\n      columnNumber: 7\n    }\n  }));\n};\n\n_s(MesRawMaterialStock, \"EM6LPCrsBdetWF4SA4YmYTWk9II=\", false, function () {\n  return [useRouter];\n});\n\n_c = MesRawMaterialStock;\nexport var getServerSideProps = function getServerSideProps(ctx) {\n  var _ctx$query$page, _ctx$query$keyword, _ctx$query$opt;\n\n  return {\n    props: {\n      page: (_ctx$query$page = ctx.query.page) !== null && _ctx$query$page !== void 0 ? _ctx$query$page : 1,\n      keyword: (_ctx$query$keyword = ctx.query.keyword) !== null && _ctx$query$keyword !== void 0 ? _ctx$query$keyword : \"\",\n      option: (_ctx$query$opt = ctx.query.opt) !== null && _ctx$query$opt !== void 0 ? _ctx$query$opt : 0\n    }\n  };\n};\nexport { MesRawMaterialStock };\n\nvar _c;\n\n$RefreshReg$(_c, \"MesRawMaterialStock\");","map":{"version":3,"sources":["/Users/user/Desktop/sizl/mono_pop/packages/mes/src/container/RawMaterial/MesRawMaterialStock.tsx"],"names":["React","useState","ExcelTable","Header","PageHeader","RequestMethod","columnlist","MAX_VALUE","TextEditor","excelDownload","PaginationComponent","ExcelDownloadModal","SelectColumn","Notiflix","useRouter","moment","MesRawMaterialStock","page","keyword","option","router","excelOpen","setExcelOpen","date","subtract","format","useDate","code","name","texture","depth","basicRow","setBasicRow","column","setColumn","Set","selectList","setSelectList","optionList","setOptionList","optionIndex","setOptionIndex","total","pageInfo","setPageInfo","loadAllSelectItems","tmpColumn","map","v","length","tmpKey","key","path","renderItem","res","pk","results","info_list","Object","keys","indexOf","value","model","unit_id","Promise","all","then","SaveBasic","row","i","has","id","selectKey","additional","push","type","selectData","split","unitWeight","Number","title","unit","filter","status","Report","success","SearchBasic","Loading","remove","LoadBasic","circle","totalPages","cleanUpData","state","failure","back","isPaging","params","opt","tmpRow","menuData","menus","menu","colName","width","tab","additionalMenus","editor","additionalData","tmpBasicRow","index","appendAdditional","random_id","Math","random","cm_id","ppd","seq","product","raw_material","undefined","cm_idPK","mold_id","mold_name","limit","inspect","current","customer_id","customer","customer_idPK","cavity","spm","slideHeight","process_id","process","downloadExcel","tmpSelectList","onClickHeaderButton","e","tmp","isChange","add","getServerSideProps","ctx","props","query"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react'\nimport {\n  ExcelTable,\n  Header as PageHeader,\n  RequestMethod,\n  columnlist,\n  MAX_VALUE,\n  DropDownEditor,\n  TextEditor,\n  excelDownload,\n  PaginationComponent,\n  ExcelDownloadModal,\n  IExcelHeaderType, IItemMenuType\n} from 'shared'\n// @ts-ignore\nimport {SelectColumn} from 'react-data-grid'\nimport Notiflix from \"notiflix\";\nimport {useRouter} from 'next/router'\nimport {loadAll} from 'react-cookies'\nimport {NextPageContext} from 'next'\nimport moment from 'moment'\n\ninterface IProps {\n  children?: any\n  page?: number\n  keyword?: string\n  option?: number\n}\n\nconst MesRawMaterialStock = ({page, keyword, option}: IProps) => {\n  const router = useRouter()\n\n  const [excelOpen, setExcelOpen] = useState<boolean>(false)\n\n  const [basicRow, setBasicRow] = useState<Array<any>>([{\n    date: moment().subtract(10, 'days').format('YYYY-MM-DD'), useDate: 10,\n    code: 'SUS-111', name: 'SUS360', texture: 'SUS360', depth: '1.2'\n  }])\n  const [column, setColumn] = useState<Array<IExcelHeaderType>>( columnlist[\"rawstockV1u\"])\n  const [selectList, setSelectList] = useState<Set<number>>(new Set())\n  const [optionList, setOptionList] = useState<string[]>(['고객사명','모델명', 'CODE', '품명', '금형명'])\n  const [optionIndex, setOptionIndex] = useState<number>(0)\n\n  const [pageInfo, setPageInfo] = useState<{page: number, total: number}>({\n    page: 1,\n    total: 1\n  })\n\n  // useEffect(() => {\n  //   setOptionIndex(option)\n  //   if(keyword){\n  //     SearchBasic(keyword, option, page).then(() => {\n  //       Notiflix.Loading.remove()\n  //     })\n  //   }else{\n  //     LoadBasic(page).then(() => {\n  //       Notiflix.Loading.remove()\n  //     })\n  //   }\n  // }, [page, keyword, option])\n\n\n  const loadAllSelectItems = async (column: IExcelHeaderType[]) => {\n    let tmpColumn = column.map(async (v: any) => {\n      if(v.selectList && v.selectList.length === 0){\n        let tmpKey = v.key\n\n\n        let res: any\n        res = await RequestMethod('get', `${tmpKey}List`,{\n          path: {\n            page: 1,\n            renderItem: MAX_VALUE,\n          }\n        })\n\n\n        let pk = \"\";\n\n        res.results.info_list && res.results.info_list.length && Object.keys(res.results.info_list[0]).map((v) => {\n          if(v.indexOf('_id') !== -1){\n            pk = v\n          }\n        })\n        return {\n          ...v,\n          selectList: [...res.results.info_list.map((value: any) => {\n            return {\n              ...value,\n              name: tmpKey === 'model' ? value.model : value.name,\n              pk: value[pk]\n            }\n          })]\n        }\n\n      }else{\n        if(v.selectList){\n          return {\n            ...v,\n            pk: v.unit_id\n          }\n        }else{\n          return v\n        }\n      }\n    })\n\n    // if(type !== 'productprocess'){\n    Promise.all(tmpColumn).then(res => {\n      setColumn([...res])\n    })\n    // }\n  }\n\n  const SaveBasic = async () => {\n    let res: any\n    res = await RequestMethod('post', `moldSave`,\n      {\n        ['molds']: basicRow.map((row, i) => {\n          if(selectList.has(row.id)){\n            let selectKey: string[] = []\n            let additional:any[] = []\n            column.map((v) => {\n              if(v.selectList){\n                selectKey.push(v.key)\n              }\n\n              if(v.type === 'additional'){\n                additional.push(v)\n              }\n            })\n\n            let selectData: any = {}\n\n            Object.keys(row).map(v => {\n              if(v.indexOf('PK') !== -1) {\n                selectData = {\n                  ...selectData,\n                  [v.split('PK')[0]]: row[v]\n                }\n              }\n\n              if(v === 'unitWeight') {\n                selectData = {\n                  ...selectData,\n                  unitWeight: Number(row['unitWeight'])\n                }\n              }\n\n              if(v === 'tmpId') {\n                selectData = {\n                  ...selectData,\n                  id: row['tmpId']\n                }\n              }\n            })\n\n            return {\n              ...row,\n              ...selectData,\n              additional: [\n                ...additional.map(v => {\n                  if(row[v.name]) {\n                    return {\n                      id: v.id,\n                      title: v.name,\n                      value: row[v.name],\n                      unit: v.unit\n                    }\n                  }\n                }).filter((v) => v)\n              ]\n            }\n\n          }\n        }).filter((v) => v)\n      })\n\n\n    if(res){\n      if(res.status === 200){\n        Notiflix.Report.success('저장되었습니다.','','확인');\n        if(keyword){\n          SearchBasic(keyword, option, page).then(() => {\n            Notiflix.Loading.remove()\n          })\n        }else{\n          LoadBasic(page).then(() => {\n            Notiflix.Loading.remove()\n          })\n        }\n      }\n    }\n  }\n\n\n  const LoadBasic = async (page?: number) => {\n    Notiflix.Loading.circle()\n    const res = await RequestMethod('get', `moldList`,{\n      path: {\n        page: (page || page !== 0) ? page : 1,\n        renderItem: 18,\n      }\n    })\n\n    if(res && res.status === 200){\n      setPageInfo({\n        ...pageInfo,\n        page: res.results.page,\n        total: res.results.totalPages\n      })\n      cleanUpData(res)\n    }else if (res.state === 401) {\n      Notiflix.Report.failure('불러올 수 없습니다.', '권한이 없습니다.', '확인', () => {\n        router.back()\n      })\n    }\n\n  }\n\n  const SearchBasic = async (keyword: any, option: number, isPaging?: number) => {\n    Notiflix.Loading.circle()\n    if(!isPaging){\n      setOptionIndex(option)\n    }\n    const res = await RequestMethod('get', `moldSearch`,{\n      path: {\n        page: isPaging ?? 1,\n        renderItem: 18,\n      },\n      params: {\n        keyword: keyword ?? '',\n        opt: option ?? 0\n      }\n    })\n\n    if(res && res.status === 200){\n      setPageInfo({\n        ...pageInfo,\n        page: res.results.page,\n        total: res.results.totalPages\n      })\n      cleanUpData(res)\n    }\n  }\n\n  const cleanUpData = (res: any) => {\n    let tmpColumn = columnlist[\"mold\"];\n    let tmpRow = []\n    tmpColumn = tmpColumn.map((column: any) => {\n      let menuData: object | undefined;\n      res.results.menus && res.results.menus.map((menu: any) => {\n        if(menu.colName === column.key){\n          menuData = {\n            id: menu.id,\n            name: menu.title,\n            width: menu.width,\n            tab:menu.tab,\n            unit:menu.unit\n          }\n        } else if(menu.colName === 'id' && column.key === 'tmpId'){\n          menuData = {\n            id: menu.id,\n            name: menu.title,\n            width: menu.width,\n            tab:menu.tab,\n            unit:menu.unit\n          }\n        }\n      })\n\n      if(menuData){\n        return {\n          ...column,\n          ...menuData\n        }\n      }\n    }).filter((v:any) => v)\n\n    let additionalMenus = res.results.menus ? res.results.menus.map((menu:any) => {\n      if(menu.colName === null){\n        return {\n          id: menu.id,\n          name: menu.title,\n          width: menu.width,\n          key: menu.title,\n          editor: TextEditor,\n          type: 'additional',\n          unit: menu.unit\n        }\n      }\n    }).filter((v: any) => v) : []\n\n\n    tmpRow = res.results.info_list\n\n\n    loadAllSelectItems( [\n      ...tmpColumn,\n      ...additionalMenus\n    ] )\n\n\n    let selectKey = \"\"\n    let additionalData: any[] = []\n    tmpColumn.map((v: any) => {\n      if(v.selectList){\n        selectKey = v.key\n      }\n    })\n\n    additionalMenus.map((v: any) => {\n      if(v.type === 'additional'){\n        additionalData.push(v.key)\n      }\n    })\n\n    let pk = \"\";\n    Object.keys(tmpRow).map((v) => {\n      if(v.indexOf('_id') !== -1){\n        pk = v\n      }\n    })\n\n    let tmpBasicRow = tmpRow.map((row: any, index: number) => {\n\n      let appendAdditional: any = {}\n\n      row.additional && row.additional.map((v: any) => {\n        appendAdditional = {\n          ...appendAdditional,\n          [v.title]: v.value\n        }\n      })\n\n      let random_id = Math.random()*1000;\n      return {\n        cm_id:(index === 0 || row.ppd.seq === 1) ? row.product.raw_material.model.model : undefined,\n        cm_idPK:row.product.raw_material.model.cm_id,\n        mold_id:row.mold_id,\n        mold_name:row.ppd.mold_name,\n        limit:row.limit,\n        inspect:row.inspect,\n        current:row.current,\n        customer_id: (index === 0 || row.ppd.seq === 1) ? row.product.raw_material.model.customer.name : undefined,\n        customer_idPK: row.product.raw_material.model.customer.customer_id,\n        code: (index === 0 || row.ppd.seq === 1) ? row.product.raw_material.code : undefined,\n        name: (index === 0 || row.ppd.seq === 1) ? row.product.raw_material.name : undefined,\n        seq: row.ppd.seq,\n        cavity: row.ppd.cavity,\n        spm: row.spm,\n        slideHeight: row.slideHeight,\n        process_id: row.ppd.process.name,\n        ...appendAdditional,\n        id: `mold_${random_id}`,\n      }\n    })\n\n    setBasicRow([...tmpBasicRow])\n  }\n\n  const downloadExcel = () => {\n    let tmpSelectList: boolean[] = []\n    basicRow.map(row => {\n      tmpSelectList.push(selectList.has(row.id))\n    })\n    excelDownload(column, basicRow, `mold`, \"mold\", tmpSelectList)\n  }\n\n  const onClickHeaderButton = (index: number) => {\n    switch(index){\n      case 0:\n        setExcelOpen(true)\n        break;\n      case 1:\n\n        router.push(`/mes/item/manage/mold`)\n\n        break;\n      case 2:\n        SaveBasic()\n        break;\n    }\n  }\n\n  return (\n    <div>\n      <PageHeader\n        title={\"원자재 입고 등록\"}\n        buttons={\n          ['엑셀로 받기', '행추가', '저장하기', '삭제']\n        }\n        buttonsOnclick={\n          () => {}\n          // onClickHeaderButton\n        }\n      />\n      <ExcelTable\n        editable\n        resizable\n        headerList={[\n          SelectColumn,\n          ...column\n        ]}\n        row={basicRow}\n        // setRow={setBasicRow}\n        setRow={(e) => {\n          let tmp: Set<any> = selectList\n          e.map(v => {\n            if(v.isChange) tmp.add(v.id)\n          })\n          setSelectList(tmp)\n          setBasicRow(e)\n        }}\n        selectList={selectList}\n        //@ts-ignore\n        setSelectList={setSelectList}\n        height={basicRow.length * 40 >= 40*18+56 ? 40*19 : basicRow.length * 40 + 56}\n      />\n      <PaginationComponent\n        currentPage={pageInfo.page}\n        totalPage={pageInfo.total}\n        setPage={(page) => {\n          if(keyword){\n            router.push(`/mes/basic/mold?page=${page}&keyword=${keyword}&opt=${option}`)\n          }else{\n            router.push(`/mes/basic/mold?page=${page}`)\n          }\n        }}\n      />\n      <ExcelDownloadModal\n        isOpen={excelOpen}\n        column={column}\n        basicRow={basicRow}\n        filename={`금형기본정보`}\n        sheetname={`금형기본정보`}\n        selectList={selectList}\n        tab={'ROLE_BASE_07'}\n        setIsOpen={setExcelOpen}\n      />\n    </div>\n  );\n}\n\nexport const getServerSideProps = (ctx: NextPageContext) => {\n  return {\n    props: {\n      page: ctx.query.page ?? 1,\n      keyword: ctx.query.keyword ?? \"\",\n      option: ctx.query.opt ?? 0,\n    }\n  }\n}\n\nexport {MesRawMaterialStock};\n"]},"metadata":{},"sourceType":"module"}