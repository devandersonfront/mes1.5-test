{"ast":null,"code":"var _jsxFileName = \"/Users/user/Desktop/sizl/mono_pop/packages/shared/src/components/Unit/UnitContainer.tsx\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport { UnitBox, UnitValue, UnitWrapper } from '../../styles/styledComponents';\n\nconst UnitContainer = ({\n  row,\n  column,\n  setRow\n}) => {\n  const {\n    0: title,\n    1: setTitle\n  } = useState(\"\");\n\n  const AddComma = number => {\n    let regexp = /\\B(?<!\\.\\d*)(?=(\\d{3})+(?!\\d))/g;\n    return number.toString().replace(regexp, \",\");\n  };\n\n  useEffect(() => {\n    let fixNumber = Number(row[column.key]); // if(Number.isInteger(fixNumber))\n    // {\n    //     fixNumber = AddComma(fixNumber);\n    // }else if(fixNumber !== undefined){\n    //반올림이 문제가 발생할 수 있음 (toFixed)\n\n    if (!isNaN(Number(fixNumber))) {\n      if (column.toFix) {\n        fixNumber = Number(fixNumber).toFixed(column.toFix);\n      }\n\n      fixNumber = AddComma(fixNumber);\n    } else {\n      fixNumber = undefined;\n    } // }\n\n\n    setTitle(fixNumber !== undefined ? fixNumber : \"\");\n  }, [row[column.key]]);\n  return __jsx(UnitWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }, __jsx(UnitValue, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, title)), __jsx(UnitBox, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, column.searchType === 'rawin' ? __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 15\n    }\n  }, row.type === 'COIL' ? 'kg' : '장') : column.type === 'selectUnit' ? __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }\n  }, row.unit) : __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }\n  }, column.unitData)));\n};\n\nexport { UnitContainer };","map":{"version":3,"sources":["/Users/user/Desktop/sizl/mono_pop/packages/shared/src/components/Unit/UnitContainer.tsx"],"names":["React","useEffect","useState","UnitBox","UnitValue","UnitWrapper","UnitContainer","row","column","setRow","title","setTitle","AddComma","number","regexp","toString","replace","fixNumber","Number","key","isNaN","toFix","toFixed","undefined","searchType","type","unit","unitData"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AAEA,SAASC,OAAT,EAAkBC,SAAlB,EAA6BC,WAA7B,QAA+C,+BAA/C;;AAQA,MAAMC,aAAa,GAAG,CAAC;AAAEC,EAAAA,GAAF;AAAOC,EAAAA,MAAP;AAAeC,EAAAA;AAAf,CAAD,KAAoC;AACxD,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBT,QAAQ,CAAS,EAAT,CAAlC;;AACE,QAAMU,QAAQ,GAAIC,MAAD,IAAmB;AAChC,QAAIC,MAAM,GAAG,iCAAb;AACA,WAAOD,MAAM,CAACE,QAAP,GAAkBC,OAAlB,CAA0BF,MAA1B,EAAkC,GAAlC,CAAP;AACH,GAHD;;AAKAb,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIgB,SAAa,GAAGC,MAAM,CAACX,GAAG,CAACC,MAAM,CAACW,GAAR,CAAJ,CAA1B,CADY,CAEZ;AACA;AACA;AACA;AACI;;AACA,QAAG,CAACC,KAAK,CAACF,MAAM,CAACD,SAAD,CAAP,CAAT,EAA6B;AAC3B,UAAGT,MAAM,CAACa,KAAV,EAAgB;AACdJ,QAAAA,SAAS,GAAGC,MAAM,CAACD,SAAD,CAAN,CAAkBK,OAAlB,CAA0Bd,MAAM,CAACa,KAAjC,CAAZ;AACD;;AACDJ,MAAAA,SAAS,GAAGL,QAAQ,CAACK,SAAD,CAApB;AACD,KALD,MAKK;AACHA,MAAAA,SAAS,GAAGM,SAAZ;AACD,KAdO,CAeZ;;;AACAZ,IAAAA,QAAQ,CAACM,SAAS,KAAKM,SAAd,GAA0BN,SAA1B,GAAsC,EAAvC,CAAR;AACH,GAjBQ,EAiBN,CAACV,GAAG,CAACC,MAAM,CAACW,GAAR,CAAJ,CAjBM,CAAT;AAoBF,SACE,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIT,KAAJ,CADF,CADF,EAIE,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEIF,MAAM,CAACgB,UAAP,KAAsB,OAAtB,GACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOjB,GAAG,CAACkB,IAAJ,KAAa,MAAb,GAAsB,IAAtB,GAA6B,GAApC,CADJ,GAEIjB,MAAM,CAACiB,IAAP,KAAgB,YAAhB,GACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOlB,GAAG,CAACmB,IAAX,CADF,GAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOlB,MAAM,CAACmB,QAAd,CANV,CAJF,CADF;AAgBD,CA3CD;;AA6CA,SAAQrB,aAAR","sourcesContent":["import React, {useEffect, useState} from 'react'\nimport {IExcelHeaderType} from '../../common/@types/type'\nimport { UnitBox, UnitValue, UnitWrapper} from '../../styles/styledComponents'\n\ninterface IProps {\n  row: any\n  column: IExcelHeaderType\n  setRow: (row: any) => void\n}\n\nconst UnitContainer = ({ row, column, setRow}: IProps) => {\n  const [title, setTitle] = useState<string>(\"\")\n    const AddComma = (number:number) => {\n        let regexp = /\\B(?<!\\.\\d*)(?=(\\d{3})+(?!\\d))/g;\n        return number.toString().replace(regexp, \",\");\n    }\n\n    useEffect(() => {\n        let fixNumber:any = Number(row[column.key]);\n        // if(Number.isInteger(fixNumber))\n        // {\n        //     fixNumber = AddComma(fixNumber);\n        // }else if(fixNumber !== undefined){\n            //반올림이 문제가 발생할 수 있음 (toFixed)\n            if(!isNaN(Number(fixNumber))){\n              if(column.toFix){\n                fixNumber = Number(fixNumber).toFixed(column.toFix)\n              }\n              fixNumber = AddComma(fixNumber)\n            }else{\n              fixNumber = undefined\n            }\n        // }\n        setTitle(fixNumber !== undefined ? fixNumber : \"\" )\n    }, [row[column.key]])\n\n\n  return (\n    <UnitWrapper>\n      <UnitValue>\n        <p>{title}</p>\n      </UnitValue>\n      <UnitBox>\n        {\n          column.searchType === 'rawin'\n            ? <span>{row.type === 'COIL' ? 'kg' : '장'}</span>\n            : column.type === 'selectUnit'\n              ? <span>{row.unit}</span>\n              : <span>{column.unitData}</span>\n        }\n      </UnitBox>\n    </UnitWrapper>\n  );\n}\n\nexport {UnitContainer};\n"]},"metadata":{},"sourceType":"module"}