{"ast":null,"code":"import _regeneratorRuntime from \"/Users/user/Desktop/sizl/mono_pop/node_modules/@babel/runtime/regenerator\";\nimport _toConsumableArray from \"/Users/user/Desktop/sizl/mono_pop/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _asyncToGenerator from \"/Users/user/Desktop/sizl/mono_pop/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"/Users/user/Desktop/sizl/mono_pop/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nvar _jsxFileName = \"/Users/user/Desktop/sizl/mono_pop/packages/main/pages/mes/quality/defect/index.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useState } from \"react\";\nimport MenuNavigation from \"../../../../component/MenuNav/MenuNavigation\";\nimport ProfileHeader from \"../../../../component/Profile/ProfileHeader\";\nimport { RequestMethod } from \"../../../../common/RequestFunctions\";\nimport PageHeader from \"../../../../component/Header/Header\";\nimport ExcelTable from \"../../../../component/Excel/ExcelTable\";\nimport ButtonGroup from \"../../../../component/ButtonGroup\";\n//@ts-ignore\nimport { SelectColumn } from \"react-data-grid\";\nimport { columnlist } from \"../../../../common/columnInit\"; //@ts-ignore\n\nimport Notiflix from \"notiflix\";\nimport moment from 'moment';\nimport { excelDownload } from '../../../../common/excelDownloadFunction';\nimport PeriodSelectCalendar from '../../../../component/Header/PeriodSelectCalendar';\nimport { useRouter } from 'next/router';\n\nvar RegisterBasicContainer = function RegisterBasicContainer() {\n  _s();\n\n  var router = useRouter();\n\n  var changeHeaderStatus = function changeHeaderStatus(value) {\n    setHeaderStatus(value);\n  };\n\n  var _useState = useState([{\n    id: '',\n    customer_id: ''\n  }]),\n      processBasicRow = _useState[0],\n      setProcessBasicRow = _useState[1];\n\n  var _useState2 = useState(columnlist[\"qualityDefectTop\"]),\n      processColumn = _useState2[0],\n      setProcessColumn = _useState2[1];\n\n  var _useState3 = useState([]),\n      pauseBasicRow = _useState3[0],\n      setPauseBasicRow = _useState3[1];\n\n  var _useState4 = useState(columnlist[\"qualityDefectContents\"].map(function (v) {\n    console.log(v.key);\n\n    if (v.key === 'amount') {\n      return _objectSpread(_objectSpread({}, v), {}, {\n        result: changeHeaderStatus\n      });\n    }\n\n    return v;\n  })),\n      pauseColumn = _useState4[0],\n      setPauseColumn = _useState4[1];\n\n  var _useState5 = useState(-1),\n      selectRow = _useState5[0],\n      setSelectRow = _useState5[1];\n\n  var _useState6 = useState(false),\n      state = _useState6[0],\n      setState = _useState6[1];\n\n  var _useState7 = useState(new Set()),\n      selectList = _useState7[0],\n      setSelectList = _useState7[1];\n\n  var _useState8 = useState(\"\"),\n      headerStatus = _useState8[0],\n      setHeaderStatus = _useState8[1];\n\n  var _useState9 = useState({\n    from: moment(new Date()).startOf('isoWeek').format('YYYY-MM-DD'),\n    to: moment(new Date()).endOf('isoWeek').format('YYYY-MM-DD')\n  }),\n      selectDate = _useState9[0],\n      setSelectDate = _useState9[1];\n\n  var changeSelectDate = function changeSelectDate(from, to) {\n    setSelectDate({\n      from: moment(new Date(from)).format('YYYY-MM-DD'),\n      to: moment(new Date(to)).format('YYYY-MM-DD')\n    });\n  };\n\n  useEffect(function () {\n    if (processBasicRow[0].product_id) {\n      LoadBasic().then(function () {\n        Notiflix.Loading.remove();\n      });\n    }\n  }, [processBasicRow, selectDate, headerStatus]);\n\n  var LoadPauseList = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(value) {\n      var res, tmpColumn, tmpRow;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              Notiflix.Loading.circle();\n              _context.next = 3;\n              return RequestMethod(\"get\", \"defectReasonList\", {\n                path: {\n                  page: 1,\n                  renderItem: 51,\n                  process_id: value\n                }\n              });\n\n            case 3:\n              res = _context.sent;\n\n              if (res && res.status === 200) {\n                tmpColumn = columnlist[\"defectReason\"];\n                tmpColumn = tmpColumn.map(function (value, index) {\n                  return _objectSpread(_objectSpread({}, value), {}, {\n                    key: value.key,\n                    name: value.name,\n                    width: value.width\n                  });\n                });\n                setPauseColumn(tmpColumn); // tmpColumn.push({key:})\n\n                tmpRow = [];\n                tmpRow = res.results.info_list.map(function (column, index) {\n                  var menuData = {};\n                  menuData = {\n                    index: index + 1,\n                    width: column.width // id:Math.random()*100\n                    // id: info.ppr_id,\n                    // name: info.reason,\n\n                  };\n                  var random_id = Math.random() * 1000;\n                  return _objectSpread(_objectSpread({\n                    id: random_id\n                  }, column), menuData);\n                });\n                setPauseBasicRow(_toConsumableArray(tmpRow));\n              }\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function LoadPauseList(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var LoadBasic = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var res, tmpColumn, tmpRow;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              Notiflix.Loading.circle();\n              _context2.next = 3;\n              return RequestMethod('get', \"defectList\", {\n                path: {\n                  product_id: processBasicRow[0].product_id,\n                  process_id: processBasicRow[0].process_idPK,\n                  pdr_id: processBasicRow[0].pdr_idPK\n                },\n                params: {\n                  opt: headerStatus,\n                  from: selectDate.from,\n                  to: selectDate.to\n                }\n              });\n\n            case 3:\n              res = _context2.sent;\n\n              if (res && res.status === 200) {\n                tmpColumn = columnlist[\"defectReason\"];\n                tmpRow = [];\n                tmpRow = res.results;\n\n                if (res.results.length >= 0) {\n                  setPauseBasicRow(tmpRow.map(function (v) {\n                    var random_id = Math.random() * 1000;\n                    return _objectSpread(_objectSpread({}, v), {}, {\n                      id: \"processDefect_\".concat(random_id),\n                      reason: v.pdr.reason,\n                      process_id: v.process.name\n                    });\n                    LoadPauseList(v.process.process_id).then(function () {\n                      Notiflix.Loading.remove();\n                    });\n                  }));\n                }\n              } else if (res.state === 401) {\n                Notiflix.Report.failure('불러올 수 없습니다.', '권한이 없습니다.', '확인', function () {\n                  router.back();\n                });\n              }\n\n            case 5:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function LoadBasic() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var downloadExcel = function downloadExcel() {\n    var tmpSelectList = [];\n    pauseBasicRow.map(function (row) {\n      tmpSelectList.push(selectList.has(row.id));\n    });\n    excelDownload(pauseColumn, pauseBasicRow, \"\\uBD88\\uB7C9\\uD1B5\\uACC4\", \"불량통계\", tmpSelectList);\n  };\n\n  var buttonEvents = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(index) {\n      var deleteBasicRow;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.t0 = index;\n              _context3.next = _context3.t0 === 1 ? 3 : _context3.t0 === 0 ? 5 : 8;\n              break;\n\n            case 3:\n              downloadExcel();\n              return _context3.abrupt(\"return\");\n\n            case 5:\n              deleteBasicRow = pauseBasicRow.map(function (row) {\n                if (selectList.has(row.id)) {\n                  return;\n                } else {\n                  return _objectSpread({}, row);\n                }\n              }).filter(function (v) {\n                return v;\n              });\n              setPauseBasicRow(_toConsumableArray(deleteBasicRow));\n              return _context3.abrupt(\"return\");\n\n            case 8:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function buttonEvents(_x2) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var sortObject = function sortObject(object) {\n    var compare_qty = function compare_qty(a, b) {\n      // a should come before b in the sorted order\n      if (a.lengthIndex < b.lengthIndex) {\n        return -1; // a should come after b in the sorted order\n      } else if (a.lengthIndex > b.lengthIndex) {\n        return 1; // a and b are the same\n      } else {\n        return 0;\n      }\n    };\n\n    object.sort(compare_qty);\n    var sortData = object.map(function (v, index) {\n      return _objectSpread(_objectSpread({}, v), {}, {\n        index: index + 1,\n        lengthIndex: index + 1\n      });\n    });\n    setPauseBasicRow(_toConsumableArray(sortData));\n  };\n\n  return __jsx(\"div\", {\n    style: {\n      display: \"flex\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 5\n    }\n  }, __jsx(MenuNavigation, {\n    pageType: 'MES',\n    subType: 2,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 7\n    }\n  }), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 7\n    }\n  }, __jsx(ProfileHeader, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 9\n    }\n  }), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 9\n    }\n  }, __jsx(PageHeader, {\n    title: \"불량 통계\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 11\n    }\n  }), __jsx(ExcelTable, {\n    editable: true,\n    resizable: true,\n    headerList: [SelectColumn].concat(_toConsumableArray(processColumn)),\n    row: processBasicRow,\n    setRow: setProcessBasicRow,\n    selectList: selectList //@ts-ignore\n    ,\n    setSelectList: setSelectList,\n    height: 80,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 11\n    }\n  }), __jsx(\"div\", {\n    style: {\n      display: \"flex\",\n      justifyContent: \"space-between\",\n      margin: \"15px 0\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 11\n    }\n  }, processBasicRow[0].product_id ? __jsx(\"span\", {\n    style: {\n      color: \"white\",\n      fontSize: 22,\n      fontWeight: \"bold\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 19\n    }\n  }, \"\\uACF5\\uC815\\uBCC4 \\uBD88\\uB7C9 \\uD1B5\\uACC4\") : __jsx(\"span\", {\n    style: {\n      color: \"#ffffff58\",\n      fontSize: 22,\n      fontWeight: \"bold\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 19\n    }\n  }, \"\\uC81C\\uD488\\uC744 \\uC120\\uD0DD\\uD574\\uC8FC\\uC138\\uC694\"), __jsx(\"div\", {\n    style: {\n      display: 'flex'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 13\n    }\n  }, __jsx(PeriodSelectCalendar, {\n    selectDate: selectDate,\n    onChangeSelectDate: setSelectDate,\n    dataLimit: false,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 15\n    }\n  }), __jsx(ButtonGroup, {\n    buttons: ['선택 행 숨김', '엑셀로 받기'],\n    buttonsOnclick: buttonEvents,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 15\n    }\n  }))), __jsx(ExcelTable, {\n    editable: true,\n    headerList: [SelectColumn].concat(_toConsumableArray(pauseColumn)),\n    row: pauseBasicRow,\n    setRow: function setRow(e) {\n      setState(true);\n      setPauseBasicRow(e);\n    },\n    width: 1570,\n    height: 440 // setSelectList={changeSetSelectList}\n    ,\n    setSelectList: setSelectList,\n    selectList: selectList,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 11\n    }\n  }))));\n};\n\n_s(RegisterBasicContainer, \"oYmiFKwV4vpuuAUXYX2y9zm2JtU=\", false, function () {\n  return [useRouter];\n});\n\n_c = RegisterBasicContainer;\nexport default RegisterBasicContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegisterBasicContainer\");","map":{"version":3,"sources":["/Users/user/Desktop/sizl/mono_pop/packages/main/pages/mes/quality/defect/index.tsx"],"names":["React","useEffect","useState","MenuNavigation","ProfileHeader","RequestMethod","PageHeader","ExcelTable","ButtonGroup","SelectColumn","columnlist","Notiflix","moment","excelDownload","PeriodSelectCalendar","useRouter","RegisterBasicContainer","router","changeHeaderStatus","value","setHeaderStatus","id","customer_id","processBasicRow","setProcessBasicRow","processColumn","setProcessColumn","pauseBasicRow","setPauseBasicRow","map","v","console","log","key","result","pauseColumn","setPauseColumn","selectRow","setSelectRow","state","setState","Set","selectList","setSelectList","headerStatus","from","Date","startOf","format","to","endOf","selectDate","setSelectDate","changeSelectDate","product_id","LoadBasic","then","Loading","remove","LoadPauseList","circle","path","page","renderItem","process_id","res","status","tmpColumn","index","name","width","tmpRow","results","info_list","column","menuData","random_id","Math","random","process_idPK","pdr_id","pdr_idPK","params","opt","length","reason","pdr","process","Report","failure","back","downloadExcel","tmpSelectList","row","push","has","buttonEvents","deleteBasicRow","filter","sortObject","object","compare_qty","a","b","lengthIndex","sort","sortData","display","justifyContent","margin","color","fontSize","fontWeight","e"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport styled from \"styled-components\";\nimport MenuNavigation from \"../../../../component/MenuNav/MenuNavigation\";\nimport ProfileHeader from \"../../../../component/Profile/ProfileHeader\";\nimport {RequestMethod} from \"../../../../common/RequestFunctions\";\nimport PageHeader from \"../../../../component/Header/Header\";\nimport ExcelTable from \"../../../../component/Excel/ExcelTable\";\nimport ButtonGroup from \"../../../../component/ButtonGroup\";\n\nimport {IExcelHeaderType} from \"../../../../common/@types/type\";\n//@ts-ignore\nimport {SelectColumn} from \"react-data-grid\";\nimport {columnlist} from \"../../../../common/columnInit\";\n//@ts-ignore\nimport Notiflix from \"notiflix\";\nimport moment from 'moment'\nimport {excelDownload} from '../../../../common/excelDownloadFunction'\nimport PeriodSelectCalendar from '../../../../component/Header/PeriodSelectCalendar'\nimport {useRouter} from 'next/router'\n\ninterface SelectParameter {\n  from:string\n  to:string\n}\n\n\nconst RegisterBasicContainer = () => {\n  const router = useRouter()\n\n  const changeHeaderStatus = (value:number) => {\n    setHeaderStatus(value);\n  }\n\n  const [processBasicRow, setProcessBasicRow] = useState<any[]>([{\n    id: '', customer_id: ''\n  }]);\n  const [processColumn, setProcessColumn] = useState<Array<IExcelHeaderType>>(columnlist[`qualityDefectTop`] );\n\n  const [pauseBasicRow, setPauseBasicRow] = useState<any[]>([]);\n  const [pauseColumn, setPauseColumn] = useState<Array<IExcelHeaderType>>(columnlist[`qualityDefectContents`].map(v => {\n    console.log(v.key)\n    if(v.key === 'amount'){\n      return {\n        ...v,\n        result: changeHeaderStatus\n      }\n    }\n    return v\n  }));\n  const [selectRow, setSelectRow] = useState<any>(-1);\n\n  const [state, setState] = useState<boolean>(false);\n\n  const [selectList, setSelectList] = useState<ReadonlySet<number>>(new Set());\n  const [headerStatus, setHeaderStatus] = useState<number | string>(\"\");\n\n  const [selectDate, setSelectDate] = useState<{from:string, to:string}>({\n    from: moment(new Date()).startOf('isoWeek').format('YYYY-MM-DD'),\n    to: moment(new Date()).endOf('isoWeek').format('YYYY-MM-DD')\n  });\n\n  const changeSelectDate = (from:string, to:string) => {\n\n    setSelectDate({\n      from:moment(new Date(from)).format('YYYY-MM-DD'),\n      to:moment(new Date(to)).format('YYYY-MM-DD')\n    })\n  }\n\n  useEffect(() => {\n    if(processBasicRow[0].product_id){\n      LoadBasic().then(() => {\n        Notiflix.Loading.remove()\n      })\n    }\n  }, [processBasicRow, selectDate, headerStatus])\n\n  const LoadPauseList = async (value:string) => {\n    Notiflix.Loading.circle()\n    const res = await RequestMethod(\"get\", `defectReasonList`,{\n      path: {\n        page:1,\n        renderItem:51,\n        process_id:value\n      }\n    })\n\n    if(res && res.status === 200){\n      let tmpColumn = columnlist[`defectReason`];\n      tmpColumn = tmpColumn.map((value:any,index:number) => {\n        return {...value, key:value.key, name:value.name, width:value.width}\n      })\n      setPauseColumn(tmpColumn);\n      // tmpColumn.push({key:})\n      let tmpRow = [];\n      tmpRow = res.results.info_list.map((column: any,index:number) => {\n        let menuData: object = {};\n\n        menuData = {\n          index:index+1,\n          width: column.width,\n          // id:Math.random()*100\n          // id: info.ppr_id,\n          // name: info.reason,\n        }\n        let random_id = Math.random()*1000;\n        return {\n          id: random_id,\n          ...column,\n          ...menuData\n        }\n      })\n      setPauseBasicRow([...tmpRow]);\n    }\n  }\n\n  const LoadBasic = async () => {\n    Notiflix.Loading.circle()\n    const res = await RequestMethod('get', `defectList`,{\n      path: {\n        product_id: processBasicRow[0].product_id,\n        process_id: processBasicRow[0].process_idPK,\n        pdr_id: processBasicRow[0].pdr_idPK\n      },\n      params: {\n        opt: headerStatus,\n        from: selectDate.from,\n        to: selectDate.to,\n      }\n    })\n    if(res && res.status === 200){\n      let tmpColumn = columnlist[`defectReason`];\n      let tmpRow = []\n\n      tmpRow = res.results\n\n      if(res.results.length >= 0){\n       setPauseBasicRow(tmpRow.map(v => {\n         let random_id = Math.random() * 1000\n         return {\n           ...v,\n           id: `processDefect_${random_id}`,\n           reason: v.pdr.reason,\n           process_id: v.process.name\n         }\n         LoadPauseList(v.process.process_id).then(() => {\n           Notiflix.Loading.remove()\n         })\n       }))\n      }\n    }else if (res.state === 401) {\n      Notiflix.Report.failure('불러올 수 없습니다.', '권한이 없습니다.', '확인', () => {\n        router.back()\n      })\n    }\n  }\n\n  const downloadExcel = () => {\n    let tmpSelectList: boolean[] = []\n    pauseBasicRow.map(row => {\n      tmpSelectList.push(selectList.has(row.id))\n    })\n    excelDownload(pauseColumn, pauseBasicRow, `불량통계`, \"불량통계\", tmpSelectList)\n  }\n\n  const buttonEvents = async(index:number) => {\n    switch (index) {\n      case 1 :\n        downloadExcel()\n        return\n      case 0 :\n        let deleteBasicRow = pauseBasicRow.map(row => {\n          if(selectList.has(row.id)){\n            return\n          }else{\n            return {\n              ...row,\n            }\n          }\n        }).filter(v => v)\n\n        setPauseBasicRow([...deleteBasicRow])\n        return\n    }\n  }\n\n  const sortObject = (object:any) => {\n    const compare_qty = (a:any, b:any) => {\n      // a should come before b in the sorted order\n      if(a.lengthIndex < b.lengthIndex){\n        return -1;\n        // a should come after b in the sorted order\n      }else if(a.lengthIndex > b.lengthIndex){\n        return 1;\n        // a and b are the same\n      }else{\n        return 0;\n      }\n    }\n\n    object.sort(compare_qty)\n    let sortData = object.map((v:object, index:number)=>{\n      return {...v, index:index+1, lengthIndex:index+1}\n    });\n    setPauseBasicRow([...sortData]);\n  }\n\n  return (\n    <div style={{display:\"flex\"}}>\n      <MenuNavigation pageType={'MES'} subType={2}/>\n      <div>\n        <ProfileHeader/>\n\n        <div>\n          <PageHeader title={\"불량 통계\"} />\n          <ExcelTable\n            editable\n            resizable\n            headerList={[\n              SelectColumn,\n              ...processColumn\n            ]}\n            row={processBasicRow}\n            setRow={setProcessBasicRow}\n            selectList={selectList}\n            //@ts-ignore\n            setSelectList={setSelectList}\n            height={80}\n          />\n          <div style={{display:\"flex\", justifyContent:\"space-between\", margin:\"15px 0\"}}>\n            {\n              processBasicRow[0].product_id\n                ? <span style={{color:\"white\", fontSize:22, fontWeight:\"bold\"}}>\n                            공정별 불량 통계\n                        </span>\n                : <span style={{color:\"#ffffff58\", fontSize:22, fontWeight:\"bold\"}}>\n                            제품을 선택해주세요\n                        </span>\n            }\n            <div style={{display: 'flex', }}>\n              <PeriodSelectCalendar selectDate={selectDate as SelectParameter} onChangeSelectDate={setSelectDate} dataLimit={false} />\n              <ButtonGroup buttons={[ '선택 행 숨김', '엑셀로 받기']} buttonsOnclick={buttonEvents}/>\n            </div>\n          </div>\n          <ExcelTable\n            editable\n            headerList={[\n              SelectColumn,\n              ...pauseColumn\n            ]}\n            row={pauseBasicRow}\n            setRow={(e) => {\n              setState(true)\n              setPauseBasicRow(e)\n            }}\n            width={1570}\n            height={440}\n            // setSelectList={changeSetSelectList}\n            setSelectList={setSelectList}\n            selectList={selectList}\n          />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default RegisterBasicContainer;\n"]},"metadata":{},"sourceType":"module"}