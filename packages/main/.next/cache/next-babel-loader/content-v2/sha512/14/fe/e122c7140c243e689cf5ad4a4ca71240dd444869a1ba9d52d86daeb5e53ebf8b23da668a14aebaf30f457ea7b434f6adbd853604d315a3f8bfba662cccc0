{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { combineReducers } from 'redux';\nimport { rootReducer as shareReducer } from 'shared';\nconst rootReducer = combineReducers(_objectSpread({}, shareReducer));\nexport default rootReducer;","map":{"version":3,"sources":["/Users/user/Desktop/sizl/mono_pop/packages/main/reducer/index.ts"],"names":["combineReducers","rootReducer","shareReducer"],"mappings":";;;;;;AAAA,SAASA,eAAT,QAAgC,OAAhC;AAKA,SAAQC,WAAW,IAAIC,YAAvB,QAA0C,QAA1C;AAEA,MAAMD,WAAW,GAAGD,eAAe,mBAC9BE,YAD8B,EAAnC;AAIA,eAAeD,WAAf","sourcesContent":["import { combineReducers } from 'redux'\nimport userInfo from './userInfo'\nimport menuState from './menuState'\nimport MachineSelectReducer from \"./machineSelect\";\nimport MulitpleSelectModal from \"./ProductSelect\";\nimport {rootReducer as shareReducer} from 'shared'\n\nconst rootReducer = combineReducers({\n  ...shareReducer\n})\n\nexport default rootReducer;\nexport type RootState = ReturnType<typeof rootReducer>\n"]},"metadata":{},"sourceType":"module"}