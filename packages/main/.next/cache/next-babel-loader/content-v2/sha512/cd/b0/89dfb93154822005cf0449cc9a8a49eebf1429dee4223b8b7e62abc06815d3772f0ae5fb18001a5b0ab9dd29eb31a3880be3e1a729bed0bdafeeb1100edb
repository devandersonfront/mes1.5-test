{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/user/Desktop/sizl/mono_pop/node_modules/next/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"/Users/user/Desktop/sizl/mono_pop/packages/shared/src/components/Cell/UseDateCell.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    display:flex;\\n    justify-content:flex-start;\\n    align-items:center;\\n    width:100%;\\n    height:100%;\\n    padding: 0 8px;\\n    margin:0;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState } from 'react';\nimport 'react-calendar/dist/Calendar.css';\nimport moment from 'moment';\nimport useOnclickOutside from 'react-cool-onclickoutside';\nimport styled from 'styled-components'; //@ts-ignore\n\nimport calendarWhite from '../../../public/images/calendar_icon_white.png';\n\nvar UseDateCell = function UseDateCell(_ref) {\n  _s();\n\n  var row = _ref.row,\n      column = _ref.column,\n      onRowChange = _ref.onRowChange;\n\n  var _useState = useState(false),\n      isOpen = _useState[0],\n      setIsOpen = _useState[1];\n\n  var ref = useOnclickOutside(function () {\n    return setIsOpen(false);\n  });\n\n  var getUseDate = function getUseDate(date) {\n    var now = moment();\n    var useDate = moment(date);\n    return moment.duration(now.diff(useDate)).asDays();\n  };\n\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, __jsx(Background, {\n    onClick: function onClick() {\n      setIsOpen(true);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, __jsx(\"p\", {\n    style: {\n      padding: 0,\n      margin: 0,\n      textAlign: 'center',\n      width: '100%'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, getUseDate(row.date)), __jsx(\"img\", {\n    src: calendarWhite,\n    style: {\n      width: 24,\n      height: 24\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  })));\n};\n\n_s(UseDateCell, \"ZAU4G9S1QjjCsUAvddTL9MY30gs=\", false, function () {\n  return [useOnclickOutside];\n});\n\n_c = UseDateCell;\nvar Background = styled.div(_templateObject());\n_c2 = Background;\nexport { UseDateCell };\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"UseDateCell\");\n$RefreshReg$(_c2, \"Background\");","map":{"version":3,"sources":["/Users/user/Desktop/sizl/mono_pop/packages/shared/src/components/Cell/UseDateCell.tsx"],"names":["React","useState","moment","useOnclickOutside","styled","calendarWhite","UseDateCell","row","column","onRowChange","isOpen","setIsOpen","ref","getUseDate","date","now","useDate","duration","diff","asDays","padding","margin","textAlign","width","height","Background","div"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AAIA,OAAO,kCAAP;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,iBAAP,MAA8B,2BAA9B;AAEA,OAAOC,MAAP,MAAmB,mBAAnB,C,CACA;;AACA,OAAOC,aAAP,MAA0B,gDAA1B;;AAQA,IAAMC,WAAW,GAAG,SAAdA,WAAc,OAA0C;AAAA;;AAAA,MAAvCC,GAAuC,QAAvCA,GAAuC;AAAA,MAAlCC,MAAkC,QAAlCA,MAAkC;AAAA,MAA1BC,WAA0B,QAA1BA,WAA0B;;AAAA,kBAChCR,QAAQ,CAAU,KAAV,CADwB;AAAA,MACrDS,MADqD;AAAA,MAC7CC,SAD6C;;AAE5D,MAAMC,GAAG,GAAGT,iBAAiB,CAAC;AAAA,WAAMQ,SAAS,CAAC,KAAD,CAAf;AAAA,GAAD,CAA7B;;AAEA,MAAME,UAAU,GAAG,SAAbA,UAAa,CAACC,IAAD,EAAgB;AACjC,QAAMC,GAAG,GAAGb,MAAM,EAAlB;AACA,QAAMc,OAAO,GAAGd,MAAM,CAACY,IAAD,CAAtB;AAEA,WAAOZ,MAAM,CAACe,QAAP,CAAgBF,GAAG,CAACG,IAAJ,CAASF,OAAT,CAAhB,EAAmCG,MAAnC,EAAP;AACD,GALD;;AAOA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,UAAD;AAAY,IAAA,OAAO,EAAE,mBAAM;AACzBR,MAAAA,SAAS,CAAC,IAAD,CAAT;AACD,KAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGE;AAAG,IAAA,KAAK,EAAE;AAACS,MAAAA,OAAO,EAAE,CAAV;AAAaC,MAAAA,MAAM,EAAE,CAArB;AAAwBC,MAAAA,SAAS,EAAE,QAAnC;AAA6CC,MAAAA,KAAK,EAAE;AAApD,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGV,UAAU,CAACN,GAAG,CAACO,IAAL,CADb,CAHF,EAME;AAAK,IAAA,GAAG,EAAET,aAAV;AAAyB,IAAA,KAAK,EAAE;AAACkB,MAAAA,KAAK,EAAE,EAAR;AAAYC,MAAAA,MAAM,EAAE;AAApB,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CADF,CADF;AAYD,CAvBD;;GAAMlB,W;UAEQH,iB;;;KAFRG,W;AAyBN,IAAMmB,UAAU,GAAGrB,MAAM,CAACsB,GAAV,mBAAhB;MAAMD,U;AAUN,SAAQnB,WAAR","sourcesContent":["import React, {useState} from 'react'\nimport {IExcelHeaderType} from '../../common/@types/type'\nimport {BoxWrap, DropBoxContainer, InnerBoxWrap} from '../../styles/styledComponents'\nimport Calendar from 'react-calendar'\nimport 'react-calendar/dist/Calendar.css'\nimport moment from 'moment'\nimport useOnclickOutside from 'react-cool-onclickoutside'\nimport Modal from 'react-modal'\nimport styled from 'styled-components'\n//@ts-ignore\nimport calendarWhite from '../../../public/images/calendar_icon_white.png'\n\ninterface IProps {\n  row: any\n  column: IExcelHeaderType\n  onRowChange: (e: any) => void\n}\n\nconst UseDateCell = ({ row, column, onRowChange }: IProps) => {\n  const [isOpen, setIsOpen] = useState<boolean>(false)\n  const ref = useOnclickOutside(() => setIsOpen(false))\n\n  const getUseDate = (date: Date) => {\n    const now = moment();\n    const useDate = moment(date)\n\n    return moment.duration(now.diff(useDate)).asDays()\n  }\n\n  return (\n    <div>\n      <Background onClick={() => {\n        setIsOpen(true)\n      }}>\n        <p style={{padding: 0, margin: 0, textAlign: 'center', width: '100%' }}>\n          {getUseDate(row.date)}\n        </p>\n        <img src={calendarWhite} style={{width: 24, height: 24}}/>\n      </Background>\n    </div>\n  );\n}\n\nconst Background = styled.div`\n    display:flex;\n    justify-content:flex-start;\n    align-items:center;\n    width:100%;\n    height:100%;\n    padding: 0 8px;\n    margin:0;\n`;\n\nexport {UseDateCell};\n"]},"metadata":{},"sourceType":"module"}