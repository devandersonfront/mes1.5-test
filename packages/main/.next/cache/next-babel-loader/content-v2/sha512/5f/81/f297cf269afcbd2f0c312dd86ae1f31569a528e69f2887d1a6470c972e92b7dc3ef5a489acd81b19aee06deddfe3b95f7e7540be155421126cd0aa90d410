{"ast":null,"code":"var _jsxFileName = \"/Users/user/Desktop/sizl/mono_pop/packages/shared/src/components/Modal/OperationMachineSearchModal.tsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport Modal from 'react-modal';\nimport { POINT_COLOR } from '../../common/configset'; //@ts-ignore\n\nimport IcSearchButton from '../../../public/images/ic_search.png'; //@ts-ignore\n\nimport IcX from '../../../public/images/ic_x.png';\nimport { ExcelTable } from '../Excel/ExcelTable';\nimport { searchModalList } from '../../common/modalInit'; //@ts-ignore\n\nimport Search_icon from '../../../public/images/btn_search.png';\nimport { RequestMethod } from '../../common/RequestFunctions';\nimport PaginationComponent from '../Pagination/PaginationComponent';\nimport Notiflix from 'notiflix';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { insert_machine_list } from \"../../reducer/machineSelect\";\nconst optionList = ['제조번호', '제조사명', '기계명', '', '담당자명'];\n\nconst OperationMachineSearchModal = ({\n  column,\n  row,\n  onRowChange\n}) => {\n  const selector = useSelector(state => state.MachineSelectReducer);\n  const dispatch = useDispatch();\n  const {\n    0: isOpen,\n    1: setIsOpen\n  } = useState(false);\n  const {\n    0: title,\n    1: setTitle\n  } = useState('기계');\n  const {\n    0: optionIndex,\n    1: setOptionIndex\n  } = useState(0);\n  const {\n    0: keyword,\n    1: setKeyword\n  } = useState('');\n  const {\n    0: selectRow,\n    1: setSelectRow\n  } = useState();\n  const {\n    0: searchList,\n    1: setSearchList\n  } = useState([]);\n  const {\n    0: searchKeyword,\n    1: setSearchKeyword\n  } = useState('');\n  const {\n    0: pageInfo,\n    1: setPageInfo\n  } = useState({\n    page: 1,\n    total: 1\n  });\n  useEffect(() => {\n    if (isOpen) SearchBasic(searchKeyword, optionIndex, 1).then(() => {\n      Notiflix.Loading.remove();\n    });\n  }, [isOpen, searchKeyword]);\n  useEffect(() => {\n    if (pageInfo.total > 1) {\n      SearchBasic(keyword, optionIndex, pageInfo.page).then(() => {\n        Notiflix.Loading.remove();\n      });\n    }\n  }, [pageInfo.page]);\n\n  const changeRow = (row, key) => {\n    let tmpData = _objectSpread(_objectSpread({}, row), {}, {\n      machine_id: row.name,\n      machine_idPK: row.machine_id,\n      manager: row.manager ? row.manager.name : null\n    });\n\n    return tmpData;\n  };\n\n  const SearchBasic = async (keyword, option, page) => {\n    Notiflix.Loading.circle();\n    setKeyword(keyword);\n    setOptionIndex(option);\n    const res = await RequestMethod('get', `machineSearch`, {\n      path: {\n        page: page,\n        renderItem: 18\n      },\n      params: {\n        keyword: keyword !== null && keyword !== void 0 ? keyword : '',\n        opt: option !== null && option !== void 0 ? option : 0\n      }\n    });\n\n    if (res && res.status === 200) {\n      let searchList = res.results.info_list.map((row, index) => {\n        return changeRow(row);\n      });\n      setPageInfo(_objectSpread(_objectSpread({}, pageInfo), {}, {\n        page: res.results.page,\n        total: res.results.totalPages\n      }));\n      setSearchList([...searchList]);\n    }\n  };\n\n  const ModalContents = () => {\n    if (column.searchType === 'operation' && row.index !== 1) {\n      return __jsx(React.Fragment, null);\n    }\n\n    if (column.disableType === 'record' && row.osd_id) {\n      return __jsx(\"div\", {\n        style: {\n          width: '100%',\n          height: 40,\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 20\n        }\n      }, __jsx(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 17\n        }\n      }, row[`${column.key}`]));\n    }\n\n    return __jsx(React.Fragment, null, __jsx(\"div\", {\n      style: {\n        width: 'calc(100% - 40px)',\n        height: 40\n      },\n      onClick: () => {\n        setIsOpen(true);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 13\n      }\n    }, row[`${column.key}`]), __jsx(\"div\", {\n      style: {\n        display: 'flex',\n        backgroundColor: POINT_COLOR,\n        width: 38,\n        height: 38,\n        justifyContent: 'center',\n        alignItems: 'center'\n      },\n      onClick: () => {\n        setIsOpen(true);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 13\n      }\n    }, __jsx(\"img\", {\n      style: {\n        width: 20,\n        height: 20\n      },\n      src: IcSearchButton,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }\n    })));\n  };\n\n  const result = () => {\n    let tmp_data = [];\n    selector.machineList.map((v, i) => {\n      searchList.map(value => {\n        if (value.machine_idPK === v.machine_idPK) {\n          tmp_data.push(_objectSpread(_objectSpread({}, value), {}, {\n            index: i + 1\n          }));\n        }\n      });\n\n      if (v.machine_idPK === null) {\n        tmp_data.push({\n          index: i + 1\n        });\n      }\n    }); // setSelectMachines(tmp_data);\n    // selector.machineList.map((v,i)=>{\n    //     if(tmp_data.length < selector.machineList.length){\n    //         console.log(i+1, \"???\")\n    //         tmp_data.push({...v,name:\"\",machine_id:-1,machine_idPK:-1 })\n    //     }\n    // })\n\n    return tmp_data;\n  }; // console.log(result());\n\n\n  return __jsx(SearchModalWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 9\n    }\n  }, ModalContents(), __jsx(Modal, {\n    isOpen: isOpen,\n    style: {\n      content: {\n        top: '50%',\n        left: '50%',\n        right: 'auto',\n        bottom: 'auto',\n        marginRight: '-50%',\n        transform: 'translate(-50%, -50%)',\n        padding: 0\n      },\n      overlay: {\n        background: 'rgba(0,0,0,.6)',\n        zIndex: 5\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    style: {\n      width: 1776,\n      height: 816\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 17\n    }\n  }, __jsx(\"div\", {\n    style: {\n      marginTop: 24,\n      marginLeft: 16,\n      marginRight: 16,\n      display: 'flex',\n      justifyContent: 'space-between'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 21\n    }\n  }, __jsx(\"p\", {\n    style: {\n      color: 'black',\n      fontSize: 22,\n      fontWeight: 'bold',\n      margin: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 25\n    }\n  }, title, \" \\uAC80\\uC0C9\"), __jsx(\"div\", {\n    style: {\n      cursor: 'pointer'\n    },\n    onClick: () => {\n      setIsOpen(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 25\n    }\n  }, __jsx(\"img\", {\n    style: {\n      width: 20,\n      height: 20\n    },\n    src: IcX,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 29\n    }\n  }))), __jsx(\"div\", {\n    style: {\n      padding: '0 16px 0 16px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 21\n    }\n  }, __jsx(\"div\", {\n    style: {\n      display: \"flex\",\n      justifyContent: \"space-between\",\n      width: \"1750px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 25\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 29\n    }\n  }, __jsx(\"div\", {\n    style: {\n      width: 850,\n      height: 32,\n      margin: '16px 0 16px 0px',\n      display: 'flex',\n      justifyContent: \"space-between\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 33\n    }\n  }, __jsx(\"div\", {\n    style: {\n      width: 120,\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      backgroundColor: '#F4F6FA',\n      border: '0.5px solid #B3B3B3',\n      borderRight: 'none'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 37\n    }\n  }, __jsx(\"select\", {\n    defaultValue: '-',\n    onChange: e => {\n      setOptionIndex(Number(e.target.value));\n    },\n    style: {\n      color: 'black',\n      backgroundColor: '#00000000',\n      border: 0,\n      height: 32,\n      width: 120,\n      fontSize: 15,\n      fontWeight: 'bold'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 41\n    }\n  }, optionList && optionList.map((v, i) => {\n    if (v) {\n      return __jsx(\"option\", {\n        value: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 64\n        }\n      }, v);\n    }\n  }))), __jsx(\"input\", {\n    value: keyword !== null && keyword !== void 0 ? keyword : \"\",\n    type: \"text\",\n    placeholder: \"\\uAC80\\uC0C9\\uC5B4\\uB97C \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694.\",\n    onChange: e => {\n      setKeyword(e.target.value);\n    },\n    onKeyDown: e => {\n      if (e.key === 'Enter') {\n        setSearchKeyword(keyword);\n      }\n    },\n    style: {\n      width: \"850px\",\n      height: \"32px\",\n      paddingLeft: \"0px\",\n      border: \"0.5px solid #B3B3B3\",\n      backgroundColor: 'rgba(0,0,0,0)'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 37\n    }\n  }), __jsx(\"div\", {\n    style: {\n      background: \"#19B9DF\",\n      width: \"32px\",\n      height: \"32px\",\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      cursor: 'pointer'\n    },\n    onClick: () => {\n      setSearchKeyword(keyword);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 37\n    }\n  }, __jsx(\"img\", {\n    src: Search_icon,\n    style: {\n      width: \"16px\",\n      height: \"16px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 41\n    }\n  }))), __jsx(ExcelTable, {\n    headerList: searchModalList.machine,\n    row: searchList !== null && searchList !== void 0 ? searchList : [],\n    setRow: () => {},\n    width: 850,\n    rowHeight: 32,\n    height: 576,\n    setSelectRow: e => {\n      if (selectRow !== undefined) {\n        selector.machineList[selectRow].machine_id = searchList[e].machine_id;\n        selector.machineList[selectRow].machine_idPK = searchList[e].machine_idPK;\n        dispatch(insert_machine_list(_objectSpread({}, selector)));\n      }\n    },\n    type: 'searchModal',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 33\n    }\n  }), __jsx(PaginationComponent, {\n    currentPage: pageInfo.page,\n    totalPage: pageInfo.total,\n    themeType: 'modal',\n    setPage: page => {\n      SearchBasic(searchKeyword, optionIndex, page).then(() => {\n        Notiflix.Loading.remove();\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 33\n    }\n  })), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 29\n    }\n  }, __jsx(\"div\", {\n    style: {\n      fontSize: \"20px\",\n      margin: \"-2px 0 \",\n      display: \"flex\",\n      justifyContent: \"space-between\",\n      alignItems: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 33\n    }\n  }, __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 37\n    }\n  }, \"\\uB4F1\\uB85D\\uD560 \\uAE30\\uACC4 \\uB9AC\\uC2A4\\uD2B8 \"), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 37\n    }\n  }, __jsx(Button, {\n    onClick: () => {\n      selector.machineList[selectRow].machine_id = null;\n      selector.machineList[selectRow].machine_idPK = null; // if(selector.process_length <= selector.machineList.length){\n      //     Notiflix.Report.warning(\"공정 수 보다 많습니다.\",\"\",\"확인\");\n      // }else{\n      //     selector.machineList.push({});\n      // }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 41\n    }\n  }, \"\\uC0AD\\uC81C\"))), __jsx(ExcelTable, {\n    headerList: searchModalList.select_machine,\n    row: result() // selector.machineList\n    // selectMachines\n    ,\n    setRow: () => {},\n    width: 850,\n    rowHeight: 32,\n    height: 576,\n    setSelectRow: e => {\n      setSelectRow(e);\n    },\n    type: 'searchModal',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 33\n    }\n  })))), __jsx(\"div\", {\n    style: {\n      height: 84,\n      display: 'flex',\n      alignItems: 'flex-end'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 21\n    }\n  }, __jsx(\"div\", {\n    onClick: () => {\n      setIsOpen(false);\n    },\n    style: {\n      width: 888,\n      height: 40,\n      backgroundColor: '#b3b3b3',\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 25\n    }\n  }, __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 29\n    }\n  }, \"\\uCDE8\\uC18C\")), __jsx(\"div\", {\n    onClick: () => {\n      if (selectRow !== undefined && selectRow !== null) {\n        onRowChange(_objectSpread(_objectSpread(_objectSpread({}, row), searchList[selectRow]), {}, {\n          name: row.name,\n          isChange: true\n        }));\n      }\n\n      setIsOpen(false);\n    },\n    style: {\n      width: 888,\n      height: 40,\n      backgroundColor: POINT_COLOR,\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 25\n    }\n  }, __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 352,\n      columnNumber: 29\n    }\n  }, \"\\uB4F1\\uB85D\\uD558\\uAE30\"))))));\n};\n\nconst SearchModalWrapper = styled.div`\n  display: flex;\n  width: 100%;\n`;\nconst Button = styled.button`\n    display:flex;\n    justify-content:center;\n    align-items:center;\n    font-size: 16px;\n    background:#B3B3B3;\n    width:100px;\n    height:30px;\n    border:none;\n`;\nexport { OperationMachineSearchModal };","map":{"version":3,"sources":["/Users/user/Desktop/sizl/mono_pop/packages/shared/src/components/Modal/OperationMachineSearchModal.tsx"],"names":["React","useEffect","useState","styled","Modal","POINT_COLOR","IcSearchButton","IcX","ExcelTable","searchModalList","Search_icon","RequestMethod","PaginationComponent","Notiflix","useDispatch","useSelector","insert_machine_list","optionList","OperationMachineSearchModal","column","row","onRowChange","selector","state","MachineSelectReducer","dispatch","isOpen","setIsOpen","title","setTitle","optionIndex","setOptionIndex","keyword","setKeyword","selectRow","setSelectRow","searchList","setSearchList","searchKeyword","setSearchKeyword","pageInfo","setPageInfo","page","total","SearchBasic","then","Loading","remove","changeRow","key","tmpData","machine_id","name","machine_idPK","manager","option","circle","res","path","renderItem","params","opt","status","results","info_list","map","index","totalPages","ModalContents","searchType","disableType","osd_id","width","height","display","justifyContent","alignItems","backgroundColor","result","tmp_data","machineList","v","i","value","push","content","top","left","right","bottom","marginRight","transform","padding","overlay","background","zIndex","marginTop","marginLeft","color","fontSize","fontWeight","margin","cursor","border","borderRight","e","Number","target","paddingLeft","machine","undefined","select_machine","isChange","SearchModalWrapper","div","Button","button"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react'\nimport {IExcelHeaderType} from '../../common/@types/type'\nimport styled from 'styled-components'\nimport Modal from 'react-modal'\nimport {POINT_COLOR} from '../../common/configset'\n//@ts-ignore\nimport IcSearchButton from '../../../public/images/ic_search.png'\n//@ts-ignore\nimport IcX from '../../../public/images/ic_x.png'\nimport {ExcelTable} from '../Excel/ExcelTable'\nimport {searchModalList} from '../../common/modalInit'\n//@ts-ignore\nimport Search_icon from '../../../public/images/btn_search.png'\nimport {RequestMethod} from '../../common/RequestFunctions'\nimport PaginationComponent from '../Pagination/PaginationComponent'\nimport Notiflix from 'notiflix'\nimport {RootState} from \"../../reducer\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {insert_machine_list} from \"../../reducer/machineSelect\";\n\ninterface IProps {\n    column: IExcelHeaderType\n    row: any\n    onRowChange: (e: any) => void\n}\n\nconst optionList = ['제조번호','제조사명','기계명','','담당자명']\n\nconst OperationMachineSearchModal = ({column, row, onRowChange}: IProps) => {\n\n    const selector = useSelector((state:RootState) => state.MachineSelectReducer);\n    const dispatch = useDispatch();\n\n    const [isOpen, setIsOpen] = useState<boolean>(false)\n    const [title, setTitle] = useState<string>('기계')\n    const [optionIndex, setOptionIndex] = useState<number>(0)\n    const [keyword, setKeyword] = useState<string>('')\n    const [selectRow, setSelectRow] = useState<number>()\n    const [searchList, setSearchList] = useState<any[]>([])\n    const [searchKeyword, setSearchKeyword] = useState<string>('')\n    const [pageInfo, setPageInfo] = useState<{page: number, total: number}>({\n        page: 1,\n        total: 1\n    })\n\n    useEffect(() => {\n        if(isOpen) SearchBasic(searchKeyword, optionIndex, 1).then(() => {\n            Notiflix.Loading.remove()\n        })\n\n    }, [isOpen, searchKeyword])\n\n    useEffect(() => {\n        if(pageInfo.total > 1){\n            SearchBasic(keyword, optionIndex, pageInfo.page).then(() => {\n                Notiflix.Loading.remove()\n            })\n        }\n    }, [pageInfo.page])\n\n    const changeRow = (row: any, key?: string) => {\n        let tmpData = {\n            ...row,\n            machine_id: row.name,\n            machine_idPK: row.machine_id,\n            manager: row.manager ? row.manager.name : null,\n        }\n        return tmpData\n    }\n\n    const SearchBasic = async (keyword: any, option: number, page: number) => {\n        Notiflix.Loading.circle()\n        setKeyword(keyword)\n        setOptionIndex(option)\n        const res = await RequestMethod('get', `machineSearch`,{\n            path: {\n                page: page,\n                renderItem: 18,\n            },\n            params: {\n                keyword: keyword ?? '',\n                opt: option ?? 0\n            }\n        })\n\n        if(res && res.status === 200){\n            let searchList = res.results.info_list.map((row: any, index: number) => {\n                return changeRow(row)\n            })\n\n            setPageInfo({\n                ...pageInfo,\n                page: res.results.page,\n                total: res.results.totalPages,\n            })\n\n            setSearchList([...searchList])\n        }\n    }\n\n    const ModalContents = () => {\n        if(column.searchType === 'operation' && row.index !== 1){\n            return <></>\n        }\n\n        if(column.disableType === 'record' && row.osd_id){\n            return <div style={{width: '100%', height: 40, display: 'flex', justifyContent: 'center', alignItems: 'center'}}>\n                <p>{row[`${column.key}`]}</p>\n            </div>\n        }\n\n        return <>\n            <div style={{width: 'calc(100% - 40px)', height: 40}} onClick={() => {\n                setIsOpen(true)\n            }}>\n                { row[`${column.key}`]}\n            </div>\n            <div style={{\n                display: 'flex',\n                backgroundColor: POINT_COLOR,\n                width: 38,\n                height: 38,\n                justifyContent: 'center',\n                alignItems: 'center'\n            }} onClick={() => {\n                setIsOpen(true)\n            }}>\n                <img style={{width: 20, height: 20}} src={IcSearchButton}/>\n            </div>\n        </>\n    }\n\n    const result = () => {\n        let tmp_data = [];\n        selector.machineList.map((v, i) => {\n            searchList.map((value) => {\n                if (value.machine_idPK === v.machine_idPK ) {\n                    tmp_data.push({...value,index:i+1})\n                }\n            })\n            if(v.machine_idPK === null){\n                tmp_data.push({index:i+1})\n            }\n        })\n        // setSelectMachines(tmp_data);\n        // selector.machineList.map((v,i)=>{\n        //     if(tmp_data.length < selector.machineList.length){\n        //         console.log(i+1, \"???\")\n        //         tmp_data.push({...v,name:\"\",machine_id:-1,machine_idPK:-1 })\n        //     }\n        // })\n\n\n            return tmp_data;\n    }\n\n    // console.log(result());\n\n    return (\n        <SearchModalWrapper >\n            { ModalContents() }\n            <Modal isOpen={isOpen} style={{\n                content: {\n                    top: '50%',\n                    left: '50%',\n                    right: 'auto',\n                    bottom: 'auto',\n                    marginRight: '-50%',\n                    transform: 'translate(-50%, -50%)',\n                    padding: 0\n                },\n                overlay: {\n                    background: 'rgba(0,0,0,.6)',\n                    zIndex: 5\n                }\n            }}>\n                <div style={{\n                    width: 1776,\n                    height: 816\n                }}>\n                    <div style={{\n                        marginTop: 24,\n                        marginLeft: 16,\n                        marginRight: 16,\n                        display: 'flex',\n                        justifyContent: 'space-between'\n                    }}>\n                        <p style={{\n                            color: 'black',\n                            fontSize: 22,\n                            fontWeight: 'bold',\n                            margin: 0,\n                        }}>{title} 검색</p>\n                        <div style={{cursor: 'pointer'}} onClick={() => {\n                            setIsOpen(false)\n                        }}>\n                            <img style={{width: 20, height: 20}} src={IcX}/>\n                        </div>\n                    </div>\n\n                    <div style={{padding: '0 16px 0 16px'}}>\n                        <div style={{display:\"flex\", justifyContent:\"space-between\", width:\"1750px\"}}>\n                            <div>\n                                <div style={{\n                                    width: 850, height: 32, margin: '16px 0 16px 0px',\n                                    display: 'flex', justifyContent:\"space-between\"\n                                }}>\n                                    <div style={{\n                                        width: 120, display: 'flex', justifyContent: 'center', alignItems: 'center',\n                                        backgroundColor: '#F4F6FA', border: '0.5px solid #B3B3B3',\n                                        borderRight: 'none'\n                                    }}>\n                                        <select\n                                            defaultValue={'-'}\n                                            onChange={(e) => {\n                                                setOptionIndex(Number(e.target.value))\n                                            }}\n                                            style={{\n                                                color: 'black',\n                                                backgroundColor: '#00000000',\n                                                border: 0,\n                                                height: 32,\n                                                width: 120,\n                                                fontSize:15,\n                                                fontWeight: 'bold'\n                                            }}\n                                        >\n                                            {\n                                                optionList && optionList.map((v, i) => {\n                                                    if(v){\n                                                        return <option value={i}>{v}</option>\n                                                    }\n                                                })\n                                            }\n                                        </select>\n                                    </div>\n                                    <input\n                                        value={keyword ?? \"\"}\n                                        type={\"text\"}\n                                        placeholder=\"검색어를 입력해주세요.\"\n                                        onChange={(e) => {setKeyword(e.target.value)}}\n                                        onKeyDown={(e) => {\n                                            if(e.key === 'Enter'){\n                                                setSearchKeyword(keyword)\n                                            }\n                                        }}\n                                        style={{\n                                            width:\"850px\",\n                                            height:\"32px\",\n                                            paddingLeft:\"0px\",\n                                            border:\"0.5px solid #B3B3B3\",\n                                            backgroundColor: 'rgba(0,0,0,0)'\n                                        }}\n                                    />\n                                    <div\n                                        style={{background:\"#19B9DF\", width:\"32px\",height:\"32px\",display:\"flex\",justifyContent:\"center\",alignItems:\"center\", cursor: 'pointer'}}\n                                        onClick={() => {\n                                            setSearchKeyword(keyword)\n                                        }}\n                                    >\n                                        <img src={Search_icon} style={{width:\"16px\",height:\"16px\"}} />\n                                    </div>\n                                </div>\n                                <ExcelTable\n                                    headerList={searchModalList.machine}\n                                    row={searchList ?? []}\n                                    setRow={() => {}}\n                                    width={850}\n                                    rowHeight={32}\n                                    height={576}\n                                    setSelectRow={(e) => {\n                                        if(selectRow !== undefined){\n                                            selector.machineList[selectRow].machine_id = searchList[e].machine_id;\n                                            selector.machineList[selectRow].machine_idPK = searchList[e].machine_idPK;\n                                            dispatch(insert_machine_list({...selector}))\n                                        }\n                                    }}\n                                    type={'searchModal'}\n                                />\n                                <PaginationComponent\n                                    currentPage={pageInfo.page}\n                                    totalPage={pageInfo.total}\n                                    themeType={'modal'}\n                                    setPage={(page) => {\n                                        SearchBasic(searchKeyword, optionIndex, page).then(() => {\n                                            Notiflix.Loading.remove()\n                                        })\n                                    }}\n                                />\n                            </div>\n                            <div>\n                                <div style={{ fontSize:\"20px\", margin:\"-2px 0 \", display:\"flex\", justifyContent:\"space-between\", alignItems:\"center\" }}>\n                                    <p>등록할 기계 리스트 </p>\n                                    <div>\n                                        <Button onClick={()=>{\n                                            selector.machineList[selectRow].machine_id = null;\n                                            selector.machineList[selectRow].machine_idPK = null;\n\n                                            // if(selector.process_length <= selector.machineList.length){\n                                            //     Notiflix.Report.warning(\"공정 수 보다 많습니다.\",\"\",\"확인\");\n                                            // }else{\n                                            //     selector.machineList.push({});\n                                            // }\n\n                                        }}>삭제</Button>\n                                    </div>\n                                </div>\n                                <ExcelTable\n                                    headerList={searchModalList.select_machine}\n                                    row={\n                                        result()\n                                        // selector.machineList\n                                        // selectMachines\n                                    }\n                                    setRow={() => {}}\n                                    width={850}\n                                    rowHeight={32}\n                                    height={576}\n                                    setSelectRow={(e) => {\n                                        setSelectRow(e)\n                                    }}\n                                    type={'searchModal'}\n                                />\n                            </div>\n\n                        </div>\n\n                    </div>\n                    <div style={{ height: 84, display: 'flex', alignItems: 'flex-end'}}>\n                        <div\n                            onClick={() => {\n                                setIsOpen(false)\n                            }}\n                            style={{width: 888, height: 40, backgroundColor: '#b3b3b3', display: 'flex', justifyContent: 'center', alignItems: 'center'}}\n                        >\n                            <p>취소</p>\n                        </div>\n                        <div\n                            onClick={() => {\n                                if(selectRow !== undefined && selectRow !== null){\n                                    onRowChange({\n                                        ...row,\n                                        ...searchList[selectRow],\n                                        name: row.name,\n                                        isChange: true\n                                    })\n                                }\n                                setIsOpen(false)\n                            }}\n                            style={{width: 888, height: 40, backgroundColor: POINT_COLOR, display: 'flex', justifyContent: 'center', alignItems: 'center'}}\n                        >\n                            <p>등록하기</p>\n                        </div>\n                    </div>\n                </div>\n            </Modal>\n        </SearchModalWrapper>\n    )\n}\n\nconst SearchModalWrapper = styled.div`\n  display: flex;\n  width: 100%;\n`\n\nconst Button = styled.button`\n    display:flex;\n    justify-content:center;\n    align-items:center;\n    font-size: 16px;\n    background:#B3B3B3;\n    width:100px;\n    height:30px;\n    border:none;\n`;\n\nexport {OperationMachineSearchModal}\n"]},"metadata":{},"sourceType":"module"}