{"ast":null,"code":"var _jsxFileName = \"/Users/user/Desktop/sizl/mono_pop/packages/main/pages/mes/basic/authority/member.tsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect, useState } from 'react';\nimport MenuNavigation from '../../../../component/MenuNav/MenuNavigation';\nimport ProfileHeader from '../../../../component/Profile/ProfileHeader';\nimport { ContainerWrapper } from '../../../../styles/styledComponents';\nimport { AUTHORITY_LIST, MAX_VALUE } from '../../../../common/configset';\nimport { RequestMethod } from '../../../../common/RequestFunctions';\nimport Notiflix from 'notiflix';\nimport styled from 'styled-components';\nimport { useRouter } from 'next/router';\nconst title = '권한 관리';\n\nconst AuthorityContainer = () => {\n  const {\n    0: row,\n    1: setRow\n  } = useState([]);\n  const {\n    0: auth,\n    1: setAuth\n  } = useState(AUTHORITY_LIST);\n  const {\n    0: selectIndex,\n    1: setSelectIndex\n  } = useState(-1);\n  const router = useRouter();\n  useEffect(() => {\n    loadAuthorityList().then(() => Notiflix.Loading.remove());\n  }, []);\n\n  const loadAuthorityList = async () => {\n    Notiflix.Loading.circle();\n    const res = await RequestMethod('get', 'authorityList', {\n      path: {\n        page: 1,\n        renderItem: MAX_VALUE\n      }\n    });\n\n    if (res && res.status === 200) {\n      setRow([...res.results.info_list]);\n    } else if (res.state === 401) {\n      Notiflix.Report.failure('불러올 수 없습니다.', '권한이 없습니다.', '확인', () => {\n        router.back();\n      });\n    }\n  };\n\n  const changeListToAuth = list => {\n    let tmpMenu = auth;\n\n    const MenuDivide = dmenu => {\n      let tmp = dmenu;\n      if (tmp.value) tmp.check = list.indexOf(tmp.value) !== -1; // using stack structure, recursively add authorities\n\n      tmp.child = tmp.child.map(inner => MenuDivide(inner));\n      let cnt = 0;\n\n      if (tmp.child.length !== 0) {\n        tmp.child.map(inner => {\n          if (inner.check) cnt++;\n        });\n        tmp.check = tmp.child.length === cnt;\n      }\n\n      return tmp;\n    };\n\n    tmpMenu = tmpMenu.map(menu => MenuDivide(menu));\n    setAuth([...tmpMenu]);\n  };\n\n  const changeAuthToList = index => {\n    let tmpAuth = [];\n\n    const checkAuth = dmenu => {\n      if (dmenu.value && dmenu.checkable && dmenu.check) {\n        tmpAuth.push(dmenu.value);\n      }\n\n      dmenu.child.map(inner => {\n        return checkAuth(inner);\n      });\n    };\n\n    auth.map(menu => {\n      checkAuth(menu);\n    });\n    return tmpAuth;\n  };\n\n  const updateAuth = async data => {\n    if (data.ca_id) {\n      const updatedAuthorities = changeAuthToList(data.authorities);\n      await RequestMethod('put', 'authorityUpdate', _objectSpread(_objectSpread({}, data), {}, {\n        authorities: updatedAuthorities\n      })).then(async res => {\n        if (res.status === 200) {\n          await new Promise(resolve => {\n            changeListToAuth(updatedAuthorities); // update row datum\n\n            let temporaryRows = row;\n            temporaryRows[selectIndex].authorities = updatedAuthorities;\n            setRow([...temporaryRows]);\n            resolve(true);\n          }).then(() => Notiflix.Report.success('저장 성공!', '권한이 성공적으로 변경됐습니다.', '확인', () => {\n            loadAuthorityList().then(() => Notiflix.Loading.remove());\n          }));\n        }\n      });\n    }\n  };\n\n  const createAuth = async data => {\n    if (data) {\n      const addedAuthorities = changeAuthToList(data.authorities);\n      const res = await RequestMethod('post', 'authorityCreate', {\n        name: data.name,\n        authorities: addedAuthorities\n      });\n\n      if (res.status === 200) {\n        await new Promise(resolve => {\n          changeListToAuth(addedAuthorities); // update row datum\n\n          let temporaryRows = row;\n          temporaryRows[selectIndex].authorities = addedAuthorities;\n          setRow([...temporaryRows]);\n          resolve(true);\n        }).then(() => Notiflix.Report.success('저장 성공!', '권한이 성공적으로 등록됐습니다.', '확인', () => {\n          loadAuthorityList().then(() => Notiflix.Loading.remove());\n        }));\n      }\n    } else {\n      Notiflix.Report.failure('권한 없음', '권한을 선택해주세요', '확인');\n    }\n  };\n\n  const deleteAuth = async () => {\n    if (selectIndex !== -1 && row[selectIndex].ca_id) {\n      const res = await RequestMethod('delete', 'authorityDelete', {\n        ca_id: row[selectIndex].ca_id\n      });\n\n      if (res.status === 200) {\n        Notiflix.Report.success('삭제 성공!', '권한이 성공적으로 삭제됐습니다.', '확인', () => {\n          loadAuthorityList().then(() => {\n            Notiflix.Loading.remove();\n          });\n        });\n      }\n    } else {\n      let tmpRow = row;\n      tmpRow.splice(selectIndex, 1);\n      setRow([...tmpRow]);\n    }\n\n    setSelectIndex(-1);\n  };\n\n  const addRow = () => {\n    setRow([...row, {\n      ca_id: \"\",\n      name: '',\n      authorities: []\n    }]);\n  };\n\n  const leftButtonOnClick = index => {\n    switch (index) {\n      case 0:\n        return addRow();\n\n      case 1:\n        return deleteAuth();\n    }\n  };\n\n  const saveAppointmentAuthorityDetails = async () => {\n    Notiflix.Loading.hourglass('권한을 저장하고 있습니다..');\n    new Promise(async resolve => {\n      if (selectIndex !== -1 && row[selectIndex].ca_id) {\n        await updateAuth(row[selectIndex]);\n      } else {\n        await createAuth(row[selectIndex]);\n      }\n\n      resolve(true);\n    }).then(() => Notiflix.Loading.remove(1000));\n  };\n\n  return __jsx(\"div\", {\n    style: {\n      display: 'flex'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 5\n    }\n  }, __jsx(MenuNavigation, {\n    pageType: 'BASIC',\n    subType: 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 7\n    }\n  }), __jsx(ContainerWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 7\n    }\n  }, __jsx(ProfileHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 9\n    }\n  })));\n};\n\nconst HeaderButton = styled.button`\n    height:32px;\n    color:white;\n    border-radius:6px;\n    font-size:15px;\n    font-weight:bold;\n    background:#717C90;\n    padding: 0 20px;\n    cursor: pointer;\n    display:flex;\n    margin-left: 16px;\n    justify-content:center;\n    align-items:center;\n`;\nexport default AuthorityContainer;","map":{"version":3,"sources":["/Users/user/Desktop/sizl/mono_pop/packages/main/pages/mes/basic/authority/member.tsx"],"names":["React","useEffect","useState","MenuNavigation","ProfileHeader","ContainerWrapper","AUTHORITY_LIST","MAX_VALUE","RequestMethod","Notiflix","styled","useRouter","title","AuthorityContainer","row","setRow","auth","setAuth","selectIndex","setSelectIndex","router","loadAuthorityList","then","Loading","remove","circle","res","path","page","renderItem","status","results","info_list","state","Report","failure","back","changeListToAuth","list","tmpMenu","MenuDivide","dmenu","tmp","value","check","indexOf","child","map","inner","cnt","length","menu","changeAuthToList","index","tmpAuth","checkAuth","checkable","push","updateAuth","data","ca_id","updatedAuthorities","authorities","Promise","resolve","temporaryRows","success","createAuth","addedAuthorities","name","deleteAuth","tmpRow","splice","addRow","leftButtonOnClick","saveAppointmentAuthorityDetails","hourglass","display","HeaderButton","button"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react'\nimport ExcelTable from '../../../../component/Excel/ExcelTable'\nimport MenuNavigation from '../../../../component/MenuNav/MenuNavigation'\nimport ProfileHeader from '../../../../component/Profile/ProfileHeader'\nimport PageHeader from '../../../../component/Header/Header'\nimport { ContainerWrapper } from '../../../../styles/styledComponents'\nimport TreeViewTable from '../../../../component/TreeView/TreeView'\nimport {AUTHORITY_LIST, MAX_VALUE} from '../../../../common/configset'\nimport { IMenu } from '../../../../common/@types/type'\nimport { requestApi, RequestMethod } from '../../../../common/RequestFunctions'\nimport cookies from 'next-cookies'\nimport TextEditor from '../../../../component/InputBox/ExcelBasicInputBox'\nimport Notiflix from 'notiflix'\nimport { AxiosResponse } from \"axios\";\nimport styled from 'styled-components'\nimport ExcelDownloadModal from '../../../../component/Modal/ExcelDownloadMoadal'\nimport {useRouter} from 'next/router'\n\nconst title = '권한 관리'\nconst AuthorityContainer = () => {\n  const [row, setRow] = useState<Array<any>>([])\n  const [auth, setAuth] = useState<Array<IMenu>>(AUTHORITY_LIST)\n  const [selectIndex, setSelectIndex] = useState<number>(-1)\n\n  const router = useRouter()\n\n  useEffect(() => {\n    loadAuthorityList().then(() => Notiflix.Loading.remove())\n  }, [])\n\n  const loadAuthorityList = async () => {\n    Notiflix.Loading.circle()\n    const res = await RequestMethod('get', 'authorityList',\n      {\n       path: {\n         page: 1,\n         renderItem: MAX_VALUE\n       }\n      })\n\n    if(res && res.status === 200) {\n      setRow([...res.results.info_list])\n    }else if (res.state === 401) {\n      Notiflix.Report.failure('불러올 수 없습니다.', '권한이 없습니다.', '확인', () => {\n        router.back()\n      })\n    }\n  }\n\n  const changeListToAuth = (list: string[]) => {\n    let tmpMenu = auth\n    const MenuDivide = (dmenu: IMenu) => {\n      let tmp = dmenu\n      if (tmp.value) tmp.check = list.indexOf(tmp.value) !== -1;\n      // using stack structure, recursively add authorities\n      tmp.child = tmp.child.map(inner => MenuDivide(inner))\n\n      let cnt = 0\n      if (tmp.child.length !== 0) {\n        tmp.child.map(inner => {\n          if (inner.check) cnt++\n        })\n        tmp.check = tmp.child.length === cnt;\n      }\n\n      return tmp\n    }\n\n    tmpMenu = tmpMenu.map(menu => MenuDivide(menu))\n    setAuth([...tmpMenu])\n  }\n\n  const changeAuthToList = (index: number) => {\n    let tmpAuth: string[] = []\n\n    const checkAuth = (dmenu: IMenu) => {\n      if(dmenu.value && dmenu.checkable && dmenu.check) {\n        tmpAuth.push(dmenu.value)\n      }\n\n      dmenu.child.map(inner => {\n        return checkAuth(inner)\n      })\n    }\n\n    auth.map(menu => {\n      checkAuth(menu)\n    })\n\n    return tmpAuth\n  }\n\n  const updateAuth = async (data: any) => {\n    if(data.ca_id){\n      const updatedAuthorities = changeAuthToList(data.authorities)\n      await RequestMethod('put', 'authorityUpdate', {\n        ...data,\n        authorities: updatedAuthorities\n      }).then(async (res: AxiosResponse) => {\n        if (res.status === 200){\n          await new Promise((resolve) => {\n            changeListToAuth(updatedAuthorities)\n            // update row datum\n            let temporaryRows = row\n            temporaryRows[selectIndex].authorities = updatedAuthorities\n            setRow([ ...temporaryRows])\n            resolve(true)\n          }).then(() =>Notiflix.Report.success('저장 성공!', '권한이 성공적으로 변경됐습니다.', '확인', () => {\n            loadAuthorityList().then(() => Notiflix.Loading.remove())\n          }))\n        }\n      })\n    }\n  }\n\n  const createAuth = async (data: any) => {\n    if(data){\n      const addedAuthorities = changeAuthToList(data.authorities)\n      const res = await RequestMethod('post', 'authorityCreate', {\n        name: data.name,\n        authorities: addedAuthorities\n      })\n\n      if (res.status === 200){\n        await new Promise((resolve) => {\n          changeListToAuth(addedAuthorities)\n          // update row datum\n          let temporaryRows = row\n          temporaryRows[selectIndex].authorities = addedAuthorities\n          setRow([ ...temporaryRows])\n          resolve(true)\n        }).then(() => Notiflix.Report.success('저장 성공!', '권한이 성공적으로 등록됐습니다.', '확인', () => {\n          loadAuthorityList().then(() => Notiflix.Loading.remove())\n        }))\n      }\n    } else {\n      Notiflix.Report.failure('권한 없음', '권한을 선택해주세요', '확인')\n    }\n  }\n\n  const deleteAuth = async () => {\n    if(selectIndex !== -1 && row[selectIndex].ca_id){\n      const res = await RequestMethod('delete', 'authorityDelete', {\n        ca_id: row[selectIndex].ca_id\n      })\n\n      if (res.status === 200){\n        Notiflix.Report.success('삭제 성공!', '권한이 성공적으로 삭제됐습니다.', '확인', () => {\n          loadAuthorityList().then(() => {\n            Notiflix.Loading.remove()\n          })\n        })\n      }\n    } else {\n      let tmpRow = row\n      tmpRow.splice(selectIndex, 1)\n\n      setRow([...tmpRow])\n    }\n    setSelectIndex(-1)\n  }\n\n  const addRow = () => {\n    setRow([...row, {\n      ca_id: \"\",\n      name: '',\n      authorities: []\n    }])\n  }\n\n  const leftButtonOnClick = (index: number) => {\n    switch(index){\n      case 0:\n        return addRow()\n      case 1:\n        return deleteAuth()\n    }\n  }\n\n  const saveAppointmentAuthorityDetails = async () => {\n    Notiflix.Loading.hourglass('권한을 저장하고 있습니다..')\n    new Promise( async (resolve) => {\n      if (selectIndex !== -1 && row[selectIndex].ca_id) {\n        await updateAuth(row[selectIndex])\n      } else {\n        await createAuth(row[selectIndex])\n      }\n      resolve(true)\n    }).then(() => Notiflix.Loading.remove(1000))\n  }\n\n  return (\n    <div style={{display: 'flex'}}>\n      <MenuNavigation pageType={'BASIC'} subType={0}/>\n      <ContainerWrapper>\n        <ProfileHeader/>\n\n      </ContainerWrapper>\n    </div>\n  );\n}\n\nconst HeaderButton = styled.button`\n    height:32px;\n    color:white;\n    border-radius:6px;\n    font-size:15px;\n    font-weight:bold;\n    background:#717C90;\n    padding: 0 20px;\n    cursor: pointer;\n    display:flex;\n    margin-left: 16px;\n    justify-content:center;\n    align-items:center;\n`;\n\nexport default AuthorityContainer;\n\n"]},"metadata":{},"sourceType":"module"}