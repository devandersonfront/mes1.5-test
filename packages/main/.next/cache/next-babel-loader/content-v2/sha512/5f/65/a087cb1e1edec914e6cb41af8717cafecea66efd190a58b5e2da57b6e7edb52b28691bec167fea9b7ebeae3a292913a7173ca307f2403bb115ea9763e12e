{"ast":null,"code":"import _regeneratorRuntime from \"/Users/user/Desktop/sizl/mono_pop/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _toConsumableArray from \"/Users/user/Desktop/sizl/mono_pop/node_modules/next/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"/Users/user/Desktop/sizl/mono_pop/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _asyncToGenerator from \"/Users/user/Desktop/sizl/mono_pop/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/Users/user/Desktop/sizl/mono_pop/packages/main/pages/mes/rawmaterial/stock.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useState } from 'react';\nimport ExcelTable from '../../../component/Excel/ExcelTable';\nimport MenuNavigation from '../../../component/MenuNav/MenuNavigation';\nimport ProfileHeader from '../../../component/Profile/ProfileHeader';\nimport PageHeader from '../../../component/Header/Header'; // @ts-ignore\n\nimport { SelectColumn } from 'react-data-grid';\nimport { RequestMethod } from '../../../common/RequestFunctions';\nimport { columnlist } from \"../../../common/columnInit\";\nimport Notiflix from \"notiflix\";\nimport { useRouter } from 'next/router';\nimport { MAX_VALUE } from '../../../common/configset';\nimport TextEditor from '../../../component/InputBox/ExcelBasicInputBox';\nimport { excelDownload } from '../../../common/excelDownloadFunction';\nimport PaginationComponent from '../../../component/Pagination/PaginationComponent';\nimport ExcelDownloadModal from '../../../component/Modal/ExcelDownloadMoadal';\nimport moment from 'moment';\nvar title = '원자재 재고 관리';\nvar optList = ['고객사명', '모델명', 'CODE', '품명', 'Lot번호'];\n\nvar BasicContainer = function BasicContainer(_ref) {\n  _s();\n\n  var page = _ref.page,\n      keyword = _ref.keyword,\n      option = _ref.option;\n  var router = useRouter();\n\n  var _useState = useState(false),\n      excelOpen = _useState[0],\n      setExcelOpen = _useState[1];\n\n  var _useState2 = useState([{\n    name: \"\",\n    id: \"\"\n  }]),\n      basicRow = _useState2[0],\n      setBasicRow = _useState2[1];\n\n  var _useState3 = useState(false),\n      nzState = _useState3[0],\n      setNzState = _useState3[1];\n\n  var changeNzState = function changeNzState(value) {\n    setNzState(value);\n  };\n\n  var _useState4 = useState(columnlist.rawstock),\n      column = _useState4[0],\n      setColumn = _useState4[1];\n\n  var _useState5 = useState(new Set()),\n      selectList = _useState5[0],\n      setSelectList = _useState5[1];\n\n  var _useState6 = useState(optList),\n      optionList = _useState6[0],\n      setOptionList = _useState6[1];\n\n  var _useState7 = useState(0),\n      optionIndex = _useState7[0],\n      setOptionIndex = _useState7[1];\n\n  var _useState8 = useState({\n    page: 1,\n    total: 1\n  }),\n      pageInfo = _useState8[0],\n      setPageInfo = _useState8[1];\n\n  var _useState9 = useState({\n    from: moment().subtract(5, \"month\").startOf(\"month\").format(\"YYYY-MM-DD\"),\n    to: moment().endOf('month').format('YYYY-MM-DD')\n  }),\n      selectDate = _useState9[0],\n      setSelectDate = _useState9[1];\n\n  useEffect(function () {\n    setOptionIndex(option);\n\n    if (keyword) {\n      SearchBasic(keyword, option, page);\n    } else {\n      LoadBasic(page).then(function () {});\n    }\n  }, [page, keyword, option, selectDate, nzState]);\n\n  var loadAllSelectItems = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(column) {\n      var tmpColumn;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              tmpColumn = column.map( /*#__PURE__*/function () {\n                var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(v) {\n                  var tmpKey, res;\n                  return _regeneratorRuntime.wrap(function _callee$(_context) {\n                    while (1) {\n                      switch (_context.prev = _context.next) {\n                        case 0:\n                          if (!(v.selectList && v.selectList.length === 0)) {\n                            _context.next = 9;\n                            break;\n                          }\n\n                          tmpKey = v.key;\n\n                          if (tmpKey === 'customer_id') {\n                            tmpKey = 'customer';\n                          } else if (tmpKey === 'cm_id') {\n                            tmpKey = 'model';\n                          }\n\n                          _context.next = 5;\n                          return RequestMethod('get', \"\".concat(tmpKey, \"List\"), {\n                            path: {\n                              page: 1,\n                              renderItem: MAX_VALUE\n                            }\n                          });\n\n                        case 5:\n                          res = _context.sent;\n                          return _context.abrupt(\"return\", _objectSpread(_objectSpread({}, v), {}, {\n                            selectList: _toConsumableArray(res.results.info_list.map(function (value) {\n                              return _objectSpread(_objectSpread({}, value), {}, {\n                                pk: value.ca_id\n                              });\n                            }))\n                          }));\n\n                        case 9:\n                          if (!v.selectList) {\n                            _context.next = 13;\n                            break;\n                          }\n\n                          return _context.abrupt(\"return\", _objectSpread(_objectSpread({}, v), {}, {\n                            pk: v.unit_id,\n                            result: changeNzState\n                          }));\n\n                        case 13:\n                          return _context.abrupt(\"return\", v);\n\n                        case 14:\n                        case \"end\":\n                          return _context.stop();\n                      }\n                    }\n                  }, _callee);\n                }));\n\n                return function (_x2) {\n                  return _ref3.apply(this, arguments);\n                };\n              }());\n              Promise.all(tmpColumn).then(function (res) {\n                setColumn(_toConsumableArray(res));\n              });\n\n            case 2:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function loadAllSelectItems(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var SaveBasic = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return RequestMethod('post', \"rawinSave\", {\n                warehousing: basicRow.map(function (row, i) {\n                  if (selectList.has(row.id)) {\n                    var additional = [];\n                    column.map(function (v) {\n                      if (v.type === 'additional') {\n                        additional.push(v);\n                      }\n                    });\n                    var selectData = {};\n                    return _objectSpread(_objectSpread(_objectSpread({}, row), selectData), {}, {\n                      current: row.exhaustionPK ? 0 : row.current,\n                      additional: _toConsumableArray(additional.map(function (v) {\n                        if (row[v.name]) {\n                          return {\n                            id: v.id,\n                            title: v.name,\n                            value: row[v.name],\n                            unit: v.unit\n                          };\n                        }\n                      }).filter(function (v) {\n                        return v;\n                      }))\n                    });\n                  }\n                }).filter(function (v) {\n                  return v;\n                })\n              });\n\n            case 2:\n              res = _context3.sent;\n\n              if (res) {\n                if (res.status === 200) {\n                  Notiflix.Report.success('저장되었습니다.', '', '확인');\n\n                  if (keyword) {\n                    SearchBasic(keyword, option, page).then(function () {\n                      Notiflix.Loading.remove();\n                    });\n                  } else {\n                    LoadBasic(page).then(function () {\n                      Notiflix.Loading.remove();\n                    });\n                  }\n                }\n              }\n\n            case 4:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function SaveBasic() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  var DeleteBasic = /*#__PURE__*/function () {\n    var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.next = 2;\n              return RequestMethod('delete', \"processDelete\", {\n                processes: basicRow.map(function (row, i) {\n                  if (selectList.has(row.id)) {\n                    var pk = \"\";\n                    Object.keys(row).map(function (v) {\n                      if (v.indexOf(\"_id\") !== -1) {\n                        pk = v;\n                      }\n                    });\n                    return row[pk];\n                  }\n                }).filter(function (v) {\n                  return v;\n                })\n              });\n\n            case 2:\n              res = _context4.sent;\n\n              if (res) {\n                if (res.status === 200) {\n                  LoadBasic(pageInfo.page);\n                }\n              }\n\n            case 4:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    return function DeleteBasic() {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n\n  var LoadBasic = /*#__PURE__*/function () {\n    var _ref6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(page) {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.next = 2;\n              return RequestMethod('get', \"rawinList\", {\n                path: {\n                  page: page || page !== 0 ? page : 1,\n                  renderItem: 18\n                },\n                params: {\n                  tab: 'ROLE_RMAT_02',\n                  nz: nzState,\n                  from: selectDate.from,\n                  to: selectDate.to\n                }\n              });\n\n            case 2:\n              res = _context5.sent;\n\n              if (res && res.status === 200) {\n                if (res.results.totalPages < page) {\n                  LoadBasic(page - 1);\n                } else {\n                  if (res.results.totalPages < page) {\n                    LoadBasic(page - 1);\n                  } else {\n                    setPageInfo(_objectSpread(_objectSpread({}, pageInfo), {}, {\n                      page: res.results.page,\n                      total: res.results.totalPages\n                    }));\n                    cleanUpData(res);\n                  }\n                }\n              } else if (res.state === 401) {\n                Notiflix.Report.failure('불러올 수 없습니다.', '권한이 없습니다.', '확인', function () {\n                  router.back();\n                });\n              }\n\n            case 4:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5);\n    }));\n\n    return function LoadBasic(_x3) {\n      return _ref6.apply(this, arguments);\n    };\n  }();\n\n  var SearchBasic = /*#__PURE__*/function () {\n    var _ref7 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(keyword, option, isPaging) {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              if (!isPaging) {\n                setOptionIndex(option);\n              }\n\n              _context6.next = 3;\n              return RequestMethod('get', \"rawinSearch\", {\n                path: {\n                  page: isPaging !== null && isPaging !== void 0 ? isPaging : 1,\n                  renderItem: 18\n                },\n                params: {\n                  keyword: keyword !== null && keyword !== void 0 ? keyword : '',\n                  opt: option !== null && option !== void 0 ? option : 0,\n                  nz: nzState,\n                  tab: 'ROLE_RMAT_02',\n                  from: selectDate.from,\n                  to: selectDate.to\n                }\n              });\n\n            case 3:\n              res = _context6.sent;\n\n              if (res && res.status === 200) {\n                setPageInfo(_objectSpread(_objectSpread({}, pageInfo), {}, {\n                  page: res.results.page,\n                  total: res.results.totalPages\n                }));\n                cleanUpData(res);\n              }\n\n            case 5:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6);\n    }));\n\n    return function SearchBasic(_x4, _x5, _x6) {\n      return _ref7.apply(this, arguments);\n    };\n  }();\n\n  var cleanUpData = function cleanUpData(res) {\n    var tmpColumn = columnlist.rawstock;\n    var tmpRow = [];\n    tmpColumn = tmpColumn.map(function (column) {\n      var menuData;\n      res.results.menus && res.results.menus.map(function (menu) {\n        if (menu.colName === column.key) {\n          menuData = {\n            id: menu.id,\n            name: menu.title,\n            width: menu.width,\n            tab: menu.tab,\n            unit: menu.unit\n          };\n        } else if (menu.colName === 'id' && column.key === 'tmpId') {\n          menuData = {\n            id: menu.id,\n            name: menu.title,\n            width: menu.width,\n            tab: menu.tab,\n            unit: menu.unit\n          };\n        }\n      });\n\n      if (menuData) {\n        return _objectSpread(_objectSpread({}, column), menuData);\n      }\n    }).filter(function (v) {\n      return v;\n    });\n    loadAllSelectItems(tmpColumn);\n    var additionalMenus = res.results.menus ? res.results.menus.map(function (menu) {\n      if (menu.colName === null) {\n        return {\n          id: menu.id,\n          name: menu.title,\n          width: menu.width,\n          key: menu.title,\n          editor: TextEditor,\n          type: 'additional',\n          unit: menu.unit\n        };\n      }\n    }).filter(function (v) {\n      return v;\n    }) : [];\n    tmpRow = res.results.info_list;\n    var additionalData = [];\n    additionalMenus.map(function (v) {\n      if (v.type === 'additional') {\n        additionalData.push(v.key);\n      }\n    });\n    var tmpBasicRow = tmpRow.map(function (row, index) {\n      var appendAdditional = {};\n      row.additional && row.additional.map(function (v) {\n        appendAdditional = _objectSpread(_objectSpread({}, appendAdditional), {}, _defineProperty({}, v.title, v.value));\n      });\n      var random_id = Math.random() * 1000;\n      return _objectSpread(_objectSpread({\n        exhaustion: row.current === 0 ? '사용완료' : '-',\n        exhaustionPK: row.current === 0,\n        ln_id: row.ln_id,\n        rm_id: row.raw_material.rm_id,\n        customer_id: row.raw_material.model.customer.name,\n        cm_id: row.raw_material.model.model,\n        code: row.raw_material.code,\n        name: row.raw_material.name,\n        texture: row.raw_material.texture,\n        depth: row.raw_material.depth,\n        width: row.raw_material.width,\n        height: row.raw_material.height,\n        type: row.raw_material.type,\n        amount: row.amount,\n        date: row.date,\n        number: row.number,\n        blanking: row.blanking,\n        current: row.current\n      }, appendAdditional), {}, {\n        id: \"rowstack_\".concat(random_id)\n      });\n    });\n    setBasicRow(_toConsumableArray(tmpBasicRow));\n  };\n\n  var downloadExcel = function downloadExcel() {\n    var tmpSelectList = [];\n    basicRow.map(function (row) {\n      tmpSelectList.push(selectList.has(row.id));\n    });\n    excelDownload(column, basicRow, \"\\uC6D0\\uC790\\uC7AC \\uC7AC\\uACE0 \\uAD00\\uB9AC\", 'rawmaterial_input', tmpSelectList);\n  };\n\n  var onClickHeaderButton = function onClickHeaderButton(index) {\n    switch (index) {\n      case 0:\n        setExcelOpen(true);\n        break;\n\n      case 1:\n        SaveBasic();\n        break;\n    }\n  };\n\n  return __jsx(\"div\", {\n    style: {\n      display: 'flex'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 378,\n      columnNumber: 5\n    }\n  }, __jsx(MenuNavigation, {\n    pageType: 'MES',\n    subType: 1,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 379,\n      columnNumber: 7\n    }\n  }), __jsx(\"div\", {\n    style: {\n      paddingBottom: 40\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 380,\n      columnNumber: 7\n    }\n  }, __jsx(ProfileHeader, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 381,\n      columnNumber: 9\n    }\n  }), __jsx(PageHeader, {\n    isSearch: true,\n    searchKeyword: keyword,\n    onChangeSearchKeyword: function onChangeSearchKeyword(keyword) {\n      if (keyword) {\n        router.push(\"/mes/rawmaterial/stock?page=1&keyword=\".concat(keyword, \"&opt=\").concat(optionIndex !== null && optionIndex !== void 0 ? optionIndex : 0));\n      } else {\n        router.push(\"/mes/rawmaterial/stock?page=1&keyword=\");\n      }\n    },\n    searchOptionList: optionList,\n    onChangeSearchOption: function onChangeSearchOption(option) {\n      setOptionIndex(option);\n    },\n    isCalendar: true,\n    calendarType: 'period',\n    selectDate: selectDate,\n    optionIndex: optionIndex //@ts-ignore\n    ,\n    setSelectDate: setSelectDate,\n    title: title,\n    buttons: ['엑셀로 받기', '저장하기'],\n    buttonsOnclick: onClickHeaderButton,\n    dataLimit: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 382,\n      columnNumber: 9\n    }\n  }), __jsx(ExcelTable, {\n    editable: true,\n    resizable: true,\n    headerList: [SelectColumn].concat(_toConsumableArray(column)),\n    row: basicRow // setRow={setBasicRow}\n    ,\n    setRow: function setRow(e) {\n      var tmp = selectList;\n      e.map(function (v) {\n        if (v.isChange) tmp.add(v.id);\n      });\n      setSelectList(tmp);\n      setBasicRow(e);\n    },\n    selectList: selectList //@ts-ignore\n    ,\n    setSelectList: setSelectList,\n    disableVirtualization: true,\n    height: basicRow.length * 40 >= 40 * 18 + 56 ? 40 * 19 : basicRow.length * 40 + 56,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 408,\n      columnNumber: 9\n    }\n  }), __jsx(PaginationComponent, {\n    currentPage: pageInfo.page,\n    totalPage: pageInfo.total,\n    setPage: function setPage(page) {\n      if (keyword) {\n        router.push(\"/mes/rawmaterial/stock?page=\".concat(page, \"&keyword=\").concat(keyword, \"&opt=\").concat(option));\n      } else {\n        router.push(\"/mes/rawmaterial/stock?page=\".concat(page));\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 431,\n      columnNumber: 9\n    }\n  })), __jsx(ExcelDownloadModal, {\n    isOpen: excelOpen,\n    column: column,\n    basicRow: basicRow,\n    filename: \"\\uC6D0\\uC790\\uC7AC\\uC7AC\\uACE0\\uAD00\\uB9AC\",\n    sheetname: \"\\uC6D0\\uC790\\uC7AC\\uC7AC\\uACE0\\uAD00\\uB9AC\",\n    selectList: selectList,\n    tab: 'ROLE_RMAT_02',\n    setIsOpen: setExcelOpen,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 443,\n      columnNumber: 7\n    }\n  }));\n};\n\n_s(BasicContainer, \"PhbWTsrhGwBCwqhhMZqA3erPSxY=\", false, function () {\n  return [useRouter];\n});\n\n_c = BasicContainer;\n// BasicContainer.getInitialProps = async ({ query }) => {\n//   let { page, keyword, opt } = query\n//   if (typeof page === 'string')\n//     page = parseInt(page);\n//   if (typeof opt === 'string')\n//     opt = parseInt(opt);\n//   return { page, keyword, option: opt };\n// }\nexport var __N_SSP = true;\nexport default BasicContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"BasicContainer\");","map":{"version":3,"sources":["/Users/user/Desktop/sizl/mono_pop/packages/main/pages/mes/rawmaterial/stock.tsx"],"names":["React","useEffect","useState","ExcelTable","MenuNavigation","ProfileHeader","PageHeader","SelectColumn","RequestMethod","columnlist","Notiflix","useRouter","MAX_VALUE","TextEditor","excelDownload","PaginationComponent","ExcelDownloadModal","moment","title","optList","BasicContainer","page","keyword","option","router","excelOpen","setExcelOpen","name","id","basicRow","setBasicRow","nzState","setNzState","changeNzState","value","rawstock","column","setColumn","Set","selectList","setSelectList","optionList","setOptionList","optionIndex","setOptionIndex","total","pageInfo","setPageInfo","from","subtract","startOf","format","to","endOf","selectDate","setSelectDate","SearchBasic","LoadBasic","then","loadAllSelectItems","tmpColumn","map","v","length","tmpKey","key","path","renderItem","res","results","info_list","pk","ca_id","unit_id","result","Promise","all","SaveBasic","warehousing","row","i","has","additional","type","push","selectData","current","exhaustionPK","unit","filter","status","Report","success","Loading","remove","DeleteBasic","processes","Object","keys","indexOf","params","tab","nz","totalPages","cleanUpData","state","failure","back","isPaging","opt","tmpRow","menuData","menus","menu","colName","width","additionalMenus","editor","additionalData","tmpBasicRow","index","appendAdditional","random_id","Math","random","exhaustion","ln_id","rm_id","raw_material","customer_id","model","customer","cm_id","code","texture","depth","height","amount","date","number","blanking","downloadExcel","tmpSelectList","onClickHeaderButton","display","paddingBottom","e","tmp","isChange","add"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react'\nimport ExcelTable from '../../../component/Excel/ExcelTable'\nimport MenuNavigation from '../../../component/MenuNav/MenuNavigation'\nimport ProfileHeader from '../../../component/Profile/ProfileHeader'\nimport PageHeader from '../../../component/Header/Header'\n// @ts-ignore\nimport {SelectColumn} from 'react-data-grid'\nimport {IExcelHeaderType, IItemMenuType} from '../../../common/@types/type'\nimport {RequestMethod} from '../../../common/RequestFunctions'\nimport {columnlist} from \"../../../common/columnInit\";\nimport Notiflix from \"notiflix\";\nimport {useRouter} from 'next/router'\nimport {MAX_VALUE} from '../../../common/configset'\nimport DropDownEditor from '../../../component/Dropdown/ExcelBasicDropdown'\nimport TextEditor from '../../../component/InputBox/ExcelBasicInputBox'\nimport {excelDownload} from '../../../common/excelDownloadFunction'\nimport {loadAll} from 'react-cookies'\nimport PaginationComponent from '../../../component/Pagination/PaginationComponent'\nimport {NextPageContext} from 'next'\nimport ExcelDownloadModal from '../../../component/Modal/ExcelDownloadMoadal'\nimport moment from 'moment'\n\ninterface IProps {\n  children?: any\n  page?: number\n  keyword?: string\n  option?: number\n}\n\nconst title = '원자재 재고 관리'\nconst optList = ['고객사명', '모델명', 'CODE', '품명', 'Lot번호']\n\nconst BasicContainer = ({page, keyword, option}: IProps) => {\n  const router = useRouter()\n\n  const [excelOpen, setExcelOpen] = useState<boolean>(false)\n\n  const [basicRow, setBasicRow] = useState<Array<any>>([{\n    name: \"\", id: \"\"\n  }])\n\n  const [nzState, setNzState] = useState<boolean>(false);\n\n  const changeNzState = (value:boolean) => {\n    setNzState(value);\n  }\n\n  const [column, setColumn] = useState<Array<IExcelHeaderType>>(columnlist.rawstock)\n  const [selectList, setSelectList] = useState<Set<number>>(new Set())\n  const [optionList, setOptionList] = useState<string[]>(optList)\n  const [optionIndex, setOptionIndex] = useState<number>(0)\n\n  const [pageInfo, setPageInfo] = useState<{page: number, total: number}>({\n    page: 1,\n    total: 1\n  })\n\n  const [selectDate, setSelectDate] = useState<{from:string, to:string}>({\n    from: moment().subtract(5,\"month\").startOf(\"month\").format(\"YYYY-MM-DD\"),\n    to: moment().endOf('month').format('YYYY-MM-DD')\n  });\n\n  useEffect(() => {\n    setOptionIndex(option)\n    if(keyword){\n      SearchBasic(keyword, option, page)\n    }else{\n      LoadBasic(page).then(() => {})\n    }\n  }, [page, keyword, option, selectDate, nzState])\n\n  const loadAllSelectItems = async (column: IExcelHeaderType[]) => {\n    let tmpColumn = column.map(async (v: any) => {\n      if(v.selectList && v.selectList.length === 0){\n        let tmpKey = v.key\n\n        if(tmpKey === 'customer_id'){\n          tmpKey = 'customer'\n        } else if(tmpKey === 'cm_id'){\n          tmpKey = 'model'\n        }\n\n\n        const res = await RequestMethod('get', `${tmpKey}List`,{\n          path: {\n            page: 1,\n            renderItem: MAX_VALUE,\n          }\n        })\n\n        return {\n          ...v,\n          selectList: [...res.results.info_list.map((value: any) => {\n            return {\n              ...value,\n              pk: value.ca_id\n            }\n          })]\n        }\n      }else{\n        if(v.selectList){\n          return {\n            ...v,\n            pk: v.unit_id,\n            result: changeNzState\n          }\n        }else{\n          return v\n        }\n      }\n    })\n\n    Promise.all(tmpColumn).then(res => {\n      setColumn([...res])\n    })\n  }\n\n  const SaveBasic = async () => {\n    let res = await RequestMethod('post', `rawinSave`,\n      {\n        warehousing: basicRow.map((row, i) => {\n          if(selectList.has(row.id)){\n            let additional:any[] = []\n            column.map((v) => {\n              if(v.type === 'additional'){\n                additional.push(v)\n              }\n            })\n\n            let selectData: any = {}\n\n            return {\n              ...row,\n              ...selectData,\n              current: row.exhaustionPK ? 0 : row.current,\n              additional: [\n                ...additional.map(v => {\n                  if(row[v.name]) {\n                    return {\n                      id: v.id,\n                      title: v.name,\n                      value: row[v.name],\n                      unit: v.unit\n                    }\n                  }\n                }).filter((v) => v)\n              ]\n            }\n\n          }\n        }).filter((v) => v)\n      })\n\n    if(res){\n      if(res.status === 200){\n        Notiflix.Report.success('저장되었습니다.','','확인');\n        if(keyword){\n          SearchBasic(keyword, option, page).then(() => {\n            Notiflix.Loading.remove()\n          })\n        }else{\n          LoadBasic(page).then(() => {\n            Notiflix.Loading.remove()\n          })\n        }\n      }\n    }\n  }\n\n  const DeleteBasic = async () => {\n    const res = await RequestMethod('delete', `processDelete`,\n      {\n        processes: basicRow.map((row, i) => {\n          if(selectList.has(row.id)){\n            let pk = \"\"\n            Object.keys(row).map((v:string) => {\n              if(v.indexOf(\"_id\") !== -1){\n                pk = v\n              }\n            })\n\n            return row[pk]\n          }\n        }).filter((v) => v)\n      })\n\n    if(res) {\n      if(res.status === 200){\n        LoadBasic(pageInfo.page)\n      }\n    }\n  }\n\n  const LoadBasic = async (page?: number) => {\n    const res = await RequestMethod('get', `rawinList`,{\n      path: {\n        page: (page || page !== 0) ? page : 1,\n        renderItem: 18,\n      },\n      params: {\n        tab: 'ROLE_RMAT_02',\n        nz:nzState,\n        from: selectDate.from,\n        to: selectDate.to,\n      }\n    })\n\n    if(res && res.status === 200){\n      if(res.results.totalPages < page){\n        LoadBasic(page - 1)\n      }else{\n        if(res.results.totalPages < page){\n          LoadBasic(page - 1)\n        }else{\n          setPageInfo({\n            ...pageInfo,\n            page: res.results.page,\n            total: res.results.totalPages\n          })\n          cleanUpData(res)\n        }\n      }\n    }else if (res.state === 401) {\n      Notiflix.Report.failure('불러올 수 없습니다.', '권한이 없습니다.', '확인', () => {\n        router.back()\n      })\n    }\n  }\n\n  const SearchBasic = async (keyword: any, option: number, isPaging?: number) => {\n    if(!isPaging){\n      setOptionIndex(option)\n    }\n\n    const res = await RequestMethod('get', `rawinSearch`,{\n      path: {\n        page: isPaging ?? 1,\n        renderItem: 18,\n      },\n      params: {\n        keyword: keyword ?? '',\n        opt: option ?? 0,\n        nz:nzState,\n        tab: 'ROLE_RMAT_02',\n        from: selectDate.from,\n        to: selectDate.to,\n      }\n    })\n\n    if(res && res.status === 200){\n      setPageInfo({\n        ...pageInfo,\n        page: res.results.page,\n        total: res.results.totalPages\n      })\n      cleanUpData(res)\n    }\n  }\n\n  const cleanUpData = (res: any) => {\n    let tmpColumn = columnlist.rawstock\n    let tmpRow = []\n    tmpColumn = tmpColumn.map((column: any) => {\n      let menuData: object | undefined;\n      res.results.menus && res.results.menus.map((menu: any) => {\n        if(menu.colName === column.key){\n          menuData = {\n            id: menu.id,\n            name: menu.title,\n            width: menu.width,\n            tab:menu.tab,\n            unit:menu.unit\n          }\n        } else if(menu.colName === 'id' && column.key === 'tmpId'){\n          menuData = {\n            id: menu.id,\n            name: menu.title,\n            width: menu.width,\n            tab:menu.tab,\n            unit:menu.unit\n          }\n        }\n      })\n\n      if(menuData){\n        return {\n          ...column,\n          ...menuData\n        }\n      }\n    }).filter((v:any) => v)\n\n    loadAllSelectItems(tmpColumn)\n\n    let additionalMenus = res.results.menus ? res.results.menus.map((menu:any) => {\n      if(menu.colName === null){\n        return {\n          id: menu.id,\n          name: menu.title,\n          width: menu.width,\n          key: menu.title,\n          editor: TextEditor,\n          type: 'additional',\n          unit: menu.unit\n        }\n      }\n    }).filter((v: any) => v) : []\n\n    tmpRow = res.results.info_list\n\n    let additionalData: any[] = []\n\n    additionalMenus.map((v: any) => {\n      if(v.type === 'additional'){\n        additionalData.push(v.key)\n      }\n    })\n\n    let tmpBasicRow = tmpRow.map((row: any, index: number) => {\n      let appendAdditional: any = {}\n\n      row.additional && row.additional.map((v: any) => {\n        appendAdditional = {\n          ...appendAdditional,\n          [v.title]: v.value\n        }\n      })\n\n      const random_id = Math.random()*1000\n\n      return {\n        exhaustion: row.current === 0 ? '사용완료' : '-',\n        exhaustionPK: row.current === 0,\n        ln_id: row.ln_id,\n        rm_id: row.raw_material.rm_id,\n        customer_id: row.raw_material.model.customer.name,\n        cm_id: row.raw_material.model.model,\n        code: row.raw_material.code,\n        name: row.raw_material.name,\n        texture: row.raw_material.texture,\n        depth: row.raw_material.depth,\n        width: row.raw_material.width,\n        height: row.raw_material.height,\n        type: row.raw_material.type,\n        amount: row.amount,\n        date: row.date,\n        number: row.number,\n        blanking: row.blanking,\n        current: row.current,\n        ...appendAdditional,\n        id: `rowstack_${random_id}`,\n      }\n    })\n\n    setBasicRow([...tmpBasicRow])\n  }\n\n  const downloadExcel = () => {\n    let tmpSelectList: boolean[] = []\n    basicRow.map(row => {\n      tmpSelectList.push(selectList.has(row.id))\n    })\n    excelDownload(column, basicRow, `원자재 재고 관리`, 'rawmaterial_input', tmpSelectList)\n  }\n\n  const onClickHeaderButton = (index: number) => {\n    switch(index){\n      case 0:\n        setExcelOpen(true)\n        break;\n      case 1:\n        SaveBasic()\n        break;\n    }\n  }\n\n  return (\n    <div style={{display: 'flex', }}>\n      <MenuNavigation pageType={'MES'} subType={1}/>\n      <div style={{paddingBottom: 40}}>\n        <ProfileHeader/>\n        <PageHeader\n          isSearch\n          searchKeyword={keyword}\n          onChangeSearchKeyword={(keyword) => {\n            if(keyword){\n              router.push(`/mes/rawmaterial/stock?page=1&keyword=${keyword}&opt=${optionIndex ?? 0}`)\n            }else{\n              router.push(`/mes/rawmaterial/stock?page=1&keyword=`)\n            }\n          }}\n          searchOptionList={optionList}\n          onChangeSearchOption={(option) => {\n            setOptionIndex(option)\n          }}\n          isCalendar\n          calendarType={'period'}\n          selectDate={selectDate}\n          optionIndex={optionIndex}\n          //@ts-ignore\n          setSelectDate={setSelectDate}\n          title={title}\n          buttons={['엑셀로 받기','저장하기']}\n          buttonsOnclick={onClickHeaderButton}\n          dataLimit={true}\n\n        />\n        <ExcelTable\n          editable\n          resizable\n          headerList={[\n            SelectColumn,\n            ...column\n          ]}\n          row={basicRow}\n          // setRow={setBasicRow}\n          setRow={(e) => {\n            let tmp: Set<any> = selectList\n            e.map(v => {\n              if(v.isChange) tmp.add(v.id)\n            })\n            setSelectList(tmp)\n            setBasicRow(e)\n          }}\n          selectList={selectList}\n          //@ts-ignore\n          setSelectList={setSelectList}\n          disableVirtualization={true}\n          height={basicRow.length * 40 >= 40*18+56 ? 40*19 : basicRow.length * 40 + 56}\n        />\n        <PaginationComponent\n          currentPage={pageInfo.page}\n          totalPage={pageInfo.total}\n          setPage={(page) => {\n            if(keyword){\n              router.push(`/mes/rawmaterial/stock?page=${page}&keyword=${keyword}&opt=${option}`)\n            }else{\n              router.push(`/mes/rawmaterial/stock?page=${page}`)\n            }\n          }}\n        />\n      </div>\n      <ExcelDownloadModal\n        isOpen={excelOpen}\n        column={column}\n        basicRow={basicRow}\n        filename={`원자재재고관리`}\n        sheetname={`원자재재고관리`}\n        selectList={selectList}\n        tab={'ROLE_RMAT_02'}\n        setIsOpen={setExcelOpen}\n      />\n    </div>\n  );\n}\n\nexport const getServerSideProps = (ctx: NextPageContext) => {\n  return {\n    props: {\n      page: ctx.query.page ?? 1,\n      keyword: ctx.query.keyword ?? \"\",\n      option: ctx.query.opt ?? 0,\n    }\n  }\n}\n\n// BasicContainer.getInitialProps = async ({ query }) => {\n//   let { page, keyword, opt } = query\n//   if (typeof page === 'string')\n//     page = parseInt(page);\n//   if (typeof opt === 'string')\n//     opt = parseInt(opt);\n//   return { page, keyword, option: opt };\n// }\n\nexport default BasicContainer;\n"]},"metadata":{},"sourceType":"module"}