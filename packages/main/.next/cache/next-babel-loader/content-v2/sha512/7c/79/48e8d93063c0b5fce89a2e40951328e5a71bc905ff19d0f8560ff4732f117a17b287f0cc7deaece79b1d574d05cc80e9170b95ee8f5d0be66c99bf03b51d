{"ast":null,"code":"var _jsxFileName = \"/Users/user/Desktop/sizl/mono_pop/packages/main/component/ItemManage/ItemManageBox.tsx\";\nvar __jsx = React.createElement;\nimport { ItemListTableHeader, ItemListTableWrapper, ItemWrapper } from '../../styles/styledComponents';\nimport React from 'react';\nimport ItemBox from './ItemBox';\n\nconst ItemManageBox = ({\n  title,\n  items,\n  setItems,\n  type\n}) => {\n  return __jsx(ItemListTableWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 11\n    }\n  }, __jsx(ItemListTableHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }\n  }, __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }\n  }, title, \" \", type === 'base' ? \"기본\" : \"추가\", \" \\uD56D\\uBAA9\")), __jsx(ItemWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }, items.map((v, index) => {\n    return __jsx(ItemBox, {\n      item: v,\n      setItems: item => {\n        const tempItem = items;\n        tempItem[index] = item;\n        setItems([...tempItem]);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 16\n      }\n    });\n  }), items.length < 28 && new Array(28 - items.length).fill('').map(() => {\n    return __jsx(ItemBox, {\n      item: {\n        hide: true\n      },\n      setItems: () => {},\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 18\n      }\n    });\n  })));\n};\n\nexport default ItemManageBox;","map":{"version":3,"sources":["/Users/user/Desktop/sizl/mono_pop/packages/main/component/ItemManage/ItemManageBox.tsx"],"names":["ItemListTableHeader","ItemListTableWrapper","ItemWrapper","React","ItemBox","ItemManageBox","title","items","setItems","type","map","v","index","item","tempItem","length","Array","fill","hide"],"mappings":";;AAAA,SAAQA,mBAAR,EAA6BC,oBAA7B,EAAmDC,WAAnD,QAAqE,+BAArE;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB;;AAUA,MAAMC,aAAa,GAAG,CAAC;AAACC,EAAAA,KAAD;AAAQC,EAAAA,KAAR;AAAeC,EAAAA,QAAf;AAAyBC,EAAAA;AAAzB,CAAD,KAA4C;AAChE,SAAQ,MAAC,oBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACN,MAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIH,KAAJ,OAAYG,IAAI,KAAK,MAAT,GAAkB,IAAlB,GAAyB,IAArC,kBADF,CADM,EAIN,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,KAAK,CAACG,GAAN,CAAU,CAACC,CAAD,EAAIC,KAAJ,KAAc;AACvB,WAAO,MAAC,OAAD;AAAS,MAAA,IAAI,EAAED,CAAf;AAAkB,MAAA,QAAQ,EAAGE,IAAD,IAAU;AAC3C,cAAMC,QAAQ,GAAGP,KAAjB;AACAO,QAAAA,QAAQ,CAACF,KAAD,CAAR,GAAkBC,IAAlB;AACAL,QAAAA,QAAQ,CAAC,CAAC,GAAGM,QAAJ,CAAD,CAAR;AACD,OAJM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AAKD,GANA,CADH,EASIP,KAAK,CAACQ,MAAN,GAAe,EAAf,IAAqB,IAAIC,KAAJ,CAAU,KAAGT,KAAK,CAACQ,MAAnB,EAA2BE,IAA3B,CAAgC,EAAhC,EAAoCP,GAApC,CAAwC,MAAM;AACjE,WAAO,MAAC,OAAD;AAAS,MAAA,IAAI,EAAE;AAACQ,QAAAA,IAAI,EAAE;AAAP,OAAf;AAA6B,MAAA,QAAQ,EAAE,MAAM,CAAE,CAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD,GAFoB,CATzB,CAJM,CAAR;AAmBD,CApBD;;AAsBA,eAAeb,aAAf","sourcesContent":["import {ItemListTableHeader, ItemListTableWrapper, ItemWrapper} from '../../styles/styledComponents'\nimport React from 'react'\nimport ItemBox from './ItemBox'\nimport {IItemMenuType} from '../../common/@types/type'\n\ninterface IProps {\n  title: string,\n  items: IItemMenuType[]\n  setItems: (item: IItemMenuType[]) => void\n  type: 'base' | 'additional'\n}\n\nconst ItemManageBox = ({title, items, setItems, type}: IProps) => {\n  return (<ItemListTableWrapper>\n    <ItemListTableHeader>\n      <p>{title} {type === 'base' ? \"기본\" : \"추가\"} 항목</p>\n    </ItemListTableHeader>\n    <ItemWrapper>\n      {items.map((v, index) => {\n        return <ItemBox item={v} setItems={(item) => {\n          const tempItem = items\n          tempItem[index] = item\n          setItems([...tempItem])\n        }}/>\n      })}\n      {\n        items.length < 28 && new Array(28-items.length).fill('').map(() => {\n          return <ItemBox item={{hide: true}} setItems={() => {}}/>\n        })\n      }\n    </ItemWrapper>\n  </ItemListTableWrapper>)\n}\n\nexport default ItemManageBox\n"]},"metadata":{},"sourceType":"module"}