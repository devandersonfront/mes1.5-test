{"ast":null,"code":"var _jsxFileName = \"/Users/user/Desktop/sizl/mono_pop/packages/shared/src/components/Modal/SearchModal.tsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport Modal from 'react-modal';\nimport { POINT_COLOR } from '../../common/configset'; //@ts-ignore\n\nimport IcSearchButton from '../../../public/images/ic_search.png'; //@ts-ignore\n\nimport IcX from '../../../public/images/ic_x.png';\nimport { ExcelTable } from '../Excel/ExcelTable';\nimport { searchModalList } from '../../common/modalInit'; //@ts-ignore\n\nimport Search_icon from '../../../public/images/btn_search.png';\nimport { RequestMethod } from '../../common/RequestFunctions';\nconst optionList = {\n  member: ['사용자명'],\n  product: ['고객사명', '모델명', 'CODE', '품명', '재질'],\n  customer: ['고객사명'],\n  model: ['고객사명', '모델']\n};\n\nconst SearchModal = ({\n  column,\n  row,\n  onRowChange\n}) => {\n  var _column$searchType2;\n\n  const {\n    0: isOpen,\n    1: setIsOpen\n  } = useState(false);\n  const {\n    0: title,\n    1: setTitle\n  } = useState('');\n  const {\n    0: optionIndex,\n    1: setOptionIndex\n  } = useState(0);\n  const {\n    0: keyword,\n    1: setKeyword\n  } = useState('');\n  const {\n    0: selectRow,\n    1: setSelectRow\n  } = useState();\n  const {\n    0: searchList,\n    1: setSearchList\n  } = useState([]);\n  useEffect(() => {\n    var _column$searchType;\n\n    setTitle((_column$searchType = column.searchType) !== null && _column$searchType !== void 0 ? _column$searchType : '');\n\n    if (column.searchType) {\n      changeTypeToString(column.searchType);\n    }\n  }, [column.searchType]);\n  useEffect(() => {\n    if (isOpen) SearchBasic(keyword, 0);\n  }, [isOpen]);\n\n  const changeTypeToString = type => {\n    switch (type) {\n      case 'member':\n        setTitle('담당자');\n        break;\n\n      case 'product':\n        setTitle('제품');\n        break;\n\n      case 'customer':\n        setTitle('고객사');\n        break;\n\n      case 'model':\n        setTitle('고객사 모델');\n        break;\n\n      default:\n        setTitle('');\n        break;\n    }\n  };\n\n  const changeRow = (row, key) => {\n    let tmpData = {};\n    Object.keys(row).map(v => {\n      if (row[v] && typeof row[v] === 'object' && v !== 'additional') {\n        let data = changeRow(row[v], v);\n        tmpData = _objectSpread(_objectSpread({}, tmpData), data);\n      } else {\n        if (key === 'customer' && v.indexOf(key) === -1) {\n          if (v === 'name') {\n            tmpData = _objectSpread(_objectSpread({}, tmpData), {}, {\n              [key + '_idPK']: row[key + '_id'],\n              [key + '_id']: row[v],\n              [key]: row[v]\n            });\n          } else if (v === 'name') {\n            tmpData = _objectSpread(_objectSpread({}, tmpData), {}, {\n              [key + '_' + v]: row[v]\n            });\n          } else {\n            tmpData = _objectSpread(_objectSpread({}, tmpData), {}, {\n              [v]: row[v]\n            });\n          }\n        } else if (key === 'authority' && v === 'ca_id') {\n          tmpData = _objectSpread(_objectSpread({}, tmpData), {}, {\n            ['authorityPK']: row['ca_id'],\n            ['authority']: row['name']\n          });\n        } else if (key === 'raw_material' && v === 'name') {\n          tmpData = _objectSpread(_objectSpread({}, tmpData), {}, {\n            name: row['name']\n          });\n        } else if (key === 'model' && v === 'cm_id') {\n          tmpData = _objectSpread(_objectSpread({}, tmpData), {}, {\n            ['cm_idPK']: row['cm_id'],\n            ['cm_id']: row['model']\n          });\n        } else if (key === 'manager' && v === 'user_id') {\n          tmpData = _objectSpread(_objectSpread({}, tmpData), {}, {\n            ['user_idPK']: row.user_id,\n            ['user_id']: row.name\n          });\n        } else if (key && v === 'name') {\n          tmpData = _objectSpread(_objectSpread({}, tmpData), {}, {\n            [`${key}_${v}`]: row[v]\n          });\n        } else {\n          tmpData = _objectSpread(_objectSpread({}, tmpData), {}, {\n            [v]: row[v]\n          });\n        }\n      }\n    });\n    return tmpData;\n  };\n\n  const SearchBasic = async (keyword, option) => {\n    setKeyword(keyword);\n    setOptionIndex(option);\n    const res = await RequestMethod('get', `${column.searchType}Search`, {\n      path: {\n        page: 1,\n        renderItem: 19\n      },\n      params: {\n        keyword: keyword !== null && keyword !== void 0 ? keyword : '',\n        opt: option !== null && option !== void 0 ? option : 0\n      }\n    });\n    let searchList = res.results.info_list.map((row, index) => {\n      return changeRow(row);\n    });\n\n    if (res && res.status === 200) {\n      setSearchList([...searchList]);\n    }\n  };\n\n  return __jsx(SearchModalWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    style: {\n      width: 'calc(100% - 40px)',\n      height: 40\n    },\n    onClick: () => {\n      setIsOpen(true);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }\n  }, column.searchType === 'product' ? row['code'] : row[`${column.key}`]), __jsx(\"div\", {\n    style: {\n      display: 'flex',\n      backgroundColor: POINT_COLOR,\n      width: 38,\n      height: 38,\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    onClick: () => {\n      setIsOpen(true);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }\n  }, __jsx(\"img\", {\n    style: {\n      width: 20,\n      height: 20\n    },\n    src: IcSearchButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 9\n    }\n  })), __jsx(Modal, {\n    isOpen: isOpen,\n    style: {\n      content: {\n        top: '50%',\n        left: '50%',\n        right: 'auto',\n        bottom: 'auto',\n        marginRight: '-50%',\n        transform: 'translate(-50%, -50%)',\n        padding: 0\n      },\n      overlay: {\n        background: 'rgba(0,0,0,.6)',\n        zIndex: 5\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    style: {\n      width: 888,\n      height: 480\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    style: {\n      marginTop: 24,\n      marginLeft: 16,\n      marginRight: 16,\n      display: 'flex',\n      justifyContent: 'space-between'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 13\n    }\n  }, __jsx(\"p\", {\n    style: {\n      color: 'black',\n      fontSize: 22,\n      fontWeight: 'bold',\n      margin: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 15\n    }\n  }, title, \" \\uAC80\\uC0C9\"), __jsx(\"div\", {\n    style: {\n      cursor: 'pointer'\n    },\n    onClick: () => {\n      setIsOpen(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 15\n    }\n  }, __jsx(\"img\", {\n    style: {\n      width: 20,\n      height: 20\n    },\n    src: IcX,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 17\n    }\n  }))), __jsx(\"div\", {\n    style: {\n      width: 856,\n      height: 32,\n      margin: '16px 0 16px 16px',\n      display: 'flex'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    style: {\n      width: 88,\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      backgroundColor: '#F4F6FA',\n      border: '0.5px solid #B3B3B3',\n      borderRight: 'none'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 15\n    }\n  }, __jsx(\"select\", {\n    defaultValue: '-',\n    onChange: e => {\n      SearchBasic('', Number(e.target.value));\n    },\n    style: {\n      color: 'black',\n      backgroundColor: '#00000000',\n      border: 0,\n      height: 32,\n      width: 115,\n      fontSize: 15,\n      fontWeight: 'bold'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 17\n    }\n  })), __jsx(\"input\", {\n    value: keyword !== null && keyword !== void 0 ? keyword : \"\",\n    type: \"text\",\n    placeholder: \"\\uAC80\\uC0C9\\uC5B4\\uB97C \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694.\",\n    onChange: e => {\n      setKeyword(e.target.value);\n    },\n    onKeyDown: e => {\n      if (e.key === 'Enter') {\n        SearchBasic(keyword, optionIndex);\n      }\n    },\n    style: {\n      width: \"736px\",\n      height: \"32px\",\n      paddingLeft: \"10px\",\n      border: \"0.5px solid #B3B3B3\",\n      backgroundColor: 'rgba(0,0,0,0)'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 15\n    }\n  }), __jsx(\"div\", {\n    style: {\n      background: \"#19B9DF\",\n      width: \"32px\",\n      height: \"32px\",\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      cursor: 'pointer'\n    },\n    onClick: () => {\n      SearchBasic(keyword, optionIndex);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 15\n    }\n  }, __jsx(\"img\", {\n    src: Search_icon,\n    style: {\n      width: \"16px\",\n      height: \"16px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 17\n    }\n  }))), __jsx(\"div\", {\n    style: {\n      padding: '0 16px 0 16px',\n      width: 856\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 13\n    }\n  }, __jsx(ExcelTable, {\n    headerList: searchModalList[(_column$searchType2 = column.searchType) !== null && _column$searchType2 !== void 0 ? _column$searchType2 : ''],\n    row: searchList !== null && searchList !== void 0 ? searchList : [],\n    setRow: () => {},\n    width: 856,\n    rowHeight: 32,\n    height: 320,\n    setSelectRow: e => {\n      setSelectRow(e);\n    },\n    type: 'searchModal',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 15\n    }\n  })), __jsx(\"div\", {\n    style: {\n      height: 70,\n      display: 'flex',\n      alignItems: 'flex-end'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    onClick: () => {\n      setIsOpen(false);\n    },\n    style: {\n      width: 444,\n      height: 40,\n      backgroundColor: '#b3b3b3',\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 15\n    }\n  }, __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 17\n    }\n  }, \"\\uCDE8\\uC18C\")), __jsx(\"div\", {\n    onClick: () => {\n      let pk = '';\n      Object.keys(searchList[0]).map(v => {\n        if (v.indexOf('_id') !== -1) {\n          pk = v;\n        }\n      });\n\n      if (selectRow !== undefined && selectRow !== null) {\n        if (column.searchType === 'product') {\n          onRowChange(_objectSpread(_objectSpread(_objectSpread({}, row), searchList[selectRow]), {}, {\n            [column.key + 'PK']: searchList[selectRow][pk]\n          }));\n        } else {\n          onRowChange(_objectSpread(_objectSpread(_objectSpread({}, row), searchList[selectRow]), {}, {\n            [column.key]: searchList[selectRow].name,\n            [column.key + 'PK']: searchList[selectRow][pk],\n            name: row.name\n          }));\n        }\n      }\n\n      setIsOpen(false);\n    },\n    style: {\n      width: 444,\n      height: 40,\n      backgroundColor: POINT_COLOR,\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 15\n    }\n  }, __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 17\n    }\n  }, \"\\uB4F1\\uB85D\\uD558\\uAE30\"))))));\n};\n\nconst SearchModalWrapper = styled.div`\n  display: flex;\n  width: 100%;\n`;\nexport { SearchModal };","map":{"version":3,"sources":["/Users/user/Desktop/sizl/mono_pop/packages/shared/src/components/Modal/SearchModal.tsx"],"names":["React","useEffect","useState","styled","Modal","POINT_COLOR","IcSearchButton","IcX","ExcelTable","searchModalList","Search_icon","RequestMethod","optionList","member","product","customer","model","SearchModal","column","row","onRowChange","isOpen","setIsOpen","title","setTitle","optionIndex","setOptionIndex","keyword","setKeyword","selectRow","setSelectRow","searchList","setSearchList","searchType","changeTypeToString","SearchBasic","type","changeRow","key","tmpData","Object","keys","map","v","data","indexOf","name","user_id","option","res","path","page","renderItem","params","opt","results","info_list","index","status","width","height","display","backgroundColor","justifyContent","alignItems","content","top","left","right","bottom","marginRight","transform","padding","overlay","background","zIndex","marginTop","marginLeft","color","fontSize","fontWeight","margin","cursor","border","borderRight","e","Number","target","value","paddingLeft","pk","undefined","SearchModalWrapper","div"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AAEA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAAQC,WAAR,QAA0B,wBAA1B,C,CACA;;AACA,OAAOC,cAAP,MAA2B,sCAA3B,C,CACA;;AACA,OAAOC,GAAP,MAAgB,iCAAhB;AACA,SAAQC,UAAR,QAAyB,qBAAzB;AACA,SAAQC,eAAR,QAA8B,wBAA9B,C,CACA;;AACA,OAAOC,WAAP,MAAwB,uCAAxB;AACA,SAAQC,aAAR,QAA4B,+BAA5B;AAQA,MAAMC,UAAU,GAAG;AACjBC,EAAAA,MAAM,EAAE,CAAC,MAAD,CADS;AAEjBC,EAAAA,OAAO,EAAE,CAAC,MAAD,EAAQ,KAAR,EAAc,MAAd,EAAsB,IAAtB,EAA4B,IAA5B,CAFQ;AAGjBC,EAAAA,QAAQ,EAAE,CAAC,MAAD,CAHO;AAIjBC,EAAAA,KAAK,EAAE,CAAC,MAAD,EAAS,IAAT;AAJU,CAAnB;;AAOA,MAAMC,WAAW,GAAG,CAAC;AAACC,EAAAA,MAAD;AAASC,EAAAA,GAAT;AAAcC,EAAAA;AAAd,CAAD,KAAwC;AAAA;;AAC1D,QAAM;AAAA,OAACC,MAAD;AAAA,OAASC;AAAT,MAAsBpB,QAAQ,CAAU,KAAV,CAApC;AACA,QAAM;AAAA,OAACqB,KAAD;AAAA,OAAQC;AAAR,MAAoBtB,QAAQ,CAAS,EAAT,CAAlC;AACA,QAAM;AAAA,OAACuB,WAAD;AAAA,OAAcC;AAAd,MAAgCxB,QAAQ,CAAS,CAAT,CAA9C;AACA,QAAM;AAAA,OAACyB,OAAD;AAAA,OAAUC;AAAV,MAAwB1B,QAAQ,CAAS,EAAT,CAAtC;AACA,QAAM;AAAA,OAAC2B,SAAD;AAAA,OAAYC;AAAZ,MAA4B5B,QAAQ,EAA1C;AACA,QAAM;AAAA,OAAC6B,UAAD;AAAA,OAAaC;AAAb,MAA8B9B,QAAQ,CAAQ,EAAR,CAA5C;AAEAD,EAAAA,SAAS,CAAC,MAAK;AAAA;;AACbuB,IAAAA,QAAQ,uBAACN,MAAM,CAACe,UAAR,mEAAsB,EAAtB,CAAR;;AACA,QAAGf,MAAM,CAACe,UAAV,EAAsB;AACpBC,MAAAA,kBAAkB,CAAChB,MAAM,CAACe,UAAR,CAAlB;AACD;AACF,GALQ,EAKN,CAACf,MAAM,CAACe,UAAR,CALM,CAAT;AAOAhC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAGoB,MAAH,EAAWc,WAAW,CAACR,OAAD,EAAU,CAAV,CAAX;AACZ,GAFQ,EAEN,CAACN,MAAD,CAFM,CAAT;;AAIA,QAAMa,kBAAkB,GAAIE,IAAD,IAAkB;AAC3C,YAAOA,IAAP;AACE,WAAK,QAAL;AACEZ,QAAAA,QAAQ,CAAC,KAAD,CAAR;AACA;;AACF,WAAK,SAAL;AACEA,QAAAA,QAAQ,CAAC,IAAD,CAAR;AACA;;AACF,WAAK,UAAL;AACEA,QAAAA,QAAQ,CAAC,KAAD,CAAR;AACA;;AACF,WAAK,OAAL;AACEA,QAAAA,QAAQ,CAAC,QAAD,CAAR;AACA;;AACF;AACEA,QAAAA,QAAQ,CAAC,EAAD,CAAR;AACA;AAfJ;AAiBD,GAlBD;;AAoBA,QAAMa,SAAS,GAAG,CAAClB,GAAD,EAAWmB,GAAX,KAA4B;AAC5C,QAAIC,OAAO,GAAG,EAAd;AACAC,IAAAA,MAAM,CAACC,IAAP,CAAYtB,GAAZ,EAAiBuB,GAAjB,CAAqBC,CAAC,IAAI;AAExB,UAAGxB,GAAG,CAACwB,CAAD,CAAH,IAAU,OAAOxB,GAAG,CAACwB,CAAD,CAAV,KAAkB,QAA5B,IAAwCA,CAAC,KAAK,YAAjD,EAA8D;AAC5D,YAAIC,IAAI,GAAGP,SAAS,CAAClB,GAAG,CAACwB,CAAD,CAAJ,EAASA,CAAT,CAApB;AACAJ,QAAAA,OAAO,mCACFA,OADE,GAEFK,IAFE,CAAP;AAID,OAND,MAMK;AACH,YAAGN,GAAG,KAAK,UAAR,IAAsBK,CAAC,CAACE,OAAF,CAAUP,GAAV,MAAmB,CAAC,CAA7C,EAA+C;AAC7C,cAAGK,CAAC,KAAK,MAAT,EAAgB;AACdJ,YAAAA,OAAO,mCACFA,OADE;AAEL,eAACD,GAAG,GAAC,OAAL,GAAenB,GAAG,CAACmB,GAAG,GAAC,KAAL,CAFb;AAGL,eAACA,GAAG,GAAC,KAAL,GAAanB,GAAG,CAACwB,CAAD,CAHX;AAIL,eAACL,GAAD,GAAOnB,GAAG,CAACwB,CAAD;AAJL,cAAP;AAMD,WAPD,MAOM,IAAGA,CAAC,KAAK,MAAT,EAAgB;AACpBJ,YAAAA,OAAO,mCACFA,OADE;AAEL,eAACD,GAAG,GAAC,GAAJ,GAAQK,CAAT,GAAaxB,GAAG,CAACwB,CAAD;AAFX,cAAP;AAID,WALK,MAKD;AACHJ,YAAAA,OAAO,mCACFA,OADE;AAEL,eAACI,CAAD,GAAKxB,GAAG,CAACwB,CAAD;AAFH,cAAP;AAID;AACF,SAnBD,MAoBK,IAAIL,GAAG,KAAK,WAAR,IAAuBK,CAAC,KAAK,OAAjC,EAA0C;AAC7CJ,UAAAA,OAAO,mCACFA,OADE;AAEL,aAAC,aAAD,GAAiBpB,GAAG,CAAC,OAAD,CAFf;AAGL,aAAC,WAAD,GAAeA,GAAG,CAAC,MAAD;AAHb,YAAP;AAKD,SANI,MAME,IAAGmB,GAAG,KAAK,cAAR,IAA0BK,CAAC,KAAK,MAAnC,EAA0C;AAC/CJ,UAAAA,OAAO,mCACFA,OADE;AAELO,YAAAA,IAAI,EAAE3B,GAAG,CAAC,MAAD;AAFJ,YAAP;AAID,SALM,MAKA,IAAImB,GAAG,KAAK,OAAR,IAAmBK,CAAC,KAAK,OAA7B,EAAsC;AAC3CJ,UAAAA,OAAO,mCACFA,OADE;AAEL,aAAC,SAAD,GAAapB,GAAG,CAAC,OAAD,CAFX;AAGL,aAAC,OAAD,GAAWA,GAAG,CAAC,OAAD;AAHT,YAAP;AAKD,SANM,MAMA,IAAImB,GAAG,KAAK,SAAR,IAAqBK,CAAC,KAAK,SAA/B,EAA0C;AAC/CJ,UAAAA,OAAO,mCACFA,OADE;AAEL,aAAC,WAAD,GAAepB,GAAG,CAAC4B,OAFd;AAGL,aAAC,SAAD,GAAa5B,GAAG,CAAC2B;AAHZ,YAAP;AAKD,SANM,MAMA,IAAGR,GAAG,IAAIK,CAAC,KAAK,MAAhB,EAAwB;AAC7BJ,UAAAA,OAAO,mCACFA,OADE;AAEL,aAAE,GAAED,GAAI,IAAGK,CAAE,EAAb,GAAiBxB,GAAG,CAACwB,CAAD;AAFf,YAAP;AAID,SALM,MAKA;AACLJ,UAAAA,OAAO,mCACFA,OADE;AAEL,aAACI,CAAD,GAAKxB,GAAG,CAACwB,CAAD;AAFH,YAAP;AAID;AACF;AACF,KAhED;AAkEA,WAAOJ,OAAP;AACD,GArED;;AAuEA,QAAMJ,WAAW,GAAG,OAAOR,OAAP,EAAqBqB,MAArB,KAAwC;AAC1DpB,IAAAA,UAAU,CAACD,OAAD,CAAV;AACAD,IAAAA,cAAc,CAACsB,MAAD,CAAd;AACA,UAAMC,GAAG,GAAG,MAAMtC,aAAa,CAAC,KAAD,EAAS,GAAEO,MAAM,CAACe,UAAW,QAA7B,EAAqC;AAClEiB,MAAAA,IAAI,EAAE;AACJC,QAAAA,IAAI,EAAE,CADF;AAEJC,QAAAA,UAAU,EAAE;AAFR,OAD4D;AAKlEC,MAAAA,MAAM,EAAE;AACN1B,QAAAA,OAAO,EAAEA,OAAF,aAAEA,OAAF,cAAEA,OAAF,GAAa,EADd;AAEN2B,QAAAA,GAAG,EAAEN,MAAF,aAAEA,MAAF,cAAEA,MAAF,GAAY;AAFT;AAL0D,KAArC,CAA/B;AAWA,QAAIjB,UAAU,GAAGkB,GAAG,CAACM,OAAJ,CAAYC,SAAZ,CAAsBd,GAAtB,CAA0B,CAACvB,GAAD,EAAWsC,KAAX,KAA6B;AACtE,aAAOpB,SAAS,CAAClB,GAAD,CAAhB;AACD,KAFgB,CAAjB;;AAIA,QAAG8B,GAAG,IAAIA,GAAG,CAACS,MAAJ,KAAe,GAAzB,EAA6B;AAC3B1B,MAAAA,aAAa,CAAC,CAAC,GAAGD,UAAJ,CAAD,CAAb;AACD;AACF,GArBD;;AAuBA,SACE,MAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,KAAK,EAAE;AAAC4B,MAAAA,KAAK,EAAE,mBAAR;AAA6BC,MAAAA,MAAM,EAAE;AAArC,KAAZ;AAAsD,IAAA,OAAO,EAAE,MAAM;AACnEtC,MAAAA,SAAS,CAAC,IAAD,CAAT;AACD,KAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGGJ,MAAM,CAACe,UAAP,KAAsB,SAAtB,GAAkCd,GAAG,CAAC,MAAD,CAArC,GAAgDA,GAAG,CAAE,GAAED,MAAM,CAACoB,GAAI,EAAf,CAHtD,CADF,EAME;AAAK,IAAA,KAAK,EAAE;AACVuB,MAAAA,OAAO,EAAE,MADC;AAEVC,MAAAA,eAAe,EAAEzD,WAFP;AAGVsD,MAAAA,KAAK,EAAE,EAHG;AAIVC,MAAAA,MAAM,EAAE,EAJE;AAKVG,MAAAA,cAAc,EAAE,QALN;AAMVC,MAAAA,UAAU,EAAE;AANF,KAAZ;AAOG,IAAA,OAAO,EAAE,MAAM;AAChB1C,MAAAA,SAAS,CAAC,IAAD,CAAT;AACD,KATD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAUE;AAAK,IAAA,KAAK,EAAE;AAACqC,MAAAA,KAAK,EAAE,EAAR;AAAYC,MAAAA,MAAM,EAAE;AAApB,KAAZ;AAAqC,IAAA,GAAG,EAAEtD,cAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,CANF,EAkBE,MAAC,KAAD;AAAO,IAAA,MAAM,EAAEe,MAAf;AAAuB,IAAA,KAAK,EAAE;AAC5B4C,MAAAA,OAAO,EAAE;AACPC,QAAAA,GAAG,EAAE,KADE;AAEPC,QAAAA,IAAI,EAAE,KAFC;AAGPC,QAAAA,KAAK,EAAE,MAHA;AAIPC,QAAAA,MAAM,EAAE,MAJD;AAKPC,QAAAA,WAAW,EAAE,MALN;AAMPC,QAAAA,SAAS,EAAE,uBANJ;AAOPC,QAAAA,OAAO,EAAE;AAPF,OADmB;AAU5BC,MAAAA,OAAO,EAAE;AACPC,QAAAA,UAAU,EAAE,gBADL;AAEPC,QAAAA,MAAM,EAAE;AAFD;AAVmB,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAeI;AAAK,IAAA,KAAK,EAAE;AACVhB,MAAAA,KAAK,EAAE,GADG;AAEVC,MAAAA,MAAM,EAAE;AAFE,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIE;AAAK,IAAA,KAAK,EAAE;AACVgB,MAAAA,SAAS,EAAE,EADD;AAEVC,MAAAA,UAAU,EAAE,EAFF;AAGVP,MAAAA,WAAW,EAAE,EAHH;AAIVT,MAAAA,OAAO,EAAE,MAJC;AAKVE,MAAAA,cAAc,EAAE;AALN,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOE;AAAG,IAAA,KAAK,EAAE;AACRe,MAAAA,KAAK,EAAE,OADC;AAERC,MAAAA,QAAQ,EAAE,EAFF;AAGRC,MAAAA,UAAU,EAAE,MAHJ;AAIRC,MAAAA,MAAM,EAAE;AAJA,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKI1D,KALJ,kBAPF,EAaE;AAAK,IAAA,KAAK,EAAE;AAAC2D,MAAAA,MAAM,EAAE;AAAT,KAAZ;AAAiC,IAAA,OAAO,EAAE,MAAM;AAC9C5D,MAAAA,SAAS,CAAC,KAAD,CAAT;AACD,KAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGE;AAAK,IAAA,KAAK,EAAE;AAACqC,MAAAA,KAAK,EAAE,EAAR;AAAYC,MAAAA,MAAM,EAAE;AAApB,KAAZ;AAAqC,IAAA,GAAG,EAAErD,GAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CAbF,CAJF,EAuBE;AAAK,IAAA,KAAK,EAAE;AACVoD,MAAAA,KAAK,EAAE,GADG;AACEC,MAAAA,MAAM,EAAE,EADV;AACcqB,MAAAA,MAAM,EAAE,kBADtB;AAEVpB,MAAAA,OAAO,EAAE;AAFC,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIE;AAAK,IAAA,KAAK,EAAE;AACVF,MAAAA,KAAK,EAAE,EADG;AACCE,MAAAA,OAAO,EAAE,MADV;AACkBE,MAAAA,cAAc,EAAE,QADlC;AAC4CC,MAAAA,UAAU,EAAE,QADxD;AAEVF,MAAAA,eAAe,EAAE,SAFP;AAEkBqB,MAAAA,MAAM,EAAE,qBAF1B;AAGVC,MAAAA,WAAW,EAAE;AAHH,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE;AACE,IAAA,YAAY,EAAE,GADhB;AAEE,IAAA,QAAQ,EAAGC,CAAD,IAAO;AACflD,MAAAA,WAAW,CAAC,EAAD,EAAKmD,MAAM,CAACD,CAAC,CAACE,MAAF,CAASC,KAAV,CAAX,CAAX;AACD,KAJH;AAKE,IAAA,KAAK,EAAE;AACLV,MAAAA,KAAK,EAAE,OADF;AAELhB,MAAAA,eAAe,EAAE,WAFZ;AAGLqB,MAAAA,MAAM,EAAE,CAHH;AAILvB,MAAAA,MAAM,EAAE,EAJH;AAKLD,MAAAA,KAAK,EAAE,GALF;AAMLoB,MAAAA,QAAQ,EAAC,EANJ;AAOLC,MAAAA,UAAU,EAAE;AAPP,KALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CAJF,EA+BE;AACE,IAAA,KAAK,EAAErD,OAAF,aAAEA,OAAF,cAAEA,OAAF,GAAa,EADpB;AAEE,IAAA,IAAI,EAAE,MAFR;AAGE,IAAA,WAAW,EAAC,gEAHd;AAIE,IAAA,QAAQ,EAAG0D,CAAD,IAAO;AAACzD,MAAAA,UAAU,CAACyD,CAAC,CAACE,MAAF,CAASC,KAAV,CAAV;AAA2B,KAJ/C;AAKE,IAAA,SAAS,EAAGH,CAAD,IAAO;AAChB,UAAGA,CAAC,CAAC/C,GAAF,KAAU,OAAb,EAAqB;AACnBH,QAAAA,WAAW,CAACR,OAAD,EAAUF,WAAV,CAAX;AACD;AACF,KATH;AAUE,IAAA,KAAK,EAAE;AACLkC,MAAAA,KAAK,EAAC,OADD;AAELC,MAAAA,MAAM,EAAC,MAFF;AAGL6B,MAAAA,WAAW,EAAC,MAHP;AAILN,MAAAA,MAAM,EAAC,qBAJF;AAKLrB,MAAAA,eAAe,EAAE;AALZ,KAVT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA/BF,EAiDE;AACE,IAAA,KAAK,EAAE;AAACY,MAAAA,UAAU,EAAC,SAAZ;AAAuBf,MAAAA,KAAK,EAAC,MAA7B;AAAoCC,MAAAA,MAAM,EAAC,MAA3C;AAAkDC,MAAAA,OAAO,EAAC,MAA1D;AAAiEE,MAAAA,cAAc,EAAC,QAAhF;AAAyFC,MAAAA,UAAU,EAAC,QAApG;AAA8GkB,MAAAA,MAAM,EAAE;AAAtH,KADT;AAEE,IAAA,OAAO,EAAE,MAAM;AACb/C,MAAAA,WAAW,CAACR,OAAD,EAAUF,WAAV,CAAX;AACD,KAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAME;AAAK,IAAA,GAAG,EAAEf,WAAV;AAAuB,IAAA,KAAK,EAAE;AAACiD,MAAAA,KAAK,EAAC,MAAP;AAAcC,MAAAA,MAAM,EAAC;AAArB,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CAjDF,CAvBF,EAiFE;AAAK,IAAA,KAAK,EAAE;AAACY,MAAAA,OAAO,EAAE,eAAV;AAA2Bb,MAAAA,KAAK,EAAE;AAAlC,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,UAAD;AACE,IAAA,UAAU,EAAElD,eAAe,wBAACS,MAAM,CAACe,UAAR,qEAAsB,EAAtB,CAD7B;AAEE,IAAA,GAAG,EAAEF,UAAF,aAAEA,UAAF,cAAEA,UAAF,GAAgB,EAFrB;AAGE,IAAA,MAAM,EAAE,MAAM,CAAE,CAHlB;AAIE,IAAA,KAAK,EAAE,GAJT;AAKE,IAAA,SAAS,EAAE,EALb;AAME,IAAA,MAAM,EAAE,GANV;AAOE,IAAA,YAAY,EAAGsD,CAAD,IAAO;AACnBvD,MAAAA,YAAY,CAACuD,CAAD,CAAZ;AACD,KATH;AAUE,IAAA,IAAI,EAAE,aAVR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAjFF,EA+FE;AAAK,IAAA,KAAK,EAAE;AAAEzB,MAAAA,MAAM,EAAE,EAAV;AAAcC,MAAAA,OAAO,EAAE,MAAvB;AAA+BG,MAAAA,UAAU,EAAE;AAA3C,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,OAAO,EAAE,MAAM;AACb1C,MAAAA,SAAS,CAAC,KAAD,CAAT;AACD,KAHH;AAIE,IAAA,KAAK,EAAE;AAACqC,MAAAA,KAAK,EAAE,GAAR;AAAaC,MAAAA,MAAM,EAAE,EAArB;AAAyBE,MAAAA,eAAe,EAAE,SAA1C;AAAqDD,MAAAA,OAAO,EAAE,MAA9D;AAAsEE,MAAAA,cAAc,EAAE,QAAtF;AAAgGC,MAAAA,UAAU,EAAE;AAA5G,KAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBANF,CADF,EASE;AACE,IAAA,OAAO,EAAE,MAAM;AACb,UAAI0B,EAAE,GAAG,EAAT;AACAlD,MAAAA,MAAM,CAACC,IAAP,CAAYV,UAAU,CAAC,CAAD,CAAtB,EAA2BW,GAA3B,CAA+BC,CAAC,IAAI;AAClC,YAAGA,CAAC,CAACE,OAAF,CAAU,KAAV,MAAqB,CAAC,CAAzB,EAA2B;AACzB6C,UAAAA,EAAE,GAAG/C,CAAL;AACD;AACF,OAJD;;AAKA,UAAGd,SAAS,KAAK8D,SAAd,IAA2B9D,SAAS,KAAK,IAA5C,EAAiD;AAC/C,YAAGX,MAAM,CAACe,UAAP,KAAsB,SAAzB,EAAmC;AACjCb,UAAAA,WAAW,+CACND,GADM,GAENY,UAAU,CAACF,SAAD,CAFJ;AAGT,aAACX,MAAM,CAACoB,GAAP,GAAW,IAAZ,GAAmBP,UAAU,CAACF,SAAD,CAAV,CAAsB6D,EAAtB;AAHV,aAAX;AAKD,SAND,MAMK;AACHtE,UAAAA,WAAW,+CACND,GADM,GAENY,UAAU,CAACF,SAAD,CAFJ;AAGT,aAACX,MAAM,CAACoB,GAAR,GAAcP,UAAU,CAACF,SAAD,CAAV,CAAsBiB,IAH3B;AAIT,aAAC5B,MAAM,CAACoB,GAAP,GAAW,IAAZ,GAAmBP,UAAU,CAACF,SAAD,CAAV,CAAsB6D,EAAtB,CAJV;AAKT5C,YAAAA,IAAI,EAAE3B,GAAG,CAAC2B;AALD,aAAX;AAOD;AACF;;AACDxB,MAAAA,SAAS,CAAC,KAAD,CAAT;AACD,KA1BH;AA2BE,IAAA,KAAK,EAAE;AAACqC,MAAAA,KAAK,EAAE,GAAR;AAAaC,MAAAA,MAAM,EAAE,EAArB;AAAyBE,MAAAA,eAAe,EAAEzD,WAA1C;AAAuDwD,MAAAA,OAAO,EAAE,MAAhE;AAAwEE,MAAAA,cAAc,EAAE,QAAxF;AAAkGC,MAAAA,UAAU,EAAE;AAA9G,KA3BT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KA6BE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCA7BF,CATF,CA/FF,CAfJ,CAlBF,CADF;AA8KD,CAnTD;;AAqTA,MAAM4B,kBAAkB,GAAGzF,MAAM,CAAC0F,GAAI;AACtC;AACA;AACA,CAHA;AAKA,SAAQ5E,WAAR","sourcesContent":["import React, {useEffect, useState} from 'react'\nimport {IExcelHeaderType} from '../../common/@types/type'\nimport styled from 'styled-components'\nimport Modal from 'react-modal'\nimport {POINT_COLOR} from '../../common/configset'\n//@ts-ignore\nimport IcSearchButton from '../../../public/images/ic_search.png'\n//@ts-ignore\nimport IcX from '../../../public/images/ic_x.png'\nimport {ExcelTable} from '../Excel/ExcelTable'\nimport {searchModalList} from '../../common/modalInit'\n//@ts-ignore\nimport Search_icon from '../../../public/images/btn_search.png'\nimport {RequestMethod} from '../../common/RequestFunctions'\n\ninterface IProps {\n  column: IExcelHeaderType\n  row: any\n  onRowChange: (e: any) => void\n}\n\nconst optionList = {\n  member: ['사용자명'],\n  product: ['고객사명','모델명','CODE', '품명', '재질'],\n  customer: ['고객사명'],\n  model: ['고객사명', '모델']\n}\n\nconst SearchModal = ({column, row, onRowChange}: IProps) => {\n  const [isOpen, setIsOpen] = useState<boolean>(false)\n  const [title, setTitle] = useState<string>('')\n  const [optionIndex, setOptionIndex] = useState<number>(0)\n  const [keyword, setKeyword] = useState<string>('')\n  const [selectRow, setSelectRow] = useState<number>()\n  const [searchList, setSearchList] = useState<any[]>([])\n\n  useEffect(() =>{\n    setTitle(column.searchType ?? '')\n    if(column.searchType) {\n      changeTypeToString(column.searchType)\n    }\n  }, [column.searchType])\n\n  useEffect(() => {\n    if(isOpen) SearchBasic(keyword, 0)\n  }, [isOpen])\n\n  const changeTypeToString = (type: string) => {\n    switch(type){\n      case 'member':\n        setTitle('담당자')\n        break;\n      case 'product':\n        setTitle('제품')\n        break;\n      case 'customer':\n        setTitle('고객사')\n        break;\n      case 'model':\n        setTitle('고객사 모델')\n        break;\n      default:\n        setTitle('')\n        break;\n    }\n  }\n\n  const changeRow = (row: any, key?: string) => {\n    let tmpData = {}\n    Object.keys(row).map(v => {\n\n      if(row[v] && typeof row[v] === 'object' && v !== 'additional'){\n        let data = changeRow(row[v], v)\n        tmpData = {\n          ...tmpData,\n          ...data,\n        }\n      }else{\n        if(key === 'customer' && v.indexOf(key) === -1){\n          if(v === 'name'){\n            tmpData = {\n              ...tmpData,\n              [key+'_idPK']: row[key+'_id'],\n              [key+'_id']: row[v],\n              [key]: row[v],\n            }\n          }else if(v === 'name'){\n            tmpData = {\n              ...tmpData,\n              [key+'_'+v]: row[v]\n            }\n          }else{\n            tmpData = {\n              ...tmpData,\n              [v]: row[v]\n            }\n          }\n        }\n        else if (key === 'authority' && v === 'ca_id') {\n          tmpData = {\n            ...tmpData,\n            ['authorityPK']: row['ca_id'],\n            ['authority']: row['name'],\n          }\n        } else if(key === 'raw_material' && v === 'name'){\n          tmpData = {\n            ...tmpData,\n            name: row['name'],\n          }\n        } else if (key === 'model' && v === 'cm_id') {\n          tmpData = {\n            ...tmpData,\n            ['cm_idPK']: row['cm_id'],\n            ['cm_id']: row['model'],\n          }\n        } else if (key === 'manager' && v === 'user_id') {\n          tmpData = {\n            ...tmpData,\n            ['user_idPK']: row.user_id,\n            ['user_id']: row.name,\n          }\n        } else if(key && v === 'name') {\n          tmpData = {\n            ...tmpData,\n            [`${key}_${v}`]: row[v]\n          }\n        } else {\n          tmpData = {\n            ...tmpData,\n            [v]: row[v]\n          }\n        }\n      }\n    })\n\n    return tmpData\n  }\n\n  const SearchBasic = async (keyword: any, option: number) => {\n    setKeyword(keyword)\n    setOptionIndex(option)\n    const res = await RequestMethod('get', `${column.searchType}Search`,{\n      path: {\n        page: 1,\n        renderItem: 19,\n      },\n      params: {\n        keyword: keyword ?? '',\n        opt: option ?? 0\n      }\n    })\n\n    let searchList = res.results.info_list.map((row: any, index: number) => {\n      return changeRow(row)\n    })\n\n    if(res && res.status === 200){\n      setSearchList([...searchList])\n    }\n  }\n\n  return (\n    <SearchModalWrapper >\n      <div style={{width: 'calc(100% - 40px)', height: 40}} onClick={() => {\n        setIsOpen(true)\n      }}>\n        {column.searchType === 'product' ? row['code'] : row[`${column.key}`]}\n      </div>\n      <div style={{\n        display: 'flex',\n        backgroundColor: POINT_COLOR,\n        width: 38,\n        height: 38,\n        justifyContent: 'center',\n        alignItems: 'center'\n      }} onClick={() => {\n        setIsOpen(true)\n      }}>\n        <img style={{width: 20, height: 20}} src={IcSearchButton}/>\n      </div>\n      <Modal isOpen={isOpen} style={{\n        content: {\n          top: '50%',\n          left: '50%',\n          right: 'auto',\n          bottom: 'auto',\n          marginRight: '-50%',\n          transform: 'translate(-50%, -50%)',\n          padding: 0\n        },\n        overlay: {\n          background: 'rgba(0,0,0,.6)',\n          zIndex: 5\n        }\n        }}>\n          <div style={{\n            width: 888,\n            height: 480\n          }}>\n            <div style={{\n              marginTop: 24,\n              marginLeft: 16,\n              marginRight: 16,\n              display: 'flex',\n              justifyContent: 'space-between'\n            }}>\n              <p style={{\n                color: 'black',\n                fontSize: 22,\n                fontWeight: 'bold',\n                margin: 0,\n              }}>{title} 검색</p>\n              <div style={{cursor: 'pointer'}} onClick={() => {\n                setIsOpen(false)\n              }}>\n                <img style={{width: 20, height: 20}} src={IcX}/>\n              </div>\n            </div>\n            <div style={{\n              width: 856, height: 32, margin: '16px 0 16px 16px',\n              display: 'flex'\n            }}>\n              <div style={{\n                width: 88, display: 'flex', justifyContent: 'center', alignItems: 'center',\n                backgroundColor: '#F4F6FA', border: '0.5px solid #B3B3B3',\n                borderRight: 'none'\n              }}>\n                <select\n                  defaultValue={'-'}\n                  onChange={(e) => {\n                    SearchBasic('', Number(e.target.value))\n                  }}\n                  style={{\n                    color: 'black',\n                    backgroundColor: '#00000000',\n                    border: 0,\n                    height: 32,\n                    width: 115,\n                    fontSize:15,\n                    fontWeight: 'bold'\n                  }}\n                >\n                  {\n                    // optionList && optionList[column.searchType].map((v, i) => {\n                    //   return <option value={i}>{v}</option>\n                    // })\n                  }\n                </select>\n              </div>\n              <input\n                value={keyword ?? \"\"}\n                type={\"text\"}\n                placeholder=\"검색어를 입력해주세요.\"\n                onChange={(e) => {setKeyword(e.target.value)}}\n                onKeyDown={(e) => {\n                  if(e.key === 'Enter'){\n                    SearchBasic(keyword, optionIndex)\n                  }\n                }}\n                style={{\n                  width:\"736px\",\n                  height:\"32px\",\n                  paddingLeft:\"10px\",\n                  border:\"0.5px solid #B3B3B3\",\n                  backgroundColor: 'rgba(0,0,0,0)'\n                }}\n              />\n              <div\n                style={{background:\"#19B9DF\", width:\"32px\",height:\"32px\",display:\"flex\",justifyContent:\"center\",alignItems:\"center\", cursor: 'pointer'}}\n                onClick={() => {\n                  SearchBasic(keyword, optionIndex)\n                }}\n              >\n                <img src={Search_icon} style={{width:\"16px\",height:\"16px\"}} />\n              </div>\n            </div>\n            <div style={{padding: '0 16px 0 16px', width: 856}}>\n              <ExcelTable\n                headerList={searchModalList[column.searchType ?? '']}\n                row={searchList ?? []}\n                setRow={() => {}}\n                width={856}\n                rowHeight={32}\n                height={320}\n                setSelectRow={(e) => {\n                  setSelectRow(e)\n                }}\n                type={'searchModal'}\n              />\n            </div>\n            <div style={{ height: 70, display: 'flex', alignItems: 'flex-end'}}>\n              <div\n                onClick={() => {\n                  setIsOpen(false)\n                }}\n                style={{width: 444, height: 40, backgroundColor: '#b3b3b3', display: 'flex', justifyContent: 'center', alignItems: 'center'}}\n              >\n                <p>취소</p>\n              </div>\n              <div\n                onClick={() => {\n                  let pk = ''\n                  Object.keys(searchList[0]).map(v => {\n                    if(v.indexOf('_id') !== -1){\n                      pk = v\n                    }\n                  })\n                  if(selectRow !== undefined && selectRow !== null){\n                    if(column.searchType === 'product'){\n                      onRowChange({\n                        ...row,\n                        ...searchList[selectRow],\n                        [column.key+'PK']: searchList[selectRow][pk],\n                      })\n                    }else{\n                      onRowChange({\n                        ...row,\n                        ...searchList[selectRow],\n                        [column.key]: searchList[selectRow].name,\n                        [column.key+'PK']: searchList[selectRow][pk],\n                        name: row.name\n                      })\n                    }\n                  }\n                  setIsOpen(false)\n                }}\n                style={{width: 444, height: 40, backgroundColor: POINT_COLOR, display: 'flex', justifyContent: 'center', alignItems: 'center'}}\n              >\n                <p>등록하기</p>\n              </div>\n            </div>\n          </div>\n        </Modal>\n    </SearchModalWrapper>\n  )\n}\n\nconst SearchModalWrapper = styled.div`\n  display: flex;\n  width: 100%;\n`\n\nexport {SearchModal}\n"]},"metadata":{},"sourceType":"module"}