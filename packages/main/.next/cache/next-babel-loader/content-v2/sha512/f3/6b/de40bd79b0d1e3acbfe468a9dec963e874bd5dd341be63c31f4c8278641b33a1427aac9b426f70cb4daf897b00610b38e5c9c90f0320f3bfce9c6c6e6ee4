{"ast":null,"code":"var _jsxFileName = \"/Users/user/Desktop/sizl/mono_pop/packages/main/component/InputBox/WelcomeInput.tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { WelcomeInputCompo } from '../../styles/styledComponents'; //웰컴, 로그인 페이지 네비게이션 컴포넌트\n\nconst WelcomeInput = ({\n  title,\n  hint,\n  type,\n  value,\n  onChangeEvent,\n  onKeyDown\n}) => {\n  const onCheckKor = event => {\n    event = event || window.event;\n\n    if (/[ㄱ-ㅎ|ㅏ-ㅣ|가-힣]/g.test(event.target.value)) {\n      alert('한글은 비밀번호로 사용할 수 없습니다.');\n    }\n\n    let keyID = event.which ? event.which : event.keyCode;\n    if (keyID == 8 || keyID == 46 || keyID == 37 || keyID == 39) return;else event.target.value = event.target.value.replace(/[ㄱ-ㅎ|ㅏ-ㅣ|가-힣]/g, \"\");\n  };\n\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    style: {\n      display: 'flex',\n      justifyContent: 'flex-start'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, __jsx(\"label\", {\n    style: {\n      fontSize: 14,\n      width: '100%',\n      textAlign: 'left',\n      fontFamily: 'Roboto',\n      fontWeight: 'bold'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, title)), type === 'password' ? __jsx(WelcomeInputCompo, {\n    type: type,\n    onKeyUp: e => onCheckKor(e),\n    onKeyDown: e => onKeyDown && onKeyDown(e.key),\n    style: {\n      imeMode: 'disabled'\n    },\n    onChange: onChangeEvent,\n    value: value,\n    placeholder: hint,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }\n  }) : __jsx(WelcomeInputCompo, {\n    type: type,\n    onChange: onChangeEvent,\n    value: value,\n    placeholder: hint,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }\n  }));\n};\n\nexport default WelcomeInput;","map":{"version":3,"sources":["/Users/user/Desktop/sizl/mono_pop/packages/main/component/InputBox/WelcomeInput.tsx"],"names":["React","WelcomeInputCompo","WelcomeInput","title","hint","type","value","onChangeEvent","onKeyDown","onCheckKor","event","window","test","target","alert","keyID","which","keyCode","replace","display","justifyContent","fontSize","width","textAlign","fontFamily","fontWeight","e","key","imeMode"],"mappings":";;AAAA,OAAOA,KAAP,MAA+B,OAA/B;AACA,SAAQC,iBAAR,QAAgC,+BAAhC,C,CACA;;AAWA,MAAMC,YAAY,GAAG,CAAC;AAACC,EAAAA,KAAD;AAAQC,EAAAA,IAAR;AAAcC,EAAAA,IAAd;AAAoBC,EAAAA,KAApB;AAA2BC,EAAAA,aAA3B;AAA0CC,EAAAA;AAA1C,CAAD,KAAkE;AAErF,QAAMC,UAAU,GAAIC,KAAD,IAAgB;AACjCA,IAAAA,KAAK,GAAGA,KAAK,IAAIC,MAAM,CAACD,KAAxB;;AACA,QAAI,gBAAD,CAAmBE,IAAnB,CAAwBF,KAAK,CAACG,MAAN,CAAaP,KAArC,CAAH,EAA+C;AAC7CQ,MAAAA,KAAK,CAAC,uBAAD,CAAL;AACD;;AACD,QAAIC,KAAK,GAAIL,KAAK,CAACM,KAAP,GAAgBN,KAAK,CAACM,KAAtB,GAA8BN,KAAK,CAACO,OAAhD;AACA,QAAKF,KAAK,IAAI,CAAT,IAAcA,KAAK,IAAI,EAAvB,IAA6BA,KAAK,IAAI,EAAtC,IAA4CA,KAAK,IAAI,EAA1D,EACE,OADF,KAGEL,KAAK,CAACG,MAAN,CAAaP,KAAb,GAAqBI,KAAK,CAACG,MAAN,CAAaP,KAAb,CAAmBY,OAAnB,CAA4B,gBAA5B,EAA8C,EAA9C,CAArB;AAEH,GAXD;;AAaA,SAEE,4BACE;AAAK,IAAA,KAAK,EAAE;AAACC,MAAAA,OAAO,EAAE,MAAV;AAAkBC,MAAAA,cAAc,EAAE;AAAlC,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,KAAK,EAAE;AAACC,MAAAA,QAAQ,EAAE,EAAX;AAAeC,MAAAA,KAAK,EAAE,MAAtB;AAA8BC,MAAAA,SAAS,EAAE,MAAzC;AAAiDC,MAAAA,UAAU,EAAE,QAA7D;AAAuEC,MAAAA,UAAU,EAAE;AAAnF,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2GtB,KAA3G,CADF,CADF,EAKIE,IAAI,KAAK,UAAT,GACE,MAAC,iBAAD;AAAmB,IAAA,IAAI,EAAEA,IAAzB;AAA+B,IAAA,OAAO,EAAGqB,CAAD,IAAKjB,UAAU,CAACiB,CAAD,CAAvD;AACmB,IAAA,SAAS,EAAGA,CAAD,IAAOlB,SAAS,IAAIA,SAAS,CAACkB,CAAC,CAACC,GAAH,CAD3D;AAEmB,IAAA,KAAK,EAAE;AAACC,MAAAA,OAAO,EAAC;AAAT,KAF1B;AAEgD,IAAA,QAAQ,EAAErB,aAF1D;AAEyE,IAAA,KAAK,EAAED,KAFhF;AAEuF,IAAA,WAAW,EAAEF,IAFpG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,GAKE,MAAC,iBAAD;AAAmB,IAAA,IAAI,EAAEC,IAAzB;AAA+B,IAAA,QAAQ,EAAEE,aAAzC;AAAwD,IAAA,KAAK,EAAED,KAA/D;AAAsE,IAAA,WAAW,EAAEF,IAAnF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVN,CAFF;AAiBD,CAhCD;;AAmCA,eAAeF,YAAf","sourcesContent":["import React, {useEffect} from 'react';\nimport {WelcomeInputCompo} from '../../styles/styledComponents'\n//웰컴, 로그인 페이지 네비게이션 컴포넌트\n\ninterface IProps {\n  title: string,\n  hint: string,\n  type: string,\n  value: number | string,\n  onChangeEvent?: (e: React.ChangeEvent<HTMLInputElement>) => void\n  onKeyDown?: (key: string) => void\n}\n\nconst WelcomeInput = ({title, hint, type, value, onChangeEvent, onKeyDown}: IProps) => {\n\n  const onCheckKor = (event: any) => {\n    event = event || window.event;\n    if((/[ㄱ-ㅎ|ㅏ-ㅣ|가-힣]/g).test(event.target.value)){\n      alert('한글은 비밀번호로 사용할 수 없습니다.')\n    }\n    let keyID = (event.which) ? event.which : event.keyCode;\n    if ( keyID == 8 || keyID == 46 || keyID == 37 || keyID == 39 )\n      return;\n    else\n      event.target.value = event.target.value.replace( /[ㄱ-ㅎ|ㅏ-ㅣ|가-힣]/g, \"\");\n\n  }\n\n  return (\n\n    <>\n      <div style={{display: 'flex', justifyContent: 'flex-start'}}>\n        <label style={{fontSize: 14, width: '100%', textAlign: 'left', fontFamily: 'Roboto', fontWeight: 'bold'}}>{title}</label>\n      </div>\n      {\n        type === 'password' ?\n          <WelcomeInputCompo type={type} onKeyUp={(e)=>onCheckKor(e)}\n                             onKeyDown={(e) => onKeyDown && onKeyDown(e.key)}\n                             style={{imeMode:'disabled'}} onChange={onChangeEvent} value={value} placeholder={hint}/>\n          :\n          <WelcomeInputCompo type={type} onChange={onChangeEvent} value={value} placeholder={hint}/>\n      }\n    </>\n\n  );\n}\n\n\nexport default WelcomeInput;\n"]},"metadata":{},"sourceType":"module"}