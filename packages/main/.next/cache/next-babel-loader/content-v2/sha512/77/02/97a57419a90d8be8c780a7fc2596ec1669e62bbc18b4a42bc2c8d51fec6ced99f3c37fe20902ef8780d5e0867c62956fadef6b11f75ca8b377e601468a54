{"ast":null,"code":"export const getMachineTypeList = lang => {\n  switch (lang) {\n    case 'kor':\n      return ['(선택없음)', '프레스', '로봇', '용접기', '밀링', '선반', '탭핑기'];\n\n    default:\n      return ['(선택없음)', '프레스', '로봇', '용접기', '밀링', '선반', '탭핑기'];\n  }\n};\nexport const getSubMachineTypeList = lang => {\n  switch (lang) {\n    case 'kor':\n      return ['(선택없음)', '미스피드 검출장치', '하사점 검출장치', '로드모니터', '앵글시퀀서', '엔코더', '통과센서'];\n\n    default:\n      return ['(선택없음)', '미스피드 검출장치', '하사점 검출장치', '로드모니터', '앵글시퀀서', '엔코더', '통과센서'];\n  }\n};\nexport const getMaterialTypeList = lang => {\n  switch (lang) {\n    case 'kor':\n      return ['원자재', '부자재', '반제품', '완제품'];\n\n    default:\n      return ['원자재', '부자재', '반제품', '완제품'];\n  }\n};\nexport const getPartsTypeList = lang => {\n  switch (lang) {\n    case 'kor':\n      return [''];\n\n    default:\n      return [''];\n  }\n};\nexport const subMachineCodes = [{\n  code: 51,\n  name: '미스피드 검출장치'\n}, {\n  code: 52,\n  name: '하사점 검출장치'\n}, {\n  code: 53,\n  name: '로드모니터'\n}, {\n  code: 54,\n  name: '앵글시퀀서'\n}, {\n  code: 55,\n  name: '엔코더'\n}, {\n  code: 56,\n  name: '통과센서'\n}, {\n  code: 50,\n  name: '기타(분류없음)'\n}];\nexport const stockReasonCodes = [{\n  code: 0,\n  name: '정상 출고'\n}, {\n  code: 1,\n  name: '생산 소진'\n}, {\n  code: 2,\n  name: '불량'\n}, {\n  code: 3,\n  name: '정상 입고'\n}, {\n  code: 4,\n  name: '생산'\n}, {\n  code: 5,\n  name: '반품'\n}, {\n  code: 8,\n  name: '출하'\n}, {\n  code: 9,\n  name: '오류 정정'\n}, {\n  code: 10,\n  name: '금형 제작'\n}];\nexport const moldCodes = [{\n  code: 0,\n  name: '기타(분류없음)'\n}, {\n  code: 1,\n  name: '프레스 금형'\n}, {\n  code: 2,\n  name: '사출 금형'\n}, {\n  code: 3,\n  name: '단조 금형'\n}, {\n  code: 4,\n  name: '다이캐스팅'\n}, {\n  code: 5,\n  name: '고무 금형'\n}, {\n  code: 6,\n  name: '유리 금형'\n}, {\n  code: 7,\n  name: '분말야금'\n}, {\n  code: 8,\n  name: '요업 금형'\n}, {\n  code: 9,\n  name: '주조 금형'\n}];\nexport const materialCodes = [{\n  code: 0,\n  name: '원자재'\n}, {\n  code: 1,\n  name: '부자재'\n}, {\n  code: 4,\n  name: 'LOT 자재'\n}, {\n  code: 10,\n  name: '반제품'\n}, {\n  code: 15,\n  name: '공정품'\n}, {\n  code: 30,\n  name: '완제품'\n}];\nexport const barcodes = [{\n  code: 0,\n  name: '바코드'\n}, {\n  code: 1,\n  name: 'QR코드'\n}, {\n  code: 2,\n  name: '데이터 매트릭스'\n}];\nexport const processcodes = [{\n  code: 0,\n  name: '단발'\n}, {\n  code: 6,\n  name: '단발(블랭킹)'\n}, {\n  code: 7,\n  name: '단발(피어싱)'\n}, {\n  code: 8,\n  name: '단발(포밍)'\n}, {\n  code: 9,\n  name: '단발(프로)'\n}, {\n  code: 10,\n  name: '단발(벤딩)'\n}, {\n  code: 11,\n  name: '단발(드로잉)'\n}, {\n  code: 1,\n  name: '라인'\n}, {\n  code: 2,\n  name: '용접'\n}, {\n  code: 4,\n  name: '조립'\n}, {\n  code: 5,\n  name: '검수'\n}];\nexport const weldingcodes = [{\n  code: 200,\n  name: '아르곤'\n}, {\n  code: 201,\n  name: '스팟'\n}, {\n  code: 202,\n  name: '통합'\n}];\nexport const keycamcodes = [{\n  code: 0,\n  name: 'Off'\n}, {\n  code: 1,\n  name: '촌동'\n}, {\n  code: 2,\n  name: '안전1행정'\n}, {\n  code: 3,\n  name: '연속'\n}, {\n  code: 4,\n  name: '슬라이드'\n}];\nexport const getMoldTypeList = lang => {\n  switch (lang) {\n    case 'kor':\n      return ['(선택없음)', '프레스 금형', '사출 금형', '단조 금형', '다이캐스팅', '고무 금형', '유리 금형', '분말야금', '요업 금형', '주조금형'];\n\n    default:\n      return ['(선택없음)', '프레스 금형', '사출 금형', '단조 금형', '다이캐스팅', '고무 금형', '유리 금형', '분말야금', '요업 금형', '주조금형'];\n  }\n};\nexport const getBarcodeTypeList = lang => {\n  switch (lang) {\n    case 'kor':\n      return ['바코드 (기본)'];\n\n    default:\n      return ['바코드 (기본)'];\n  }\n};\nexport const machineCodes = [{\n  code: 1,\n  name: '프레스'\n}, {\n  code: 2,\n  name: '로봇'\n}, {\n  code: 3,\n  name: '용접기'\n}, {\n  code: 4,\n  name: '밀링'\n}, {\n  code: 5,\n  name: '선반'\n}, {\n  code: 6,\n  name: '탭핑기'\n}, {\n  code: 0,\n  name: '기타(분류없음)'\n}];\nexport const unitCodes = [{\n  code: 0,\n  name: ''\n}, {\n  code: 1,\n  name: '개'\n}, {\n  code: 2,\n  name: '회'\n}, {\n  code: 3,\n  name: '℃'\n}, {\n  code: 4,\n  name: '°F'\n}, {\n  code: 5,\n  name: 'ton'\n}, {\n  code: 6,\n  name: 'A'\n}, {\n  code: 7,\n  name: 'kW'\n}, {\n  code: 8,\n  name: 'W'\n}, {\n  code: 9,\n  name: 'spm'\n}];\nexport const statusCodes = [{\n  code: 901,\n  name: '가동시간',\n  unit: 0\n}, {\n  code: 902,\n  name: '비가동시간',\n  unit: 0\n}, {\n  code: 903,\n  name: '에러',\n  unit: 0\n}, {\n  code: 904,\n  name: '온도',\n  unit: 3\n}, {\n  code: 905,\n  name: '운전준비상태',\n  unit: 0\n}, {\n  code: 906,\n  name: '운전OK상태',\n  unit: 0\n}, {\n  code: 101,\n  name: '기계측정값',\n  unit: 0\n}, {\n  code: 102,\n  name: 'spm',\n  unit: 0\n}, {\n  code: 103,\n  name: '키캠상태',\n  unit: 0\n}, {\n  code: 104,\n  name: '모터상태',\n  unit: 0\n}, {\n  code: 105,\n  name: '메인전류',\n  unit: 6\n}, {\n  code: 106,\n  name: '슬라이스전류',\n  unit: 6\n}, {\n  code: 107,\n  name: 'VS(INVERTER)',\n  unit: 0\n}, {\n  code: 108,\n  name: '로드톤',\n  unit: 5\n}, {\n  code: 109,\n  name: '전체카운터',\n  unit: 0\n}, {\n  code: 110,\n  name: '종합카운터',\n  unit: 0\n}, {\n  code: 111,\n  name: '프리셋카운터',\n  unit: 0\n}, {\n  code: 112,\n  name: 'Angle',\n  unit: 0\n}, {\n  code: 113,\n  name: '운전모드',\n  unit: 0\n}, {\n  code: 114,\n  name: '최고 측정값',\n  unit: 0\n}, {\n  code: 115,\n  name: '평균 측정값',\n  unit: 0\n}];\nexport const transferCodeToName = (type, value) => {\n  let str = '';\n\n  if (type === 'machine') {\n    machineCodes.forEach((v, i) => {\n      if (v.code === value) {\n        str = v.name;\n      }\n    });\n  } else if (type === 'device') {\n    subMachineCodes.forEach((v, i) => {\n      if (v.code === value) {\n        str = v.name;\n      }\n    });\n  } else if (type === 'mold') {\n    moldCodes.forEach((v, i) => {\n      if (v.code === value) {\n        str = v.name;\n      }\n    });\n  } else if (type === 'material') {\n    materialCodes.forEach((v, i) => {\n      if (v.code === value) {\n        str = v.name;\n      }\n    });\n  } else if (type === 'unit') {\n    statusCodes.forEach((v, i) => {\n      if (v.code === value) {\n        const num = v.unit;\n        unitCodes.forEach((v2, i) => {\n          if (v2.code === num) {\n            str = v2.name;\n          }\n        });\n      }\n    });\n  } else if (type === 'title') {\n    statusCodes.forEach((v, i) => {\n      if (v.code === value) {\n        str = v.name;\n      }\n    });\n  } else if (type === 'barcode') {\n    barcodes.forEach((v, i) => {\n      if (v.code === value) {\n        str = v.name;\n      }\n    });\n  } else if (type === 'stock') {\n    stockReasonCodes.forEach((v, i) => {\n      if (v.code === value) {\n        str = v.name;\n      }\n    });\n  } else if (type === 'process') {\n    processcodes.forEach((v, i) => {\n      if (v.code === value) {\n        str = v.name;\n      }\n    });\n  } else if (type === 'keycam') {\n    keycamcodes.forEach((v, i) => {\n      if (v.code === value) {\n        str = v.name;\n      }\n    });\n  } else if (type === 'welding') {\n    weldingcodes.forEach((v, i) => {\n      if (v.code === value) {\n        str = v.name;\n      }\n    });\n  }\n\n  return str;\n};\nexport const transferStringToCode = (type, value) => {\n  let num = 0;\n\n  if (type === 'machine') {\n    machineCodes.forEach((v, i) => {\n      if (v.name === value) {\n        num = v.code;\n      }\n    });\n  } else if (type === 'device') {\n    subMachineCodes.forEach((v, i) => {\n      if (v.name === value) {\n        num = v.code;\n      }\n    });\n  } else if (type === 'mold') {\n    moldCodes.forEach((v, i) => {\n      if (v.name === value) {\n        num = v.code;\n      }\n    });\n  } else if (type === 'material') {\n    let cnt = 0;\n    materialCodes.forEach((v, i) => {\n      if (v.name === value) {\n        cnt++;\n        num = v.code;\n      }\n    });\n\n    if (cnt === 0) {\n      num = -1;\n    }\n  } else if (type === 'barcode') {\n    barcodes.forEach((v, i) => {\n      if (v.name === value) {\n        num = v.code;\n      }\n    });\n  } else if (type === 'stock') {\n    stockReasonCodes.forEach((v, i) => {\n      if (v.name === value) {\n        num = v.code;\n      }\n    });\n  } else if (type === 'process') {\n    processcodes.forEach((v, i) => {\n      if (v.name === value) {\n        num = v.code;\n      }\n    });\n  } else if (type === 'welding') {\n    weldingcodes.forEach((v, i) => {\n      if (v.name === value) {\n        num = v.code;\n      }\n    });\n  }\n\n  return num;\n};\nexport const machineCodeToName = (type, value, leng) => {\n  let str = '';\n\n  if (type === 'machine') {\n    machineCodes.forEach((v, i) => {\n      if (v.code === value) {\n        str = v.name;\n      }\n    });\n  } else if (type === 'submachine') {\n    subMachineCodes.forEach((v, i) => {\n      if (v.code === value) {\n        str = v.name;\n      }\n    });\n  } else if (type === 'mould') {\n    moldCodes.forEach((v, i) => {\n      if (v.code === value) {\n        str = v.name;\n      }\n    });\n  } else if (type === 'material') {\n    materialCodes.forEach((v, i) => {\n      if (v.code === value) {\n        str = v.name;\n      }\n    });\n  } else if (type === 'barcode') {\n    barcodes.forEach((v, i) => {\n      if (v.code === value) {\n        str = v.name;\n      }\n    });\n  } else if (type === 'stock') {\n    stockReasonCodes.forEach((v, i) => {\n      if (v.code === value) {\n        str = v.name;\n      }\n    });\n  } else if (type === '') {\n    stockReasonCodes.forEach((v, i) => {\n      if (v.code === value) {\n        str = v.name;\n      }\n    });\n  }\n\n  return str;\n};\nexport const machineStringToCode = (type, value, leng) => {\n  let num = 0;\n\n  if (type === 'machine') {\n    machineCodes.forEach((v, i) => {\n      if (v.name === value) {\n        num = v.code;\n      }\n    });\n  } else if (type === 'submachine') {\n    subMachineCodes.forEach((v, i) => {\n      if (v.name === value) {\n        num = v.code;\n      }\n    });\n  } else if (type === 'mould') {\n    moldCodes.forEach((v, i) => {\n      if (v.name === value) {\n        num = v.code;\n      }\n    });\n  } else if (type === 'material') {\n    materialCodes.forEach((v, i) => {\n      if (v.name === value) {\n        num = v.code;\n      }\n    });\n  } else if (type === 'barcode') {\n    barcodes.forEach((v, i) => {\n      if (v.name === value) {\n        num = v.code;\n      }\n    });\n  } else if (type === 'stock') {\n    stockReasonCodes.forEach((v, i) => {\n      if (v.name === value) {\n        num = v.code;\n      }\n    });\n  }\n\n  return num;\n};","map":{"version":3,"sources":["/Users/user/Desktop/sizl/mono_pop/packages/shared/src/common/codeTransferFunctions.ts"],"names":["getMachineTypeList","lang","getSubMachineTypeList","getMaterialTypeList","getPartsTypeList","subMachineCodes","code","name","stockReasonCodes","moldCodes","materialCodes","barcodes","processcodes","weldingcodes","keycamcodes","getMoldTypeList","getBarcodeTypeList","machineCodes","unitCodes","statusCodes","unit","transferCodeToName","type","value","str","forEach","v","i","num","v2","transferStringToCode","cnt","machineCodeToName","leng","machineStringToCode"],"mappings":"AAAA,OAAO,MAAMA,kBAAkB,GAAIC,IAAD,IAAkB;AAClD,UAAQA,IAAR;AACE,SAAK,KAAL;AACE,aAAO,CAAC,QAAD,EAAW,KAAX,EAAkB,IAAlB,EAAwB,KAAxB,EAA+B,IAA/B,EAAqC,IAArC,EAA2C,KAA3C,CAAP;;AACF;AACE,aAAO,CAAC,QAAD,EAAW,KAAX,EAAkB,IAAlB,EAAwB,KAAxB,EAA+B,IAA/B,EAAqC,IAArC,EAA2C,KAA3C,CAAP;AAJJ;AAMD,CAPM;AASP,OAAO,MAAMC,qBAAqB,GAAID,IAAD,IAAkB;AACrD,UAAQA,IAAR;AACE,SAAK,KAAL;AACE,aAAO,CAAC,QAAD,EAAW,WAAX,EAAwB,UAAxB,EAAoC,OAApC,EAA6C,OAA7C,EAAsD,KAAtD,EAA6D,MAA7D,CAAP;;AACF;AACE,aAAO,CAAC,QAAD,EAAW,WAAX,EAAwB,UAAxB,EAAoC,OAApC,EAA6C,OAA7C,EAAsD,KAAtD,EAA6D,MAA7D,CAAP;AAJJ;AAMD,CAPM;AASP,OAAO,MAAME,mBAAmB,GAAIF,IAAD,IAAkB;AACnD,UAAQA,IAAR;AACE,SAAK,KAAL;AACE,aAAO,CAAC,KAAD,EAAQ,KAAR,EAAe,KAAf,EAAsB,KAAtB,CAAP;;AACF;AACE,aAAO,CAAC,KAAD,EAAQ,KAAR,EAAe,KAAf,EAAsB,KAAtB,CAAP;AAJJ;AAMD,CAPM;AASP,OAAO,MAAMG,gBAAgB,GAAIH,IAAD,IAAkB;AAChD,UAAQA,IAAR;AACE,SAAK,KAAL;AACE,aAAO,CAAC,EAAD,CAAP;;AACF;AACE,aAAO,CAAC,EAAD,CAAP;AAJJ;AAMD,CAPM;AAUP,OAAO,MAAMI,eAAe,GAAG,CAE7B;AAACC,EAAAA,IAAI,EAAE,EAAP;AAAWC,EAAAA,IAAI,EAAE;AAAjB,CAF6B,EAG7B;AAACD,EAAAA,IAAI,EAAE,EAAP;AAAWC,EAAAA,IAAI,EAAE;AAAjB,CAH6B,EAI7B;AAACD,EAAAA,IAAI,EAAE,EAAP;AAAWC,EAAAA,IAAI,EAAE;AAAjB,CAJ6B,EAK7B;AAACD,EAAAA,IAAI,EAAE,EAAP;AAAWC,EAAAA,IAAI,EAAE;AAAjB,CAL6B,EAM7B;AAACD,EAAAA,IAAI,EAAE,EAAP;AAAWC,EAAAA,IAAI,EAAE;AAAjB,CAN6B,EAO7B;AAACD,EAAAA,IAAI,EAAE,EAAP;AAAWC,EAAAA,IAAI,EAAE;AAAjB,CAP6B,EAQ7B;AAACD,EAAAA,IAAI,EAAE,EAAP;AAAWC,EAAAA,IAAI,EAAE;AAAjB,CAR6B,CAAxB;AAWP,OAAO,MAAMC,gBAAgB,GAAG,CAC9B;AAACF,EAAAA,IAAI,EAAE,CAAP;AAAUC,EAAAA,IAAI,EAAE;AAAhB,CAD8B,EAE9B;AAACD,EAAAA,IAAI,EAAE,CAAP;AAAUC,EAAAA,IAAI,EAAE;AAAhB,CAF8B,EAG9B;AAACD,EAAAA,IAAI,EAAE,CAAP;AAAUC,EAAAA,IAAI,EAAE;AAAhB,CAH8B,EAI9B;AAACD,EAAAA,IAAI,EAAE,CAAP;AAAUC,EAAAA,IAAI,EAAE;AAAhB,CAJ8B,EAK9B;AAACD,EAAAA,IAAI,EAAE,CAAP;AAAUC,EAAAA,IAAI,EAAE;AAAhB,CAL8B,EAM9B;AAACD,EAAAA,IAAI,EAAE,CAAP;AAAUC,EAAAA,IAAI,EAAE;AAAhB,CAN8B,EAO9B;AAACD,EAAAA,IAAI,EAAE,CAAP;AAAUC,EAAAA,IAAI,EAAE;AAAhB,CAP8B,EAQ9B;AAACD,EAAAA,IAAI,EAAE,CAAP;AAAUC,EAAAA,IAAI,EAAE;AAAhB,CAR8B,EAS9B;AAACD,EAAAA,IAAI,EAAE,EAAP;AAAWC,EAAAA,IAAI,EAAE;AAAjB,CAT8B,CAAzB;AAaP,OAAO,MAAME,SAAS,GAAG,CAEvB;AAACH,EAAAA,IAAI,EAAE,CAAP;AAAUC,EAAAA,IAAI,EAAE;AAAhB,CAFuB,EAGvB;AAACD,EAAAA,IAAI,EAAE,CAAP;AAAUC,EAAAA,IAAI,EAAE;AAAhB,CAHuB,EAIvB;AAACD,EAAAA,IAAI,EAAE,CAAP;AAAUC,EAAAA,IAAI,EAAE;AAAhB,CAJuB,EAKvB;AAACD,EAAAA,IAAI,EAAE,CAAP;AAAUC,EAAAA,IAAI,EAAE;AAAhB,CALuB,EAMvB;AAACD,EAAAA,IAAI,EAAE,CAAP;AAAUC,EAAAA,IAAI,EAAE;AAAhB,CANuB,EAOvB;AAACD,EAAAA,IAAI,EAAE,CAAP;AAAUC,EAAAA,IAAI,EAAE;AAAhB,CAPuB,EAQvB;AAACD,EAAAA,IAAI,EAAE,CAAP;AAAUC,EAAAA,IAAI,EAAE;AAAhB,CARuB,EASvB;AAACD,EAAAA,IAAI,EAAE,CAAP;AAAUC,EAAAA,IAAI,EAAE;AAAhB,CATuB,EAUvB;AAACD,EAAAA,IAAI,EAAE,CAAP;AAAUC,EAAAA,IAAI,EAAE;AAAhB,CAVuB,EAWvB;AAACD,EAAAA,IAAI,EAAE,CAAP;AAAUC,EAAAA,IAAI,EAAE;AAAhB,CAXuB,CAAlB;AAcP,OAAO,MAAMG,aAAa,GAAG,CAC3B;AAACJ,EAAAA,IAAI,EAAE,CAAP;AAAUC,EAAAA,IAAI,EAAE;AAAhB,CAD2B,EAE3B;AAACD,EAAAA,IAAI,EAAE,CAAP;AAAUC,EAAAA,IAAI,EAAE;AAAhB,CAF2B,EAG3B;AAACD,EAAAA,IAAI,EAAE,CAAP;AAAUC,EAAAA,IAAI,EAAE;AAAhB,CAH2B,EAI3B;AAACD,EAAAA,IAAI,EAAE,EAAP;AAAWC,EAAAA,IAAI,EAAE;AAAjB,CAJ2B,EAK3B;AAACD,EAAAA,IAAI,EAAE,EAAP;AAAWC,EAAAA,IAAI,EAAE;AAAjB,CAL2B,EAM3B;AAACD,EAAAA,IAAI,EAAE,EAAP;AAAWC,EAAAA,IAAI,EAAE;AAAjB,CAN2B,CAAtB;AAUP,OAAO,MAAMI,QAAQ,GAAG,CAEtB;AAACL,EAAAA,IAAI,EAAE,CAAP;AAAUC,EAAAA,IAAI,EAAE;AAAhB,CAFsB,EAGtB;AAACD,EAAAA,IAAI,EAAE,CAAP;AAAUC,EAAAA,IAAI,EAAE;AAAhB,CAHsB,EAItB;AAACD,EAAAA,IAAI,EAAE,CAAP;AAAUC,EAAAA,IAAI,EAAE;AAAhB,CAJsB,CAAjB;AAQP,OAAO,MAAMK,YAAY,GAAG,CAC1B;AAACN,EAAAA,IAAI,EAAE,CAAP;AAAUC,EAAAA,IAAI,EAAE;AAAhB,CAD0B,EAE1B;AAACD,EAAAA,IAAI,EAAE,CAAP;AAAUC,EAAAA,IAAI,EAAE;AAAhB,CAF0B,EAG1B;AAACD,EAAAA,IAAI,EAAE,CAAP;AAAUC,EAAAA,IAAI,EAAE;AAAhB,CAH0B,EAI1B;AAACD,EAAAA,IAAI,EAAE,CAAP;AAAUC,EAAAA,IAAI,EAAE;AAAhB,CAJ0B,EAK1B;AAACD,EAAAA,IAAI,EAAE,CAAP;AAAUC,EAAAA,IAAI,EAAE;AAAhB,CAL0B,EAM1B;AAACD,EAAAA,IAAI,EAAE,EAAP;AAAWC,EAAAA,IAAI,EAAE;AAAjB,CAN0B,EAO1B;AAACD,EAAAA,IAAI,EAAE,EAAP;AAAWC,EAAAA,IAAI,EAAE;AAAjB,CAP0B,EAQ1B;AAACD,EAAAA,IAAI,EAAE,CAAP;AAAUC,EAAAA,IAAI,EAAE;AAAhB,CAR0B,EAS1B;AAACD,EAAAA,IAAI,EAAE,CAAP;AAAUC,EAAAA,IAAI,EAAE;AAAhB,CAT0B,EAU1B;AAACD,EAAAA,IAAI,EAAE,CAAP;AAAUC,EAAAA,IAAI,EAAE;AAAhB,CAV0B,EAW1B;AAACD,EAAAA,IAAI,EAAE,CAAP;AAAUC,EAAAA,IAAI,EAAE;AAAhB,CAX0B,CAArB;AAcP,OAAO,MAAMM,YAAY,GAAG,CAC1B;AAACP,EAAAA,IAAI,EAAE,GAAP;AAAYC,EAAAA,IAAI,EAAE;AAAlB,CAD0B,EAE1B;AAACD,EAAAA,IAAI,EAAE,GAAP;AAAYC,EAAAA,IAAI,EAAE;AAAlB,CAF0B,EAG1B;AAACD,EAAAA,IAAI,EAAE,GAAP;AAAYC,EAAAA,IAAI,EAAE;AAAlB,CAH0B,CAArB;AAMP,OAAO,MAAMO,WAAW,GAAG,CACzB;AAACR,EAAAA,IAAI,EAAE,CAAP;AAAUC,EAAAA,IAAI,EAAE;AAAhB,CADyB,EAEzB;AAACD,EAAAA,IAAI,EAAE,CAAP;AAAUC,EAAAA,IAAI,EAAE;AAAhB,CAFyB,EAGzB;AAACD,EAAAA,IAAI,EAAE,CAAP;AAAUC,EAAAA,IAAI,EAAE;AAAhB,CAHyB,EAIzB;AAACD,EAAAA,IAAI,EAAE,CAAP;AAAUC,EAAAA,IAAI,EAAE;AAAhB,CAJyB,EAKzB;AAACD,EAAAA,IAAI,EAAE,CAAP;AAAUC,EAAAA,IAAI,EAAE;AAAhB,CALyB,CAApB;AAQP,OAAO,MAAMQ,eAAe,GAAId,IAAD,IAAkB;AAC/C,UAAQA,IAAR;AACE,SAAK,KAAL;AACE,aAAO,CAAC,QAAD,EAAW,QAAX,EAAqB,OAArB,EAA8B,OAA9B,EAAuC,OAAvC,EAAgD,OAAhD,EAAyD,OAAzD,EAAkE,MAAlE,EAA0E,OAA1E,EAAmF,MAAnF,CAAP;;AACF;AACE,aAAO,CAAC,QAAD,EAAW,QAAX,EAAqB,OAArB,EAA8B,OAA9B,EAAuC,OAAvC,EAAgD,OAAhD,EAAyD,OAAzD,EAAkE,MAAlE,EAA0E,OAA1E,EAAmF,MAAnF,CAAP;AAJJ;AAMD,CAPM;AASP,OAAO,MAAMe,kBAAkB,GAAIf,IAAD,IAAkB;AAClD,UAAQA,IAAR;AACE,SAAK,KAAL;AACE,aAAO,CAAC,UAAD,CAAP;;AACF;AACE,aAAO,CAAC,UAAD,CAAP;AAJJ;AAMD,CAPM;AAUP,OAAO,MAAMgB,YAAY,GAAG,CAC1B;AAACX,EAAAA,IAAI,EAAE,CAAP;AAAUC,EAAAA,IAAI,EAAE;AAAhB,CAD0B,EAE1B;AAACD,EAAAA,IAAI,EAAE,CAAP;AAAUC,EAAAA,IAAI,EAAE;AAAhB,CAF0B,EAG1B;AAACD,EAAAA,IAAI,EAAE,CAAP;AAAUC,EAAAA,IAAI,EAAE;AAAhB,CAH0B,EAI1B;AAACD,EAAAA,IAAI,EAAE,CAAP;AAAUC,EAAAA,IAAI,EAAE;AAAhB,CAJ0B,EAK1B;AAACD,EAAAA,IAAI,EAAE,CAAP;AAAUC,EAAAA,IAAI,EAAE;AAAhB,CAL0B,EAM1B;AAACD,EAAAA,IAAI,EAAE,CAAP;AAAUC,EAAAA,IAAI,EAAE;AAAhB,CAN0B,EAO1B;AAACD,EAAAA,IAAI,EAAE,CAAP;AAAUC,EAAAA,IAAI,EAAE;AAAhB,CAP0B,CAArB;AAWP,OAAO,MAAMW,SAAS,GAAG,CACvB;AAACZ,EAAAA,IAAI,EAAE,CAAP;AAAUC,EAAAA,IAAI,EAAE;AAAhB,CADuB,EAEvB;AAACD,EAAAA,IAAI,EAAE,CAAP;AAAUC,EAAAA,IAAI,EAAE;AAAhB,CAFuB,EAGvB;AAACD,EAAAA,IAAI,EAAE,CAAP;AAAUC,EAAAA,IAAI,EAAE;AAAhB,CAHuB,EAIvB;AAACD,EAAAA,IAAI,EAAE,CAAP;AAAUC,EAAAA,IAAI,EAAE;AAAhB,CAJuB,EAKvB;AAACD,EAAAA,IAAI,EAAE,CAAP;AAAUC,EAAAA,IAAI,EAAE;AAAhB,CALuB,EAMvB;AAACD,EAAAA,IAAI,EAAE,CAAP;AAAUC,EAAAA,IAAI,EAAE;AAAhB,CANuB,EAOvB;AAACD,EAAAA,IAAI,EAAE,CAAP;AAAUC,EAAAA,IAAI,EAAE;AAAhB,CAPuB,EAQvB;AAACD,EAAAA,IAAI,EAAE,CAAP;AAAUC,EAAAA,IAAI,EAAE;AAAhB,CARuB,EASvB;AAACD,EAAAA,IAAI,EAAE,CAAP;AAAUC,EAAAA,IAAI,EAAE;AAAhB,CATuB,EAUvB;AAACD,EAAAA,IAAI,EAAE,CAAP;AAAUC,EAAAA,IAAI,EAAE;AAAhB,CAVuB,CAAlB;AAaP,OAAO,MAAMY,WAAW,GAAG,CAEzB;AAACb,EAAAA,IAAI,EAAE,GAAP;AAAYC,EAAAA,IAAI,EAAE,MAAlB;AAA0Ba,EAAAA,IAAI,EAAE;AAAhC,CAFyB,EAGzB;AAACd,EAAAA,IAAI,EAAE,GAAP;AAAYC,EAAAA,IAAI,EAAE,OAAlB;AAA2Ba,EAAAA,IAAI,EAAE;AAAjC,CAHyB,EAIzB;AAACd,EAAAA,IAAI,EAAE,GAAP;AAAYC,EAAAA,IAAI,EAAE,IAAlB;AAAwBa,EAAAA,IAAI,EAAE;AAA9B,CAJyB,EAKzB;AAACd,EAAAA,IAAI,EAAE,GAAP;AAAYC,EAAAA,IAAI,EAAE,IAAlB;AAAwBa,EAAAA,IAAI,EAAE;AAA9B,CALyB,EAMzB;AAACd,EAAAA,IAAI,EAAE,GAAP;AAAYC,EAAAA,IAAI,EAAE,QAAlB;AAA4Ba,EAAAA,IAAI,EAAE;AAAlC,CANyB,EAOzB;AAACd,EAAAA,IAAI,EAAE,GAAP;AAAYC,EAAAA,IAAI,EAAE,QAAlB;AAA4Ba,EAAAA,IAAI,EAAE;AAAlC,CAPyB,EAQzB;AAACd,EAAAA,IAAI,EAAE,GAAP;AAAYC,EAAAA,IAAI,EAAE,OAAlB;AAA2Ba,EAAAA,IAAI,EAAE;AAAjC,CARyB,EASzB;AAACd,EAAAA,IAAI,EAAE,GAAP;AAAYC,EAAAA,IAAI,EAAE,KAAlB;AAAyBa,EAAAA,IAAI,EAAE;AAA/B,CATyB,EAUzB;AAACd,EAAAA,IAAI,EAAE,GAAP;AAAYC,EAAAA,IAAI,EAAE,MAAlB;AAA0Ba,EAAAA,IAAI,EAAE;AAAhC,CAVyB,EAWzB;AAACd,EAAAA,IAAI,EAAE,GAAP;AAAYC,EAAAA,IAAI,EAAE,MAAlB;AAA0Ba,EAAAA,IAAI,EAAE;AAAhC,CAXyB,EAYzB;AAACd,EAAAA,IAAI,EAAE,GAAP;AAAYC,EAAAA,IAAI,EAAE,MAAlB;AAA0Ba,EAAAA,IAAI,EAAE;AAAhC,CAZyB,EAazB;AAACd,EAAAA,IAAI,EAAE,GAAP;AAAYC,EAAAA,IAAI,EAAE,QAAlB;AAA4Ba,EAAAA,IAAI,EAAE;AAAlC,CAbyB,EAczB;AAACd,EAAAA,IAAI,EAAE,GAAP;AAAYC,EAAAA,IAAI,EAAE,cAAlB;AAAkCa,EAAAA,IAAI,EAAE;AAAxC,CAdyB,EAezB;AAACd,EAAAA,IAAI,EAAE,GAAP;AAAYC,EAAAA,IAAI,EAAE,KAAlB;AAAyBa,EAAAA,IAAI,EAAE;AAA/B,CAfyB,EAgBzB;AAACd,EAAAA,IAAI,EAAE,GAAP;AAAYC,EAAAA,IAAI,EAAE,OAAlB;AAA2Ba,EAAAA,IAAI,EAAE;AAAjC,CAhByB,EAiBzB;AAACd,EAAAA,IAAI,EAAE,GAAP;AAAYC,EAAAA,IAAI,EAAE,OAAlB;AAA2Ba,EAAAA,IAAI,EAAE;AAAjC,CAjByB,EAkBzB;AAACd,EAAAA,IAAI,EAAE,GAAP;AAAYC,EAAAA,IAAI,EAAE,QAAlB;AAA4Ba,EAAAA,IAAI,EAAE;AAAlC,CAlByB,EAmBzB;AAACd,EAAAA,IAAI,EAAE,GAAP;AAAYC,EAAAA,IAAI,EAAE,OAAlB;AAA2Ba,EAAAA,IAAI,EAAE;AAAjC,CAnByB,EAoBzB;AAACd,EAAAA,IAAI,EAAE,GAAP;AAAYC,EAAAA,IAAI,EAAE,MAAlB;AAA0Ba,EAAAA,IAAI,EAAE;AAAhC,CApByB,EAqBzB;AAACd,EAAAA,IAAI,EAAE,GAAP;AAAYC,EAAAA,IAAI,EAAE,QAAlB;AAA4Ba,EAAAA,IAAI,EAAE;AAAlC,CArByB,EAsBzB;AAACd,EAAAA,IAAI,EAAE,GAAP;AAAYC,EAAAA,IAAI,EAAE,QAAlB;AAA4Ba,EAAAA,IAAI,EAAE;AAAlC,CAtByB,CAApB;AA0BP,OAAO,MAAMC,kBAAkB,GAAG,CAACC,IAAD,EAAeC,KAAf,KAA8B;AAE9D,MAAIC,GAAuB,GAAG,EAA9B;;AAEA,MAAIF,IAAI,KAAK,SAAb,EAAwB;AACtBL,IAAAA,YAAY,CAACQ,OAAb,CAAqB,CAACC,CAAD,EAAoCC,CAApC,KAA0C;AAC7D,UAAID,CAAC,CAACpB,IAAF,KAAWiB,KAAf,EAAsB;AACpBC,QAAAA,GAAG,GAAGE,CAAC,CAACnB,IAAR;AACD;AACF,KAJD;AAKD,GAND,MAMO,IAAIe,IAAI,KAAK,QAAb,EAAuB;AAC5BjB,IAAAA,eAAe,CAACoB,OAAhB,CAAwB,CAACC,CAAD,EAAoCC,CAApC,KAA0C;AAChE,UAAID,CAAC,CAACpB,IAAF,KAAWiB,KAAf,EAAsB;AACpBC,QAAAA,GAAG,GAAGE,CAAC,CAACnB,IAAR;AACD;AACF,KAJD;AAKD,GANM,MAMA,IAAIe,IAAI,KAAK,MAAb,EAAqB;AAC1Bb,IAAAA,SAAS,CAACgB,OAAV,CAAkB,CAACC,CAAD,EAAoCC,CAApC,KAA0C;AAC1D,UAAID,CAAC,CAACpB,IAAF,KAAWiB,KAAf,EAAsB;AACpBC,QAAAA,GAAG,GAAGE,CAAC,CAACnB,IAAR;AACD;AACF,KAJD;AAKD,GANM,MAMA,IAAIe,IAAI,KAAK,UAAb,EAAyB;AAC9BZ,IAAAA,aAAa,CAACe,OAAd,CAAsB,CAACC,CAAD,EAAoCC,CAApC,KAA0C;AAC9D,UAAID,CAAC,CAACpB,IAAF,KAAWiB,KAAf,EAAsB;AACpBC,QAAAA,GAAG,GAAGE,CAAC,CAACnB,IAAR;AACD;AACF,KAJD;AAKD,GANM,MAMA,IAAIe,IAAI,KAAK,MAAb,EAAqB;AAC1BH,IAAAA,WAAW,CAACM,OAAZ,CAAoB,CAACC,CAAD,EAAkDC,CAAlD,KAAwD;AAC1E,UAAID,CAAC,CAACpB,IAAF,KAAWiB,KAAf,EAAsB;AACpB,cAAMK,GAAG,GAAGF,CAAC,CAACN,IAAd;AACAF,QAAAA,SAAS,CAACO,OAAV,CAAkB,CAACI,EAAD,EAAqCF,CAArC,KAA2C;AAC3D,cAAIE,EAAE,CAACvB,IAAH,KAAYsB,GAAhB,EAAqB;AACnBJ,YAAAA,GAAG,GAAGK,EAAE,CAACtB,IAAT;AACD;AACF,SAJD;AAKD;AACF,KATD;AAUD,GAXM,MAWA,IAAIe,IAAI,KAAK,OAAb,EAAsB;AAC3BH,IAAAA,WAAW,CAACM,OAAZ,CAAoB,CAACC,CAAD,EAAoCC,CAApC,KAA0C;AAC5D,UAAID,CAAC,CAACpB,IAAF,KAAWiB,KAAf,EAAsB;AACpBC,QAAAA,GAAG,GAAGE,CAAC,CAACnB,IAAR;AACD;AACF,KAJD;AAKD,GANM,MAMA,IAAIe,IAAI,KAAK,SAAb,EAAwB;AAC7BX,IAAAA,QAAQ,CAACc,OAAT,CAAiB,CAACC,CAAD,EAAoCC,CAApC,KAA0C;AACzD,UAAID,CAAC,CAACpB,IAAF,KAAWiB,KAAf,EAAsB;AACpBC,QAAAA,GAAG,GAAGE,CAAC,CAACnB,IAAR;AACD;AACF,KAJD;AAKD,GANM,MAMA,IAAIe,IAAI,KAAK,OAAb,EAAsB;AAC3Bd,IAAAA,gBAAgB,CAACiB,OAAjB,CAAyB,CAACC,CAAD,EAAoCC,CAApC,KAA0C;AACjE,UAAID,CAAC,CAACpB,IAAF,KAAWiB,KAAf,EAAsB;AACpBC,QAAAA,GAAG,GAAGE,CAAC,CAACnB,IAAR;AACD;AACF,KAJD;AAKD,GANM,MAMA,IAAIe,IAAI,KAAK,SAAb,EAAwB;AAC7BV,IAAAA,YAAY,CAACa,OAAb,CAAqB,CAACC,CAAD,EAAoCC,CAApC,KAA0C;AAC7D,UAAID,CAAC,CAACpB,IAAF,KAAWiB,KAAf,EAAsB;AACpBC,QAAAA,GAAG,GAAGE,CAAC,CAACnB,IAAR;AACD;AACF,KAJD;AAKD,GANM,MAMA,IAAIe,IAAI,KAAK,QAAb,EAAuB;AAC5BR,IAAAA,WAAW,CAACW,OAAZ,CAAoB,CAACC,CAAD,EAAoCC,CAApC,KAA0C;AAC5D,UAAID,CAAC,CAACpB,IAAF,KAAWiB,KAAf,EAAsB;AACpBC,QAAAA,GAAG,GAAGE,CAAC,CAACnB,IAAR;AACD;AACF,KAJD;AAKD,GANM,MAMA,IAAIe,IAAI,KAAK,SAAb,EAAwB;AAC7BT,IAAAA,YAAY,CAACY,OAAb,CAAqB,CAACC,CAAD,EAAoCC,CAApC,KAA0C;AAC7D,UAAID,CAAC,CAACpB,IAAF,KAAWiB,KAAf,EAAsB;AACpBC,QAAAA,GAAG,GAAGE,CAAC,CAACnB,IAAR;AACD;AACF,KAJD;AAKD;;AAED,SAAOiB,GAAP;AACD,CA9EM;AAiFP,OAAO,MAAMM,oBAAoB,GAAG,CAACR,IAAD,EAAeC,KAAf,KAA8B;AAEhE,MAAIK,GAAuB,GAAG,CAA9B;;AAEA,MAAIN,IAAI,KAAK,SAAb,EAAwB;AACtBL,IAAAA,YAAY,CAACQ,OAAb,CAAqB,CAACC,CAAD,EAAoCC,CAApC,KAA0C;AAC7D,UAAID,CAAC,CAACnB,IAAF,KAAWgB,KAAf,EAAsB;AACpBK,QAAAA,GAAG,GAAGF,CAAC,CAACpB,IAAR;AACD;AACF,KAJD;AAKD,GAND,MAMO,IAAIgB,IAAI,KAAK,QAAb,EAAuB;AAC5BjB,IAAAA,eAAe,CAACoB,OAAhB,CAAwB,CAACC,CAAD,EAAoCC,CAApC,KAA0C;AAChE,UAAID,CAAC,CAACnB,IAAF,KAAWgB,KAAf,EAAsB;AACpBK,QAAAA,GAAG,GAAGF,CAAC,CAACpB,IAAR;AACD;AACF,KAJD;AAKD,GANM,MAMA,IAAIgB,IAAI,KAAK,MAAb,EAAqB;AAC1Bb,IAAAA,SAAS,CAACgB,OAAV,CAAkB,CAACC,CAAD,EAAoCC,CAApC,KAA0C;AAC1D,UAAID,CAAC,CAACnB,IAAF,KAAWgB,KAAf,EAAsB;AACpBK,QAAAA,GAAG,GAAGF,CAAC,CAACpB,IAAR;AACD;AACF,KAJD;AAKD,GANM,MAMA,IAAIgB,IAAI,KAAK,UAAb,EAAyB;AAC9B,QAAIS,GAAG,GAAG,CAAV;AACArB,IAAAA,aAAa,CAACe,OAAd,CAAsB,CAACC,CAAD,EAAoCC,CAApC,KAA0C;AAC9D,UAAID,CAAC,CAACnB,IAAF,KAAWgB,KAAf,EAAsB;AACpBQ,QAAAA,GAAG;AACHH,QAAAA,GAAG,GAAGF,CAAC,CAACpB,IAAR;AACD;AACF,KALD;;AAOA,QAAIyB,GAAG,KAAK,CAAZ,EAAe;AACbH,MAAAA,GAAG,GAAG,CAAC,CAAP;AACD;AACF,GAZM,MAYA,IAAIN,IAAI,KAAK,SAAb,EAAwB;AAC7BX,IAAAA,QAAQ,CAACc,OAAT,CAAiB,CAACC,CAAD,EAAoCC,CAApC,KAA0C;AACzD,UAAID,CAAC,CAACnB,IAAF,KAAWgB,KAAf,EAAsB;AACpBK,QAAAA,GAAG,GAAGF,CAAC,CAACpB,IAAR;AACD;AACF,KAJD;AAMD,GAPM,MAOA,IAAIgB,IAAI,KAAK,OAAb,EAAsB;AAC3Bd,IAAAA,gBAAgB,CAACiB,OAAjB,CAAyB,CAACC,CAAD,EAAoCC,CAApC,KAA0C;AACjE,UAAID,CAAC,CAACnB,IAAF,KAAWgB,KAAf,EAAsB;AACpBK,QAAAA,GAAG,GAAGF,CAAC,CAACpB,IAAR;AACD;AACF,KAJD;AAKD,GANM,MAMA,IAAIgB,IAAI,KAAK,SAAb,EAAwB;AAC7BV,IAAAA,YAAY,CAACa,OAAb,CAAqB,CAACC,CAAD,EAAoCC,CAApC,KAA0C;AAC7D,UAAID,CAAC,CAACnB,IAAF,KAAWgB,KAAf,EAAsB;AACpBK,QAAAA,GAAG,GAAGF,CAAC,CAACpB,IAAR;AACD;AACF,KAJD;AAKD,GANM,MAMA,IAAIgB,IAAI,KAAK,SAAb,EAAwB;AAC7BT,IAAAA,YAAY,CAACY,OAAb,CAAqB,CAACC,CAAD,EAAoCC,CAApC,KAA0C;AAC7D,UAAID,CAAC,CAACnB,IAAF,KAAWgB,KAAf,EAAsB;AACpBK,QAAAA,GAAG,GAAGF,CAAC,CAACpB,IAAR;AACD;AACF,KAJD;AAKD;;AAGD,SAAOsB,GAAP;AACD,CA/DM;AAkEP,OAAO,MAAMI,iBAAiB,GAAG,CAACV,IAAD,EAAeC,KAAf,EAA2BU,IAA3B,KAA4C;AAC3E,MAAIT,GAAuB,GAAG,EAA9B;;AACA,MAAIF,IAAI,KAAK,SAAb,EAAwB;AACtBL,IAAAA,YAAY,CAACQ,OAAb,CAAqB,CAACC,CAAD,EAAoCC,CAApC,KAA0C;AAC7D,UAAID,CAAC,CAACpB,IAAF,KAAWiB,KAAf,EAAsB;AACpBC,QAAAA,GAAG,GAAGE,CAAC,CAACnB,IAAR;AACD;AACF,KAJD;AAKD,GAND,MAMO,IAAIe,IAAI,KAAK,YAAb,EAA2B;AAChCjB,IAAAA,eAAe,CAACoB,OAAhB,CAAwB,CAACC,CAAD,EAAoCC,CAApC,KAA0C;AAChE,UAAID,CAAC,CAACpB,IAAF,KAAWiB,KAAf,EAAsB;AACpBC,QAAAA,GAAG,GAAGE,CAAC,CAACnB,IAAR;AACD;AACF,KAJD;AAKD,GANM,MAMA,IAAIe,IAAI,KAAK,OAAb,EAAsB;AAC3Bb,IAAAA,SAAS,CAACgB,OAAV,CAAkB,CAACC,CAAD,EAAoCC,CAApC,KAA0C;AAC1D,UAAID,CAAC,CAACpB,IAAF,KAAWiB,KAAf,EAAsB;AACpBC,QAAAA,GAAG,GAAGE,CAAC,CAACnB,IAAR;AACD;AACF,KAJD;AAKD,GANM,MAMA,IAAIe,IAAI,KAAK,UAAb,EAAyB;AAC9BZ,IAAAA,aAAa,CAACe,OAAd,CAAsB,CAACC,CAAD,EAAoCC,CAApC,KAA0C;AAC9D,UAAID,CAAC,CAACpB,IAAF,KAAWiB,KAAf,EAAsB;AACpBC,QAAAA,GAAG,GAAGE,CAAC,CAACnB,IAAR;AACD;AACF,KAJD;AAKD,GANM,MAMA,IAAIe,IAAI,KAAK,SAAb,EAAwB;AAC7BX,IAAAA,QAAQ,CAACc,OAAT,CAAiB,CAACC,CAAD,EAAoCC,CAApC,KAA0C;AACzD,UAAID,CAAC,CAACpB,IAAF,KAAWiB,KAAf,EAAsB;AACpBC,QAAAA,GAAG,GAAGE,CAAC,CAACnB,IAAR;AACD;AACF,KAJD;AAKD,GANM,MAMA,IAAIe,IAAI,KAAK,OAAb,EAAsB;AAC3Bd,IAAAA,gBAAgB,CAACiB,OAAjB,CAAyB,CAACC,CAAD,EAAoCC,CAApC,KAA0C;AACjE,UAAID,CAAC,CAACpB,IAAF,KAAWiB,KAAf,EAAsB;AACpBC,QAAAA,GAAG,GAAGE,CAAC,CAACnB,IAAR;AACD;AACF,KAJD;AAKD,GANM,MAMA,IAAIe,IAAI,KAAK,EAAb,EAAiB;AACtBd,IAAAA,gBAAgB,CAACiB,OAAjB,CAAyB,CAACC,CAAD,EAAoCC,CAApC,KAA0C;AACjE,UAAID,CAAC,CAACpB,IAAF,KAAWiB,KAAf,EAAsB;AACpBC,QAAAA,GAAG,GAAGE,CAAC,CAACnB,IAAR;AACD;AACF,KAJD;AAKD;;AAED,SAAOiB,GAAP;AACD,CA/CM;AAkDP,OAAO,MAAMU,mBAAmB,GAAG,CAACZ,IAAD,EAAeC,KAAf,EAA2BU,IAA3B,KAA4C;AAE7E,MAAIL,GAAuB,GAAG,CAA9B;;AAEA,MAAIN,IAAI,KAAK,SAAb,EAAwB;AACtBL,IAAAA,YAAY,CAACQ,OAAb,CAAqB,CAACC,CAAD,EAAoCC,CAApC,KAA0C;AAC7D,UAAID,CAAC,CAACnB,IAAF,KAAWgB,KAAf,EAAsB;AACpBK,QAAAA,GAAG,GAAGF,CAAC,CAACpB,IAAR;AACD;AACF,KAJD;AAKD,GAND,MAMO,IAAIgB,IAAI,KAAK,YAAb,EAA2B;AAChCjB,IAAAA,eAAe,CAACoB,OAAhB,CAAwB,CAACC,CAAD,EAAoCC,CAApC,KAA0C;AAChE,UAAID,CAAC,CAACnB,IAAF,KAAWgB,KAAf,EAAsB;AACpBK,QAAAA,GAAG,GAAGF,CAAC,CAACpB,IAAR;AACD;AACF,KAJD;AAKD,GANM,MAMA,IAAIgB,IAAI,KAAK,OAAb,EAAsB;AAC3Bb,IAAAA,SAAS,CAACgB,OAAV,CAAkB,CAACC,CAAD,EAAoCC,CAApC,KAA0C;AAC1D,UAAID,CAAC,CAACnB,IAAF,KAAWgB,KAAf,EAAsB;AACpBK,QAAAA,GAAG,GAAGF,CAAC,CAACpB,IAAR;AACD;AACF,KAJD;AAKD,GANM,MAMA,IAAIgB,IAAI,KAAK,UAAb,EAAyB;AAE9BZ,IAAAA,aAAa,CAACe,OAAd,CAAsB,CAACC,CAAD,EAAoCC,CAApC,KAA0C;AAC9D,UAAID,CAAC,CAACnB,IAAF,KAAWgB,KAAf,EAAsB;AACpBK,QAAAA,GAAG,GAAGF,CAAC,CAACpB,IAAR;AACD;AACF,KAJD;AAKD,GAPM,MAOA,IAAIgB,IAAI,KAAK,SAAb,EAAwB;AAC7BX,IAAAA,QAAQ,CAACc,OAAT,CAAiB,CAACC,CAAD,EAAoCC,CAApC,KAA0C;AACzD,UAAID,CAAC,CAACnB,IAAF,KAAWgB,KAAf,EAAsB;AACpBK,QAAAA,GAAG,GAAGF,CAAC,CAACpB,IAAR;AACD;AACF,KAJD;AAMD,GAPM,MAOA,IAAIgB,IAAI,KAAK,OAAb,EAAsB;AAC3Bd,IAAAA,gBAAgB,CAACiB,OAAjB,CAAyB,CAACC,CAAD,EAAoCC,CAApC,KAA0C;AACjE,UAAID,CAAC,CAACnB,IAAF,KAAWgB,KAAf,EAAsB;AACpBK,QAAAA,GAAG,GAAGF,CAAC,CAACpB,IAAR;AACD;AACF,KAJD;AAMD;;AAED,SAAOsB,GAAP;AACD,CA9CM","sourcesContent":["export const getMachineTypeList = (lang: string) => {\n  switch (lang) {\n    case 'kor':\n      return ['(선택없음)', '프레스', '로봇', '용접기', '밀링', '선반', '탭핑기']\n    default:\n      return ['(선택없음)', '프레스', '로봇', '용접기', '밀링', '선반', '탭핑기']\n  }\n}\n\nexport const getSubMachineTypeList = (lang: string) => {\n  switch (lang) {\n    case 'kor':\n      return ['(선택없음)', '미스피드 검출장치', '하사점 검출장치', '로드모니터', '앵글시퀀서', '엔코더', '통과센서']\n    default:\n      return ['(선택없음)', '미스피드 검출장치', '하사점 검출장치', '로드모니터', '앵글시퀀서', '엔코더', '통과센서']\n  }\n}\n\nexport const getMaterialTypeList = (lang: string) => {\n  switch (lang) {\n    case 'kor':\n      return ['원자재', '부자재', '반제품', '완제품']\n    default:\n      return ['원자재', '부자재', '반제품', '완제품']\n  }\n}\n\nexport const getPartsTypeList = (lang: string) => {\n  switch (lang) {\n    case 'kor':\n      return ['']\n    default:\n      return ['']\n  }\n}\n\n\nexport const subMachineCodes = [\n\n  {code: 51, name: '미스피드 검출장치'},\n  {code: 52, name: '하사점 검출장치'},\n  {code: 53, name: '로드모니터'},\n  {code: 54, name: '앵글시퀀서'},\n  {code: 55, name: '엔코더'},\n  {code: 56, name: '통과센서'},\n  {code: 50, name: '기타(분류없음)'},\n]\n\nexport const stockReasonCodes = [\n  {code: 0, name: '정상 출고'},\n  {code: 1, name: '생산 소진'},\n  {code: 2, name: '불량'},\n  {code: 3, name: '정상 입고'},\n  {code: 4, name: '생산'},\n  {code: 5, name: '반품'},\n  {code: 8, name: '출하'},\n  {code: 9, name: '오류 정정'},\n  {code: 10, name: '금형 제작'}\n]\n\n\nexport const moldCodes = [\n\n  {code: 0, name: '기타(분류없음)'},\n  {code: 1, name: '프레스 금형'},\n  {code: 2, name: '사출 금형'},\n  {code: 3, name: '단조 금형'},\n  {code: 4, name: '다이캐스팅'},\n  {code: 5, name: '고무 금형'},\n  {code: 6, name: '유리 금형'},\n  {code: 7, name: '분말야금'},\n  {code: 8, name: '요업 금형'},\n  {code: 9, name: '주조 금형'},\n]\n\nexport const materialCodes = [\n  {code: 0, name: '원자재'},\n  {code: 1, name: '부자재'},\n  {code: 4, name: 'LOT 자재'},\n  {code: 10, name: '반제품'},\n  {code: 15, name: '공정품'},\n  {code: 30, name: '완제품'},\n\n]\n\nexport const barcodes = [\n\n  {code: 0, name: '바코드'},\n  {code: 1, name: 'QR코드'},\n  {code: 2, name: '데이터 매트릭스'},\n\n]\n\nexport const processcodes = [\n  {code: 0, name: '단발'},\n  {code: 6, name: '단발(블랭킹)'},\n  {code: 7, name: '단발(피어싱)'},\n  {code: 8, name: '단발(포밍)'},\n  {code: 9, name: '단발(프로)'},\n  {code: 10, name: '단발(벤딩)'},\n  {code: 11, name: '단발(드로잉)'},\n  {code: 1, name: '라인'},\n  {code: 2, name: '용접'},\n  {code: 4, name: '조립'},\n  {code: 5, name: '검수'},\n]\n\nexport const weldingcodes = [\n  {code: 200, name: '아르곤'},\n  {code: 201, name: '스팟'},\n  {code: 202, name: '통합'},\n]\n\nexport const keycamcodes = [\n  {code: 0, name: 'Off'},\n  {code: 1, name: '촌동'},\n  {code: 2, name: '안전1행정'},\n  {code: 3, name: '연속'},\n  {code: 4, name: '슬라이드'}\n]\n\nexport const getMoldTypeList = (lang: string) => {\n  switch (lang) {\n    case 'kor':\n      return ['(선택없음)', '프레스 금형', '사출 금형', '단조 금형', '다이캐스팅', '고무 금형', '유리 금형', '분말야금', '요업 금형', '주조금형']\n    default:\n      return ['(선택없음)', '프레스 금형', '사출 금형', '단조 금형', '다이캐스팅', '고무 금형', '유리 금형', '분말야금', '요업 금형', '주조금형']\n  }\n}\n\nexport const getBarcodeTypeList = (lang: string) => {\n  switch (lang) {\n    case 'kor':\n      return ['바코드 (기본)']\n    default:\n      return ['바코드 (기본)']\n  }\n}\n\n\nexport const machineCodes = [\n  {code: 1, name: '프레스',},\n  {code: 2, name: '로봇'},\n  {code: 3, name: '용접기'},\n  {code: 4, name: '밀링'},\n  {code: 5, name: '선반'},\n  {code: 6, name: '탭핑기'},\n  {code: 0, name: '기타(분류없음)'},\n]\n\n\nexport const unitCodes = [\n  {code: 0, name: ''},\n  {code: 1, name: '개'},\n  {code: 2, name: '회'},\n  {code: 3, name: '℃'},\n  {code: 4, name: '°F'},\n  {code: 5, name: 'ton'},\n  {code: 6, name: 'A'},\n  {code: 7, name: 'kW'},\n  {code: 8, name: 'W'},\n  {code: 9, name: 'spm'},\n]\n\nexport const statusCodes = [\n\n  {code: 901, name: '가동시간', unit: 0},\n  {code: 902, name: '비가동시간', unit: 0},\n  {code: 903, name: '에러', unit: 0},\n  {code: 904, name: '온도', unit: 3},\n  {code: 905, name: '운전준비상태', unit: 0},\n  {code: 906, name: '운전OK상태', unit: 0},\n  {code: 101, name: '기계측정값', unit: 0},\n  {code: 102, name: 'spm', unit: 0},\n  {code: 103, name: '키캠상태', unit: 0},\n  {code: 104, name: '모터상태', unit: 0},\n  {code: 105, name: '메인전류', unit: 6},\n  {code: 106, name: '슬라이스전류', unit: 6},\n  {code: 107, name: 'VS(INVERTER)', unit: 0},\n  {code: 108, name: '로드톤', unit: 5},\n  {code: 109, name: '전체카운터', unit: 0},\n  {code: 110, name: '종합카운터', unit: 0},\n  {code: 111, name: '프리셋카운터', unit: 0},\n  {code: 112, name: 'Angle', unit: 0},\n  {code: 113, name: '운전모드', unit: 0},\n  {code: 114, name: '최고 측정값', unit: 0},\n  {code: 115, name: '평균 측정값', unit: 0},\n\n]\n\nexport const transferCodeToName = (type: string, value: any) => {\n\n  let str: string | undefined = ''\n\n  if (type === 'machine') {\n    machineCodes.forEach((v: { code: number, name: string }, i) => {\n      if (v.code === value) {\n        str = v.name\n      }\n    })\n  } else if (type === 'device') {\n    subMachineCodes.forEach((v: { code: number, name: string }, i) => {\n      if (v.code === value) {\n        str = v.name\n      }\n    })\n  } else if (type === 'mold') {\n    moldCodes.forEach((v: { code: number, name: string }, i) => {\n      if (v.code === value) {\n        str = v.name\n      }\n    })\n  } else if (type === 'material') {\n    materialCodes.forEach((v: { code: number, name: string }, i) => {\n      if (v.code === value) {\n        str = v.name\n      }\n    })\n  } else if (type === 'unit') {\n    statusCodes.forEach((v: { code: number, name: string, unit: number }, i) => {\n      if (v.code === value) {\n        const num = v.unit\n        unitCodes.forEach((v2: { code: number, name: string }, i) => {\n          if (v2.code === num) {\n            str = v2.name\n          }\n        })\n      }\n    })\n  } else if (type === 'title') {\n    statusCodes.forEach((v: { code: number, name: string }, i) => {\n      if (v.code === value) {\n        str = v.name\n      }\n    })\n  } else if (type === 'barcode') {\n    barcodes.forEach((v: { code: number, name: string }, i) => {\n      if (v.code === value) {\n        str = v.name\n      }\n    })\n  } else if (type === 'stock') {\n    stockReasonCodes.forEach((v: { code: number, name: string }, i) => {\n      if (v.code === value) {\n        str = v.name\n      }\n    })\n  } else if (type === 'process') {\n    processcodes.forEach((v: { code: number, name: string }, i) => {\n      if (v.code === value) {\n        str = v.name\n      }\n    })\n  } else if (type === 'keycam') {\n    keycamcodes.forEach((v: { code: number, name: string }, i) => {\n      if (v.code === value) {\n        str = v.name\n      }\n    })\n  } else if (type === 'welding') {\n    weldingcodes.forEach((v: { code: number, name: string }, i) => {\n      if (v.code === value) {\n        str = v.name\n      }\n    })\n  }\n\n  return str\n}\n\n\nexport const transferStringToCode = (type: string, value: any) => {\n\n  let num: number | undefined = 0\n\n  if (type === 'machine') {\n    machineCodes.forEach((v: { code: number, name: string }, i) => {\n      if (v.name === value) {\n        num = v.code\n      }\n    })\n  } else if (type === 'device') {\n    subMachineCodes.forEach((v: { code: number, name: string }, i) => {\n      if (v.name === value) {\n        num = v.code\n      }\n    })\n  } else if (type === 'mold') {\n    moldCodes.forEach((v: { code: number, name: string }, i) => {\n      if (v.name === value) {\n        num = v.code\n      }\n    })\n  } else if (type === 'material') {\n    let cnt = 0\n    materialCodes.forEach((v: { code: number, name: string }, i) => {\n      if (v.name === value) {\n        cnt++\n        num = v.code\n      }\n    })\n\n    if (cnt === 0) {\n      num = -1\n    }\n  } else if (type === 'barcode') {\n    barcodes.forEach((v: { code: number, name: string }, i) => {\n      if (v.name === value) {\n        num = v.code\n      }\n    })\n\n  } else if (type === 'stock') {\n    stockReasonCodes.forEach((v: { code: number, name: string }, i) => {\n      if (v.name === value) {\n        num = v.code\n      }\n    })\n  } else if (type === 'process') {\n    processcodes.forEach((v: { code: number, name: string }, i) => {\n      if (v.name === value) {\n        num = v.code\n      }\n    })\n  } else if (type === 'welding') {\n    weldingcodes.forEach((v: { code: number, name: string }, i) => {\n      if (v.name === value) {\n        num = v.code\n      }\n    })\n  }\n\n\n  return num\n}\n\n\nexport const machineCodeToName = (type: string, value: any, leng: number) => {\n  let str: string | undefined = ''\n  if (type === 'machine') {\n    machineCodes.forEach((v: { code: number, name: string }, i) => {\n      if (v.code === value) {\n        str = v.name\n      }\n    })\n  } else if (type === 'submachine') {\n    subMachineCodes.forEach((v: { code: number, name: string }, i) => {\n      if (v.code === value) {\n        str = v.name\n      }\n    })\n  } else if (type === 'mould') {\n    moldCodes.forEach((v: { code: number, name: string }, i) => {\n      if (v.code === value) {\n        str = v.name\n      }\n    })\n  } else if (type === 'material') {\n    materialCodes.forEach((v: { code: number, name: string }, i) => {\n      if (v.code === value) {\n        str = v.name\n      }\n    })\n  } else if (type === 'barcode') {\n    barcodes.forEach((v: { code: number, name: string }, i) => {\n      if (v.code === value) {\n        str = v.name\n      }\n    })\n  } else if (type === 'stock') {\n    stockReasonCodes.forEach((v: { code: number, name: string }, i) => {\n      if (v.code === value) {\n        str = v.name\n      }\n    })\n  } else if (type === '') {\n    stockReasonCodes.forEach((v: { code: number, name: string }, i) => {\n      if (v.code === value) {\n        str = v.name\n      }\n    })\n  }\n\n  return str\n}\n\n\nexport const machineStringToCode = (type: string, value: any, leng: number) => {\n\n  let num: number | undefined = 0\n\n  if (type === 'machine') {\n    machineCodes.forEach((v: { code: number, name: string }, i) => {\n      if (v.name === value) {\n        num = v.code\n      }\n    })\n  } else if (type === 'submachine') {\n    subMachineCodes.forEach((v: { code: number, name: string }, i) => {\n      if (v.name === value) {\n        num = v.code\n      }\n    })\n  } else if (type === 'mould') {\n    moldCodes.forEach((v: { code: number, name: string }, i) => {\n      if (v.name === value) {\n        num = v.code\n      }\n    })\n  } else if (type === 'material') {\n\n    materialCodes.forEach((v: { code: number, name: string }, i) => {\n      if (v.name === value) {\n        num = v.code\n      }\n    })\n  } else if (type === 'barcode') {\n    barcodes.forEach((v: { code: number, name: string }, i) => {\n      if (v.name === value) {\n        num = v.code\n      }\n    })\n\n  } else if (type === 'stock') {\n    stockReasonCodes.forEach((v: { code: number, name: string }, i) => {\n      if (v.name === value) {\n        num = v.code\n      }\n    })\n\n  }\n\n  return num\n}\n\n\n\n"]},"metadata":{},"sourceType":"module"}