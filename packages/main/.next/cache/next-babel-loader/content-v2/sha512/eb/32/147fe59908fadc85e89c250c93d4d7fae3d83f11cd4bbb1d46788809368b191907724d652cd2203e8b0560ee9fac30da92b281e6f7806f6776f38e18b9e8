{"ast":null,"code":"var _jsxFileName = \"/Users/user/Desktop/sizl/mono_pop/packages/shared/src/components/Buttons/AddlButton.tsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport { CellButton } from '../../styles/styledComponents';\n\nconst AddlButton = ({\n  row,\n  column,\n  onRowChange\n}) => {\n  return __jsx(CellButton, {\n    onClick: () => {\n      onRowChange(_objectSpread(_objectSpread({}, row), {}, {\n        add: true\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }\n  }, \"\\uCD94\\uAC00\");\n};\n\nexport { AddlButton };","map":{"version":3,"sources":["/Users/user/Desktop/sizl/mono_pop/packages/shared/src/components/Buttons/AddlButton.tsx"],"names":["React","CellButton","AddlButton","row","column","onRowChange","add"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAAQC,UAAR,QAAyB,+BAAzB;;AAQA,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA,GAAF;AAAOC,EAAAA,MAAP;AAAeC,EAAAA;AAAf,CAAD,KAAyC;AAC1D,SACE,MAAC,UAAD;AAAY,IAAA,OAAO,EAAE,MAAM;AACzBA,MAAAA,WAAW,iCACNF,GADM;AAETG,QAAAA,GAAG,EAAE;AAFI,SAAX;AAID,KALD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF;AAUD,CAXD;;AAaA,SAAQJ,UAAR","sourcesContent":["import React from 'react'\nimport {IExcelHeaderType} from '../../@types/type'\nimport {CellButton} from '../../styles/styledComponents'\n\ninterface IProps {\n  row: any\n  column: IExcelHeaderType\n  onRowChange: (row: any) => void\n}\n\nconst AddlButton = ({ row, column, onRowChange}: IProps) => {\n  return (\n    <CellButton onClick={() => {\n      onRowChange({\n        ...row,\n        add: true\n      })\n    }}>\n      추가\n    </CellButton>\n  );\n}\n\nexport {AddlButton}\n\n"]},"metadata":{},"sourceType":"module"}