{"ast":null,"code":"import _defineProperty from \"/Users/user/Desktop/sizl/mono_pop/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport moment from \"moment\";\nexport var initalState = {\n  process_length: 0,\n  selectRow: 0,\n  machineList: [{\n    // machine_id : \"\",\n    // machine_idPK : \"\",\n    // seq : 0,\n    // process_id : 0,\n    // mold_id : 0,\n    // ln_id:undefined,\n    // goal : 0,\n    // last : false,\n    // mold : {mold_id:0, name:\"\"},\n    // process_idPK: 0\n    name: \"\",\n    id: \"\",\n    index: 1,\n    date: moment().format('YYYY-MM-DD')\n  }]\n};\nvar INSERT_MACHINE_LIST = \"INSERT_MACHINE_LIST\";\nvar INSERT_MACHINE_LIST_INDEX = \"INSERT_MACHINE_LIST_INDEX\";\nvar INSERT_MACHINE_LIST_RECENT = \"INSERT_MACHINE_LIST_RECENT\";\nvar DELETE_MACHINE_LIST = \"DELETE_MACHINE_LIST\";\nvar DELETE_ALL_MACHINE_LIST = \"DELETE_ALL_MACHINE_LIST\";\nexport var insert_machine_list = function insert_machine_list(payload) {\n  return {\n    type: INSERT_MACHINE_LIST,\n    payload: payload\n  };\n};\nexport var insert_machine_list_index = function insert_machine_list_index(payload) {\n  return {\n    type: INSERT_MACHINE_LIST_INDEX,\n    payload: payload\n  };\n};\nexport var delete_machine_list = function delete_machine_list() {\n  return {\n    type: DELETE_MACHINE_LIST,\n    payload: 0\n  };\n};\nexport var delete_all_machine_list = function delete_all_machine_list() {\n  return {\n    type: DELETE_ALL_MACHINE_LIST,\n    payload: 0\n  };\n};\n\nvar MachineSelectReducer = function MachineSelectReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initalState;\n\n  var _ref = arguments.length > 1 ? arguments[1] : undefined,\n      type = _ref.type,\n      payload = _ref.payload;\n\n  switch (type) {\n    case INSERT_MACHINE_LIST:\n      console.log(payload);\n\n      var tmp_state = _objectSpread({}, state);\n\n      tmp_state = _objectSpread({}, payload);\n      return tmp_state;\n\n    case INSERT_MACHINE_LIST_INDEX:\n      var temp_state = _objectSpread({}, state);\n\n      temp_state.selectRow = payload;\n      console.log(temp_state);\n      return temp_state;\n\n    case DELETE_MACHINE_LIST:\n      var temp_delete_state = _objectSpread({}, state);\n\n      temp_delete_state.machineList[1].date = temp_delete_state.machineList[0].date;\n      temp_delete_state.machineList[1].customer_id = temp_delete_state.machineList[0].customer_id;\n      temp_delete_state.machineList[1].customer_idPK = temp_delete_state.machineList[0].customer_idPK;\n      temp_delete_state.machineList[1].cm_id = temp_delete_state.machineList[0].cm_id;\n      temp_delete_state.machineList[1].cm_idPK = temp_delete_state.machineList[0].cm_idPK;\n      temp_delete_state.machineList[1].product_id = temp_delete_state.machineList[0].product_id;\n      temp_delete_state.machineList[1].index = 1;\n      temp_delete_state.machineList[1].name = temp_delete_state.machineList[0].name;\n      temp_delete_state.machineList[1].code = temp_delete_state.machineList[0].code;\n      temp_delete_state.machineList.splice(0, 1);\n      console.log(temp_delete_state);\n      return temp_delete_state;\n\n    case DELETE_ALL_MACHINE_LIST:\n      var reset = {\n        process_length: 0,\n        selectRow: 0,\n        machineList: [{\n          name: \"\",\n          id: \"\",\n          index: 1,\n          date: moment().format('YYYY-MM-DD')\n        }]\n      };\n      return reset;\n\n    default:\n      return state;\n  }\n};\n\n_c = MachineSelectReducer;\nexport default MachineSelectReducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"MachineSelectReducer\");","map":{"version":3,"sources":["/Users/user/Desktop/sizl/mono_pop/packages/main/reducer/machineSelect.ts"],"names":["moment","initalState","process_length","selectRow","machineList","name","id","index","date","format","INSERT_MACHINE_LIST","INSERT_MACHINE_LIST_INDEX","INSERT_MACHINE_LIST_RECENT","DELETE_MACHINE_LIST","DELETE_ALL_MACHINE_LIST","insert_machine_list","payload","type","insert_machine_list_index","delete_machine_list","delete_all_machine_list","MachineSelectReducer","state","console","log","tmp_state","temp_state","temp_delete_state","customer_id","customer_idPK","cm_id","cm_idPK","product_id","code","splice","reset"],"mappings":"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","sourcesContent":["import {MachineType} from \"../common/@types/type\";\nimport moment from \"moment\";\n\nexport type MachineSelectType = {\n    process_length:number\n    machineList:MachineType[]\n    selectRow?:number\n}\n\n\n\nexport const initalState:any = {\n    process_length:0,\n    selectRow:0,\n    machineList:[\n        {\n            // machine_id : \"\",\n            // machine_idPK : \"\",\n            // seq : 0,\n            // process_id : 0,\n            // mold_id : 0,\n            // ln_id:undefined,\n            // goal : 0,\n            // last : false,\n            // mold : {mold_id:0, name:\"\"},\n            // process_idPK: 0\n            name: \"\", id: \"\", index: 1, date: moment().format('YYYY-MM-DD')\n        }\n    ]\n}\n\nconst INSERT_MACHINE_LIST = \"INSERT_MACHINE_LIST\";\nconst INSERT_MACHINE_LIST_INDEX = \"INSERT_MACHINE_LIST_INDEX\";\n\nconst INSERT_MACHINE_LIST_RECENT = \"INSERT_MACHINE_LIST_RECENT\";\n\nconst DELETE_MACHINE_LIST = \"DELETE_MACHINE_LIST\";\nconst DELETE_ALL_MACHINE_LIST = \"DELETE_ALL_MACHINE_LIST\";\n\nexport const insert_machine_list = (payload:any) => {\n    return {\n    type:INSERT_MACHINE_LIST,\n    payload:payload\n    }\n}\n\nexport const insert_machine_list_index = (payload:number) => {\n    return {\n        type: INSERT_MACHINE_LIST_INDEX,\n        payload:payload\n    }\n}\n\nexport const delete_machine_list = () => {\n    return {\n        type: DELETE_MACHINE_LIST,\n        payload:0\n    }\n}\n\nexport const delete_all_machine_list = () => {\n    return{\n        type:DELETE_ALL_MACHINE_LIST,\n        payload:0\n    }\n}\n\ntype DefaultAction = ReturnType<typeof insert_machine_list> | ReturnType<typeof insert_machine_list_index> | ReturnType<typeof delete_machine_list>;\n\nconst MachineSelectReducer = (state = initalState, {type, payload}:DefaultAction) => {\n    switch (type){\n        case INSERT_MACHINE_LIST :\n            console.log(payload)\n            let tmp_state = {...state};\n            tmp_state = {...payload as MachineSelectType}\n            return tmp_state\n\n        case INSERT_MACHINE_LIST_INDEX:\n            let temp_state =  {...state};\n            temp_state.selectRow = payload as number;\n            console.log(temp_state);\n            return temp_state\n\n        case DELETE_MACHINE_LIST :\n            let temp_delete_state = {...state};\n            temp_delete_state.machineList[1].date = temp_delete_state.machineList[0].date;\n            temp_delete_state.machineList[1].customer_id = temp_delete_state.machineList[0].customer_id;\n            temp_delete_state.machineList[1].customer_idPK = temp_delete_state.machineList[0].customer_idPK;\n            temp_delete_state.machineList[1].cm_id = temp_delete_state.machineList[0].cm_id;\n            temp_delete_state.machineList[1].cm_idPK = temp_delete_state.machineList[0].cm_idPK;\n            temp_delete_state.machineList[1].product_id = temp_delete_state.machineList[0].product_id;\n            temp_delete_state.machineList[1].index = 1;\n            temp_delete_state.machineList[1].name = temp_delete_state.machineList[0].name;\n            temp_delete_state.machineList[1].code = temp_delete_state.machineList[0].code;\n\n\n            temp_delete_state.machineList.splice(0, 1);\n\n            console.log(temp_delete_state);\n            return temp_delete_state;\n\n        case DELETE_ALL_MACHINE_LIST:\n            let reset = {    process_length:0,\n                selectRow:0,\n                machineList:[\n                    {\n                        name: \"\", id: \"\", index: 1, date: moment().format('YYYY-MM-DD')\n                    }\n                ]}\n            return reset\n\n        default :\n            return state\n    }\n}\n\n\nexport default MachineSelectReducer;\n"]},"metadata":{},"sourceType":"module"}