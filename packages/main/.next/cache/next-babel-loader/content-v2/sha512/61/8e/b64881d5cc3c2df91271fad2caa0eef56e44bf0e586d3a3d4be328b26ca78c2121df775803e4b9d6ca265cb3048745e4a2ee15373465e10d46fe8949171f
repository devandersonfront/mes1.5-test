{"ast":null,"code":"import _toConsumableArray from \"/Users/user/Desktop/sizl/mono_pop/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"/Users/user/Desktop/sizl/mono_pop/node_modules/@babel/runtime/regenerator\";\nimport _defineProperty from \"/Users/user/Desktop/sizl/mono_pop/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _asyncToGenerator from \"/Users/user/Desktop/sizl/mono_pop/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/Users/user/Desktop/sizl/mono_pop/packages/main/pages/mes/item/manage/[type].tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useState } from 'react';\nimport ExcelTable from '../../../../component/Excel/ExcelTable';\nimport MenuNavigation from '../../../../component/MenuNav/MenuNavigation';\nimport ProfileHeader from '../../../../component/Profile/ProfileHeader';\nimport PageHeader from '../../../../component/Header/Header'; // @ts-ignore\n\nimport { SelectColumn } from 'react-data-grid';\nimport { RequestMethod } from '../../../../common/RequestFunctions';\nimport { columnlist } from '../../../../common/columnInit';\nimport { HeaderButton } from '../../../../styles/styledComponents';\nimport ItemManageBox from '../../../../component/ItemManage/ItemManageBox'; //@ts-ignore\n\nimport Notiflix from \"notiflix\";\nvar unitData = [{\n  unit_id: '0',\n  name: \"개별관리\"\n}, {\n  unit_id: '1',\n  name: \"통일\"\n}, {\n  unit_id: '2',\n  name: \"없음\"\n}];\n\nvar ItemManagePage = function ItemManagePage(_ref) {\n  _s();\n\n  var title = _ref.title,\n      type = _ref.type,\n      code = _ref.code;\n\n  var _useState = useState([]),\n      baseItem = _useState[0],\n      setBaseItem = _useState[1];\n\n  var _useState2 = useState([]),\n      addiItem = _useState2[0],\n      setAddiItem = _useState2[1];\n\n  var _useState3 = useState(new Set()),\n      selectList = _useState3[0],\n      setSelectList = _useState3[1];\n\n  var listItem = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(code) {\n      var res, results, baseList, addiList;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return RequestMethod('get', 'itemList', {\n                path: {\n                  tab: code\n                }\n              });\n\n            case 2:\n              res = _context.sent;\n\n              if (res && res.status === 200) {\n                results = res.results;\n                baseList = results.bases;\n                addiList = results.additional;\n                setBaseItem(baseList);\n                setAddiItem(addiList.map(function (v, i) {\n                  var random_id = Math.random() * 1000;\n                  return _objectSpread(_objectSpread({}, v), {}, {\n                    unit: unitData[v.unit_id].name,\n                    unit_id: unitData[v.unit_id].unit_id,\n                    unitPK: unitData[v.unit_id].unit_id,\n                    id: random_id\n                  });\n                }));\n              }\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function listItem(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var saveItem = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(code, items, type) {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return RequestMethod('post', 'itemSave', {\n                tab: code,\n                menus: type ? items.map(function (v) {\n                  if (v.title) {\n                    return _objectSpread(_objectSpread({}, v), {}, {\n                      unit: v['unitPK']\n                    });\n                  }\n                }).filter(function (v) {\n                  return v;\n                }) : items\n              });\n\n            case 2:\n              res = _context2.sent;\n\n              if (res && res.status === 200) {\n                listItem(code);\n                Notiflix.Notify.success(\"저장되었습니다.\");\n              }\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function saveItem(_x2, _x3, _x4) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var deleteItem = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(code, items) {\n      var idList, spliceArray, tmpPauseBasicRow, res;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              idList = [];\n              spliceArray = [];\n              items.map(function (v, i) {\n                if (selectList.has(v.id)) {\n                  spliceArray.push(i);\n                  idList.push(v.mi_id);\n                }\n              });\n              idList = idList.filter(function (value) {\n                return value;\n              });\n              tmpPauseBasicRow = _toConsumableArray(items);\n              spliceArray.reverse();\n              spliceArray.map(function (value, index) {\n                tmpPauseBasicRow.splice(value, 1);\n              });\n\n              if (!(idList.length > 0)) {\n                _context3.next = 14;\n                break;\n              }\n\n              _context3.next = 10;\n              return RequestMethod('delete', 'itemDelete', {\n                tab: code,\n                menus: idList\n              });\n\n            case 10:\n              res = _context3.sent;\n\n              if (res && res.status) {\n                Notiflix.Report.success(\"삭제되었습니다.\", \"\", \"확인\");\n              }\n\n              _context3.next = 15;\n              break;\n\n            case 14:\n              Notiflix.Report.success(\"삭제되었습니다.\", \"\", \"확인\");\n\n            case 15:\n              setAddiItem(_toConsumableArray(tmpPauseBasicRow)); // type ? items.map(v => {\n              //   if(selectList.has(v.id as number)) {\n              //     return v.mi_id\n              //   }\n              // }).filter(v => v) : type\n\n            case 16:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function deleteItem(_x5, _x6) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    listItem(code);\n  }, []);\n  return __jsx(\"div\", {\n    style: {\n      display: 'flex',\n      height: 1500\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 5\n    }\n  }, __jsx(MenuNavigation, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 7\n    }\n  }), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 7\n    }\n  }, __jsx(ProfileHeader, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 9\n    }\n  }), __jsx(PageHeader, {\n    title: \"\".concat(title, \" \\uD56D\\uBAA9\\uAD00\\uB9AC\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 9\n    }\n  }), __jsx(\"div\", {\n    style: {\n      width: 1570\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    style: {\n      marginBottom: 16,\n      display: 'flex',\n      justifyContent: 'flex-end'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 11\n    }\n  }, __jsx(HeaderButton, {\n    onClick: function onClick() {\n      return saveItem(code, baseItem);\n    },\n    key: \"btnCreate\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 13\n    }\n  }, \"\\uC800\\uC7A5\")), __jsx(ItemManageBox, {\n    title: title,\n    items: baseItem,\n    setItems: setBaseItem,\n    type: 'base',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 11\n    }\n  }), __jsx(ExcelTable, {\n    headerList: columnlist.baseItem,\n    row: baseItem,\n    height: 240,\n    setRow: setBaseItem,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 11\n    }\n  }), __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 11\n    }\n  }), __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 16\n    }\n  }), code !== \"ROLE_STK_01\" && __jsx(React.Fragment, null, __jsx(\"div\", {\n    style: {\n      marginBottom: 16,\n      display: 'flex',\n      justifyContent: 'flex-end'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 17\n    }\n  }, __jsx(HeaderButton, {\n    onClick: function onClick() {\n      return saveItem(code, addiItem, 'additional');\n    },\n    key: \"btnCreate\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 19\n    }\n  }, \"\\uCD94\\uAC00\\uD56D\\uBAA9 \\uC800\\uC7A5\"), __jsx(HeaderButton, {\n    onClick: function onClick() {\n      var random_id = Math.random() * 1000;\n      setAddiItem([].concat(_toConsumableArray(addiItem), [{\n        id: \"item_\".concat(random_id)\n      }]));\n    },\n    key: \"btnCreate\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 19\n    }\n  }, \"\\uD589 \\uCD94\\uAC00\"), __jsx(HeaderButton, {\n    onClick: function onClick() {\n      return deleteItem(code, addiItem);\n    },\n    key: \"btnCreate\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 19\n    }\n  }, \"\\uC0AD\\uC81C\")), __jsx(ItemManageBox, {\n    title: title,\n    items: addiItem,\n    setItems: setAddiItem,\n    type: 'additional',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 17\n    }\n  }), __jsx(ExcelTable, {\n    headerList: [SelectColumn].concat(_toConsumableArray(columnlist.additionalItem)),\n    row: addiItem,\n    height: 240,\n    setRow: setAddiItem,\n    selectList: selectList,\n    setSelectList: setSelectList,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 17\n    }\n  })))));\n};\n\n_s(ItemManagePage, \"8HZ+ToDAglo9mAohjZEGzpLLemA=\");\n\n_c = ItemManagePage;\nexport var __N_SSP = true;\nexport default ItemManagePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ItemManagePage\");","map":{"version":3,"sources":["/Users/user/Desktop/sizl/mono_pop/packages/main/pages/mes/item/manage/[type].tsx"],"names":["React","useEffect","useState","ExcelTable","MenuNavigation","ProfileHeader","PageHeader","SelectColumn","RequestMethod","columnlist","HeaderButton","ItemManageBox","Notiflix","unitData","unit_id","name","ItemManagePage","title","type","code","baseItem","setBaseItem","addiItem","setAddiItem","Set","selectList","setSelectList","listItem","path","tab","res","status","results","baseList","bases","addiList","additional","map","v","i","random_id","Math","random","unit","unitPK","id","saveItem","items","menus","filter","Notify","success","deleteItem","idList","spliceArray","has","push","mi_id","value","tmpPauseBasicRow","reverse","index","splice","length","Report","display","height","width","marginBottom","justifyContent","additionalItem"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react'\nimport ExcelTable from '../../../../component/Excel/ExcelTable'\nimport MenuNavigation from '../../../../component/MenuNav/MenuNavigation'\nimport ProfileHeader from '../../../../component/Profile/ProfileHeader'\nimport PageHeader from '../../../../component/Header/Header'\n// @ts-ignore\nimport {SelectColumn} from 'react-data-grid'\nimport {IExcelHeaderType, IItemMenuType} from '../../../../common/@types/type'\nimport {RequestMethod} from '../../../../common/RequestFunctions'\nimport {columnlist} from '../../../../common/columnInit'\nimport {HeaderButton, ItemListTableHeader, ItemListTableWrapper, ItemWrapper} from '../../../../styles/styledComponents'\nimport ItemManageBox from '../../../../component/ItemManage/ItemManageBox'\n//@ts-ignore\nimport Notiflix from \"notiflix\";\nimport {useSelector} from \"react-redux\";\nimport {RootState} from \"../../../../reducer\";\n\ninterface IProps {\n  children?: any\n  title: string\n  user: any\n  type: string\n  code: string\n  row?: Array<any>\n  column?: IExcelHeaderType[]\n}\n\nexport const getServerSideProps = async (ctx: any) => {\n\n  const changeTitle = (type: string) => {\n    switch(type) {\n      case 'member':\n        return {\n          title: '유저 관리',\n          code: 'ROLE_HR_01'\n        }\n      case 'customer':\n        return {\n          title: '고객사 정보 관리',\n          code: 'ROLE_BASE_01'\n        }\n      case 'process':\n        return {\n          title: '공정 관리',\n          code: 'ROLE_BASE_02'\n        }\n      case 'machine':\n        return {\n          title: '기계 기본정보',\n          code: 'ROLE_BASE_04'\n        }\n      case 'product':\n        return {\n          title: '제품 등록 관리',\n          code: 'ROLE_BASE_05'\n        }\n      case 'rawmaterial':\n        return {\n          title: '원자재 기본정보',\n          code: 'ROLE_BASE_06'\n        }\n      case 'mold':\n        return {\n          title: '금형 기본정보',\n          code: 'ROLE_BASE_07'\n        }\n      case 'model':\n        return {\n          title: \"고객사 모델정보\",\n          code: 'ROLE_BASE_08'\n        }\n      case 'rawin':\n        return {\n          title: \"원자재 입고 관리\",\n          code: 'ROLE_RMAT_01'\n        }\n      case 'rawstock':\n        return {\n          title: \"원자재 재고 관리\",\n          code: 'ROLE_RMAT_02'\n        }\n      case 'operation' :\n        return {\n          title: \"작업지시서 리스트\",\n          code: \"ROLE_PROD_02\"\n        }\n      case 'delivery' :\n        return {\n          title: \"납품 관리\",\n          code: \"ROLE_SHPT_01\"\n        }\n      case 'stock' :\n        return {\n          title:\"재고현황\",\n          code:\"ROLE_STK_01\"\n        }\n\n    }\n  }\n\n  const tempObject = changeTitle(ctx.query.type)\n\n  return {\n    props: {\n      title: tempObject ? tempObject.title : \"\",\n      code: tempObject ? tempObject.code : \"\",\n      type: ctx.query.type\n    }\n  }\n}\n\nlet unitData = [\n  {unit_id: '0', name: \"개별관리\"},\n  {unit_id: '1', name: \"통일\"},\n  {unit_id: '2', name: \"없음\"},\n]\n\nconst ItemManagePage = ({title, type, code}: IProps) => {\n  const [baseItem, setBaseItem] = useState<IItemMenuType[]>([])\n  const [addiItem, setAddiItem] = useState<IItemMenuType[]>([])\n  const [selectList, setSelectList] = useState<ReadonlySet<number>>(new Set())\n\n\n\n  const listItem = async (code: string) => {\n    const res =  await RequestMethod('get', 'itemList', {\n      path: {\n        tab: code\n      }\n    })\n\n    if(res && res.status === 200){\n      const results = res.results\n\n      let baseList = results.bases\n      let addiList = results.additional\n\n      setBaseItem(baseList)\n      setAddiItem(addiList.map((v: any, i: number) => {\n        const random_id = Math.random() * 1000\n\n        return {\n          ...v,\n          unit: unitData[v.unit_id].name,\n          unit_id: unitData[v.unit_id].unit_id,\n          unitPK: unitData[v.unit_id].unit_id,\n          id: random_id\n        }\n      }))\n    }\n  }\n\n  const saveItem = async (code: string, items: IItemMenuType[], type?: 'additional') => {\n    const res =  await RequestMethod('post', 'itemSave', {\n      tab: code,\n      menus: type ? items.map(v => {\n        if(v.title){\n          return {\n            ...v,\n            unit: v['unitPK'],\n          }\n        }\n      }).filter(v => v) : items\n    })\n\n    if(res && res.status === 200) {\n      listItem(code)\n      Notiflix.Notify.success(\"저장되었습니다.\")\n    }\n  }\n\n  const deleteItem = async (code: string, items: IItemMenuType[]) => {\n    let idList:number[] = [];\n    const spliceArray:number[] = [];\n\n    items.map((v,i)=> {\n      if(selectList.has(v.id as number)){\n        spliceArray.push(i);\n        idList.push(v.mi_id)\n      }\n    })\n\n    idList = idList.filter(value => value);\n\n    const tmpPauseBasicRow = [...items];\n    spliceArray.reverse();\n    spliceArray.map((value, index)=>{\n      tmpPauseBasicRow.splice(value, 1);\n    })\n\n    if(idList.length > 0) {\n      const res = await RequestMethod('delete', 'itemDelete', {\n        tab: code,\n        menus: idList\n      })\n\n      if (res && res.status) {\n        Notiflix.Report.success(\"삭제되었습니다.\", \"\", \"확인\");\n      }\n\n    }else{\n      Notiflix.Report.success(\"삭제되었습니다.\", \"\", \"확인\");\n    }\n\n    setAddiItem([...tmpPauseBasicRow]);\n\n    // type ? items.map(v => {\n    //   if(selectList.has(v.id as number)) {\n    //     return v.mi_id\n    //   }\n    // }).filter(v => v) : type\n\n\n  }\n\n  useEffect(() => {\n    listItem(code)\n  }, [])\n\n  return (\n    <div style={{display: 'flex', height: 1500}}>\n      <MenuNavigation/>\n      <div>\n        <ProfileHeader/>\n        <PageHeader\n          title={`${title} 항목관리`}\n        />\n        <div style={{width: 1570}}>\n          <div style={{marginBottom: 16, display: 'flex', justifyContent: 'flex-end'}}>\n            <HeaderButton onClick={() => saveItem(code, baseItem)} key={`btnCreate`}>저장</HeaderButton>\n          </div>\n          <ItemManageBox title={title} items={baseItem} setItems={setBaseItem} type={'base'}/>\n          <ExcelTable\n            headerList={columnlist.baseItem}\n            row={baseItem}\n            height={240}\n            setRow={setBaseItem}\n          />\n          <br/><br/>\n          {code !== \"ROLE_STK_01\" &&\n              <>\n                <div style={{marginBottom: 16, display: 'flex', justifyContent: 'flex-end'}}>\n                  <HeaderButton onClick={() => saveItem(code, addiItem, 'additional')} key={`btnCreate`}>추가항목 저장</HeaderButton>\n                  <HeaderButton onClick={() => {\n                    const random_id = Math.random() * 1000\n                    setAddiItem([...addiItem, {id: `item_${random_id}`}])\n                  }} key={`btnCreate`}>행 추가</HeaderButton>\n                  <HeaderButton onClick={() => deleteItem(code, addiItem)} key={`btnCreate`}>삭제</HeaderButton>\n                </div>\n                <ItemManageBox title={title} items={addiItem} setItems={setAddiItem} type={'additional'}/>\n                <ExcelTable\n                  headerList={[\n                    SelectColumn,\n                    ...columnlist.additionalItem\n                  ]}\n                  row={addiItem}\n                  height={240}\n                  setRow={setAddiItem}\n                  selectList={selectList}\n                  setSelectList={setSelectList}\n                />\n              </>\n          }\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default ItemManagePage;\n"]},"metadata":{},"sourceType":"module"}