{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/user/Desktop/sizl/mono_pop/node_modules/next/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"/Users/user/Desktop/sizl/mono_pop/packages/shared/src/components/Cell/UseDateCell.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    display:flex;\\n    justify-content:flex-start;\\n    align-items:center;\\n    width:100%;\\n    height:100%;\\n    padding: 0 8px;\\n    margin:0;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useEffect, useState } from 'react';\nimport { UnitValue, UnitWrapper } from '../../styles/styledComponents';\nimport 'react-calendar/dist/Calendar.css';\nimport moment from 'moment';\nimport styled from 'styled-components'; //@ts-ignore\n\nvar UseDateCell = function UseDateCell(_ref) {\n  _s();\n\n  var row = _ref.row,\n      column = _ref.column,\n      onRowChange = _ref.onRowChange;\n\n  var _useState = useState(0),\n      title = _useState[0],\n      setTitle = _useState[1];\n\n  var _useState2 = useState(),\n      bgColor = _useState2[0],\n      setBgColor = _useState2[1];\n\n  useEffect(function () {\n    getUseDate(row.date);\n  }, [row]);\n\n  var getUseDate = function getUseDate(date) {\n    var now = moment();\n    var useDate = moment(date);\n    console.log(now.format('YYYY-MM-DD'), useDate.format('YYYY-MM-DD'));\n    var elapsedDay = Math.floor(Number(moment.duration(now.diff(useDate)).asDays()));\n    console.log(row);\n\n    if (elapsedDay >= row.useDate) {\n      setBgColor('red');\n    } else {\n      setBgColor(undefined);\n    }\n\n    setTitle(elapsedDay);\n  };\n\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, __jsx(UnitWrapper, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, __jsx(UnitValue, {\n    style: {\n      width: '100%',\n      padding: 0,\n      backgroundColor: bgColor\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, __jsx(\"p\", {\n    style: {\n      textAlign: 'center'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }, title))));\n};\n\n_s(UseDateCell, \"yPM4ZC20tB5H7rfOPsVtXwIA1P4=\");\n\n_c = UseDateCell;\nvar Background = styled.div(_templateObject());\nexport { UseDateCell };\n\nvar _c;\n\n$RefreshReg$(_c, \"UseDateCell\");","map":{"version":3,"sources":["/Users/user/Desktop/sizl/mono_pop/packages/shared/src/components/Cell/UseDateCell.tsx"],"names":["React","useEffect","useState","UnitValue","UnitWrapper","moment","styled","UseDateCell","row","column","onRowChange","title","setTitle","bgColor","setBgColor","getUseDate","date","now","useDate","console","log","format","elapsedDay","Math","floor","Number","duration","diff","asDays","undefined","width","padding","backgroundColor","textAlign","Background","div"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AAEA,SAA0DC,SAA1D,EAAqEC,WAArE,QAAuF,+BAAvF;AAEA,OAAO,kCAAP;AACA,OAAOC,MAAP,MAAmB,QAAnB;AAGA,OAAOC,MAAP,MAAmB,mBAAnB,C,CACA;;AASA,IAAMC,WAAW,GAAG,SAAdA,WAAc,OAA0C;AAAA;;AAAA,MAAvCC,GAAuC,QAAvCA,GAAuC;AAAA,MAAlCC,MAAkC,QAAlCA,MAAkC;AAAA,MAA1BC,WAA0B,QAA1BA,WAA0B;;AAAA,kBAClCR,QAAQ,CAAS,CAAT,CAD0B;AAAA,MACrDS,KADqD;AAAA,MAC9CC,QAD8C;;AAAA,mBAE9BV,QAAQ,EAFsB;AAAA,MAErDW,OAFqD;AAAA,MAE5CC,UAF4C;;AAI5Db,EAAAA,SAAS,CAAC,YAAM;AACdc,IAAAA,UAAU,CAACP,GAAG,CAACQ,IAAL,CAAV;AACD,GAFQ,EAEN,CAACR,GAAD,CAFM,CAAT;;AAIA,MAAMO,UAAU,GAAG,SAAbA,UAAa,CAACC,IAAD,EAAiB;AAElC,QAAMC,GAAG,GAAGZ,MAAM,EAAlB;AACA,QAAMa,OAAO,GAAGb,MAAM,CAACW,IAAD,CAAtB;AAEAG,IAAAA,OAAO,CAACC,GAAR,CAAYH,GAAG,CAACI,MAAJ,CAAW,YAAX,CAAZ,EAAsCH,OAAO,CAACG,MAAR,CAAe,YAAf,CAAtC;AAEA,QAAMC,UAAU,GAAGC,IAAI,CAACC,KAAL,CAAWC,MAAM,CAACpB,MAAM,CAACqB,QAAP,CAAgBT,GAAG,CAACU,IAAJ,CAAST,OAAT,CAAhB,EAAmCU,MAAnC,EAAD,CAAjB,CAAnB;AAEAT,IAAAA,OAAO,CAACC,GAAR,CAAYZ,GAAZ;;AAEA,QAAGc,UAAU,IAAId,GAAG,CAACU,OAArB,EAA6B;AAC3BJ,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KAFD,MAEK;AACHA,MAAAA,UAAU,CAACe,SAAD,CAAV;AACD;;AAEDjB,IAAAA,QAAQ,CAACU,UAAD,CAAR;AACD,GAlBD;;AAoBA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,SAAD;AACE,IAAA,KAAK,EAAE;AACLQ,MAAAA,KAAK,EAAE,MADF;AAELC,MAAAA,OAAO,EAAE,CAFJ;AAGLC,MAAAA,eAAe,EAAEnB;AAHZ,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAME;AAAG,IAAA,KAAK,EAAE;AAACoB,MAAAA,SAAS,EAAE;AAAZ,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmCtB,KAAnC,CANF,CADF,CADF,CADF;AAcD,CA1CD;;GAAMJ,W;;KAAAA,W;AA4CN,IAAM2B,UAAU,GAAG5B,MAAM,CAAC6B,GAAV,mBAAhB;AAUA,SAAQ5B,WAAR","sourcesContent":["import React, {useEffect, useState} from 'react'\nimport {IExcelHeaderType} from '../../common/@types/type'\nimport {BoxWrap, DropBoxContainer, InnerBoxWrap, UnitBox, UnitValue, UnitWrapper} from '../../styles/styledComponents'\nimport Calendar from 'react-calendar'\nimport 'react-calendar/dist/Calendar.css'\nimport moment from 'moment'\nimport useOnclickOutside from 'react-cool-onclickoutside'\nimport Modal from 'react-modal'\nimport styled from 'styled-components'\n//@ts-ignore\nimport calendarWhite from '../../../public/images/calendar_icon_white.png'\n\ninterface IProps {\n  row: any\n  column: IExcelHeaderType\n  onRowChange: (e: any) => void\n}\n\nconst UseDateCell = ({ row, column, onRowChange }: IProps) => {\n  const [title, setTitle] = useState<number>(0)\n  const [bgColor, setBgColor] = useState<string>()\n\n  useEffect(() => {\n    getUseDate(row.date)\n  }, [row])\n\n  const getUseDate = (date?: Date) => {\n\n    const now = moment();\n    const useDate = moment(date)\n\n    console.log(now.format('YYYY-MM-DD'), useDate.format('YYYY-MM-DD'))\n\n    const elapsedDay = Math.floor(Number(moment.duration(now.diff(useDate)).asDays()))\n\n    console.log(row)\n\n    if(elapsedDay >= row.useDate){\n      setBgColor('red')\n    }else{\n      setBgColor(undefined)\n    }\n\n    setTitle(elapsedDay)\n  }\n\n  return (\n    <div>\n      <UnitWrapper>\n        <UnitValue\n          style={{\n            width: '100%',\n            padding: 0,\n            backgroundColor: bgColor\n          }}>\n          <p style={{textAlign: 'center',}}>{title}</p>\n        </UnitValue>\n      </UnitWrapper>\n    </div>\n  );\n}\n\nconst Background = styled.div`\n    display:flex;\n    justify-content:flex-start;\n    align-items:center;\n    width:100%;\n    height:100%;\n    padding: 0 8px;\n    margin:0;\n`;\n\nexport {UseDateCell};\n"]},"metadata":{},"sourceType":"module"}