{"ast":null,"code":"import _regeneratorRuntime from \"/Users/user/Desktop/sizl/mono_pop/node_modules/@babel/runtime/regenerator\";\nimport _toConsumableArray from \"/Users/user/Desktop/sizl/mono_pop/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"/Users/user/Desktop/sizl/mono_pop/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _asyncToGenerator from \"/Users/user/Desktop/sizl/mono_pop/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/Users/user/Desktop/sizl/mono_pop/packages/main/pages/mes/basic/user/index.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useState } from 'react'; // import ExcelTable from '../../../../component/Excel/ExcelTable'\n\nimport { ExcelTable } from 'shared';\nimport MenuNavigation from '../../../../component/MenuNav/MenuNavigation';\nimport ProfileHeader from '../../../../component/Profile/ProfileHeader';\nimport PageHeader from '../../../../component/Header/Header'; // @ts-ignore\n\nimport { SelectColumn } from 'react-data-grid';\nimport { RequestMethod } from '../../../../common/RequestFunctions';\nimport { columnlist } from \"../../../../common/columnInit\";\nimport Notiflix from \"notiflix\";\nimport { useRouter } from 'next/router';\nimport TextEditor from '../../../../component/InputBox/ExcelBasicInputBox';\nimport { excelDownload } from '../../../../common/excelDownloadFunction';\nimport PaginationComponent from '../../../../component/Pagination/PaginationComponent';\nimport ExcelDownloadModal from '../../../../component/Modal/ExcelDownloadMoadal';\nimport ExcelUploadModal from \"../../../../component/Modal/ExcelUploadModal\";\nvar title = '유저 관리';\nvar optList = ['사용자명', '이메일', '직책명', '전화번호', '권한명'];\n\nvar BasicContainer = function BasicContainer(_ref) {\n  _s();\n\n  var page = _ref.page,\n      keyword = _ref.keyword,\n      option = _ref.option;\n  var router = useRouter();\n\n  var _useState = useState(false),\n      excelDownOpen = _useState[0],\n      setExcelDownOpen = _useState[1];\n\n  var _useState2 = useState(false),\n      excelUploadOpen = _useState2[0],\n      setExcelUploadOpen = _useState2[1];\n\n  var _useState3 = useState([{\n    name: \"\",\n    id: \"\"\n  }]),\n      basicRow = _useState3[0],\n      setBasicRow = _useState3[1];\n\n  var _useState4 = useState(columnlist.member),\n      column = _useState4[0],\n      setColumn = _useState4[1];\n\n  var _useState5 = useState(new Set()),\n      selectList = _useState5[0],\n      setSelectList = _useState5[1];\n\n  var _useState6 = useState(optList),\n      optionList = _useState6[0],\n      setOptionList = _useState6[1];\n\n  var _useState7 = useState(0),\n      optionIndex = _useState7[0],\n      setOptionIndex = _useState7[1];\n\n  var _useState8 = useState({\n    page: 1,\n    total: 1\n  }),\n      pageInfo = _useState8[0],\n      setPageInfo = _useState8[1];\n\n  useEffect(function () {\n    if (keyword) {\n      SearchBasic(keyword, option, page);\n    } else {\n      LoadBasic(page).then(function () {});\n    }\n  }, [page, keyword, option]);\n\n  var loadAllSelectItems = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(column) {\n      var tmpColumn;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              tmpColumn = column.map( /*#__PURE__*/function () {\n                var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(v) {\n                  var res;\n                  return _regeneratorRuntime.wrap(function _callee$(_context) {\n                    while (1) {\n                      switch (_context.prev = _context.next) {\n                        case 0:\n                          if (!(v.selectList && v.selectList.length === 0)) {\n                            _context.next = 7;\n                            break;\n                          }\n\n                          _context.next = 3;\n                          return RequestMethod('get', \"\".concat(v.key, \"All\"));\n\n                        case 3:\n                          res = _context.sent;\n                          return _context.abrupt(\"return\", _objectSpread(_objectSpread({}, v), {}, {\n                            selectList: _toConsumableArray(res.results.map(function (value) {\n                              return _objectSpread(_objectSpread({}, value), {}, {\n                                pk: value.ca_id\n                              });\n                            }))\n                          }));\n\n                        case 7:\n                          if (!v.selectList) {\n                            _context.next = 11;\n                            break;\n                          }\n\n                          return _context.abrupt(\"return\", _objectSpread(_objectSpread({}, v), {}, {\n                            pk: v.unit_id\n                          }));\n\n                        case 11:\n                          return _context.abrupt(\"return\", v);\n\n                        case 12:\n                        case \"end\":\n                          return _context.stop();\n                      }\n                    }\n                  }, _callee);\n                }));\n\n                return function (_x2) {\n                  return _ref3.apply(this, arguments);\n                };\n              }());\n              Promise.all(tmpColumn).then(function (res) {\n                setColumn(_toConsumableArray(res.map(function (v) {\n                  return _objectSpread(_objectSpread({}, v), {}, {\n                    name: v.moddable ? v.name + '(필수)' : v.name\n                  });\n                })));\n              });\n\n            case 2:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function loadAllSelectItems(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var SaveBasic = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return RequestMethod('post', \"memberSave\", {\n                members: basicRow.map(function (row, i) {\n                  if (selectList.has(row.id)) {\n                    var additional = [];\n                    column.map(function (v) {\n                      if (v.type === 'additional') {\n                        additional.push(v);\n                      }\n                    });\n                    var selectData = {};\n                    return _objectSpread(_objectSpread(_objectSpread({}, row), selectData), {}, {\n                      id: row.tmpId,\n                      authority: row.authorityPK,\n                      additional: _toConsumableArray(additional.map(function (v) {\n                        if (row[v.name]) {\n                          return {\n                            id: v.id,\n                            title: v.name,\n                            value: row[v.name],\n                            unit: v.unit\n                          };\n                        }\n                      }).filter(function (v) {\n                        return v;\n                      }))\n                    });\n                  }\n                }).filter(function (v) {\n                  return v;\n                })\n              });\n\n            case 2:\n              res = _context3.sent;\n\n              if (res) {\n                if (res.status === 200) {\n                  Notiflix.Report.success('저장되었습니다.', '', '확인');\n\n                  if (keyword) {\n                    SearchBasic(keyword, option, page).then(function () {\n                      Notiflix.Loading.remove();\n                    });\n                  } else {\n                    LoadBasic(page).then(function () {\n                      Notiflix.Loading.remove();\n                    });\n                  }\n                }\n              }\n\n            case 4:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function SaveBasic() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  var DeleteBasic = /*#__PURE__*/function () {\n    var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.next = 2;\n              return RequestMethod('delete', \"memberDelete\", {\n                members: basicRow.map(function (row, i) {\n                  if (selectList.has(row.id)) {\n                    return row.tmpId;\n                  }\n                }).filter(function (v) {\n                  return v;\n                })\n              });\n\n            case 2:\n              res = _context4.sent;\n\n              if (res) {\n                if (res.status === 200) {\n                  Notiflix.Report.success('삭제되었습니다.', '', '확인');\n\n                  if (keyword) {\n                    SearchBasic(keyword, option, page).then(function () {\n                      Notiflix.Loading.remove();\n                    });\n                  } else {\n                    LoadBasic(page).then(function () {\n                      Notiflix.Loading.remove();\n                    });\n                  }\n                }\n              }\n\n            case 4:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    return function DeleteBasic() {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n\n  var LoadBasic = /*#__PURE__*/function () {\n    var _ref6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(page) {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.next = 2;\n              return RequestMethod('get', \"memberList\", {\n                path: {\n                  page: page || page !== 0 ? page : 1,\n                  renderItem: 18\n                }\n              });\n\n            case 2:\n              res = _context5.sent;\n\n              if (res && res.status === 200) {\n                if (res.results.totalPages < page) {\n                  LoadBasic(page - 1);\n                } else {\n                  setPageInfo(_objectSpread(_objectSpread({}, pageInfo), {}, {\n                    page: res.results.page,\n                    total: res.results.totalPages\n                  }));\n                  cleanUpData(res);\n                }\n              } else if (res.state === 401) {\n                Notiflix.Report.failure('불러올 수 없습니다.', '권한이 없습니다.', '확인', function () {\n                  router.back();\n                });\n              }\n\n            case 4:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5);\n    }));\n\n    return function LoadBasic(_x3) {\n      return _ref6.apply(this, arguments);\n    };\n  }();\n\n  var SearchBasic = /*#__PURE__*/function () {\n    var _ref7 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(keyword, option, isPaging) {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              if (!isPaging) {\n                setOptionIndex(option);\n              }\n\n              _context6.next = 3;\n              return RequestMethod('get', \"memberSearch\", {\n                path: {\n                  page: isPaging !== null && isPaging !== void 0 ? isPaging : 1,\n                  renderItem: 18\n                },\n                params: {\n                  keyword: keyword !== null && keyword !== void 0 ? keyword : '',\n                  opt: option !== null && option !== void 0 ? option : 0\n                }\n              });\n\n            case 3:\n              res = _context6.sent;\n\n              if (res && res.status === 200) {\n                setPageInfo(_objectSpread(_objectSpread({}, pageInfo), {}, {\n                  page: res.results.page,\n                  total: res.results.totalPages\n                }));\n                cleanUpData(res);\n              }\n\n            case 5:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6);\n    }));\n\n    return function SearchBasic(_x4, _x5, _x6) {\n      return _ref7.apply(this, arguments);\n    };\n  }();\n\n  var changeRow = function changeRow(row) {\n    var tmpData = {};\n\n    if (row.additional && row.additional.length) {\n      row.additional.map(function (v) {\n        tmpData = _objectSpread(_objectSpread({}, tmpData), {}, _defineProperty({}, v.key, v.value));\n      });\n    }\n\n    return _objectSpread({\n      user_id: row.user_id,\n      name: row.name,\n      appointment: row.appointment,\n      telephone: row.telephone,\n      email: row.email,\n      authority: row.authority.name,\n      authorityPK: row.authority.ca_id,\n      tmpId: row.id,\n      password: null\n    }, tmpData);\n  };\n\n  var cleanUpBasicData = function cleanUpBasicData(res) {\n    var tmpRow = res.data.results.info_list;\n    var tmpBasicRow = tmpRow.map(function (row, index) {\n      var realTableData = changeRow(row);\n      var appendAdditional = {};\n      row.additional && row.additional.map(function (v) {\n        appendAdditional = _objectSpread(_objectSpread({}, appendAdditional), {}, _defineProperty({}, v.title, v.value));\n      });\n      var random_id = Math.random() * 1000;\n      return _objectSpread(_objectSpread(_objectSpread(_objectSpread({}, row), realTableData), appendAdditional), {}, {\n        id: \"process_\".concat(random_id)\n      });\n    });\n    setBasicRow(_toConsumableArray(tmpBasicRow));\n  };\n\n  var cleanUpData = function cleanUpData(res) {\n    var tmpColumn = columnlist.member;\n    var tmpRow = [];\n    tmpColumn = tmpColumn.map(function (column) {\n      var menuData;\n      res.results.menus && res.results.menus.map(function (menu) {\n        if (menu.colName === column.key) {\n          menuData = {\n            id: menu.id,\n            name: menu.title,\n            width: menu.width,\n            tab: menu.tab,\n            unit: menu.unit,\n            moddable: !menu.moddable\n          };\n        } else if (menu.colName === 'id' && column.key === 'tmpId') {\n          menuData = {\n            id: menu.id,\n            name: menu.title,\n            width: menu.width,\n            tab: menu.tab,\n            unit: menu.unit,\n            moddable: !menu.moddable\n          };\n        }\n      });\n\n      if (menuData) {\n        return _objectSpread(_objectSpread({}, column), menuData);\n      }\n    }).filter(function (v) {\n      return v;\n    });\n    var additionalMenus = res.results.menus ? res.results.menus.map(function (menu) {\n      if (menu.colName === null) {\n        return {\n          id: menu.id,\n          name: menu.title,\n          width: menu.width,\n          key: menu.title,\n          editor: TextEditor,\n          type: 'additional',\n          unit: menu.unit\n        };\n      }\n    }).filter(function (v) {\n      return v;\n    }) : [];\n    tmpRow = res.results.info_list;\n    loadAllSelectItems([].concat(_toConsumableArray(tmpColumn), _toConsumableArray(additionalMenus)));\n    var additionalData = [];\n    additionalMenus.map(function (v) {\n      if (v.type === 'additional') {\n        additionalData.push(v.key);\n      }\n    });\n    var tmpBasicRow = tmpRow.map(function (row, index) {\n      var realTableData = changeRow(row);\n      var appendAdditional = {};\n      row.additional && row.additional.map(function (v) {\n        appendAdditional = _objectSpread(_objectSpread({}, appendAdditional), {}, _defineProperty({}, v.title, v.value));\n      });\n      var random_id = Math.random() * 1000;\n      return _objectSpread(_objectSpread(_objectSpread(_objectSpread({}, row), realTableData), appendAdditional), {}, {\n        id: \"process_\".concat(random_id)\n      });\n    });\n    setBasicRow(_toConsumableArray(tmpBasicRow));\n  };\n\n  var downloadExcel = function downloadExcel() {\n    var tmpSelectList = [];\n    basicRow.map(function (row) {\n      tmpSelectList.push(selectList.has(row.id));\n    });\n    excelDownload(column, basicRow, \"process\", 'process', tmpSelectList);\n  };\n\n  var onClickHeaderButton = function onClickHeaderButton(index) {\n    switch (index) {\n      case 0:\n        setExcelUploadOpen(true);\n        break;\n\n      case 1:\n        setExcelDownOpen(true);\n        break;\n\n      case 2:\n        router.push(\"/mes/item/manage/member\");\n        break;\n\n      case 3:\n        var items = {};\n        column.map(function (value) {\n          if (value.selectList && value.selectList.length) {\n            var _objectSpread5;\n\n            items = _objectSpread(_objectSpread({}, value.selectList[0]), {}, (_objectSpread5 = {}, _defineProperty(_objectSpread5, value.key, value.selectList[0].name), _defineProperty(_objectSpread5, value.key + 'PK', value.selectList[0].ca_id), _objectSpread5), items);\n          }\n        });\n        var random_id = Math.random() * 1000;\n        setBasicRow([_objectSpread(_objectSpread({}, items), {}, {\n          id: \"member_\".concat(random_id),\n          name: null,\n          additional: []\n        })].concat(_toConsumableArray(basicRow)));\n        break;\n\n      case 4:\n        SaveBasic();\n        break;\n\n      case 5:\n        Notiflix.Confirm.show(\"경고\", \"삭제하시겠습니까?\", \"확인\", \"취소\", function () {\n          DeleteBasic();\n        }, function () {});\n        break;\n    }\n  };\n\n  return __jsx(\"div\", {\n    style: {\n      display: 'flex'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 430,\n      columnNumber: 5\n    }\n  }, __jsx(MenuNavigation, {\n    pageType: 'BASIC',\n    subType: 0,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 431,\n      columnNumber: 7\n    }\n  }), __jsx(\"div\", {\n    style: {\n      paddingBottom: 40\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 432,\n      columnNumber: 7\n    }\n  }, __jsx(ProfileHeader, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 433,\n      columnNumber: 9\n    }\n  }), __jsx(PageHeader, {\n    isSearch: true,\n    searchKeyword: keyword,\n    onChangeSearchKeyword: function onChangeSearchKeyword(keyword) {\n      if (keyword) {\n        router.push(\"/mes/basic/user?page=1&keyword=\".concat(keyword, \"&opt=\").concat(optionIndex));\n      } else {\n        router.push(\"/mes/basic/user?page=1&keyword=\");\n      }\n    },\n    searchOptionList: optionList,\n    onChangeSearchOption: function onChangeSearchOption(option) {\n      setOptionIndex(option);\n    },\n    optionIndex: optionIndex,\n    title: title,\n    buttons: [\"엑셀로 등록\", '엑셀로 받기', '항목관리', '행 추가', '저장하기', '삭제'],\n    buttonsOnclick: onClickHeaderButton,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 434,\n      columnNumber: 9\n    }\n  }), __jsx(ExcelTable, {\n    editable: true,\n    resizable: true,\n    headerList: [SelectColumn].concat(_toConsumableArray(column)),\n    row: basicRow // setRow={setBasicRow}\n    ,\n    setRow: function setRow(e) {\n      var tmp = selectList;\n      e.map(function (v) {\n        if (v.isChange) tmp.add(v.id);\n      });\n      setSelectList(tmp);\n      setBasicRow(e);\n    },\n    selectList: selectList //@ts-ignore\n    ,\n    setSelectList: setSelectList,\n    height: basicRow.length * 40 >= 40 * 18 + 40 ? 40 * 19 + 16 : basicRow.length * 40 + 56,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 453,\n      columnNumber: 9\n    }\n  }), __jsx(PaginationComponent, {\n    currentPage: pageInfo.page,\n    totalPage: pageInfo.total,\n    setPage: function setPage(page) {\n      if (keyword) {\n        router.push(\"/mes/basic/user?page=\".concat(page, \"&keyword=\").concat(keyword, \"&opt=\").concat(option));\n      } else {\n        router.push(\"/mes/basic/user?page=\".concat(page));\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 475,\n      columnNumber: 9\n    }\n  })), __jsx(ExcelDownloadModal, {\n    isOpen: excelDownOpen,\n    column: column,\n    basicRow: basicRow,\n    filename: \"\\uC720\\uC800\\uAD00\\uB9AC\",\n    sheetname: \"\\uC720\\uC800\\uAD00\\uB9AC\",\n    selectList: selectList,\n    tab: 'ROLE_HR_01',\n    setIsOpen: setExcelDownOpen,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 487,\n      columnNumber: 7\n    }\n  }), __jsx(ExcelUploadModal, {\n    isOpen: excelUploadOpen,\n    setIsOpen: setExcelUploadOpen,\n    tab: 'ROLE_HR_01',\n    cleanUpBasicData: cleanUpBasicData,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 497,\n      columnNumber: 7\n    }\n  }));\n};\n\n_s(BasicContainer, \"qBAo5QfM+dj68V6g0GitCzBT66w=\", false, function () {\n  return [useRouter];\n});\n\n_c = BasicContainer;\n// BasicContainer.getInitialProps = async ({ query }) => {\n//   let { page, keyword, opt } = query\n//   if (typeof page === 'string')\n//     page = parseInt(page);\n//   if (typeof opt === 'string')\n//     opt = parseInt(opt);\n//   return { page, keyword, option: opt };\n// }\nexport var __N_SSP = true;\nexport default BasicContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"BasicContainer\");","map":{"version":3,"sources":["/Users/user/Desktop/sizl/mono_pop/packages/main/pages/mes/basic/user/index.tsx"],"names":["React","useEffect","useState","ExcelTable","MenuNavigation","ProfileHeader","PageHeader","SelectColumn","RequestMethod","columnlist","Notiflix","useRouter","TextEditor","excelDownload","PaginationComponent","ExcelDownloadModal","ExcelUploadModal","title","optList","BasicContainer","page","keyword","option","router","excelDownOpen","setExcelDownOpen","excelUploadOpen","setExcelUploadOpen","name","id","basicRow","setBasicRow","member","column","setColumn","Set","selectList","setSelectList","optionList","setOptionList","optionIndex","setOptionIndex","total","pageInfo","setPageInfo","SearchBasic","LoadBasic","then","loadAllSelectItems","tmpColumn","map","v","length","key","res","results","value","pk","ca_id","unit_id","Promise","all","moddable","SaveBasic","members","row","i","has","additional","type","push","selectData","tmpId","authority","authorityPK","unit","filter","status","Report","success","Loading","remove","DeleteBasic","path","renderItem","totalPages","cleanUpData","state","failure","back","isPaging","params","opt","changeRow","tmpData","user_id","appointment","telephone","email","password","cleanUpBasicData","tmpRow","data","info_list","tmpBasicRow","index","realTableData","appendAdditional","random_id","Math","random","menuData","menus","menu","colName","width","tab","additionalMenus","editor","additionalData","downloadExcel","tmpSelectList","onClickHeaderButton","items","Confirm","show","display","paddingBottom","e","tmp","isChange","add"],"mappings":";;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC,C,CACA;;AACA,SAAQC,UAAR,QAAyB,QAAzB;AACA,OAAOC,cAAP,MAA2B,8CAA3B;AACA,OAAOC,aAAP,MAA0B,6CAA1B;AACA,OAAOC,UAAP,MAAuB,qCAAvB,C,CACA;;AACA,SAAQC,YAAR,QAA2B,iBAA3B;AAEA,SAAQC,aAAR,QAA4B,qCAA5B;AACA,SAAQC,UAAR,QAAyB,+BAAzB;AACA,OAAOC,QAAP,MAAqB,UAArB;AACA,SAAQC,SAAR,QAAwB,aAAxB;AAGA,OAAOC,UAAP,MAAuB,mDAAvB;AACA,SAAQC,aAAR,QAA4B,0CAA5B;AAIA,OAAOC,mBAAP,MAAgC,sDAAhC;AAEA,OAAOC,kBAAP,MAA+B,iDAA/B;AACA,OAAOC,gBAAP,MAA6B,8CAA7B;AASA,IAAMC,KAAK,GAAG,OAAd;AACA,IAAMC,OAAO,GAAG,CAAC,MAAD,EAAS,KAAT,EAAgB,KAAhB,EAAuB,MAAvB,EAA+B,KAA/B,CAAhB;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,OAAqC;AAAA;;AAAA,MAAnCC,IAAmC,QAAnCA,IAAmC;AAAA,MAA7BC,OAA6B,QAA7BA,OAA6B;AAAA,MAApBC,MAAoB,QAApBA,MAAoB;AAC1D,MAAMC,MAAM,GAAGZ,SAAS,EAAxB;;AAD0D,kBAGhBT,QAAQ,CAAU,KAAV,CAHQ;AAAA,MAGnDsB,aAHmD;AAAA,MAGpCC,gBAHoC;;AAAA,mBAIZvB,QAAQ,CAAU,KAAV,CAJI;AAAA,MAInDwB,eAJmD;AAAA,MAIlCC,kBAJkC;;AAAA,mBAM1BzB,QAAQ,CAAa,CAAC;AACpD0B,IAAAA,IAAI,EAAE,EAD8C;AAC1CC,IAAAA,EAAE,EAAE;AADsC,GAAD,CAAb,CANkB;AAAA,MAMnDC,QANmD;AAAA,MAMzCC,WANyC;;AAAA,mBAS9B7B,QAAQ,CAA0BO,UAAU,CAACuB,MAArC,CATsB;AAAA,MASnDC,MATmD;AAAA,MAS3CC,SAT2C;;AAAA,mBAUtBhC,QAAQ,CAAW,IAAIiC,GAAJ,EAAX,CAVc;AAAA,MAUnDC,UAVmD;AAAA,MAUvCC,aAVuC;;AAAA,mBAWtBnC,QAAQ,CAAWgB,OAAX,CAXc;AAAA,MAWnDoB,UAXmD;AAAA,MAWvCC,aAXuC;;AAAA,mBAYpBrC,QAAQ,CAAS,CAAT,CAZY;AAAA,MAYnDsC,WAZmD;AAAA,MAYtCC,cAZsC;;AAAA,mBAc1BvC,QAAQ,CAAgC;AACtEkB,IAAAA,IAAI,EAAE,CADgE;AAEtEsB,IAAAA,KAAK,EAAE;AAF+D,GAAhC,CAdkB;AAAA,MAcnDC,QAdmD;AAAA,MAczCC,WAdyC;;AAmB1D3C,EAAAA,SAAS,CAAC,YAAM;AACd,QAAGoB,OAAH,EAAW;AACTwB,MAAAA,WAAW,CAACxB,OAAD,EAAUC,MAAV,EAAkBF,IAAlB,CAAX;AACD,KAFD,MAEK;AACH0B,MAAAA,SAAS,CAAC1B,IAAD,CAAT,CAAgB2B,IAAhB,CAAqB,YAAM,CAAE,CAA7B;AACD;AACF,GANQ,EAMN,CAAC3B,IAAD,EAAOC,OAAP,EAAgBC,MAAhB,CANM,CAAT;;AAQA,MAAM0B,kBAAkB;AAAA,yEAAG,kBAAOf,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACrBgB,cAAAA,SADqB,GACThB,MAAM,CAACiB,GAAP;AAAA,qFAAW,iBAAOC,CAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCACtBA,CAAC,CAACf,UAAF,IAAgBe,CAAC,CAACf,UAAF,CAAagB,MAAb,KAAwB,CADlB;AAAA;AAAA;AAAA;;AAAA;AAAA,iCAEL5C,aAAa,CAAC,KAAD,YAAW2C,CAAC,CAACE,GAAb,SAFR;;AAAA;AAEjBC,0BAAAA,GAFiB;AAAA,2FAKlBH,CALkB;AAMrBf,4BAAAA,UAAU,qBAAMkB,GAAG,CAACC,OAAJ,CAAYL,GAAZ,CAAgB,UAACM,KAAD,EAAgB;AAC9C,qEACKA,KADL;AAEEC,gCAAAA,EAAE,EAAED,KAAK,CAACE;AAFZ;AAID,6BALe,CAAN;AANW;;AAAA;AAAA,+BAcpBP,CAAC,CAACf,UAdkB;AAAA;AAAA;AAAA;;AAAA,2FAgBhBe,CAhBgB;AAiBnBM,4BAAAA,EAAE,EAAEN,CAAC,CAACQ;AAjBa;;AAAA;AAAA,2DAoBdR,CApBc;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAX;;AAAA;AAAA;AAAA;AAAA,kBADS;AA0BzBS,cAAAA,OAAO,CAACC,GAAR,CAAYZ,SAAZ,EAAuBF,IAAvB,CAA4B,UAAAO,GAAG,EAAI;AACjCpB,gBAAAA,SAAS,oBAAKoB,GAAG,CAACJ,GAAJ,CAAQ,UAAAC,CAAC,EAAG;AACxB,yDACKA,CADL;AAEEvB,oBAAAA,IAAI,EAAEuB,CAAC,CAACW,QAAF,GAAaX,CAAC,CAACvB,IAAF,GAAO,MAApB,GAA6BuB,CAAC,CAACvB;AAFvC;AAID,iBALa,CAAL,EAAT;AAMD,eAPD;;AA1ByB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAlBoB,kBAAkB;AAAA;AAAA;AAAA,KAAxB;;AAoCA,MAAMe,SAAS;AAAA,yEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACAvD,aAAa,CAAC,MAAD,gBAC7B;AACEwD,gBAAAA,OAAO,EAAElC,QAAQ,CAACoB,GAAT,CAAa,UAACe,GAAD,EAAMC,CAAN,EAAY;AAChC,sBAAG9B,UAAU,CAAC+B,GAAX,CAAeF,GAAG,CAACpC,EAAnB,CAAH,EAA0B;AACxB,wBAAIuC,UAAgB,GAAG,EAAvB;AACAnC,oBAAAA,MAAM,CAACiB,GAAP,CAAW,UAACC,CAAD,EAAO;AAChB,0BAAGA,CAAC,CAACkB,IAAF,KAAW,YAAd,EAA2B;AACzBD,wBAAAA,UAAU,CAACE,IAAX,CAAgBnB,CAAhB;AACD;AACF,qBAJD;AAMA,wBAAIoB,UAAe,GAAG,EAAtB;AAEA,yEACKN,GADL,GAEKM,UAFL;AAGE1C,sBAAAA,EAAE,EAAEoC,GAAG,CAACO,KAHV;AAIEC,sBAAAA,SAAS,EAAER,GAAG,CAACS,WAJjB;AAKEN,sBAAAA,UAAU,qBACLA,UAAU,CAAClB,GAAX,CAAe,UAAAC,CAAC,EAAI;AACrB,4BAAGc,GAAG,CAACd,CAAC,CAACvB,IAAH,CAAN,EAAgB;AACd,iCAAO;AACLC,4BAAAA,EAAE,EAAEsB,CAAC,CAACtB,EADD;AAELZ,4BAAAA,KAAK,EAAEkC,CAAC,CAACvB,IAFJ;AAGL4B,4BAAAA,KAAK,EAAES,GAAG,CAACd,CAAC,CAACvB,IAAH,CAHL;AAIL+C,4BAAAA,IAAI,EAAExB,CAAC,CAACwB;AAJH,2BAAP;AAMD;AACF,uBATE,EASAC,MATA,CASO,UAACzB,CAAD;AAAA,+BAAOA,CAAP;AAAA,uBATP,CADK;AALZ;AAmBD;AACF,iBA/BQ,EA+BNyB,MA/BM,CA+BC,UAACzB,CAAD;AAAA,yBAAOA,CAAP;AAAA,iBA/BD;AADX,eAD6B,CADb;;AAAA;AACZG,cAAAA,GADY;;AAqChB,kBAAGA,GAAH,EAAO;AACL,oBAAGA,GAAG,CAACuB,MAAJ,KAAe,GAAlB,EAAsB;AACpBnE,kBAAAA,QAAQ,CAACoE,MAAT,CAAgBC,OAAhB,CAAwB,UAAxB,EAAmC,EAAnC,EAAsC,IAAtC;;AACA,sBAAG1D,OAAH,EAAW;AACTwB,oBAAAA,WAAW,CAACxB,OAAD,EAAUC,MAAV,EAAkBF,IAAlB,CAAX,CAAmC2B,IAAnC,CAAwC,YAAM;AAC5CrC,sBAAAA,QAAQ,CAACsE,OAAT,CAAiBC,MAAjB;AACD,qBAFD;AAGD,mBAJD,MAIK;AACHnC,oBAAAA,SAAS,CAAC1B,IAAD,CAAT,CAAgB2B,IAAhB,CAAqB,YAAM;AACzBrC,sBAAAA,QAAQ,CAACsE,OAAT,CAAiBC,MAAjB;AACD,qBAFD;AAGD;AACF;AACF;;AAlDe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAATlB,SAAS;AAAA;AAAA;AAAA,KAAf;;AAqDA,MAAMmB,WAAW;AAAA,yEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAEE1E,aAAa,CAAC,QAAD,kBAC7B;AACEwD,gBAAAA,OAAO,EAAElC,QAAQ,CAACoB,GAAT,CAAa,UAACe,GAAD,EAAMC,CAAN,EAAY;AAChC,sBAAG9B,UAAU,CAAC+B,GAAX,CAAeF,GAAG,CAACpC,EAAnB,CAAH,EAA0B;AAExB,2BAAOoC,GAAG,CAACO,KAAX;AACD;AACF,iBALQ,EAKNI,MALM,CAKC,UAACzB,CAAD;AAAA,yBAAOA,CAAP;AAAA,iBALD;AADX,eAD6B,CAFf;;AAAA;AAEVG,cAAAA,GAFU;;AAYhB,kBAAGA,GAAH,EAAQ;AACN,oBAAGA,GAAG,CAACuB,MAAJ,KAAe,GAAlB,EAAsB;AACpBnE,kBAAAA,QAAQ,CAACoE,MAAT,CAAgBC,OAAhB,CAAwB,UAAxB,EAAmC,EAAnC,EAAsC,IAAtC;;AACA,sBAAG1D,OAAH,EAAW;AACTwB,oBAAAA,WAAW,CAACxB,OAAD,EAAUC,MAAV,EAAkBF,IAAlB,CAAX,CAAmC2B,IAAnC,CAAwC,YAAM;AAC5CrC,sBAAAA,QAAQ,CAACsE,OAAT,CAAiBC,MAAjB;AACD,qBAFD;AAGD,mBAJD,MAIK;AACHnC,oBAAAA,SAAS,CAAC1B,IAAD,CAAT,CAAgB2B,IAAhB,CAAqB,YAAM;AACzBrC,sBAAAA,QAAQ,CAACsE,OAAT,CAAiBC,MAAjB;AACD,qBAFD;AAGD;AACF;AACF;;AAzBe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAXC,WAAW;AAAA;AAAA;AAAA,KAAjB;;AA6BA,MAAMpC,SAAS;AAAA,yEAAG,kBAAO1B,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACEZ,aAAa,CAAC,KAAD,gBAAqB;AAClD2E,gBAAAA,IAAI,EAAE;AACJ/D,kBAAAA,IAAI,EAAGA,IAAI,IAAIA,IAAI,KAAK,CAAlB,GAAuBA,IAAvB,GAA8B,CADhC;AAEJgE,kBAAAA,UAAU,EAAE;AAFR;AAD4C,eAArB,CADf;;AAAA;AACV9B,cAAAA,GADU;;AAQhB,kBAAGA,GAAG,IAAIA,GAAG,CAACuB,MAAJ,KAAe,GAAzB,EAA6B;AAC3B,oBAAGvB,GAAG,CAACC,OAAJ,CAAY8B,UAAZ,GAAyBjE,IAA5B,EAAiC;AAC/B0B,kBAAAA,SAAS,CAAC1B,IAAI,GAAG,CAAR,CAAT;AACD,iBAFD,MAEK;AACHwB,kBAAAA,WAAW,iCACND,QADM;AAETvB,oBAAAA,IAAI,EAAEkC,GAAG,CAACC,OAAJ,CAAYnC,IAFT;AAGTsB,oBAAAA,KAAK,EAAEY,GAAG,CAACC,OAAJ,CAAY8B;AAHV,qBAAX;AAKAC,kBAAAA,WAAW,CAAChC,GAAD,CAAX;AACD;AACF,eAXD,MAWM,IAAIA,GAAG,CAACiC,KAAJ,KAAc,GAAlB,EAAuB;AAC3B7E,gBAAAA,QAAQ,CAACoE,MAAT,CAAgBU,OAAhB,CAAwB,aAAxB,EAAuC,WAAvC,EAAoD,IAApD,EAA0D,YAAM;AAC9DjE,kBAAAA,MAAM,CAACkE,IAAP;AACD,iBAFD;AAGD;;AAvBe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAT3C,SAAS;AAAA;AAAA;AAAA,KAAf;;AA0BA,MAAMD,WAAW;AAAA,yEAAG,kBAAOxB,OAAP,EAAqBC,MAArB,EAAqCoE,QAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAClB,kBAAG,CAACA,QAAJ,EAAa;AACXjD,gBAAAA,cAAc,CAACnB,MAAD,CAAd;AACD;;AAHiB;AAAA,qBAIAd,aAAa,CAAC,KAAD,kBAAuB;AACpD2E,gBAAAA,IAAI,EAAE;AACJ/D,kBAAAA,IAAI,EAAEsE,QAAF,aAAEA,QAAF,cAAEA,QAAF,GAAc,CADd;AAEJN,kBAAAA,UAAU,EAAE;AAFR,iBAD8C;AAKpDO,gBAAAA,MAAM,EAAE;AACNtE,kBAAAA,OAAO,EAAEA,OAAF,aAAEA,OAAF,cAAEA,OAAF,GAAa,EADd;AAENuE,kBAAAA,GAAG,EAAEtE,MAAF,aAAEA,MAAF,cAAEA,MAAF,GAAY;AAFT;AAL4C,eAAvB,CAJb;;AAAA;AAIZgC,cAAAA,GAJY;;AAelB,kBAAGA,GAAG,IAAIA,GAAG,CAACuB,MAAJ,KAAe,GAAzB,EAA6B;AAC3BjC,gBAAAA,WAAW,iCACND,QADM;AAETvB,kBAAAA,IAAI,EAAEkC,GAAG,CAACC,OAAJ,CAAYnC,IAFT;AAGTsB,kBAAAA,KAAK,EAAEY,GAAG,CAACC,OAAJ,CAAY8B;AAHV,mBAAX;AAKAC,gBAAAA,WAAW,CAAChC,GAAD,CAAX;AACD;;AAtBiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAXT,WAAW;AAAA;AAAA;AAAA,KAAjB;;AAyBA,MAAMgD,SAAS,GAAG,SAAZA,SAAY,CAAC5B,GAAD,EAAc;AAC9B,QAAI6B,OAAO,GAAG,EAAd;;AAEA,QAAG7B,GAAG,CAACG,UAAJ,IAAkBH,GAAG,CAACG,UAAJ,CAAehB,MAApC,EAA4C;AAC1Ca,MAAAA,GAAG,CAACG,UAAJ,CAAelB,GAAf,CAAmB,UAAAC,CAAC,EAAI;AACtB2C,QAAAA,OAAO,mCACFA,OADE,2BAEJ3C,CAAC,CAACE,GAFE,EAEIF,CAAC,CAACK,KAFN,EAAP;AAID,OALD;AAMD;;AAED;AACEuC,MAAAA,OAAO,EAAE9B,GAAG,CAAC8B,OADf;AAEEnE,MAAAA,IAAI,EAAEqC,GAAG,CAACrC,IAFZ;AAGEoE,MAAAA,WAAW,EAAE/B,GAAG,CAAC+B,WAHnB;AAIEC,MAAAA,SAAS,EAAEhC,GAAG,CAACgC,SAJjB;AAKEC,MAAAA,KAAK,EAAEjC,GAAG,CAACiC,KALb;AAMEzB,MAAAA,SAAS,EAAER,GAAG,CAACQ,SAAJ,CAAc7C,IAN3B;AAOE8C,MAAAA,WAAW,EAAET,GAAG,CAACQ,SAAJ,CAAcf,KAP7B;AAQEc,MAAAA,KAAK,EAAEP,GAAG,CAACpC,EARb;AASEsE,MAAAA,QAAQ,EAAE;AATZ,OAUKL,OAVL;AAYD,GAxBD;;AA0BA,MAAMM,gBAAgB,GAAG,SAAnBA,gBAAmB,CAAC9C,GAAD,EAAa;AACpC,QAAI+C,MAAM,GAAG/C,GAAG,CAACgD,IAAJ,CAAS/C,OAAT,CAAiBgD,SAA9B;AAEA,QAAIC,WAAW,GAAGH,MAAM,CAACnD,GAAP,CAAW,UAACe,GAAD,EAAWwC,KAAX,EAA6B;AACxD,UAAIC,aAAkB,GAAGb,SAAS,CAAC5B,GAAD,CAAlC;AACA,UAAI0C,gBAAqB,GAAG,EAA5B;AAEA1C,MAAAA,GAAG,CAACG,UAAJ,IAAkBH,GAAG,CAACG,UAAJ,CAAelB,GAAf,CAAmB,UAACC,CAAD,EAAY;AAC/CwD,QAAAA,gBAAgB,mCACXA,gBADW,2BAEbxD,CAAC,CAAClC,KAFW,EAEHkC,CAAC,CAACK,KAFC,EAAhB;AAID,OALiB,CAAlB;AAOA,UAAMoD,SAAS,GAAGC,IAAI,CAACC,MAAL,KAAc,IAAhC;AAEA,yEACK7C,GADL,GAEKyC,aAFL,GAGKC,gBAHL;AAIE9E,QAAAA,EAAE,oBAAa+E,SAAb;AAJJ;AAMD,KAnBiB,CAAlB;AAoBA7E,IAAAA,WAAW,oBAAKyE,WAAL,EAAX;AACD,GAxBD;;AA0BA,MAAMlB,WAAW,GAAG,SAAdA,WAAc,CAAChC,GAAD,EAAc;AAChC,QAAIL,SAAS,GAAGxC,UAAU,CAACuB,MAA3B;AACA,QAAIqE,MAAM,GAAG,EAAb;AACApD,IAAAA,SAAS,GAAGA,SAAS,CAACC,GAAV,CAAc,UAACjB,MAAD,EAAiB;AACzC,UAAI8E,QAAJ;AACAzD,MAAAA,GAAG,CAACC,OAAJ,CAAYyD,KAAZ,IAAqB1D,GAAG,CAACC,OAAJ,CAAYyD,KAAZ,CAAkB9D,GAAlB,CAAsB,UAAC+D,IAAD,EAAe;AACxD,YAAGA,IAAI,CAACC,OAAL,KAAiBjF,MAAM,CAACoB,GAA3B,EAA+B;AAC7B0D,UAAAA,QAAQ,GAAG;AACTlF,YAAAA,EAAE,EAAEoF,IAAI,CAACpF,EADA;AAETD,YAAAA,IAAI,EAAEqF,IAAI,CAAChG,KAFF;AAGTkG,YAAAA,KAAK,EAAEF,IAAI,CAACE,KAHH;AAITC,YAAAA,GAAG,EAACH,IAAI,CAACG,GAJA;AAKTzC,YAAAA,IAAI,EAACsC,IAAI,CAACtC,IALD;AAMTb,YAAAA,QAAQ,EAAE,CAACmD,IAAI,CAACnD;AANP,WAAX;AAQD,SATD,MASO,IAAGmD,IAAI,CAACC,OAAL,KAAiB,IAAjB,IAAyBjF,MAAM,CAACoB,GAAP,KAAe,OAA3C,EAAmD;AACxD0D,UAAAA,QAAQ,GAAG;AACTlF,YAAAA,EAAE,EAAEoF,IAAI,CAACpF,EADA;AAETD,YAAAA,IAAI,EAAEqF,IAAI,CAAChG,KAFF;AAGTkG,YAAAA,KAAK,EAAEF,IAAI,CAACE,KAHH;AAITC,YAAAA,GAAG,EAACH,IAAI,CAACG,GAJA;AAKTzC,YAAAA,IAAI,EAACsC,IAAI,CAACtC,IALD;AAMTb,YAAAA,QAAQ,EAAE,CAACmD,IAAI,CAACnD;AANP,WAAX;AAQD;AACF,OApBoB,CAArB;;AAsBA,UAAGiD,QAAH,EAAY;AACV,+CACK9E,MADL,GAEK8E,QAFL;AAID;AACF,KA9BW,EA8BTnC,MA9BS,CA8BF,UAACzB,CAAD;AAAA,aAAWA,CAAX;AAAA,KA9BE,CAAZ;AAgCA,QAAIkE,eAAe,GAAG/D,GAAG,CAACC,OAAJ,CAAYyD,KAAZ,GAAoB1D,GAAG,CAACC,OAAJ,CAAYyD,KAAZ,CAAkB9D,GAAlB,CAAsB,UAAC+D,IAAD,EAAc;AAC5E,UAAGA,IAAI,CAACC,OAAL,KAAiB,IAApB,EAAyB;AACvB,eAAO;AACLrF,UAAAA,EAAE,EAAEoF,IAAI,CAACpF,EADJ;AAELD,UAAAA,IAAI,EAAEqF,IAAI,CAAChG,KAFN;AAGLkG,UAAAA,KAAK,EAAEF,IAAI,CAACE,KAHP;AAIL9D,UAAAA,GAAG,EAAE4D,IAAI,CAAChG,KAJL;AAKLqG,UAAAA,MAAM,EAAE1G,UALH;AAMLyD,UAAAA,IAAI,EAAE,YAND;AAOLM,UAAAA,IAAI,EAAEsC,IAAI,CAACtC;AAPN,SAAP;AASD;AACF,KAZyC,EAYvCC,MAZuC,CAYhC,UAACzB,CAAD;AAAA,aAAYA,CAAZ;AAAA,KAZgC,CAApB,GAYK,EAZ3B;AAaAkD,IAAAA,MAAM,GAAG/C,GAAG,CAACC,OAAJ,CAAYgD,SAArB;AAEAvD,IAAAA,kBAAkB,8BAAKC,SAAL,sBAAmBoE,eAAnB,GAAlB;AAEA,QAAIE,cAAqB,GAAG,EAA5B;AAEAF,IAAAA,eAAe,CAACnE,GAAhB,CAAoB,UAACC,CAAD,EAAY;AAC9B,UAAGA,CAAC,CAACkB,IAAF,KAAW,YAAd,EAA2B;AACzBkD,QAAAA,cAAc,CAACjD,IAAf,CAAoBnB,CAAC,CAACE,GAAtB;AACD;AACF,KAJD;AAMA,QAAImD,WAAW,GAAGH,MAAM,CAACnD,GAAP,CAAW,UAACe,GAAD,EAAWwC,KAAX,EAA6B;AACxD,UAAIC,aAAkB,GAAGb,SAAS,CAAC5B,GAAD,CAAlC;AACA,UAAI0C,gBAAqB,GAAG,EAA5B;AAEA1C,MAAAA,GAAG,CAACG,UAAJ,IAAkBH,GAAG,CAACG,UAAJ,CAAelB,GAAf,CAAmB,UAACC,CAAD,EAAY;AAC/CwD,QAAAA,gBAAgB,mCACXA,gBADW,2BAEbxD,CAAC,CAAClC,KAFW,EAEHkC,CAAC,CAACK,KAFC,EAAhB;AAID,OALiB,CAAlB;AAOA,UAAMoD,SAAS,GAAGC,IAAI,CAACC,MAAL,KAAc,IAAhC;AAEA,yEACK7C,GADL,GAEKyC,aAFL,GAGKC,gBAHL;AAIE9E,QAAAA,EAAE,oBAAa+E,SAAb;AAJJ;AAMD,KAnBiB,CAAlB;AAoBA7E,IAAAA,WAAW,oBAAKyE,WAAL,EAAX;AACD,GAjFD;;AAmFA,MAAMgB,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AAC1B,QAAIC,aAAwB,GAAG,EAA/B;AACA3F,IAAAA,QAAQ,CAACoB,GAAT,CAAa,UAAAe,GAAG,EAAI;AAClBwD,MAAAA,aAAa,CAACnD,IAAd,CAAmBlC,UAAU,CAAC+B,GAAX,CAAeF,GAAG,CAACpC,EAAnB,CAAnB;AACD,KAFD;AAGAhB,IAAAA,aAAa,CAACoB,MAAD,EAASH,QAAT,aAA8B,SAA9B,EAAyC2F,aAAzC,CAAb;AACD,GAND;;AAQA,MAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACjB,KAAD,EAAmB;AAC7C,YAAOA,KAAP;AACE,WAAK,CAAL;AACE9E,QAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACA;;AACF,WAAK,CAAL;AACEF,QAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACA;;AACF,WAAK,CAAL;AACIF,QAAAA,MAAM,CAAC+C,IAAP;AACF;;AACF,WAAK,CAAL;AACE,YAAIqD,KAAK,GAAG,EAAZ;AAEA1F,QAAAA,MAAM,CAACiB,GAAP,CAAW,UAACM,KAAD,EAAW;AACpB,cAAGA,KAAK,CAACpB,UAAN,IAAoBoB,KAAK,CAACpB,UAAN,CAAiBgB,MAAxC,EAA+C;AAAA;;AAC7CuE,YAAAA,KAAK,mCACAnE,KAAK,CAACpB,UAAN,CAAiB,CAAjB,CADA,6DAEFoB,KAAK,CAACH,GAFJ,EAEWG,KAAK,CAACpB,UAAN,CAAiB,CAAjB,EAAoBR,IAF/B,mCAGF4B,KAAK,CAACH,GAAN,GAAU,IAHR,EAGgBG,KAAK,CAACpB,UAAN,CAAiB,CAAjB,EAAoBsB,KAHpC,oBAIAiE,KAJA,CAAL;AAMD;AACF,SATD;AAWA,YAAMf,SAAS,GAAGC,IAAI,CAACC,MAAL,KAAc,IAAhC;AAEA/E,QAAAA,WAAW,kCAEJ4F,KAFI;AAGP9F,UAAAA,EAAE,mBAAY+E,SAAZ,CAHK;AAIPhF,UAAAA,IAAI,EAAE,IAJC;AAKPwC,UAAAA,UAAU,EAAE;AALL,sCAONtC,QAPM,GAAX;AASA;;AAEF,WAAK,CAAL;AACEiC,QAAAA,SAAS;AAET;;AACF,WAAK,CAAL;AACErD,QAAAA,QAAQ,CAACkH,OAAT,CAAiBC,IAAjB,CAAsB,IAAtB,EAA2B,WAA3B,EAAuC,IAAvC,EAA4C,IAA5C,EACI,YAAI;AACF3C,UAAAA,WAAW;AACZ,SAHL,EAKI,YAAI,CAAE,CALV;AAMA;AAhDJ;AAmDD,GApDD;;AAsDA,SACE;AAAK,IAAA,KAAK,EAAE;AAAC4C,MAAAA,OAAO,EAAE;AAAV,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,cAAD;AAAgB,IAAA,QAAQ,EAAE,OAA1B;AAAmC,IAAA,OAAO,EAAE,CAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAK,IAAA,KAAK,EAAE;AAACC,MAAAA,aAAa,EAAE;AAAhB,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,MAAC,UAAD;AACE,IAAA,QAAQ,MADV;AAEE,IAAA,aAAa,EAAE1G,OAFjB;AAGE,IAAA,qBAAqB,EAAE,+BAACA,OAAD,EAAa;AAClC,UAAGA,OAAH,EAAW;AACTE,QAAAA,MAAM,CAAC+C,IAAP,0CAA8CjD,OAA9C,kBAA6DmB,WAA7D;AACD,OAFD,MAEK;AACHjB,QAAAA,MAAM,CAAC+C,IAAP;AACD;AACF,KATH;AAUE,IAAA,gBAAgB,EAAEhC,UAVpB;AAWE,IAAA,oBAAoB,EAAE,8BAAChB,MAAD,EAAY;AAChCmB,MAAAA,cAAc,CAACnB,MAAD,CAAd;AACD,KAbH;AAcE,IAAA,WAAW,EAAEkB,WAdf;AAeE,IAAA,KAAK,EAAEvB,KAfT;AAgBE,IAAA,OAAO,EAAE,CAAC,QAAD,EAAU,QAAV,EAAoB,MAApB,EAA4B,MAA5B,EAAoC,MAApC,EAA4C,IAA5C,CAhBX;AAiBE,IAAA,cAAc,EAAEyG,mBAjBlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAqBE,MAAC,UAAD;AACE,IAAA,QAAQ,MADV;AAEE,IAAA,SAAS,MAFX;AAGE,IAAA,UAAU,GACRnH,YADQ,4BAEL0B,MAFK,EAHZ;AAOE,IAAA,GAAG,EAAEH,QAPP,CAQE;AARF;AASE,IAAA,MAAM,EAAE,gBAACkG,CAAD,EAAO;AACb,UAAIC,GAAa,GAAG7F,UAApB;AACA4F,MAAAA,CAAC,CAAC9E,GAAF,CAAM,UAAAC,CAAC,EAAI;AACT,YAAGA,CAAC,CAAC+E,QAAL,EAAeD,GAAG,CAACE,GAAJ,CAAQhF,CAAC,CAACtB,EAAV;AAChB,OAFD;AAGAQ,MAAAA,aAAa,CAAC4F,GAAD,CAAb;AACAlG,MAAAA,WAAW,CAACiG,CAAD,CAAX;AACD,KAhBH;AAiBE,IAAA,UAAU,EAAE5F,UAjBd,CAkBE;AAlBF;AAmBE,IAAA,aAAa,EAAEC,aAnBjB;AAoBE,IAAA,MAAM,EAAEP,QAAQ,CAACsB,MAAT,GAAkB,EAAlB,IAAwB,KAAG,EAAH,GAAM,EAA9B,GAAmC,KAAG,EAAH,GAAM,EAAzC,GAA8CtB,QAAQ,CAACsB,MAAT,GAAkB,EAAlB,GAAuB,EApB/E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IArBF,EA2CE,MAAC,mBAAD;AACE,IAAA,WAAW,EAAET,QAAQ,CAACvB,IADxB;AAEE,IAAA,SAAS,EAAEuB,QAAQ,CAACD,KAFtB;AAGE,IAAA,OAAO,EAAE,iBAACtB,IAAD,EAAU;AACjB,UAAGC,OAAH,EAAW;AACTE,QAAAA,MAAM,CAAC+C,IAAP,gCAAoClD,IAApC,sBAAoDC,OAApD,kBAAmEC,MAAnE;AACD,OAFD,MAEK;AACHC,QAAAA,MAAM,CAAC+C,IAAP,gCAAoClD,IAApC;AACD;AACF,KATH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA3CF,CAFF,EAyDE,MAAC,kBAAD;AACE,IAAA,MAAM,EAAEI,aADV;AAEE,IAAA,MAAM,EAAES,MAFV;AAGE,IAAA,QAAQ,EAAEH,QAHZ;AAIE,IAAA,QAAQ,4BAJV;AAKE,IAAA,SAAS,4BALX;AAME,IAAA,UAAU,EAAEM,UANd;AAOE,IAAA,GAAG,EAAE,YAPP;AAQE,IAAA,SAAS,EAAEX,gBARb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAzDF,EAmEE,MAAC,gBAAD;AACI,IAAA,MAAM,EAAEC,eADZ;AAEI,IAAA,SAAS,EAAEC,kBAFf;AAGI,IAAA,GAAG,EAAE,YAHT;AAII,IAAA,gBAAgB,EAAEyE,gBAJtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAnEF,CADF;AA4ED,CArdD;;GAAMjF,c;UACWR,S;;;KADXQ,c;AAieN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAeA,cAAf","sourcesContent":["import React, {useEffect, useState} from 'react'\n// import ExcelTable from '../../../../component/Excel/ExcelTable'\nimport {ExcelTable} from 'shared'\nimport MenuNavigation from '../../../../component/MenuNav/MenuNavigation'\nimport ProfileHeader from '../../../../component/Profile/ProfileHeader'\nimport PageHeader from '../../../../component/Header/Header'\n// @ts-ignore\nimport {SelectColumn} from 'react-data-grid'\nimport {IExcelHeaderType, IItemMenuType} from '../../../../common/@types/type'\nimport {RequestMethod} from '../../../../common/RequestFunctions'\nimport {columnlist} from \"../../../../common/columnInit\";\nimport Notiflix from \"notiflix\";\nimport {useRouter} from 'next/router'\nimport {MAX_VALUE} from '../../../../common/configset'\nimport DropDownEditor from '../../../../component/Dropdown/ExcelBasicDropdown'\nimport TextEditor from '../../../../component/InputBox/ExcelBasicInputBox'\nimport {excelDownload} from '../../../../common/excelDownloadFunction'\nimport {loadAll} from 'react-cookies'\nimport {useDispatch, useSelector} from \"react-redux\";\nimport rootReducer, {RootState} from \"../../../../reducer\";\nimport PaginationComponent from '../../../../component/Pagination/PaginationComponent'\nimport {NextPageContext} from 'next'\nimport ExcelDownloadModal from '../../../../component/Modal/ExcelDownloadMoadal'\nimport ExcelUploadModal from \"../../../../component/Modal/ExcelUploadModal\";\n\ninterface IProps {\n  children?: any\n  page?: number\n  keyword?: string\n  option?: number\n}\n\nconst title = '유저 관리'\nconst optList = ['사용자명', '이메일', '직책명', '전화번호', '권한명']\n\nconst BasicContainer = ({page, keyword, option}: IProps) => {\n  const router = useRouter()\n\n  const [excelDownOpen, setExcelDownOpen] = useState<boolean>(false)\n  const [excelUploadOpen, setExcelUploadOpen] = useState<boolean>(false);\n\n  const [basicRow, setBasicRow] = useState<Array<any>>([{\n    name: \"\", id: \"\"\n  }])\n  const [column, setColumn] = useState<Array<IExcelHeaderType>>(columnlist.member)\n  const [selectList, setSelectList] = useState<Set<any>>(new Set())\n  const [optionList, setOptionList] = useState<string[]>(optList)\n  const [optionIndex, setOptionIndex] = useState<number>(0)\n\n  const [pageInfo, setPageInfo] = useState<{page: number, total: number}>({\n    page: 1,\n    total: 1\n  })\n\n  useEffect(() => {\n    if(keyword){\n      SearchBasic(keyword, option, page)\n    }else{\n      LoadBasic(page).then(() => {})\n    }\n  }, [page, keyword, option])\n\n  const loadAllSelectItems = async (column: IExcelHeaderType[]) => {\n    let tmpColumn = column.map(async (v: any) => {\n      if(v.selectList && v.selectList.length === 0){\n        const res = await RequestMethod('get', `${v.key}All`, )\n\n        return {\n          ...v,\n          selectList: [...res.results.map((value: any) => {\n            return {\n              ...value,\n              pk: value.ca_id\n            }\n          })]\n        }\n      }else{\n        if(v.selectList){\n          return {\n            ...v,\n            pk: v.unit_id\n          }\n        }else{\n          return v\n        }\n      }\n    })\n\n    Promise.all(tmpColumn).then(res => {\n      setColumn([...res.map(v=> {\n        return {\n          ...v,\n          name: v.moddable ? v.name+'(필수)' : v.name\n        }\n      })])\n    })\n  }\n\n  const SaveBasic = async () => {\n    let res = await RequestMethod('post', `memberSave`,\n    {\n      members: basicRow.map((row, i) => {\n        if(selectList.has(row.id)){\n          let additional:any[] = []\n          column.map((v) => {\n            if(v.type === 'additional'){\n              additional.push(v)\n            }\n          })\n\n          let selectData: any = {}\n\n          return {\n            ...row,\n            ...selectData,\n            id: row.tmpId,\n            authority: row.authorityPK,\n            additional: [\n              ...additional.map(v => {\n                if(row[v.name]) {\n                  return {\n                    id: v.id,\n                    title: v.name,\n                    value: row[v.name],\n                    unit: v.unit\n                  }\n                }\n              }).filter((v) => v)\n            ]\n          }\n\n        }\n      }).filter((v) => v)\n    })\n\n    if(res){\n      if(res.status === 200){\n        Notiflix.Report.success('저장되었습니다.','','확인');\n        if(keyword){\n          SearchBasic(keyword, option, page).then(() => {\n            Notiflix.Loading.remove()\n          })\n        }else{\n          LoadBasic(page).then(() => {\n            Notiflix.Loading.remove()\n          })\n        }\n      }\n    }\n  }\n\n  const DeleteBasic = async () => {\n\n      const res = await RequestMethod('delete', `memberDelete`,\n        {\n          members: basicRow.map((row, i) => {\n            if(selectList.has(row.id)){\n\n              return row.tmpId\n            }\n          }).filter((v) => v)\n        })\n\n      if(res) {\n        if(res.status === 200){\n          Notiflix.Report.success('삭제되었습니다.','','확인');\n          if(keyword){\n            SearchBasic(keyword, option, page).then(() => {\n              Notiflix.Loading.remove()\n            })\n          }else{\n            LoadBasic(page).then(() => {\n              Notiflix.Loading.remove()\n            })\n          }\n        }\n      }\n\n  }\n\n  const LoadBasic = async (page?: number) => {\n    const res = await RequestMethod('get', `memberList`,{\n      path: {\n        page: (page || page !== 0) ? page : 1,\n        renderItem: 18,\n      }\n    })\n\n    if(res && res.status === 200){\n      if(res.results.totalPages < page){\n        LoadBasic(page - 1)\n      }else{\n        setPageInfo({\n          ...pageInfo,\n          page: res.results.page,\n          total: res.results.totalPages\n        })\n        cleanUpData(res)\n      }\n    }else if (res.state === 401) {\n      Notiflix.Report.failure('불러올 수 없습니다.', '권한이 없습니다.', '확인', () => {\n        router.back()\n      })\n    }\n  }\n\n  const SearchBasic = async (keyword: any, option: number, isPaging?: number) => {\n    if(!isPaging){\n      setOptionIndex(option)\n    }\n    const res = await RequestMethod('get', `memberSearch`,{\n      path: {\n        page: isPaging ?? 1,\n        renderItem: 18,\n      },\n      params: {\n        keyword: keyword ?? '',\n        opt: option ?? 0\n      }\n    })\n\n    if(res && res.status === 200){\n      setPageInfo({\n        ...pageInfo,\n        page: res.results.page,\n        total: res.results.totalPages\n      })\n      cleanUpData(res)\n    }\n  }\n\n  const changeRow = (row: any) => {\n    let tmpData = {}\n\n    if(row.additional && row.additional.length) {\n      row.additional.map(v => {\n        tmpData = {\n          ...tmpData,\n          [v.key]: v.value\n        }\n      })\n    }\n\n    return {\n      user_id: row.user_id,\n      name: row.name,\n      appointment: row.appointment,\n      telephone: row.telephone,\n      email: row.email,\n      authority: row.authority.name,\n      authorityPK: row.authority.ca_id,\n      tmpId: row.id,\n      password: null,\n      ...tmpData\n    }\n  }\n\n  const cleanUpBasicData = (res:any) => {\n    let tmpRow = res.data.results.info_list;\n\n    let tmpBasicRow = tmpRow.map((row: any, index: number) => {\n      let realTableData: any = changeRow(row)\n      let appendAdditional: any = {}\n\n      row.additional && row.additional.map((v: any) => {\n        appendAdditional = {\n          ...appendAdditional,\n          [v.title]: v.value\n        }\n      })\n\n      const random_id = Math.random()*1000\n\n      return {\n        ...row,\n        ...realTableData,\n        ...appendAdditional,\n        id: `process_${random_id}`,\n      }\n    })\n    setBasicRow([...tmpBasicRow])\n  }\n\n  const cleanUpData = (res: any) => {\n    let tmpColumn = columnlist.member\n    let tmpRow = []\n    tmpColumn = tmpColumn.map((column: any) => {\n      let menuData: object | undefined;\n      res.results.menus && res.results.menus.map((menu: any) => {\n        if(menu.colName === column.key){\n          menuData = {\n            id: menu.id,\n            name: menu.title,\n            width: menu.width,\n            tab:menu.tab,\n            unit:menu.unit,\n            moddable: !menu.moddable\n          }\n        } else if(menu.colName === 'id' && column.key === 'tmpId'){\n          menuData = {\n            id: menu.id,\n            name: menu.title,\n            width: menu.width,\n            tab:menu.tab,\n            unit:menu.unit,\n            moddable: !menu.moddable\n          }\n        }\n      })\n\n      if(menuData){\n        return {\n          ...column,\n          ...menuData\n        }\n      }\n    }).filter((v:any) => v)\n\n    let additionalMenus = res.results.menus ? res.results.menus.map((menu:any) => {\n      if(menu.colName === null){\n        return {\n          id: menu.id,\n          name: menu.title,\n          width: menu.width,\n          key: menu.title,\n          editor: TextEditor,\n          type: 'additional',\n          unit: menu.unit\n        }\n      }\n    }).filter((v: any) => v) : []\n    tmpRow = res.results.info_list\n\n    loadAllSelectItems([...tmpColumn, ...additionalMenus])\n\n    let additionalData: any[] = []\n\n    additionalMenus.map((v: any) => {\n      if(v.type === 'additional'){\n        additionalData.push(v.key)\n      }\n    })\n\n    let tmpBasicRow = tmpRow.map((row: any, index: number) => {\n      let realTableData: any = changeRow(row)\n      let appendAdditional: any = {}\n\n      row.additional && row.additional.map((v: any) => {\n        appendAdditional = {\n          ...appendAdditional,\n          [v.title]: v.value\n        }\n      })\n\n      const random_id = Math.random()*1000\n\n      return {\n        ...row,\n        ...realTableData,\n        ...appendAdditional,\n        id: `process_${random_id}`,\n      }\n    })\n    setBasicRow([...tmpBasicRow])\n  }\n\n  const downloadExcel = () => {\n    let tmpSelectList: boolean[] = []\n    basicRow.map(row => {\n      tmpSelectList.push(selectList.has(row.id))\n    })\n    excelDownload(column, basicRow, `process`, 'process', tmpSelectList)\n  }\n\n  const onClickHeaderButton = (index: number) => {\n    switch(index){\n      case 0 :\n        setExcelUploadOpen(true)\n        break;\n      case 1:\n        setExcelDownOpen(true)\n        break;\n      case 2:\n          router.push(`/mes/item/manage/member`)\n        break;\n      case 3:\n        let items = {}\n\n        column.map((value) => {\n          if(value.selectList && value.selectList.length){\n            items = {\n              ...value.selectList[0],\n              [value.key] : value.selectList[0].name,\n              [value.key+'PK'] : value.selectList[0].ca_id,//여기 봐야됨!\n              ...items,\n            }\n          }\n        })\n\n        const random_id = Math.random()*1000\n\n        setBasicRow([\n          {\n            ...items,\n            id: `member_${random_id}`,\n            name: null,\n            additional: [],\n          },\n          ...basicRow\n        ])\n        break;\n\n      case 4:\n        SaveBasic()\n\n        break;\n      case 5:\n        Notiflix.Confirm.show(\"경고\",\"삭제하시겠습니까?\",\"확인\",\"취소\",\n            ()=>{\n              DeleteBasic()\n            }\n            ,\n            ()=>{});\n        break;\n\n    }\n  }\n\n  return (\n    <div style={{display: 'flex', }}>\n      <MenuNavigation pageType={'BASIC'} subType={0}/>\n      <div style={{paddingBottom: 40}}>\n        <ProfileHeader/>\n        <PageHeader\n          isSearch\n          searchKeyword={keyword}\n          onChangeSearchKeyword={(keyword) => {\n            if(keyword){\n              router.push(`/mes/basic/user?page=1&keyword=${keyword}&opt=${optionIndex}`)\n            }else{\n              router.push(`/mes/basic/user?page=1&keyword=`)\n            }\n          }}\n          searchOptionList={optionList}\n          onChangeSearchOption={(option) => {\n            setOptionIndex(option)\n          }}\n          optionIndex={optionIndex}\n          title={title}\n          buttons={[\"엑셀로 등록\",'엑셀로 받기', '항목관리', '행 추가', '저장하기', '삭제']}\n          buttonsOnclick={onClickHeaderButton}\n        />\n        <ExcelTable\n          editable\n          resizable\n          headerList={[\n            SelectColumn,\n            ...column\n          ]}\n          row={basicRow}\n          // setRow={setBasicRow}\n          setRow={(e) => {\n            let tmp: Set<any> = selectList\n            e.map(v => {\n              if(v.isChange) tmp.add(v.id)\n            })\n            setSelectList(tmp)\n            setBasicRow(e)\n          }}\n          selectList={selectList}\n          //@ts-ignore\n          setSelectList={setSelectList}\n          height={basicRow.length * 40 >= 40*18+40 ? 40*19+16 : basicRow.length * 40 + 56}\n        />\n        <PaginationComponent\n          currentPage={pageInfo.page}\n          totalPage={pageInfo.total}\n          setPage={(page) => {\n            if(keyword){\n              router.push(`/mes/basic/user?page=${page}&keyword=${keyword}&opt=${option}`)\n            }else{\n              router.push(`/mes/basic/user?page=${page}`)\n            }\n          }}\n        />\n      </div>\n      <ExcelDownloadModal\n        isOpen={excelDownOpen}\n        column={column}\n        basicRow={basicRow}\n        filename={`유저관리`}\n        sheetname={`유저관리`}\n        selectList={selectList}\n        tab={'ROLE_HR_01'}\n        setIsOpen={setExcelDownOpen}\n      />\n      <ExcelUploadModal\n          isOpen={excelUploadOpen}\n          setIsOpen={setExcelUploadOpen}\n          tab={'ROLE_HR_01'}\n          cleanUpBasicData={cleanUpBasicData}\n      />\n    </div>\n  );\n}\n\nexport const getServerSideProps = (ctx: NextPageContext) => {\n  return {\n    props: {\n      page: ctx.query.page ?? 1,\n      keyword: ctx.query.keyword ?? \"\",\n      option: ctx.query.opt ?? 0,\n    }\n  }\n}\n\n// BasicContainer.getInitialProps = async ({ query }) => {\n//   let { page, keyword, opt } = query\n//   if (typeof page === 'string')\n//     page = parseInt(page);\n//   if (typeof opt === 'string')\n//     opt = parseInt(opt);\n//   return { page, keyword, option: opt };\n// }\n\nexport default BasicContainer;\n"]},"metadata":{},"sourceType":"module"}