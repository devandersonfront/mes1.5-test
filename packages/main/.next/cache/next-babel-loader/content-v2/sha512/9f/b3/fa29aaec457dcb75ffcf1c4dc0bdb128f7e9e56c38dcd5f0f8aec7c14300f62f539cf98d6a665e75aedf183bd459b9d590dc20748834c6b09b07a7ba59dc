{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/user/Desktop/sizl/mono_pop/node_modules/next/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport _regeneratorRuntime from \"/Users/user/Desktop/sizl/mono_pop/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _toConsumableArray from \"/Users/user/Desktop/sizl/mono_pop/node_modules/next/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"/Users/user/Desktop/sizl/mono_pop/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _asyncToGenerator from \"/Users/user/Desktop/sizl/mono_pop/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/Users/user/Desktop/sizl/mono_pop/packages/basic/src/container/BasicModel.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    height:32px;\\n    color:white;\\n    border-radius:6px;\\n    font-size:15px;\\n    font-weight:bold;\\n    background:#717C90;\\n    padding: 0 20px;\\n    cursor: pointer;\\n    display:flex;\\n    margin-left: 16px;\\n    justify-content:center;\\n    align-items:center;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useState } from 'react';\nimport { ExcelTable, Header as PageHeader, RequestMethod, columnlist, MAX_VALUE, TextEditor, excelDownload, PaginationComponent } from 'shared'; // @ts-ignore\n\nimport { SelectColumn } from 'react-data-grid';\nimport Notiflix from \"notiflix\";\nimport { useRouter } from 'next/router';\nimport styled from 'styled-components';\nvar title = '권한 관리';\n\nvar BasicModel = function BasicModel(_ref) {\n  _s();\n\n  var page = _ref.page,\n      keyword = _ref.keyword,\n      option = _ref.option;\n  var router = useRouter();\n\n  var _useState = useState(false),\n      excelOpen = _useState[0],\n      setExcelOpen = _useState[1];\n\n  var _useState2 = useState(false),\n      excelUploadOpen = _useState2[0],\n      setExcelUploadOpen = _useState2[1];\n\n  var _useState3 = useState([{\n    name: \"\",\n    id: \"\"\n  }]),\n      basicRow = _useState3[0],\n      setBasicRow = _useState3[1];\n\n  var _useState4 = useState(columnlist[\"model\"]),\n      column = _useState4[0],\n      setColumn = _useState4[1];\n\n  var _useState5 = useState(new Set()),\n      selectList = _useState5[0],\n      setSelectList = _useState5[1];\n\n  var _useState6 = useState(['고객사명', '사업자 번호', '모델명']),\n      optionList = _useState6[0],\n      setOptionList = _useState6[1];\n\n  var _useState7 = useState(0),\n      optionIndex = _useState7[0],\n      setOptionIndex = _useState7[1];\n\n  var _useState8 = useState({\n    page: 1,\n    total: 1\n  }),\n      pageInfo = _useState8[0],\n      setPageInfo = _useState8[1];\n\n  useEffect(function () {\n    if (keyword) {\n      SearchBasic(keyword, option, page).then(function () {\n        Notiflix.Loading.remove();\n      });\n    } else {\n      LoadBasic(page).then(function () {\n        Notiflix.Loading.remove();\n      });\n    }\n  }, [page, keyword, option]);\n\n  var loadAllSelectItems = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(column) {\n      var tmpColumn;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              tmpColumn = column.map( /*#__PURE__*/function () {\n                var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(v) {\n                  var tmpKey, res, pk;\n                  return _regeneratorRuntime.wrap(function _callee$(_context) {\n                    while (1) {\n                      switch (_context.prev = _context.next) {\n                        case 0:\n                          if (!(v.selectList && v.selectList.length === 0)) {\n                            _context.next = 10;\n                            break;\n                          }\n\n                          tmpKey = v.key;\n                          _context.next = 4;\n                          return RequestMethod('get', \"\".concat(tmpKey, \"List\"), {\n                            path: {\n                              page: 1,\n                              renderItem: MAX_VALUE\n                            }\n                          });\n\n                        case 4:\n                          res = _context.sent;\n                          pk = \"\";\n                          res.results.info_list && res.results.info_list.length && Object.keys(res.results.info_list[0]).map(function (v) {\n                            if (v.indexOf('_id') !== -1) {\n                              pk = v;\n                            }\n                          });\n                          return _context.abrupt(\"return\", _objectSpread(_objectSpread({}, v), {}, {\n                            selectList: _toConsumableArray(res.results.info_list.map(function (value) {\n                              return _objectSpread(_objectSpread({}, value), {}, {\n                                name: value.name,\n                                // name: tmpKey === 'model' ? value.model : value.name,\n                                pk: value[pk]\n                              });\n                            }))\n                          }));\n\n                        case 10:\n                          if (!v.selectList) {\n                            _context.next = 14;\n                            break;\n                          }\n\n                          return _context.abrupt(\"return\", _objectSpread(_objectSpread({}, v), {}, {\n                            pk: v.unit_id\n                          }));\n\n                        case 14:\n                          return _context.abrupt(\"return\", v);\n\n                        case 15:\n                        case \"end\":\n                          return _context.stop();\n                      }\n                    }\n                  }, _callee);\n                }));\n\n                return function (_x2) {\n                  return _ref3.apply(this, arguments);\n                };\n              }()); // if(type !== 'productprocess'){\n\n              Promise.all(tmpColumn).then(function (res) {\n                setColumn(_toConsumableArray(res.map(function (v) {\n                  return _objectSpread(_objectSpread({}, v), {}, {\n                    name: v.moddable ? v.name + '(필수)' : v.name\n                  });\n                })));\n              }); // }\n\n            case 2:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function loadAllSelectItems(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var SaveBasic = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return RequestMethod('post', \"modelSave\", _defineProperty({}, 'models', basicRow.map(function (row, i) {\n                if (selectList.has(row.id)) {\n                  var selectKey = [];\n                  var additional = [];\n                  column.map(function (v) {\n                    if (v.selectList) {\n                      selectKey.push(v.key);\n                    }\n\n                    if (v.type === 'additional') {\n                      additional.push(v);\n                    }\n                  });\n                  var selectData = {};\n                  Object.keys(row).map(function (v) {\n                    if (v.indexOf('PK') !== -1) {\n                      selectData = _objectSpread(_objectSpread({}, selectData), {}, _defineProperty({}, v.split('PK')[0], row[v]));\n                    }\n\n                    if (v === 'unitWeight') {\n                      selectData = _objectSpread(_objectSpread({}, selectData), {}, {\n                        unitWeight: Number(row['unitWeight'])\n                      });\n                    }\n\n                    if (v === 'tmpId') {\n                      selectData = _objectSpread(_objectSpread({}, selectData), {}, {\n                        id: row['tmpId']\n                      });\n                    }\n                  });\n                  return _objectSpread(_objectSpread(_objectSpread({}, row), selectData), {}, {\n                    additional: _toConsumableArray(additional.map(function (v) {\n                      if (row[v.name]) {\n                        return {\n                          id: v.id,\n                          title: v.name,\n                          value: row[v.name],\n                          unit: v.unit\n                        };\n                      }\n                    }).filter(function (v) {\n                      return v;\n                    }))\n                  });\n                }\n              }).filter(function (v) {\n                return v;\n              })));\n\n            case 2:\n              res = _context3.sent;\n\n              if (res) {\n                if (res.status === 200) {\n                  Notiflix.Report.success('저장되었습니다.', '', '확인');\n\n                  if (keyword) {\n                    SearchBasic(keyword, option, page).then(function () {\n                      Notiflix.Loading.remove();\n                    });\n                  } else {\n                    LoadBasic(page).then(function () {\n                      Notiflix.Loading.remove();\n                    });\n                  }\n                }\n              }\n\n            case 4:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function SaveBasic() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  var DeleteBasic = /*#__PURE__*/function () {\n    var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.next = 2;\n              return RequestMethod('delete', \"modelDelete\", _defineProperty({}, 'models', basicRow.map(function (row, i) {\n                if (selectList.has(row.id)) {\n                  var pk = \"\";\n                  Object.keys(row).map(function (v) {\n                    if (v.indexOf(\"_id\") !== -1) {\n                      pk = v;\n                    }\n                  });\n                  pk = 'cm_id';\n                  return row[pk];\n                }\n              }).filter(function (v) {\n                return v;\n              })));\n\n            case 2:\n              res = _context4.sent;\n\n              if (res) {\n                if (res.status === 200) {\n                  Notiflix.Report.success('삭제 성공!', '', '확인', function () {\n                    if (Number(page) === 1) {\n                      LoadBasic(1).then(function () {\n                        Notiflix.Loading.remove();\n                      });\n                    } else {\n                      if (keyword) {\n                        router.push(\"/mes/basic/customer/model?page=1&keyword=\".concat(keyword, \"&opt=\").concat(option));\n                      } else {\n                        router.push(\"/mes/basic/customer/model?page=1\");\n                      }\n                    }\n                  });\n                }\n              }\n\n            case 4:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    return function DeleteBasic() {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n\n  var LoadBasic = /*#__PURE__*/function () {\n    var _ref6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(page) {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              Notiflix.Loading.circle();\n              _context5.next = 3;\n              return RequestMethod('get', \"modelList\", {\n                path: {\n                  page: page || page !== 0 ? page : 1,\n                  renderItem: 19\n                }\n              });\n\n            case 3:\n              res = _context5.sent;\n\n              if (res && res.status === 200) {\n                if (res.results.totalPages < page) {\n                  LoadBasic(page - 1).then(function () {\n                    Notiflix.Loading.remove();\n                  });\n                } else {\n                  setPageInfo(_objectSpread(_objectSpread({}, pageInfo), {}, {\n                    page: res.results.page,\n                    total: res.results.totalPages\n                  }));\n                  cleanUpData(res);\n                }\n              } else if (res.state === 401) {\n                Notiflix.Report.failure('불러올 수 없습니다.', '권한이 없습니다.', '확인', function () {\n                  router.back();\n                });\n              }\n\n            case 5:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5);\n    }));\n\n    return function LoadBasic(_x3) {\n      return _ref6.apply(this, arguments);\n    };\n  }();\n\n  var SearchBasic = /*#__PURE__*/function () {\n    var _ref7 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(keyword, option, isPaging) {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              Notiflix.Loading.circle();\n\n              if (!isPaging) {\n                setOptionIndex(option);\n              }\n\n              _context6.next = 4;\n              return RequestMethod('get', \"modelSearch\", {\n                path: {\n                  page: isPaging !== null && isPaging !== void 0 ? isPaging : 1,\n                  renderItem: 18\n                },\n                params: {\n                  keyword: keyword !== null && keyword !== void 0 ? keyword : '',\n                  opt: option !== null && option !== void 0 ? option : 0\n                }\n              });\n\n            case 4:\n              res = _context6.sent;\n\n              if (res && res.status === 200) {\n                setPageInfo(_objectSpread(_objectSpread({}, pageInfo), {}, {\n                  page: res.results.page,\n                  total: res.results.totalPages\n                }));\n                cleanUpData(res);\n              }\n\n            case 6:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6);\n    }));\n\n    return function SearchBasic(_x4, _x5, _x6) {\n      return _ref7.apply(this, arguments);\n    };\n  }();\n\n  var cleanUpBasicData = function cleanUpBasicData(res) {\n    var tmpRow = res.data.results.info_list;\n    var tmpBasicRow = tmpRow.map(function (row, index) {\n      var appendAdditional = {};\n      row.additional && row.additional.map(function (v) {\n        appendAdditional = _objectSpread(_objectSpread({}, appendAdditional), {}, _defineProperty({}, v.title, v.value));\n      });\n      var random_id = Math.random() * 1000;\n      return _objectSpread(_objectSpread({\n        cm_id: row.cm_id,\n        customer: row.customer.name,\n        customer_id: row.customer.name,\n        customer_idPK: row.customer.customer_id,\n        customerPK: row.customer.customer_id,\n        model: row.model,\n        crn: row.customer.crn\n      }, appendAdditional), {}, {\n        id: \"model_\".concat(random_id)\n      });\n    });\n    setBasicRow(_toConsumableArray(tmpBasicRow));\n  };\n\n  var cleanUpData = function cleanUpData(res) {\n    var tmpColumn = columnlist[\"model\"];\n    var tmpRow = [];\n    tmpColumn = tmpColumn.map(function (column) {\n      var menuData;\n      res.results.menus && res.results.menus.map(function (menu) {\n        if (menu.colName === column.key) {\n          menuData = {\n            id: menu.id,\n            name: menu.title,\n            width: menu.width,\n            tab: menu.tab,\n            unit: menu.unit,\n            moddable: !menu.moddable\n          };\n        } else if (menu.colName === 'id' && column.key === 'tmpId') {\n          menuData = {\n            id: menu.id,\n            name: menu.title,\n            width: menu.width,\n            tab: menu.tab,\n            unit: menu.unit,\n            moddable: !menu.moddable\n          };\n        }\n      });\n\n      if (menuData) {\n        return _objectSpread(_objectSpread({}, column), menuData);\n      }\n    }).filter(function (v) {\n      return v;\n    });\n    var additionalMenus = res.results.menus ? res.results.menus.map(function (menu) {\n      if (menu.colName === null) {\n        return {\n          id: menu.id,\n          name: menu.title,\n          width: menu.width,\n          key: menu.title,\n          editor: TextEditor,\n          type: 'additional',\n          unit: menu.unit\n        };\n      }\n    }).filter(function (v) {\n      return v;\n    }) : [];\n    tmpRow = res.results.info_list;\n    loadAllSelectItems([].concat(_toConsumableArray(tmpColumn), _toConsumableArray(additionalMenus)));\n    var selectKey = \"\";\n    var additionalData = [];\n    tmpColumn.map(function (v) {\n      if (v.selectList) {\n        selectKey = v.key;\n      }\n    });\n    additionalMenus.map(function (v) {\n      if (v.type === 'additional') {\n        additionalData.push(v.key);\n      }\n    });\n    var pk = \"\";\n    Object.keys(tmpRow).map(function (v) {\n      if (v.indexOf('_id') !== -1) {\n        pk = v;\n      }\n    });\n    var tmpBasicRow = tmpRow.map(function (row, index) {\n      var appendAdditional = {};\n      row.additional && row.additional.map(function (v) {\n        appendAdditional = _objectSpread(_objectSpread({}, appendAdditional), {}, _defineProperty({}, v.title, v.value));\n      });\n      var random_id = Math.random() * 1000;\n      return _objectSpread(_objectSpread({\n        cm_id: row.cm_id,\n        customer: row.customer.name,\n        customer_id: row.customer.name,\n        customer_idPK: row.customer.customer_id,\n        customerPK: row.customer.customer_id,\n        model: row.model,\n        crn: row.customer.crn\n      }, appendAdditional), {}, {\n        id: \"model_\".concat(random_id)\n      });\n    });\n    setBasicRow(_toConsumableArray(tmpBasicRow));\n  };\n\n  var downloadExcel = function downloadExcel() {\n    var tmpSelectList = [];\n    basicRow.map(function (row) {\n      tmpSelectList.push(selectList.has(row.id));\n    });\n    excelDownload(column, basicRow, \"model\", \"model\", tmpSelectList);\n  };\n\n  var onClickHeaderButton = function onClickHeaderButton(index) {\n    switch (index) {\n      case 0:\n        setExcelUploadOpen(true);\n        break;\n\n      case 1:\n        setExcelOpen(true);\n        break;\n\n      case 2:\n        router.push(\"/mes/item/manage/model\");\n        break;\n\n      case 3:\n        var items = {};\n        column.map(function (value) {\n          if (value.selectList && value.selectList.length) {\n            if (value.key === 'customer') {\n              var _objectSpread5;\n\n              items = _objectSpread(_objectSpread({}, value.selectList[0]), {}, (_objectSpread5 = {}, _defineProperty(_objectSpread5, value.key, value.selectList[0].name), _defineProperty(_objectSpread5, value.key + 'PK', value.selectList[0].customer_id), _objectSpread5), items);\n            }\n          }\n\n          if (value.key === 'seq') {\n            items = _defineProperty({}, value.key, basicRow.length + 1);\n          }\n\n          if (value.key === 'id') {\n            items = {\n              tmpId: \"\"\n            };\n          }\n        });\n        var random_id = Math.random() * 1000;\n        setBasicRow([_objectSpread(_objectSpread({}, items), {}, {\n          id: \"model_\".concat(random_id),\n          name: null,\n          additional: []\n        })].concat(_toConsumableArray(basicRow)));\n        break;\n\n      case 4:\n        SaveBasic();\n        break;\n\n      case 5:\n        Notiflix.Confirm.show(\"경고\", \"삭제하시겠습니까?\", \"확인\", \"취소\", function () {\n          DeleteBasic();\n        }, function () {});\n        break;\n    }\n  };\n\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 514,\n      columnNumber: 5\n    }\n  }, __jsx(PageHeader, {\n    isSearch: true,\n    searchKeyword: keyword,\n    onChangeSearchKeyword: function onChangeSearchKeyword(keyword) {\n      if (keyword) {\n        router.push(\"/mes/basic/customer/model?page=1&keyword=\".concat(keyword, \"&opt=\").concat(optionIndex));\n      } else {\n        router.push(\"/mes/basic/customer/model?page=1&keyword=\");\n      }\n    },\n    searchOptionList: optionList,\n    onChangeSearchOption: function onChangeSearchOption(option) {\n      setOptionIndex(option);\n    },\n    optionIndex: optionIndex,\n    title: \"고객사 모델 관리\",\n    buttons: ['엑셀로 등록', '엑셀로 받기', '항목관리', '행 추가', '저장하기', '삭제'],\n    buttonsOnclick: onClickHeaderButton,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 515,\n      columnNumber: 7\n    }\n  }), __jsx(ExcelTable, {\n    editable: true,\n    resizable: true,\n    headerList: [SelectColumn].concat(_toConsumableArray(column)),\n    row: basicRow // setRow={setBasicRow}\n    ,\n    setRow: function setRow(e) {\n      var tmp = selectList;\n      e.map(function (v) {\n        if (v.isChange) tmp.add(v.id);\n      });\n      setSelectList(tmp);\n      setBasicRow(e);\n    },\n    selectList: selectList //@ts-ignore\n    ,\n    setSelectList: setSelectList,\n    height: basicRow.length * 40 >= 40 * 18 + 56 ? 40 * 19 : basicRow.length * 40 + 56,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 536,\n      columnNumber: 7\n    }\n  }), __jsx(PaginationComponent, {\n    currentPage: pageInfo.page,\n    totalPage: pageInfo.total,\n    setPage: function setPage(page) {\n      if (keyword) {\n        router.push(\"/mes/basic/customer/model?page=\".concat(page, \"&keyword=\").concat(keyword, \"&opt=\").concat(option));\n      } else {\n        router.push(\"/mes/basic/customer/model?page=\".concat(page));\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 558,\n      columnNumber: 7\n    }\n  }));\n};\n\n_s(BasicModel, \"7McbjJAj6IfjWy95vvxNna36D9c=\", false, function () {\n  return [useRouter];\n});\n\n_c = BasicModel;\nvar HeaderButton = styled.button(_templateObject());\nexport { BasicModel };\n\nvar _c;\n\n$RefreshReg$(_c, \"BasicModel\");","map":{"version":3,"sources":["/Users/user/Desktop/sizl/mono_pop/packages/basic/src/container/BasicModel.tsx"],"names":["React","useEffect","useState","ExcelTable","Header","PageHeader","RequestMethod","columnlist","MAX_VALUE","TextEditor","excelDownload","PaginationComponent","SelectColumn","Notiflix","useRouter","styled","title","BasicModel","page","keyword","option","router","excelOpen","setExcelOpen","excelUploadOpen","setExcelUploadOpen","name","id","basicRow","setBasicRow","column","setColumn","Set","selectList","setSelectList","optionList","setOptionList","optionIndex","setOptionIndex","total","pageInfo","setPageInfo","SearchBasic","then","Loading","remove","LoadBasic","loadAllSelectItems","tmpColumn","map","v","length","tmpKey","key","path","renderItem","res","pk","results","info_list","Object","keys","indexOf","value","unit_id","Promise","all","moddable","SaveBasic","row","i","has","selectKey","additional","push","type","selectData","split","unitWeight","Number","unit","filter","status","Report","success","DeleteBasic","circle","totalPages","cleanUpData","state","failure","back","isPaging","params","opt","cleanUpBasicData","tmpRow","data","tmpBasicRow","index","appendAdditional","random_id","Math","random","cm_id","customer","customer_id","customer_idPK","customerPK","model","crn","menuData","menus","menu","colName","width","tab","additionalMenus","editor","additionalData","downloadExcel","tmpSelectList","onClickHeaderButton","items","tmpId","Confirm","show","e","tmp","isChange","add","HeaderButton","button"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react'\nimport {\n  ExcelTable,\n  Header as PageHeader,\n  RequestMethod,\n  columnlist,\n  MAX_VALUE,\n  DropDownEditor,\n  TextEditor,\n  excelDownload,\n  PaginationComponent,\n  ExcelDownloadModal,\n  IExcelHeaderType, IItemMenuType\n} from 'shared'\n// @ts-ignore\nimport {SelectColumn} from 'react-data-grid'\nimport Notiflix from \"notiflix\";\nimport {useRouter} from 'next/router'\nimport {loadAll} from 'react-cookies'\nimport {NextPageContext} from 'next'\nimport TreeViewTable from '../../../main/component/TreeView/TreeView'\nimport {IMenu} from '../../../main/common/@types/type'\nimport {AUTHORITY_LIST} from '../../../main/common/configset'\nimport {AxiosResponse} from 'axios'\nimport styled from 'styled-components'\n\nexport interface IProps {\n  children?: any\n  page?: number\n  keyword?: string\n  option?: number\n}\n\nconst title = '권한 관리'\n\nconst BasicModel = ({page, keyword, option}: IProps) => {\n  const router = useRouter()\n\n  const [excelOpen, setExcelOpen] = useState<boolean>(false)\n  const [excelUploadOpen, setExcelUploadOpen] = useState<boolean>(false)\n\n  const [basicRow, setBasicRow] = useState<Array<any>>([{\n    name: \"\", id: \"\"\n  }])\n  const [column, setColumn] = useState<Array<IExcelHeaderType>>(columnlist[\"model\"])\n  const [selectList, setSelectList] = useState<Set<number>>(new Set())\n  const [optionList, setOptionList] = useState<string[]>(['고객사명','사업자 번호', '모델명'])\n  const [optionIndex, setOptionIndex] = useState<number>(0)\n\n  const [pageInfo, setPageInfo] = useState<{page: number, total: number}>({\n    page: 1,\n    total: 1\n  })\n\n  useEffect(() => {\n    if(keyword){\n      SearchBasic(keyword, option, page).then(() => {\n        Notiflix.Loading.remove()\n      })\n    }else{\n      LoadBasic(page).then(() => {\n        Notiflix.Loading.remove()\n      })\n    }\n  }, [page, keyword, option])\n\n  const loadAllSelectItems = async (column: IExcelHeaderType[]) => {\n    let tmpColumn = column.map(async (v: any) => {\n      if(v.selectList && v.selectList.length === 0){\n        let tmpKey = v.key\n        let res: any\n\n        res = await RequestMethod('get', `${tmpKey}List`,{\n          path: {\n            page: 1,\n            renderItem: MAX_VALUE,\n          }\n        })\n\n\n        let pk = \"\";\n\n        res.results.info_list && res.results.info_list.length && Object.keys(res.results.info_list[0]).map((v) => {\n          if(v.indexOf('_id') !== -1){\n            pk = v\n          }\n        })\n\n        return {\n          ...v,\n          selectList: [...res.results.info_list.map((value: any) => {\n            return {\n              ...value,\n              name: value.name,\n              // name: tmpKey === 'model' ? value.model : value.name,\n              pk: value[pk]\n            }\n          })]\n        }\n\n\n      }else{\n        if(v.selectList){\n          return {\n            ...v,\n            pk: v.unit_id\n          }\n        }else{\n          return v\n        }\n      }\n    })\n\n    // if(type !== 'productprocess'){\n    Promise.all(tmpColumn).then(res => {\n      setColumn([...res.map(v=> {\n        return {\n          ...v,\n          name: v.moddable ? v.name+'(필수)' : v.name\n        }\n      })])\n    })\n    // }\n  }\n\n  const SaveBasic = async () => {\n    let res: any\n    res = await RequestMethod('post', `modelSave`,\n      {\n        ['models']: basicRow.map((row, i) => {\n          if(selectList.has(row.id)){\n            let selectKey: string[] = []\n            let additional:any[] = []\n            column.map((v) => {\n              if(v.selectList){\n                selectKey.push(v.key)\n              }\n\n              if(v.type === 'additional'){\n                additional.push(v)\n              }\n            })\n\n            let selectData: any = {}\n\n            Object.keys(row).map(v => {\n              if(v.indexOf('PK') !== -1) {\n                selectData = {\n                  ...selectData,\n                  [v.split('PK')[0]]: row[v]\n                }\n              }\n\n              if(v === 'unitWeight') {\n                selectData = {\n                  ...selectData,\n                  unitWeight: Number(row['unitWeight'])\n                }\n              }\n\n              if(v === 'tmpId') {\n                selectData = {\n                  ...selectData,\n                  id: row['tmpId']\n                }\n              }\n            })\n\n            return {\n              ...row,\n              ...selectData,\n              additional: [\n                ...additional.map(v => {\n                  if(row[v.name]) {\n                    return {\n                      id: v.id,\n                      title: v.name,\n                      value: row[v.name],\n                      unit: v.unit\n                    }\n                  }\n                }).filter((v) => v)\n              ]\n            }\n\n          }\n        }).filter((v) => v)\n      })\n\n\n    if(res){\n      if(res.status === 200){\n        Notiflix.Report.success('저장되었습니다.','','확인');\n        if(keyword){\n          SearchBasic(keyword, option, page).then(() => {\n            Notiflix.Loading.remove()\n          })\n        }else{\n          LoadBasic(page).then(() => {\n            Notiflix.Loading.remove()\n          })\n        }\n      }\n    }\n  }\n\n  const DeleteBasic = async () => {\n    const res = await RequestMethod('delete', `modelDelete`,\n      {\n        ['models']: basicRow.map((row, i) => {\n          if(selectList.has(row.id)){\n            let pk = \"\"\n            Object.keys(row).map((v:string) => {\n              if(v.indexOf(\"_id\") !== -1){\n                pk = v\n              }\n            })\n\n            pk = 'cm_id'\n\n            return row[pk]\n\n          }\n        }).filter((v) => v)\n      })\n\n    if(res) {\n      if(res.status === 200){\n        Notiflix.Report.success('삭제 성공!', '', '확인', () => {\n          if(Number(page) === 1){\n            LoadBasic(1).then(() => {\n              Notiflix.Loading.remove()\n            })\n          }else{\n            if(keyword){\n              router.push(`/mes/basic/customer/model?page=1&keyword=${keyword}&opt=${option}`)\n            }else{\n              router.push(`/mes/basic/customer/model?page=1`)\n            }\n          }\n        })\n      }\n    }\n  }\n\n  const LoadBasic = async (page?: number) => {\n    Notiflix.Loading.circle()\n    const res = await RequestMethod('get', `modelList`,{\n      path: {\n        page: (page || page !== 0) ? page : 1,\n        renderItem: 19,\n      }\n    })\n\n    if(res && res.status === 200){\n      if(res.results.totalPages < page){\n        LoadBasic(page - 1).then(() => {\n          Notiflix.Loading.remove()\n        })\n      }else{\n        setPageInfo({\n          ...pageInfo,\n          page: res.results.page,\n          total: res.results.totalPages\n        })\n        cleanUpData(res)\n      }\n    }else if (res.state === 401) {\n      Notiflix.Report.failure('불러올 수 없습니다.', '권한이 없습니다.', '확인', () => {\n        router.back()\n      })\n    }\n  }\n\n  const SearchBasic = async (keyword: any, option: number, isPaging?: string | string[] | number) => {\n    Notiflix.Loading.circle()\n    if(!isPaging){\n      setOptionIndex(option)\n    }\n\n    const res = await RequestMethod('get', `modelSearch`,{\n      path: {\n        page: isPaging ?? 1,\n        renderItem: 18,\n      },\n      params: {\n        keyword: keyword ?? '',\n        opt: option ?? 0\n      }\n    })\n\n    if(res && res.status === 200){\n      setPageInfo({\n        ...pageInfo,\n        page: res.results.page,\n        total: res.results.totalPages\n      })\n      cleanUpData(res)\n    }\n  }\n  const cleanUpBasicData = (res:any) => {\n    let tmpRow = res.data.results.info_list;\n\n    let tmpBasicRow = tmpRow.map((row: any, index: number) => {\n      let appendAdditional: any = {}\n\n      row.additional && row.additional.map((v: any) => {\n        appendAdditional = {\n          ...appendAdditional,\n          [v.title]: v.value\n\n        }\n      })\n      let random_id = Math.random()*1000;\n      return {\n        cm_id:row.cm_id,\n        customer: row.customer.name,\n        customer_id: row.customer.name,\n        customer_idPK: row.customer.customer_id,\n        customerPK: row.customer.customer_id,\n        model:row.model,\n        crn:row.customer.crn,\n        ...appendAdditional,\n        id: `model_${random_id}`,\n\n      }\n    })\n    setBasicRow([...tmpBasicRow])\n  }\n\n  const cleanUpData = (res: any) => {\n    let tmpColumn = columnlist[\"model\"];\n    let tmpRow = []\n    tmpColumn = tmpColumn.map((column: any) => {\n      let menuData: object | undefined;\n      res.results.menus && res.results.menus.map((menu: any) => {\n        if(menu.colName === column.key){\n          menuData = {\n            id: menu.id,\n            name: menu.title,\n            width: menu.width,\n            tab:menu.tab,\n            unit:menu.unit,\n            moddable: !menu.moddable\n          }\n        } else if(menu.colName === 'id' && column.key === 'tmpId'){\n          menuData = {\n            id: menu.id,\n            name: menu.title,\n            width: menu.width,\n            tab:menu.tab,\n            unit:menu.unit,\n            moddable: !menu.moddable\n          }\n        }\n      })\n\n      if(menuData){\n        return {\n          ...column,\n          ...menuData\n        }\n      }\n    }).filter((v:any) => v)\n\n    let additionalMenus = res.results.menus ? res.results.menus.map((menu:any) => {\n      if(menu.colName === null){\n        return {\n          id: menu.id,\n          name: menu.title,\n          width: menu.width,\n          key: menu.title,\n          editor: TextEditor,\n          type: 'additional',\n          unit: menu.unit\n        }\n      }\n    }).filter((v: any) => v) : []\n\n\n    tmpRow = res.results.info_list\n\n    loadAllSelectItems( [\n      ...tmpColumn,\n      ...additionalMenus\n    ] )\n\n\n    let selectKey = \"\"\n    let additionalData: any[] = []\n    tmpColumn.map((v: any) => {\n      if(v.selectList){\n        selectKey = v.key\n      }\n    })\n\n    additionalMenus.map((v: any) => {\n      if(v.type === 'additional'){\n        additionalData.push(v.key)\n      }\n    })\n\n    let pk = \"\";\n    Object.keys(tmpRow).map((v) => {\n      if(v.indexOf('_id') !== -1){\n        pk = v\n      }\n    })\n\n\n    let tmpBasicRow = tmpRow.map((row: any, index: number) => {\n      let appendAdditional: any = {}\n\n      row.additional && row.additional.map((v: any) => {\n        appendAdditional = {\n          ...appendAdditional,\n          [v.title]: v.value\n\n        }\n      })\n      let random_id = Math.random()*1000;\n      return {\n        cm_id:row.cm_id,\n        customer: row.customer.name,\n        customer_id: row.customer.name,\n        customer_idPK: row.customer.customer_id,\n        customerPK: row.customer.customer_id,\n        model:row.model,\n        crn:row.customer.crn,\n        ...appendAdditional,\n        id: `model_${random_id}`,\n\n      }\n    })\n\n    setBasicRow([...tmpBasicRow])\n  }\n\n  const downloadExcel = () => {\n    let tmpSelectList: boolean[] = []\n    basicRow.map(row => {\n      tmpSelectList.push(selectList.has(row.id))\n    })\n    excelDownload(column, basicRow, `model`, \"model\", tmpSelectList)\n  }\n\n  const onClickHeaderButton = (index: number) => {\n    switch(index){\n      case 0:\n        setExcelUploadOpen(true)\n        break;\n      case 1:\n        setExcelOpen(true)\n        break;\n      case 2:\n        router.push(`/mes/item/manage/model`)\n        break;\n      case 3:\n        let items = {}\n\n        column.map((value) => {\n          if(value.selectList && value.selectList.length){\n            if(value.key === 'customer') {\n              items = {\n                ...value.selectList[0],\n                [value.key] : value.selectList[0].name,\n                [value.key+'PK'] : value.selectList[0].customer_id,//여기 봐야됨!\n                ...items,\n              }\n            }\n\n          }\n\n          if(value.key === 'seq') {\n            items = {\n              [value.key]: basicRow.length+1\n            }\n          }\n\n          if(value.key === 'id') {\n            items = {\n              tmpId: \"\",\n            }\n          }\n\n        })\n        let random_id = Math.random()*1000;\n        setBasicRow([\n          {\n            ...items,\n            id: `model_${random_id}`,\n            name: null,\n            additional: [],\n          },\n          ...basicRow\n        ])\n        break;\n      case 4:\n        SaveBasic()\n        break;\n      case 5:\n        Notiflix.Confirm.show(\"경고\",\"삭제하시겠습니까?\",\"확인\",\"취소\",\n          ()=>{\n            DeleteBasic()\n          } ,\n          ()=>{},\n        )\n        break;\n\n    }\n  }\n\n  return (\n    <div>\n      <PageHeader\n        isSearch\n        searchKeyword={keyword}\n        onChangeSearchKeyword={(keyword) => {\n          if(keyword){\n            router.push(`/mes/basic/customer/model?page=1&keyword=${keyword}&opt=${optionIndex}`)\n          }else{\n            router.push(`/mes/basic/customer/model?page=1&keyword=`)\n          }\n        }}\n        searchOptionList={optionList}\n        onChangeSearchOption={(option) => {\n          setOptionIndex(option)\n        }}\n        optionIndex={optionIndex}\n        title={\"고객사 모델 관리\"}\n        buttons={\n          ['엑셀로 등록','엑셀로 받기', '항목관리', '행 추가', '저장하기', '삭제']\n        }\n        buttonsOnclick={onClickHeaderButton}\n      />\n      <ExcelTable\n        editable\n        resizable\n        headerList={[\n          SelectColumn,\n          ...column\n        ]}\n        row={basicRow}\n        // setRow={setBasicRow}\n        setRow={(e) => {\n          let tmp: Set<any> = selectList\n          e.map(v => {\n            if(v.isChange) tmp.add(v.id)\n          })\n          setSelectList(tmp)\n          setBasicRow(e)\n        }}\n        selectList={selectList}\n        //@ts-ignore\n        setSelectList={setSelectList}\n        height={basicRow.length * 40 >= 40*18+56 ? 40*19 : basicRow.length * 40 + 56}\n      />\n      <PaginationComponent\n        currentPage={pageInfo.page}\n        totalPage={pageInfo.total}\n        setPage={(page) => {\n          if(keyword){\n            router.push(`/mes/basic/customer/model?page=${page}&keyword=${keyword}&opt=${option}`)\n          }else{\n            router.push(`/mes/basic/customer/model?page=${page}`)\n          }\n        }}\n      />\n    </div>\n  );\n}\n\nconst HeaderButton = styled.button`\n    height:32px;\n    color:white;\n    border-radius:6px;\n    font-size:15px;\n    font-weight:bold;\n    background:#717C90;\n    padding: 0 20px;\n    cursor: pointer;\n    display:flex;\n    margin-left: 16px;\n    justify-content:center;\n    align-items:center;\n`;\n\nexport {BasicModel};\n"]},"metadata":{},"sourceType":"module"}