{"ast":null,"code":"var _jsxFileName = \"/Users/user/Desktop/sizl/mono_pop/packages/shared/src/components/Cell/UseDateCell.tsx\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport { UnitBox, UnitValue, UnitWrapper } from '../../styles/styledComponents';\nimport 'react-calendar/dist/Calendar.css';\nimport moment from 'moment';\nimport useOnclickOutside from 'react-cool-onclickoutside';\nimport styled from 'styled-components'; //@ts-ignore\n\nimport calendarWhite from '../../../public/images/calendar_icon_white.png';\n\nconst UseDateCell = ({\n  row,\n  column,\n  onRowChange\n}) => {\n  const {\n    0: isOpen,\n    1: setIsOpen\n  } = useState(false);\n  const ref = useOnclickOutside(() => setIsOpen(false));\n\n  const getUseDate = date => {\n    const now = moment();\n    const useDate = moment(date);\n    return Math.floor(Number(moment.duration(now.diff(useDate)).asDays()));\n  };\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, __jsx(Background, {\n    onClick: () => {\n      setIsOpen(true);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, __jsx(\"p\", {\n    style: {\n      padding: 0,\n      margin: 0,\n      textAlign: 'center',\n      width: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, getUseDate(row.date)), __jsx(\"img\", {\n    src: calendarWhite,\n    style: {\n      width: 24,\n      height: 24\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  })), __jsx(UnitWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, __jsx(UnitValue, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  }, getUseDate(row.date))), __jsx(UnitBox, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, column.searchType === 'rawin' ? __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }\n  }, row.type === 'COIL' ? 'kg' : '장') : column.type === 'selectUnit' ? __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }\n  }, row.unit) : __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }\n  }, column.unitData))));\n};\n\nconst Background = styled.div`\n    display:flex;\n    justify-content:flex-start;\n    align-items:center;\n    width:100%;\n    height:100%;\n    padding: 0 8px;\n    margin:0;\n`;\nexport { UseDateCell };","map":{"version":3,"sources":["/Users/user/Desktop/sizl/mono_pop/packages/shared/src/components/Cell/UseDateCell.tsx"],"names":["React","useState","UnitBox","UnitValue","UnitWrapper","moment","useOnclickOutside","styled","calendarWhite","UseDateCell","row","column","onRowChange","isOpen","setIsOpen","ref","getUseDate","date","now","useDate","Math","floor","Number","duration","diff","asDays","padding","margin","textAlign","width","height","searchType","type","unit","unitData","Background","div"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AAEA,SAAiDC,OAAjD,EAA0DC,SAA1D,EAAqEC,WAArE,QAAuF,+BAAvF;AAEA,OAAO,kCAAP;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,iBAAP,MAA8B,2BAA9B;AAEA,OAAOC,MAAP,MAAmB,mBAAnB,C,CACA;;AACA,OAAOC,aAAP,MAA0B,gDAA1B;;AAQA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA,GAAF;AAAOC,EAAAA,MAAP;AAAeC,EAAAA;AAAf,CAAD,KAA0C;AAC5D,QAAM;AAAA,OAACC,MAAD;AAAA,OAASC;AAAT,MAAsBb,QAAQ,CAAU,KAAV,CAApC;AACA,QAAMc,GAAG,GAAGT,iBAAiB,CAAC,MAAMQ,SAAS,CAAC,KAAD,CAAhB,CAA7B;;AAEA,QAAME,UAAU,GAAIC,IAAD,IAAgB;AACjC,UAAMC,GAAG,GAAGb,MAAM,EAAlB;AACA,UAAMc,OAAO,GAAGd,MAAM,CAACY,IAAD,CAAtB;AAEA,WAAOG,IAAI,CAACC,KAAL,CAAWC,MAAM,CAACjB,MAAM,CAACkB,QAAP,CAAgBL,GAAG,CAACM,IAAJ,CAASL,OAAT,CAAhB,EAAmCM,MAAnC,EAAD,CAAjB,CAAP;AACD,GALD;;AAOA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,UAAD;AAAY,IAAA,OAAO,EAAE,MAAM;AACzBX,MAAAA,SAAS,CAAC,IAAD,CAAT;AACD,KAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGE;AAAG,IAAA,KAAK,EAAE;AAACY,MAAAA,OAAO,EAAE,CAAV;AAAaC,MAAAA,MAAM,EAAE,CAArB;AAAwBC,MAAAA,SAAS,EAAE,QAAnC;AAA6CC,MAAAA,KAAK,EAAE;AAApD,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGb,UAAU,CAACN,GAAG,CAACO,IAAL,CADb,CAHF,EAME;AAAK,IAAA,GAAG,EAAET,aAAV;AAAyB,IAAA,KAAK,EAAE;AAACqB,MAAAA,KAAK,EAAE,EAAR;AAAYC,MAAAA,MAAM,EAAE;AAApB,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CADF,EASE,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAId,UAAU,CAACN,GAAG,CAACO,IAAL,CAAd,CADF,CADF,EAIE,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEIN,MAAM,CAACoB,UAAP,KAAsB,OAAtB,GACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOrB,GAAG,CAACsB,IAAJ,KAAa,MAAb,GAAsB,IAAtB,GAA6B,GAApC,CADJ,GAEIrB,MAAM,CAACqB,IAAP,KAAgB,YAAhB,GACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOtB,GAAG,CAACuB,IAAX,CADA,GAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOtB,MAAM,CAACuB,QAAd,CANR,CAJF,CATF,CADF;AA0BD,CArCD;;AAuCA,MAAMC,UAAU,GAAG5B,MAAM,CAAC6B,GAAI;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CARA;AAUA,SAAQ3B,WAAR","sourcesContent":["import React, {useState} from 'react'\nimport {IExcelHeaderType} from '../../common/@types/type'\nimport {BoxWrap, DropBoxContainer, InnerBoxWrap, UnitBox, UnitValue, UnitWrapper} from '../../styles/styledComponents'\nimport Calendar from 'react-calendar'\nimport 'react-calendar/dist/Calendar.css'\nimport moment from 'moment'\nimport useOnclickOutside from 'react-cool-onclickoutside'\nimport Modal from 'react-modal'\nimport styled from 'styled-components'\n//@ts-ignore\nimport calendarWhite from '../../../public/images/calendar_icon_white.png'\n\ninterface IProps {\n  row: any\n  column: IExcelHeaderType\n  onRowChange: (e: any) => void\n}\n\nconst UseDateCell = ({ row, column, onRowChange }: IProps) => {\n  const [isOpen, setIsOpen] = useState<boolean>(false)\n  const ref = useOnclickOutside(() => setIsOpen(false))\n\n  const getUseDate = (date: Date) => {\n    const now = moment();\n    const useDate = moment(date)\n\n    return Math.floor(Number(moment.duration(now.diff(useDate)).asDays()))\n  }\n\n  return (\n    <div>\n      <Background onClick={() => {\n        setIsOpen(true)\n      }}>\n        <p style={{padding: 0, margin: 0, textAlign: 'center', width: '100%' }}>\n          {getUseDate(row.date)}\n        </p>\n        <img src={calendarWhite} style={{width: 24, height: 24}}/>\n      </Background>\n      <UnitWrapper>\n        <UnitValue>\n          <p>{getUseDate(row.date)}</p>\n        </UnitValue>\n        <UnitBox>\n          {\n            column.searchType === 'rawin'\n              ? <span>{row.type === 'COIL' ? 'kg' : '장'}</span>\n              : column.type === 'selectUnit'\n              ? <span>{row.unit}</span>\n              : <span>{column.unitData}</span>\n          }\n        </UnitBox>\n      </UnitWrapper>\n    </div>\n  );\n}\n\nconst Background = styled.div`\n    display:flex;\n    justify-content:flex-start;\n    align-items:center;\n    width:100%;\n    height:100%;\n    padding: 0 8px;\n    margin:0;\n`;\n\nexport {UseDateCell};\n"]},"metadata":{},"sourceType":"module"}