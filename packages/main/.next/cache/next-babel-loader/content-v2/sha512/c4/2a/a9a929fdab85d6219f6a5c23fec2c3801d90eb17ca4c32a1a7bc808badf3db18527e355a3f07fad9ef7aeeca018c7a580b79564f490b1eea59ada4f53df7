{"ast":null,"code":"import _toConsumableArray from \"/Users/user/Desktop/sizl/mono_pop/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"/Users/user/Desktop/sizl/mono_pop/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"/Users/user/Desktop/sizl/mono_pop/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/user/Desktop/sizl/mono_pop/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/Users/user/Desktop/sizl/mono_pop/packages/main/pages/mes/record/sum/index.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useState } from 'react';\nimport ExcelTable from '../../../../component/Excel/ExcelTable';\nimport MenuNavigation from '../../../../component/MenuNav/MenuNavigation';\nimport ProfileHeader from '../../../../component/Profile/ProfileHeader';\nimport PageHeader from '../../../../component/Header/Header'; // @ts-ignore\n\nimport { SelectColumn } from 'react-data-grid';\nimport { RequestMethod } from '../../../../common/RequestFunctions';\nimport { columnlist } from \"../../../../common/columnInit\";\nimport Notiflix from \"notiflix\";\nimport { useRouter } from 'next/router';\nimport TextEditor from '../../../../component/InputBox/ExcelBasicInputBox';\nimport { excelDownload } from '../../../../common/excelDownloadFunction';\nimport PaginationComponent from '../../../../component/Pagination/PaginationComponent';\nimport ExcelDownloadModal from '../../../../component/Modal/ExcelDownloadMoadal';\nimport moment from 'moment';\nvar title = '작업완료 리스트(합산)';\nvar optList = ['고객사명', '모델명', 'CODE', '품명'];\n\nvar BasicContainer = function BasicContainer(_ref) {\n  _s();\n\n  var page = _ref.page,\n      keyword = _ref.keyword,\n      option = _ref.option;\n  var router = useRouter();\n\n  var _useState = useState(false),\n      excelOpen = _useState[0],\n      setExcelOpen = _useState[1];\n\n  var _useState2 = useState(0),\n      top = _useState2[0],\n      setTop = _useState2[1];\n\n  var _useState3 = useState([]),\n      basicRow = _useState3[0],\n      setBasicRow = _useState3[1];\n\n  var _useState4 = useState(columnlist.recordSumList),\n      column = _useState4[0],\n      setColumn = _useState4[1];\n\n  var _useState5 = useState(new Set()),\n      selectList = _useState5[0],\n      setSelectList = _useState5[1];\n\n  var _useState6 = useState(optList),\n      optionList = _useState6[0],\n      setOptionList = _useState6[1];\n\n  var _useState7 = useState(0),\n      optionIndex = _useState7[0],\n      setOptionIndex = _useState7[1]; // const [keyword, setKeyword] = useState<string>('')\n\n\n  var _useState8 = useState({\n    page: page,\n    total: 1\n  }),\n      pageInfo = _useState8[0],\n      setPageInfo = _useState8[1];\n\n  var _useState9 = useState({\n    from: moment().startOf('isoWeek').format('YYYY-MM-DD'),\n    to: moment().endOf('isoWeek').format('YYYY-MM-DD')\n  }),\n      selectDate = _useState9[0],\n      setSelectDate = _useState9[1];\n\n  useEffect(function () {\n    if (keyword) {\n      SearchBasic(keyword, option, page);\n    } else {\n      LoadBasic(page).then(function () {});\n    }\n  }, [page, keyword, option, selectDate]);\n\n  var loadPoorQunatity = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(or_id) {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return RequestMethod('get', \"recordDefect\", {\n                path: {\n                  or_id: or_id\n                }\n              });\n\n            case 2:\n              res = _context.sent;\n\n              if (!res) {\n                _context.next = 5;\n                break;\n              }\n\n              return _context.abrupt(\"return\", res.results.poor_quantities.map(function (v) {\n                return {\n                  ord_id: v.ord_id,\n                  pdr_id: v.pdr.pdr_id,\n                  amount: v.amount\n                };\n              }));\n\n            case 5:\n              return _context.abrupt(\"return\");\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function loadPoorQunatity(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var loadPauseTimes = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(or_id) {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return RequestMethod('get', \"recordPause\", {\n                path: {\n                  or_id: or_id\n                }\n              });\n\n            case 2:\n              res = _context2.sent;\n\n              if (!res) {\n                _context2.next = 5;\n                break;\n              }\n\n              return _context2.abrupt(\"return\", res.results.paused_times.map(function (v) {\n                return {\n                  ord_id: v.ord_id,\n                  ppr_id: v.ppr.ppr_id,\n                  start: v.start,\n                  end: v.end,\n                  amount: v.amount\n                };\n              }));\n\n            case 5:\n              return _context2.abrupt(\"return\");\n\n            case 6:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function loadPauseTimes(_x2) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var SaveBasic = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5() {\n      var tmpRows;\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              tmpRows = basicRow.map( /*#__PURE__*/function () {\n                var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(row, i) {\n                  var _row$poor_quantities, _row$paused_times, selectKey, additional, selectData;\n\n                  return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n                    while (1) {\n                      switch (_context3.prev = _context3.next) {\n                        case 0:\n                          if (!selectList.has(row.id)) {\n                            _context3.next = 36;\n                            break;\n                          }\n\n                          selectKey = [];\n                          additional = [];\n                          column.map(function (v) {\n                            if (v.selectList) {\n                              selectKey.push(v.key);\n                            }\n\n                            if (v.type === 'additional') {\n                              additional.push(v);\n                            }\n                          });\n                          selectData = {};\n                          _context3.t0 = _objectSpread;\n                          _context3.t1 = _objectSpread(_objectSpread({}, row), selectData);\n                          _context3.t2 = {};\n                          _context3.t3 = row.customer_idPK;\n                          _context3.t4 = row.cm_idPK;\n                          _context3.t5 = row.ln_idPK;\n                          _context3.t6 = row.mold_idPK;\n                          _context3.t7 = row.process_idPK;\n                          _context3.t8 = row.machine_idPK;\n                          _context3.t9 = Number(row.good_quantity);\n                          _context3.t10 = row.user_idPK;\n\n                          if (!((_row$poor_quantities = row.poor_quantities) !== null && _row$poor_quantities !== void 0)) {\n                            _context3.next = 20;\n                            break;\n                          }\n\n                          _context3.t11 = _row$poor_quantities;\n                          _context3.next = 23;\n                          break;\n\n                        case 20:\n                          _context3.next = 22;\n                          return loadPoorQunatity(row.or_id);\n\n                        case 22:\n                          _context3.t11 = _context3.sent;\n\n                        case 23:\n                          _context3.t12 = _context3.t11;\n\n                          if (!((_row$paused_times = row.paused_times) !== null && _row$paused_times !== void 0)) {\n                            _context3.next = 28;\n                            break;\n                          }\n\n                          _context3.t13 = _row$paused_times;\n                          _context3.next = 31;\n                          break;\n\n                        case 28:\n                          _context3.next = 30;\n                          return loadPauseTimes(row.or_id);\n\n                        case 30:\n                          _context3.t13 = _context3.sent;\n\n                        case 31:\n                          _context3.t14 = _context3.t13;\n                          _context3.t15 = row.paused_timePK;\n                          _context3.t16 = _toConsumableArray(additional.map(function (v) {\n                            if (row[v.name]) {\n                              return {\n                                id: v.id,\n                                title: v.name,\n                                value: row[v.name],\n                                unit: v.unit\n                              };\n                            }\n                          }).filter(function (v) {\n                            return v;\n                          }));\n                          _context3.t17 = {\n                            customer_id: _context3.t3,\n                            cm_id: _context3.t4,\n                            ln_id: _context3.t5,\n                            mold_id: _context3.t6,\n                            process_id: _context3.t7,\n                            machine_id: _context3.t8,\n                            good_quantity: _context3.t9,\n                            user_id: _context3.t10,\n                            poor_quantities: _context3.t12,\n                            paused_times: _context3.t14,\n                            paused_time: _context3.t15,\n                            additional: _context3.t16\n                          };\n                          return _context3.abrupt(\"return\", (0, _context3.t0)(_context3.t1, _context3.t2, _context3.t17));\n\n                        case 36:\n                        case \"end\":\n                          return _context3.stop();\n                      }\n                    }\n                  }, _callee3);\n                }));\n\n                return function (_x3, _x4) {\n                  return _ref5.apply(this, arguments);\n                };\n              }());\n              Promise.all(tmpRows).then( /*#__PURE__*/function () {\n                var _ref6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(v) {\n                  var res;\n                  return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n                    while (1) {\n                      switch (_context4.prev = _context4.next) {\n                        case 0:\n                          _context4.next = 2;\n                          return RequestMethod('post', \"recordSave\", {\n                            records: v.filter(function (v) {\n                              return v;\n                            })\n                          });\n\n                        case 2:\n                          res = _context4.sent;\n\n                          if (res) {\n                            if (res.status === 200) {\n                              Notiflix.Report.success('저장되었습니다.', '', '확인');\n\n                              if (keyword) {\n                                SearchBasic(keyword, option, page).then(function () {\n                                  Notiflix.Loading.remove();\n                                });\n                              } else {\n                                LoadBasic(page).then(function () {\n                                  Notiflix.Loading.remove();\n                                });\n                              }\n                            }\n                          }\n\n                        case 4:\n                        case \"end\":\n                          return _context4.stop();\n                      }\n                    }\n                  }, _callee4);\n                }));\n\n                return function (_x5) {\n                  return _ref6.apply(this, arguments);\n                };\n              }());\n\n            case 2:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5);\n    }));\n\n    return function SaveBasic() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  var DeleteBasic = /*#__PURE__*/function () {\n    var _ref7 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6() {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              _context6.next = 2;\n              return RequestMethod('delete', \"processDelete\", {\n                processes: basicRow.map(function (row, i) {\n                  if (selectList.has(row.id)) {\n                    var pk = \"\";\n                    Object.keys(row).map(function (v) {\n                      if (v.indexOf(\"_id\") !== -1) {\n                        pk = v;\n                      }\n                    });\n                    return row[pk];\n                  }\n                }).filter(function (v) {\n                  return v;\n                })\n              });\n\n            case 2:\n              res = _context6.sent;\n\n              if (res) {\n                if (res.status === 200) {\n                  if (keyword) {\n                    router.push(\"/mes/record/list?page=1&keyword=\".concat(keyword, \"&opt=\").concat(option));\n                  } else {\n                    router.push(\"/mes/record/list?page=1\");\n                  }\n                }\n              }\n\n            case 4:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6);\n    }));\n\n    return function DeleteBasic() {\n      return _ref7.apply(this, arguments);\n    };\n  }();\n\n  var LoadBasic = /*#__PURE__*/function () {\n    var _ref8 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7(page) {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              _context7.next = 2;\n              return RequestMethod('get', \"recordSumList\", {\n                path: {\n                  page: page || page !== 0 ? page : 1,\n                  renderItem: 18\n                },\n                params: {\n                  from: selectDate.from,\n                  to: selectDate.to\n                }\n              });\n\n            case 2:\n              res = _context7.sent;\n\n              if (res && res.status === 200) {\n                if (res.results.totalPages < page) {\n                  LoadBasic(page - 1);\n                } else {\n                  setPageInfo(_objectSpread(_objectSpread({}, pageInfo), {}, {\n                    page: res.results.page,\n                    total: res.results.totalPages\n                  }));\n                  cleanUpData(res);\n                }\n              } else if (res.state === 401) {\n                Notiflix.Report.failure('불러올 수 없습니다.', '권한이 없습니다.', '확인', function () {\n                  router.back();\n                });\n              }\n\n            case 4:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, _callee7);\n    }));\n\n    return function LoadBasic(_x6) {\n      return _ref8.apply(this, arguments);\n    };\n  }();\n\n  var SearchBasic = /*#__PURE__*/function () {\n    var _ref9 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee8(keyword, option, isPaging) {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n        while (1) {\n          switch (_context8.prev = _context8.next) {\n            case 0:\n              if (!isPaging) {\n                setOptionIndex(option);\n              }\n\n              _context8.next = 3;\n              return RequestMethod('get', \"recordSearch\", {\n                path: {\n                  page: isPaging !== null && isPaging !== void 0 ? isPaging : 1,\n                  renderItem: 18\n                },\n                params: {\n                  keyword: keyword !== null && keyword !== void 0 ? keyword : '',\n                  opt: option !== null && option !== void 0 ? option : 0,\n                  from: selectDate.from,\n                  to: selectDate.to\n                }\n              });\n\n            case 3:\n              res = _context8.sent;\n\n              if (res && res.status === 200) {\n                setPageInfo(_objectSpread(_objectSpread({}, pageInfo), {}, {\n                  page: res.results.page,\n                  total: res.results.totalPages\n                }));\n                cleanUpData(res);\n              }\n\n            case 5:\n            case \"end\":\n              return _context8.stop();\n          }\n        }\n      }, _callee8);\n    }));\n\n    return function SearchBasic(_x7, _x8, _x9) {\n      return _ref9.apply(this, arguments);\n    };\n  }();\n\n  var changeRow = function changeRow(row) {\n    var _row$osd;\n\n    var tmpData = {};\n\n    if (row.additional && row.additional.length) {\n      row.additional.map(function (v) {\n        tmpData = _objectSpread(_objectSpread({}, tmpData), {}, _defineProperty({}, v.key, v.value));\n      });\n    }\n\n    var pauseTimesDummy;\n\n    if (row.avg_paused_time >= 0) {\n      var seconds = Number(row.avg_paused_time);\n      var hour = Math.floor(seconds / 3600) < 10 ? '0' + Math.floor(seconds / 3600) : Math.floor(seconds / 3600);\n      var min = Math.floor(seconds % 3600 / 60) < 10 ? '0' + Math.floor(seconds % 3600 / 60) : Math.floor(seconds % 3600 / 60);\n      var sec = Math.floor(seconds % 60) < 10 ? '0' + Math.floor(seconds % 60) : Math.floor(seconds % 60);\n      pauseTimesDummy = hour + \":\" + min + \":\" + sec;\n    } else {\n      pauseTimesDummy = '00:00:00';\n\n      tmpTotal: 0;\n    }\n\n    return _objectSpread(_objectSpread(_objectSpread({}, row), tmpData), {}, {\n      identification: (_row$osd = row.osd) === null || _row$osd === void 0 ? void 0 : _row$osd.identification,\n      customer_id: row.product.raw_material.model.customer.name,\n      customer_idPK: row.product.raw_material.model.customer.customer_id,\n      cm_id: row.product.raw_material.model.model,\n      cm_idPK: row.product.raw_material.model.cm_id,\n      code: row.product.raw_material.code,\n      name: row.product.raw_material.name,\n      texture: row.product.raw_material.texture,\n      avg_paused_time: pauseTimesDummy\n    });\n  };\n\n  var cleanUpData = function cleanUpData(res) {\n    var tmpColumn = columnlist.recordSumList;\n    var tmpRow = [];\n    tmpColumn = tmpColumn.map(function (column) {\n      var menuData;\n      res.results.menus && res.results.menus.map(function (menu) {\n        if (menu.colName === column.key) {\n          menuData = {\n            id: menu.id,\n            name: menu.title,\n            width: menu.width,\n            tab: menu.tab,\n            unit: menu.unit,\n            moddable: !menu.moddable\n          };\n        } else if (menu.colName === 'id' && column.key === 'tmpId') {\n          menuData = {\n            id: menu.id,\n            name: menu.title,\n            width: menu.width,\n            tab: menu.tab,\n            unit: menu.unit,\n            moddable: !menu.moddable\n          };\n        }\n      });\n\n      if (menuData) {\n        return _objectSpread(_objectSpread({}, column), menuData);\n      }\n    }).filter(function (v) {\n      return v;\n    });\n    var additionalMenus = res.results.menus ? res.results.menus.map(function (menu) {\n      if (menu.colName === null) {\n        return {\n          id: menu.id,\n          name: menu.title,\n          width: menu.width,\n          key: menu.title,\n          editor: TextEditor,\n          type: 'additional',\n          unit: menu.unit\n        };\n      }\n    }).filter(function (v) {\n      return v;\n    }) : [];\n    setColumn([].concat(_toConsumableArray(tmpColumn.map(function (v) {\n      return _objectSpread(_objectSpread({}, v), {}, {\n        name: v.moddable ? v.name + '(필수)' : v.name\n      });\n    })), _toConsumableArray(additionalMenus)));\n    tmpRow = res.results.info_list;\n    var additionalData = [];\n    additionalMenus.map(function (v) {\n      if (v.type === 'additional') {\n        additionalData.push(v.key);\n      }\n    });\n    var tmpBasicRow = tmpRow.map(function (row, index) {\n      var realTableData = changeRow(row);\n      var appendAdditional = {};\n      row.additional && row.additional.map(function (v) {\n        appendAdditional = _objectSpread(_objectSpread({}, appendAdditional), {}, _defineProperty({}, v.title, v.value));\n      });\n      var tmpPauseTime = '';\n\n      if (row.paused_time || row.paused_time === 0) {\n        var seconds = Number(row.paused_time);\n        var hour = Math.floor(seconds / 3600) < 10 ? '0' + Math.floor(seconds / 3600) : Math.floor(seconds / 3600);\n        var min = Math.floor(seconds % 3600 / 60) < 10 ? '0' + Math.floor(seconds % 3600 / 60) : Math.floor(seconds % 3600 / 60);\n        var sec = Math.floor(seconds % 60) < 10 ? '0' + Math.floor(seconds % 60) : Math.floor(seconds % 60);\n        tmpPauseTime = hour + \":\" + min + \":\" + sec;\n      }\n\n      var random_id = Math.random() * 1000;\n      return _objectSpread(_objectSpread(_objectSpread({}, realTableData), appendAdditional), {}, {\n        paused_time: tmpPauseTime,\n        paused_timePK: row.paused_time,\n        id: \"process_\".concat(random_id)\n      });\n    });\n    setBasicRow(_toConsumableArray(tmpBasicRow));\n  };\n\n  var downloadExcel = function downloadExcel() {\n    var tmpSelectList = [];\n    basicRow.map(function (row) {\n      tmpSelectList.push(selectList.has(row.id));\n    });\n    excelDownload(column, basicRow, \"process\", 'process', tmpSelectList);\n  };\n\n  var onClickHeaderButton = function onClickHeaderButton(index) {\n    switch (index) {\n      case 0:\n        setExcelOpen(true);\n        break;\n\n      case 1:\n        SaveBasic();\n        break;\n    }\n  };\n\n  return __jsx(\"div\", {\n    style: {\n      display: 'flex'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 418,\n      columnNumber: 5\n    }\n  }, __jsx(MenuNavigation, {\n    pageType: 'MES',\n    subType: 0,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 419,\n      columnNumber: 7\n    }\n  }), __jsx(\"div\", {\n    style: {\n      paddingBottom: 40\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 420,\n      columnNumber: 7\n    }\n  }, __jsx(ProfileHeader, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 421,\n      columnNumber: 9\n    }\n  }), __jsx(PageHeader, {\n    isSearch: true,\n    searchKeyword: keyword,\n    onChangeSearchKeyword: function onChangeSearchKeyword(keyword) {\n      if (keyword) {\n        router.push(\"/mes/record/list?page=1&keyword=\".concat(keyword, \"&opt=\").concat(optionIndex));\n      } else {\n        router.push(\"/mes/record/list?page=1&keyword=\");\n      }\n    },\n    searchOptionList: optionList,\n    onChangeSearchOption: function onChangeSearchOption(option) {\n      setOptionIndex(option);\n    },\n    optionIndex: optionIndex,\n    isCalendar: true,\n    calendarType: 'period',\n    selectDate: selectDate //@ts-ignore\n    ,\n    setSelectDate: setSelectDate,\n    title: title,\n    buttons: ['엑셀로 받기', '수정 하기'],\n    buttonsOnclick: onClickHeaderButton,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 422,\n      columnNumber: 9\n    }\n  }), __jsx(ExcelTable, {\n    editable: true,\n    resizable: true,\n    pageInfo: pageInfo,\n    headerList: [SelectColumn].concat(_toConsumableArray(column)),\n    top: top,\n    setTop: setTop,\n    row: basicRow // setRow={setBasicRow}\n    ,\n    setRow: function setRow(e) {\n      var tmp = selectList;\n      e.map(function (v) {\n        if (v.isChange) tmp.add(v.id);\n      });\n      setSelectList(tmp);\n      setBasicRow(e);\n    },\n    selectList: selectList //@ts-ignore\n    ,\n    setSelectList: setSelectList,\n    loadEvent: LoadBasic,\n    height: basicRow.length * 40 >= 40 * 18 + 56 ? 40 * 19 : basicRow.length * 40 + 56,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 446,\n      columnNumber: 9\n    }\n  }), __jsx(PaginationComponent, {\n    currentPage: pageInfo.page,\n    totalPage: pageInfo.total,\n    setPage: function setPage(page) {\n      if (keyword) {\n        router.push(\"/mes/record/list?page=\".concat(page, \"&keyword=\").concat(keyword, \"&opt=\").concat(option));\n      } else {\n        router.push(\"/mes/record/list?page=\".concat(page));\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 472,\n      columnNumber: 9\n    }\n  })), __jsx(ExcelDownloadModal, {\n    isOpen: excelOpen,\n    column: column,\n    basicRow: basicRow,\n    filename: \"\\uC791\\uC5C5\\uC644\\uB8CC\\uB9AC\\uC2A4\\uD2B8\",\n    sheetname: \"\\uC791\\uC5C5\\uC644\\uB8CC\\uB9AC\\uC2A4\\uD2B8\",\n    selectList: selectList,\n    tab: 'ROLE_PROD_04',\n    setIsOpen: setExcelOpen,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 484,\n      columnNumber: 7\n    }\n  }));\n};\n\n_s(BasicContainer, \"0FEV6+eHiI20ywqrQBjD1eSvI4c=\", false, function () {\n  return [useRouter];\n});\n\n_c = BasicContainer;\nexport var __N_SSP = true;\nexport default BasicContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"BasicContainer\");","map":{"version":3,"sources":["/Users/user/Desktop/sizl/mono_pop/packages/main/pages/mes/record/sum/index.tsx"],"names":["React","useEffect","useState","ExcelTable","MenuNavigation","ProfileHeader","PageHeader","SelectColumn","RequestMethod","columnlist","Notiflix","useRouter","TextEditor","excelDownload","PaginationComponent","ExcelDownloadModal","moment","title","optList","BasicContainer","page","keyword","option","router","excelOpen","setExcelOpen","top","setTop","basicRow","setBasicRow","recordSumList","column","setColumn","Set","selectList","setSelectList","optionList","setOptionList","optionIndex","setOptionIndex","total","pageInfo","setPageInfo","from","startOf","format","to","endOf","selectDate","setSelectDate","SearchBasic","LoadBasic","then","loadPoorQunatity","or_id","path","res","results","poor_quantities","map","v","ord_id","pdr_id","pdr","amount","loadPauseTimes","paused_times","ppr_id","ppr","start","end","SaveBasic","tmpRows","row","i","has","id","selectKey","additional","push","key","type","selectData","customer_idPK","cm_idPK","ln_idPK","mold_idPK","process_idPK","machine_idPK","Number","good_quantity","user_idPK","paused_timePK","name","value","unit","filter","customer_id","cm_id","ln_id","mold_id","process_id","machine_id","user_id","paused_time","Promise","all","records","status","Report","success","Loading","remove","DeleteBasic","processes","pk","Object","keys","indexOf","renderItem","params","totalPages","cleanUpData","state","failure","back","isPaging","opt","changeRow","tmpData","length","pauseTimesDummy","avg_paused_time","seconds","hour","Math","floor","min","sec","tmpTotal","identification","osd","product","raw_material","model","customer","code","texture","tmpColumn","tmpRow","menuData","menus","menu","colName","width","tab","moddable","additionalMenus","editor","info_list","additionalData","tmpBasicRow","index","realTableData","appendAdditional","tmpPauseTime","random_id","random","downloadExcel","tmpSelectList","onClickHeaderButton","display","paddingBottom","e","tmp","isChange","add"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react'\nimport ExcelTable from '../../../../component/Excel/ExcelTable'\nimport MenuNavigation from '../../../../component/MenuNav/MenuNavigation'\nimport ProfileHeader from '../../../../component/Profile/ProfileHeader'\nimport PageHeader from '../../../../component/Header/Header'\n// @ts-ignore\nimport {SelectColumn} from 'react-data-grid'\nimport {IExcelHeaderType, IItemMenuType} from '../../../../common/@types/type'\nimport {RequestMethod} from '../../../../common/RequestFunctions'\nimport {columnlist} from \"../../../../common/columnInit\";\nimport Notiflix from \"notiflix\";\nimport {useRouter} from 'next/router'\nimport {MAX_VALUE} from '../../../../common/configset'\nimport DropDownEditor from '../../../../component/Dropdown/ExcelBasicDropdown'\nimport TextEditor from '../../../../component/InputBox/ExcelBasicInputBox'\nimport {excelDownload} from '../../../../common/excelDownloadFunction'\nimport {loadAll} from 'react-cookies'\nimport { makeStyles, createStyles } from '@material-ui/core/styles';\nimport PaginationComponent from '../../../../component/Pagination/PaginationComponent'\nimport {NextPageContext} from 'next'\nimport ExcelDownloadModal from '../../../../component/Modal/ExcelDownloadMoadal'\nimport moment from 'moment'\n\ninterface IProps {\n  children?: any\n  page?: number\n  keyword?: string\n  option?: number\n}\n\nconst title = '작업완료 리스트(합산)'\nconst optList = ['고객사명', '모델명','CODE','품명',]\n\nconst BasicContainer = (\n  {page, keyword, option}: IProps\n) => {\n  const router = useRouter()\n\n  const [excelOpen, setExcelOpen] = useState<boolean>(false)\n\n  const [top, setTop] = useState<number>(0)\n  const [basicRow, setBasicRow] = useState<Array<any>>([])\n  const [column, setColumn] = useState<Array<IExcelHeaderType>>(columnlist.recordSumList)\n  const [selectList, setSelectList] = useState<Set<number>>(new Set())\n  const [optionList, setOptionList] = useState<string[]>(optList)\n  const [optionIndex, setOptionIndex] = useState<number>(0)\n  // const [keyword, setKeyword] = useState<string>('')\n  const [pageInfo, setPageInfo] = useState<{page: number, total: number}>({\n    page: page,\n    total: 1\n  })\n  const [selectDate, setSelectDate] = useState<{from:string, to:string}>({\n    from: moment().startOf('isoWeek').format('YYYY-MM-DD'),\n    to: moment().endOf('isoWeek').format('YYYY-MM-DD')\n  });\n\n  useEffect(() => {\n    if(keyword){\n      SearchBasic(keyword, option, page)\n    }else{\n      LoadBasic(page).then(() => {})\n    }\n  }, [page, keyword, option, selectDate])\n\n  const loadPoorQunatity = async (or_id: number) => {\n    let res = await RequestMethod('get', `recordDefect`,{ path: { or_id } })\n\n    if(res){\n      return res.results.poor_quantities.map(v => {\n        return {\n          ord_id: v.ord_id,\n          pdr_id: v.pdr.pdr_id,\n          amount: v.amount\n        }\n      })\n    }\n    return\n  }\n\n  const loadPauseTimes = async (or_id: number) => {\n    let res = await RequestMethod('get', `recordPause`,{ path: { or_id } })\n\n    if(res){\n      return res.results.paused_times.map(v => {\n        return {\n          ord_id: v.ord_id,\n          ppr_id: v.ppr.ppr_id,\n          start: v.start,\n          end: v.end,\n          amount: v.amount\n        }\n      })\n    }\n    return\n  }\n\n  const SaveBasic = async () => {\n\n    const tmpRows = basicRow.map(async (row, i) => {\n      if(selectList.has(row.id)){\n        let selectKey: string[] = []\n        let additional:any[] = []\n        column.map((v) => {\n          if(v.selectList){\n            selectKey.push(v.key)\n          }\n\n          if(v.type === 'additional'){\n            additional.push(v)\n          }\n        })\n\n        let selectData: any = {}\n\n        return {\n          ...row,\n          ...selectData,\n          customer_id: row.customer_idPK,\n          cm_id: row.cm_idPK,\n          ln_id: row.ln_idPK,\n          mold_id: row.mold_idPK,\n          process_id: row.process_idPK,\n          machine_id: row.machine_idPK,\n          good_quantity: Number(row.good_quantity),\n          user_id: row.user_idPK,\n          poor_quantities: row.poor_quantities ?? await loadPoorQunatity(row.or_id),\n          paused_times: row.paused_times ?? await loadPauseTimes(row.or_id),\n          paused_time: row.paused_timePK,\n          additional: [\n            ...additional.map(v => {\n              if(row[v.name]) {\n                return {\n                  id: v.id,\n                  title: v.name,\n                  value: row[v.name],\n                  unit: v.unit\n                }\n              }\n            }).filter((v) => v)\n          ]\n        }\n\n      }\n    })\n\n    Promise.all(tmpRows).then(async (v) => {\n      let res = await RequestMethod('post', `recordSave`,\n        {\n          records: v.filter((v)=>v)\n        })\n\n      if(res){\n        if(res.status === 200){\n          Notiflix.Report.success('저장되었습니다.','','확인');\n          if(keyword){\n            SearchBasic(keyword, option, page).then(() => {\n              Notiflix.Loading.remove()\n            })\n          }else{\n            LoadBasic(page).then(() => {\n              Notiflix.Loading.remove()\n            })\n          }\n        }\n      }\n    })\n  }\n\n  const DeleteBasic = async () => {\n    const res = await RequestMethod('delete', `processDelete`,\n      {\n        processes: basicRow.map((row, i) => {\n          if(selectList.has(row.id)){\n            let pk = \"\"\n            Object.keys(row).map((v:string) => {\n              if(v.indexOf(\"_id\") !== -1){\n                pk = v\n              }\n            })\n\n            return row[pk]\n          }\n        }).filter((v) => v)\n      })\n\n    if(res) {\n      if(res.status === 200){\n        if(keyword){\n          router.push(`/mes/record/list?page=1&keyword=${keyword}&opt=${option}`)\n        }else{\n          router.push(`/mes/record/list?page=1`)\n        }\n      }\n    }\n  }\n\n  const LoadBasic = async (page?: number) => {\n    const res: any = await RequestMethod('get', `recordSumList`,{\n      path: {\n        page: (page || page !== 0) ? page : 1,\n        renderItem: 18,\n      },\n      params: {\n        from: selectDate.from,\n        to: selectDate.to,\n      }\n    })\n\n    if(res && res.status === 200){\n      if(res.results.totalPages < page){\n        LoadBasic(page - 1)\n      }else{\n        setPageInfo({\n          ...pageInfo,\n          page: res.results.page,\n          total: res.results.totalPages\n        })\n        cleanUpData(res)\n      }\n    } else if (res.state === 401) {\n      Notiflix.Report.failure('불러올 수 없습니다.', '권한이 없습니다.', '확인', () => {\n        router.back()\n      })\n    }\n  }\n\n  const SearchBasic = async (keyword: any, option: number, isPaging?: number) => {\n    if(!isPaging){\n      setOptionIndex(option)\n    }\n\n    const res = await RequestMethod('get', `recordSearch`,{\n      path: {\n        page: isPaging ?? 1,\n        renderItem: 18,\n      },\n      params: {\n        keyword: keyword ?? '',\n        opt: option ?? 0,\n        from: selectDate.from,\n        to: selectDate.to\n      }\n    })\n\n    if(res && res.status === 200){\n      setPageInfo({\n        ...pageInfo,\n        page: res.results.page,\n        total: res.results.totalPages\n      })\n      cleanUpData(res)\n    }\n  }\n\n  const changeRow = (row: any) => {\n    let tmpData = {}\n\n    if(row.additional && row.additional.length) {\n      row.additional.map(v => {\n        tmpData = {\n          ...tmpData,\n          [v.key]: v.value\n        }\n      })\n    }\n\n    let pauseTimesDummy: string\n\n    if(row.avg_paused_time >= 0){\n      let seconds = Number(row.avg_paused_time)\n      let hour = Math.floor(seconds/3600) < 10 ? '0'+ Math.floor(seconds/3600) :Math.floor(seconds/3600)\n      let min = Math.floor((seconds%3600)/60) < 10 ? '0'+ Math.floor((seconds%3600)/60) : Math.floor((seconds%3600)/60)\n      let sec = Math.floor(seconds%60) < 10 ? '0'+Math.floor(seconds%60) : Math.floor(seconds%60)\n\n      pauseTimesDummy = hour+\":\"+min+\":\"+sec\n    }else{\n      pauseTimesDummy = '00:00:00'\n      tmpTotal: 0\n    }\n\n    return {\n      ...row,\n      ...tmpData,\n      identification: row.osd?.identification,\n      customer_id: row.product.raw_material.model.customer.name,\n      customer_idPK: row.product.raw_material.model.customer.customer_id,\n      cm_id: row.product.raw_material.model.model,\n      cm_idPK: row.product.raw_material.model.cm_id,\n      code: row.product.raw_material.code,\n      name: row.product.raw_material.name,\n      texture: row.product.raw_material.texture,\n      avg_paused_time: pauseTimesDummy\n    }\n  }\n\n  const cleanUpData = (res: any) => {\n    let tmpColumn = columnlist.recordSumList\n    let tmpRow = []\n    tmpColumn = tmpColumn.map((column: any) => {\n      let menuData: object | undefined;\n      res.results.menus && res.results.menus.map((menu: any) => {\n        if(menu.colName === column.key){\n          menuData = {\n            id: menu.id,\n            name: menu.title,\n            width: menu.width,\n            tab:menu.tab,\n            unit:menu.unit,\n            moddable: !menu.moddable\n          }\n        } else if(menu.colName === 'id' && column.key === 'tmpId'){\n          menuData = {\n            id: menu.id,\n            name: menu.title,\n            width: menu.width,\n            tab:menu.tab,\n            unit:menu.unit,\n            moddable: !menu.moddable\n          }\n        }\n      })\n\n      if(menuData){\n        return {\n          ...column,\n          ...menuData\n        }\n      }\n    }).filter((v:any) => v)\n\n    let additionalMenus = res.results.menus ? res.results.menus.map((menu:any) => {\n      if(menu.colName === null){\n        return {\n          id: menu.id,\n          name: menu.title,\n          width: menu.width,\n          key: menu.title,\n          editor: TextEditor,\n          type: 'additional',\n          unit: menu.unit\n        }\n      }\n    }).filter((v: any) => v) : []\n\n    setColumn([...tmpColumn.map(v=> {\n      return {\n        ...v,\n        name: v.moddable ? v.name+'(필수)' : v.name\n      }\n    }), ...additionalMenus])\n\n    tmpRow = res.results.info_list\n\n    let additionalData: any[] = []\n\n    additionalMenus.map((v: any) => {\n      if(v.type === 'additional'){\n        additionalData.push(v.key)\n      }\n    })\n\n    let tmpBasicRow = tmpRow.map((row: any, index: number) => {\n      let realTableData: any = changeRow(row)\n      let appendAdditional: any = {}\n\n      row.additional && row.additional.map((v: any) => {\n        appendAdditional = {\n          ...appendAdditional,\n          [v.title]: v.value\n        }\n      })\n\n      let tmpPauseTime = ''\n\n      if(row.paused_time || row.paused_time === 0){\n        let seconds = Number(row.paused_time)\n        let hour = Math.floor(seconds/3600) < 10 ? '0'+ Math.floor(seconds/3600) :Math.floor(seconds/3600)\n        let min = Math.floor((seconds%3600)/60) < 10 ? '0'+ Math.floor((seconds%3600)/60) : Math.floor((seconds%3600)/60)\n        let sec = Math.floor(seconds%60) < 10 ? '0'+Math.floor(seconds%60) : Math.floor(seconds%60)\n\n        tmpPauseTime = hour+\":\"+min+\":\"+sec\n      }\n\n      const random_id = Math.random()*1000\n\n      return {\n        ...realTableData,\n        ...appendAdditional,\n        paused_time: tmpPauseTime,\n        paused_timePK: row.paused_time,\n        id: `process_${random_id}`,\n      }\n    })\n\n    setBasicRow([...tmpBasicRow])\n  }\n\n  const downloadExcel = () => {\n    let tmpSelectList: boolean[] = []\n    basicRow.map(row => {\n      tmpSelectList.push(selectList.has(row.id))\n    })\n    excelDownload(column, basicRow, `process`, 'process', tmpSelectList)\n  }\n\n  const onClickHeaderButton = (index: number) => {\n    switch(index){\n      case 0:\n        setExcelOpen(true)\n        break;\n      case 1:\n        SaveBasic()\n        break;\n    }\n  }\n\n  return (\n    <div style={{display: 'flex', }}>\n      <MenuNavigation pageType={'MES'} subType={0}/>\n      <div style={{paddingBottom: 40}}>\n        <ProfileHeader/>\n        <PageHeader\n          isSearch\n          searchKeyword={keyword}\n          onChangeSearchKeyword={(keyword) => {\n            if(keyword){\n              router.push(`/mes/record/list?page=1&keyword=${keyword}&opt=${optionIndex}`)\n            }else{\n              router.push(`/mes/record/list?page=1&keyword=`)\n            }\n          }}\n          searchOptionList={optionList}\n          onChangeSearchOption={(option) => {\n            setOptionIndex(option)\n          }}\n          optionIndex={optionIndex}\n          isCalendar\n          calendarType={'period'}\n          selectDate={selectDate}\n          //@ts-ignore\n          setSelectDate={setSelectDate}\n          title={title}\n          buttons={['엑셀로 받기', '수정 하기']}\n          buttonsOnclick={onClickHeaderButton}\n        />\n        <ExcelTable\n          editable\n          resizable\n          pageInfo={pageInfo}\n          headerList={[\n            SelectColumn,\n            ...column\n          ]}\n          top={top}\n          setTop={setTop}\n          row={basicRow}\n          // setRow={setBasicRow}\n          setRow={(e) => {\n            let tmp: Set<any> = selectList\n            e.map(v => {\n              if(v.isChange) tmp.add(v.id)\n            })\n            setSelectList(tmp)\n            setBasicRow(e)\n          }}\n          selectList={selectList}\n          //@ts-ignore\n          setSelectList={setSelectList}\n          loadEvent={LoadBasic}\n          height={basicRow.length * 40 >= 40*18+56 ? 40*19 : basicRow.length * 40 + 56}\n        />\n        <PaginationComponent\n          currentPage={pageInfo.page}\n          totalPage={pageInfo.total}\n          setPage={(page) => {\n            if(keyword){\n              router.push(`/mes/record/list?page=${page}&keyword=${keyword}&opt=${option}`)\n            }else{\n              router.push(`/mes/record/list?page=${page}`)\n            }\n          }}\n        />\n      </div>\n      <ExcelDownloadModal\n        isOpen={excelOpen}\n        column={column}\n        basicRow={basicRow}\n        filename={`작업완료리스트`}\n        sheetname={`작업완료리스트`}\n        selectList={selectList}\n        tab={'ROLE_PROD_04'}\n        setIsOpen={setExcelOpen}\n      />\n    </div>\n  );\n}\n\nexport const getServerSideProps = (ctx: NextPageContext) => {\n  return {\n    props: {\n      page: ctx.query.page,\n      keyword: ctx.query.keyword ?? \"\",\n      option: ctx.query.opt ?? 0,\n    }\n  }\n}\n\n\n\nexport default BasicContainer;\n"]},"metadata":{},"sourceType":"module"}