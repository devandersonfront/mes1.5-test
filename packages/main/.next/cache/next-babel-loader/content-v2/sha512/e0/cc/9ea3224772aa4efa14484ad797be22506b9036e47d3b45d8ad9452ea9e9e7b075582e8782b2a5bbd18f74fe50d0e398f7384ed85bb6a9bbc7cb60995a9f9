{"ast":null,"code":"var _jsxFileName = \"/Users/user/Desktop/sizl/mono_pop/packages/shared/src/components/Formatter/TimeFormmater.tsx\";\nvar __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport styled from \"styled-components\";\n\nconst TimeFormatter = ({\n  row,\n  column,\n  setRow\n}) => {\n  var _column$textAlign;\n\n  const [time, setTime] = React.useState();\n  useEffect(() => {\n    if (row[column.key]) {\n      let sec = Number(row[column.key]);\n      let hour = Math.floor(sec / 3600);\n      sec = sec % 3600;\n      let min = Math.floor(sec / 60);\n      sec = sec % 60;\n      console.log(`${hour}:${min}:${sec}`);\n      setTime(`${hour >= 10 ? hour : '0' + hour}:${min >= 10 ? min : '0' + min}:${sec >= 10 ? sec : '0' + sec}`);\n    }\n  }, [row]);\n  return __jsx(Background, {\n    style: {\n      background: \"white\"\n    },\n    onClick: () => {},\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, __jsx(\"p\", {\n    style: {\n      padding: '0 0 0 8px',\n      color: row[column.key] ? '#0D0D0D' : '#0D0D0D66',\n      width: '100%',\n      textAlign: (_column$textAlign = column.textAlign) !== null && _column$textAlign !== void 0 ? _column$textAlign : 'left'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, time !== null && time !== void 0 ? time : \"00:00:00\"));\n};\n\nconst Background = styled.div`\n    display:flex;\n    justify-content:flex-start;\n    align-items:center;\n    width:100%;\n    height:100%;\n    padding: 0 8px;\n    margin:0;\n`;\nexport { TimeFormatter };","map":{"version":3,"sources":["/Users/user/Desktop/sizl/mono_pop/packages/shared/src/components/Formatter/TimeFormmater.tsx"],"names":["React","useEffect","styled","TimeFormatter","row","column","setRow","time","setTime","useState","key","sec","Number","hour","Math","floor","min","console","log","background","padding","color","width","textAlign","Background","div"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;AASA,MAAMC,aAAa,GAAG,CAAC;AAACC,EAAAA,GAAD;AAAMC,EAAAA,MAAN;AAAcC,EAAAA;AAAd,CAAD,KAAmC;AAAA;;AACvD,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,KAAK,CAACS,QAAN,EAAxB;AAEAR,EAAAA,SAAS,CAAC,MAAM;AACd,QAAGG,GAAG,CAACC,MAAM,CAACK,GAAR,CAAN,EAAmB;AACjB,UAAIC,GAAG,GAAGC,MAAM,CAACR,GAAG,CAACC,MAAM,CAACK,GAAR,CAAJ,CAAhB;AACA,UAAIG,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWJ,GAAG,GAAC,IAAf,CAAX;AACAA,MAAAA,GAAG,GAAGA,GAAG,GAAC,IAAV;AACA,UAAIK,GAAG,GAAGF,IAAI,CAACC,KAAL,CAAWJ,GAAG,GAAC,EAAf,CAAV;AACAA,MAAAA,GAAG,GAAGA,GAAG,GAAC,EAAV;AAEAM,MAAAA,OAAO,CAACC,GAAR,CAAa,GAAEL,IAAK,IAAGG,GAAI,IAAGL,GAAI,EAAlC;AAEAH,MAAAA,OAAO,CAAE,GAAEK,IAAI,IAAI,EAAR,GAAaA,IAAb,GAAoB,MAAIA,IAAK,IAAGG,GAAG,IAAI,EAAP,GAAYA,GAAZ,GAAkB,MAAIA,GAAI,IAAGL,GAAG,IAAI,EAAP,GAAYA,GAAZ,GAAkB,MAAIA,GAAI,EAA3F,CAAP;AACD;AACF,GAZQ,EAYN,CAACP,GAAD,CAZM,CAAT;AAcA,SACE,MAAC,UAAD;AAAY,IAAA,KAAK,EAAE;AAACe,MAAAA,UAAU,EAAE;AAAb,KAAnB;AAA0C,IAAA,OAAO,EAAE,MAAI,CACtD,CADD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE;AAAG,IAAA,KAAK,EAAE;AAACC,MAAAA,OAAO,EAAE,WAAV;AAAuBC,MAAAA,KAAK,EAAEjB,GAAG,CAACC,MAAM,CAACK,GAAR,CAAH,GAAkB,SAAlB,GAA8B,WAA5D;AAAyEY,MAAAA,KAAK,EAAE,MAAhF;AAAwFC,MAAAA,SAAS,uBAAElB,MAAM,CAACkB,SAAT,iEAAsB;AAAvH,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGhB,IADH,aACGA,IADH,cACGA,IADH,GACW,UADX,CAFF,CADF;AAQD,CAzBD;;AA2BA,MAAMiB,UAAU,GAAGtB,MAAM,CAACuB,GAAI;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CARA;AAUA,SAAQtB,aAAR","sourcesContent":["import React, {useEffect} from 'react'\nimport styled from \"styled-components\";\nimport {IExcelHeaderType} from \"../../common/@types/type\";\n\ninterface IProps {\n  row: any\n  column: IExcelHeaderType\n  setRow: (row: any) => void\n}\n\nconst TimeFormatter = ({row, column, setRow}: IProps) => {\n  const [time, setTime] = React.useState<string | undefined>()\n\n  useEffect(() => {\n    if(row[column.key]){\n      let sec = Number(row[column.key])\n      let hour = Math.floor(sec/3600)\n      sec = sec%3600\n      let min = Math.floor(sec/60)\n      sec = sec%60\n\n      console.log(`${hour}:${min}:${sec}`)\n\n      setTime(`${hour >= 10 ? hour : '0'+hour}:${min >= 10 ? min : '0'+min}:${sec >= 10 ? sec : '0'+sec}`)\n    }\n  }, [row])\n\n  return(\n    <Background style={{background: \"white\"}} onClick={()=>{\n    }} >\n      <p style={{padding: '0 0 0 8px', color: row[column.key] ? '#0D0D0D' : '#0D0D0D66', width: '100%', textAlign: column.textAlign ?? 'left' }}>\n        {time ?? \"00:00:00\"}\n      </p>\n    </Background>\n  )\n}\n\nconst Background = styled.div`\n    display:flex;\n    justify-content:flex-start;\n    align-items:center;\n    width:100%;\n    height:100%;\n    padding: 0 8px;\n    margin:0;\n`;\n\nexport {TimeFormatter};\n"]},"metadata":{},"sourceType":"module"}