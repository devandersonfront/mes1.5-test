{"ast":null,"code":"import _regeneratorRuntime from \"/Users/user/Desktop/sizl/mono_pop/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _toConsumableArray from \"/Users/user/Desktop/sizl/mono_pop/node_modules/next/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"/Users/user/Desktop/sizl/mono_pop/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _asyncToGenerator from \"/Users/user/Desktop/sizl/mono_pop/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/Users/user/Desktop/sizl/mono_pop/packages/basic/src/container/BasicProcess.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useState } from 'react';\nimport { ExcelTable, Header as PageHeader, RequestMethod, columnlist, TextEditor, excelDownload, PaginationComponent } from 'shared'; // @ts-ignore\n\nimport { SelectColumn } from 'react-data-grid';\nimport Notiflix from \"notiflix\";\nimport { useRouter } from 'next/router';\nvar title = '공정 종류 관리';\nvar optList = ['공정명'];\n\nvar BasicProcess = function BasicProcess(_ref) {\n  _s();\n\n  var page = _ref.page,\n      keyword = _ref.keyword,\n      option = _ref.option;\n  var router = useRouter();\n\n  var _useState = useState(false),\n      excelOpen = _useState[0],\n      setExcelOpen = _useState[1];\n\n  var _useState2 = useState(false),\n      excelUploadOpen = _useState2[0],\n      setExcelUploadOpen = _useState2[1];\n\n  var _useState3 = useState(0),\n      top = _useState3[0],\n      setTop = _useState3[1];\n\n  var _useState4 = useState([]),\n      basicRow = _useState4[0],\n      setBasicRow = _useState4[1];\n\n  var _useState5 = useState(columnlist.process),\n      column = _useState5[0],\n      setColumn = _useState5[1];\n\n  var _useState6 = useState(new Set()),\n      selectList = _useState6[0],\n      setSelectList = _useState6[1];\n\n  var _useState7 = useState(optList),\n      optionList = _useState7[0],\n      setOptionList = _useState7[1];\n\n  var _useState8 = useState(0),\n      optionIndex = _useState8[0],\n      setOptionIndex = _useState8[1]; // const [keyword, setKeyword] = useState<string>('')\n\n\n  var _useState9 = useState({\n    page: page,\n    total: 1\n  }),\n      pageInfo = _useState9[0],\n      setPageInfo = _useState9[1];\n\n  useEffect(function () {\n    if (keyword) {\n      SearchBasic(keyword, option, page).then(function () {\n        Notiflix.Loading.remove();\n      });\n    } else {\n      LoadBasic(page).then(function () {\n        Notiflix.Loading.remove();\n      });\n    }\n  }, [page, keyword, option]);\n\n  var SaveBasic = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return RequestMethod('post', \"processSave\", {\n                processes: basicRow.map(function (row, i) {\n                  if (selectList.has(row.id)) {\n                    var selectKey = [];\n                    var additional = [];\n                    column.map(function (v) {\n                      if (v.selectList) {\n                        selectKey.push(v.key);\n                      }\n\n                      if (v.type === 'additional') {\n                        additional.push(v);\n                      }\n                    });\n                    var selectData = {};\n                    return _objectSpread(_objectSpread(_objectSpread({}, row), selectData), {}, {\n                      additional: _toConsumableArray(additional.map(function (v) {\n                        if (row[v.name]) {\n                          return {\n                            id: v.id,\n                            title: v.name,\n                            value: row[v.name],\n                            unit: v.unit\n                          };\n                        }\n                      }).filter(function (v) {\n                        return v;\n                      }))\n                    });\n                  }\n                }).filter(function (v) {\n                  return v;\n                })\n              });\n\n            case 2:\n              res = _context.sent;\n\n              if (res) {\n                if (res.status === 200) {\n                  Notiflix.Report.success('저장되었습니다.', '', '확인');\n\n                  if (keyword) {\n                    SearchBasic(keyword, option, page).then(function () {\n                      Notiflix.Loading.remove();\n                    });\n                  } else {\n                    LoadBasic(page).then(function () {\n                      Notiflix.Loading.remove();\n                    });\n                  }\n                }\n              }\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function SaveBasic() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var DeleteBasic = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return RequestMethod('delete', \"processDelete\", {\n                processes: basicRow.map(function (row, i) {\n                  if (selectList.has(row.id)) {\n                    var pk = \"\";\n                    Object.keys(row).map(function (v) {\n                      if (v.indexOf(\"_id\") !== -1) {\n                        pk = v;\n                      }\n                    });\n                    return row[pk];\n                  }\n                }).filter(function (v) {\n                  return v;\n                })\n              });\n\n            case 2:\n              res = _context2.sent;\n\n              if (res) {\n                if (res.status === 200) {\n                  Notiflix.Report.success('삭제 성공!', '공정 데이터를 삭제하였습니다.', '확인', function () {\n                    if (Number(page) === 1) {\n                      LoadBasic(1).then(function () {\n                        Notiflix.Loading.remove();\n                      });\n                    } else {\n                      if (keyword) {\n                        router.push(\"/mes/basic/process?page=1&keyword=\".concat(keyword, \"&opt=\").concat(option));\n                      } else {\n                        router.push(\"/mes/basic/process?page=1\");\n                      }\n                    }\n                  });\n                }\n              }\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function DeleteBasic() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var LoadBasic = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(page) {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              Notiflix.Loading.circle();\n              _context3.next = 3;\n              return RequestMethod('get', \"processList\", {\n                path: {\n                  page: page || page !== 0 ? page : 1,\n                  renderItem: 18\n                }\n              });\n\n            case 3:\n              res = _context3.sent;\n\n              if (res && res.status === 200) {\n                if (res.results.totalPages < page) {\n                  LoadBasic(page - 1).then(function () {\n                    Notiflix.Loading.remove();\n                  });\n                } else {\n                  setPageInfo(_objectSpread(_objectSpread({}, pageInfo), {}, {\n                    page: res.results.page,\n                    total: res.results.totalPages\n                  }));\n                  cleanUpData(res);\n                }\n              } else if (res.state === 401) {\n                Notiflix.Report.failure('불러올 수 없습니다.', '권한이 없습니다.', '확인', function () {\n                  router.back();\n                });\n              }\n\n            case 5:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function LoadBasic(_x) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  var SearchBasic = /*#__PURE__*/function () {\n    var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(keyword, option, isPaging) {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              if (!isPaging) {\n                setOptionIndex(option);\n              }\n\n              _context4.next = 3;\n              return RequestMethod('get', \"processSearch\", {\n                path: {\n                  page: isPaging !== null && isPaging !== void 0 ? isPaging : 1,\n                  renderItem: 18\n                },\n                params: {\n                  keyword: keyword !== null && keyword !== void 0 ? keyword : '',\n                  opt: option !== null && option !== void 0 ? option : 0\n                }\n              });\n\n            case 3:\n              res = _context4.sent;\n\n              if (res && res.status === 200) {\n                setPageInfo(_objectSpread(_objectSpread({}, pageInfo), {}, {\n                  page: res.results.page,\n                  total: res.results.totalPages\n                }));\n                cleanUpData(res);\n              }\n\n            case 5:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    return function SearchBasic(_x2, _x3, _x4) {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n\n  var changeRow = function changeRow(row) {\n    var tmpData = {};\n\n    if (row.additional && row.additional.length) {\n      row.additional.map(function (v) {\n        tmpData = _objectSpread(_objectSpread({}, tmpData), {}, _defineProperty({}, v.key, v.value));\n      });\n    }\n\n    return _objectSpread({\n      process_id: row.process_id,\n      name: row.name\n    }, tmpData);\n  };\n\n  var cleanUpBasicData = function cleanUpBasicData(res) {\n    var tmpRow = res.data.results.info_list;\n    var tmpBasicRow = tmpRow.map(function (row, index) {\n      var realTableData = changeRow(row);\n      var appendAdditional = {};\n      row.additional && row.additional.map(function (v) {\n        appendAdditional = _objectSpread(_objectSpread({}, appendAdditional), {}, _defineProperty({}, v.title, v.value));\n      });\n      var random_id = Math.random() * 1000;\n      return _objectSpread(_objectSpread(_objectSpread({}, realTableData), appendAdditional), {}, {\n        id: \"process_\".concat(random_id)\n      });\n    });\n    setBasicRow(_toConsumableArray(tmpBasicRow));\n  };\n\n  var cleanUpData = function cleanUpData(res) {\n    var tmpColumn = columnlist.process;\n    var tmpRow = [];\n    tmpColumn = tmpColumn.map(function (column) {\n      var menuData;\n      res.results.menus && res.results.menus.map(function (menu) {\n        if (menu.colName === column.key) {\n          menuData = {\n            id: menu.id,\n            name: menu.title,\n            width: menu.width,\n            tab: menu.tab,\n            unit: menu.unit,\n            moddable: !menu.moddable\n          };\n        } else if (menu.colName === 'id' && column.key === 'tmpId') {\n          menuData = {\n            id: menu.id,\n            name: menu.title,\n            width: menu.width,\n            tab: menu.tab,\n            unit: menu.unit,\n            moddable: !menu.moddable\n          };\n        }\n      });\n\n      if (menuData) {\n        return _objectSpread(_objectSpread({}, column), menuData);\n      }\n    }).filter(function (v) {\n      return v;\n    });\n    var additionalMenus = res.results.menus ? res.results.menus.map(function (menu) {\n      if (menu.colName === null) {\n        return {\n          id: menu.id,\n          name: menu.title,\n          width: menu.width,\n          key: menu.title,\n          editor: TextEditor,\n          type: 'additional',\n          unit: menu.unit\n        };\n      }\n    }).filter(function (v) {\n      return v;\n    }) : [];\n    setColumn([].concat(_toConsumableArray(tmpColumn.map(function (v) {\n      return _objectSpread(_objectSpread({}, v), {}, {\n        name: v.moddable ? v.name + '(필수)' : v.name\n      });\n    })), _toConsumableArray(additionalMenus)));\n    tmpRow = res.results.info_list;\n    var additionalData = [];\n    additionalMenus.map(function (v) {\n      if (v.type === 'additional') {\n        additionalData.push(v.key);\n      }\n    });\n    var tmpBasicRow = tmpRow.map(function (row, index) {\n      var realTableData = changeRow(row);\n      var appendAdditional = {};\n      row.additional && row.additional.map(function (v) {\n        appendAdditional = _objectSpread(_objectSpread({}, appendAdditional), {}, _defineProperty({}, v.title, v.value));\n      });\n      var random_id = Math.random() * 1000;\n      return _objectSpread(_objectSpread(_objectSpread({}, realTableData), appendAdditional), {}, {\n        id: \"process_\".concat(random_id)\n      });\n    });\n    setBasicRow(_toConsumableArray(tmpBasicRow));\n  };\n\n  var downloadExcel = function downloadExcel() {\n    var tmpSelectList = [];\n    basicRow.map(function (row) {\n      tmpSelectList.push(selectList.has(row.id));\n    });\n    excelDownload(column, basicRow, \"process\", 'process', tmpSelectList);\n  };\n\n  var onClickHeaderButton = function onClickHeaderButton(index) {\n    switch (index) {\n      case 0:\n        setExcelUploadOpen(true);\n        break;\n\n      case 1:\n        setExcelOpen(true);\n        break;\n\n      case 2:\n        router.push(\"/mes/item/manage/process\");\n        break;\n\n      case 3:\n        var items = {};\n        column.map(function (value) {\n          if (value.selectList && value.selectList.length) {\n            var _objectSpread5;\n\n            items = _objectSpread(_objectSpread({}, value.selectList[0]), {}, (_objectSpread5 = {}, _defineProperty(_objectSpread5, value.key, value.selectList[0].name), _defineProperty(_objectSpread5, value.key + 'PK', value.selectList[0].pk), _objectSpread5), items);\n          }\n        });\n        var random_id = Math.random() * 1000;\n        setBasicRow([_objectSpread(_objectSpread({}, items), {}, {\n          id: \"process_\".concat(random_id),\n          name: null,\n          additional: []\n        })].concat(_toConsumableArray(basicRow)));\n        break;\n\n      case 4:\n        SaveBasic();\n        break;\n\n      case 5:\n        Notiflix.Confirm.show(\"경고\", \"삭제하시겠습니까?\", \"확인\", \"취소\", function () {\n          DeleteBasic();\n        }, function () {});\n        break;\n    }\n  };\n\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 401,\n      columnNumber: 5\n    }\n  }, __jsx(PageHeader, {\n    isSearch: true,\n    searchKeyword: keyword,\n    onChangeSearchKeyword: function onChangeSearchKeyword(keyword) {\n      if (keyword) {\n        router.push(\"/mes/basic/process?page=1&keyword=\".concat(keyword, \"&opt=\").concat(optionIndex));\n      } else {\n        router.push(\"/mes/basic/process?page=1&keyword=\");\n      }\n    },\n    searchOptionList: optionList,\n    onChangeSearchOption: function onChangeSearchOption(option) {\n      setOptionIndex(option);\n    },\n    title: title,\n    buttons: ['엑셀로 등록', '엑셀로 받기', '항목관리', '행 추가', '저장하기', '삭제'],\n    buttonsOnclick: onClickHeaderButton,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 402,\n      columnNumber: 7\n    }\n  }), __jsx(ExcelTable, {\n    editable: true,\n    resizable: true,\n    pageInfo: pageInfo,\n    headerList: [SelectColumn].concat(_toConsumableArray(column)),\n    top: top,\n    setTop: setTop,\n    row: basicRow // setRow={setBasicRow}\n    ,\n    setRow: function setRow(e) {\n      var tmp = selectList;\n      e.map(function (v) {\n        if (v.isChange) tmp.add(v.id);\n      });\n      setSelectList(tmp);\n      setBasicRow(e);\n    },\n    selectList: selectList //@ts-ignore\n    ,\n    setSelectList: setSelectList,\n    loadEvent: LoadBasic,\n    height: basicRow.length * 40 >= 40 * 18 + 56 ? 40 * 19 : basicRow.length * 40 + 56,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 420,\n      columnNumber: 7\n    }\n  }), __jsx(PaginationComponent, {\n    currentPage: pageInfo.page,\n    totalPage: pageInfo.total,\n    setPage: function setPage(page) {\n      if (keyword) {\n        router.push(\"/mes/basic/process?page=\".concat(page, \"&keyword=\").concat(keyword, \"&opt=\").concat(option));\n      } else {\n        router.push(\"/mes/basic/process?page=\".concat(page));\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 446,\n      columnNumber: 7\n    }\n  }));\n};\n\n_s(BasicProcess, \"jkT8S+LkYypI/Cjh4Kht4+G3Luc=\", false, function () {\n  return [useRouter];\n});\n\n_c = BasicProcess;\nexport var getServerSideProps = function getServerSideProps(ctx) {\n  var _ctx$query$page, _ctx$query$keyword, _ctx$query$opt;\n\n  return {\n    props: {\n      page: (_ctx$query$page = ctx.query.page) !== null && _ctx$query$page !== void 0 ? _ctx$query$page : 1,\n      keyword: (_ctx$query$keyword = ctx.query.keyword) !== null && _ctx$query$keyword !== void 0 ? _ctx$query$keyword : \"\",\n      option: (_ctx$query$opt = ctx.query.opt) !== null && _ctx$query$opt !== void 0 ? _ctx$query$opt : 0\n    }\n  };\n};\nexport { BasicProcess };\n\nvar _c;\n\n$RefreshReg$(_c, \"BasicProcess\");","map":{"version":3,"sources":["/Users/user/Desktop/sizl/mono_pop/packages/basic/src/container/BasicProcess.tsx"],"names":["React","useEffect","useState","ExcelTable","Header","PageHeader","RequestMethod","columnlist","TextEditor","excelDownload","PaginationComponent","SelectColumn","Notiflix","useRouter","title","optList","BasicProcess","page","keyword","option","router","excelOpen","setExcelOpen","excelUploadOpen","setExcelUploadOpen","top","setTop","basicRow","setBasicRow","process","column","setColumn","Set","selectList","setSelectList","optionList","setOptionList","optionIndex","setOptionIndex","total","pageInfo","setPageInfo","SearchBasic","then","Loading","remove","LoadBasic","SaveBasic","processes","map","row","i","has","id","selectKey","additional","v","push","key","type","selectData","name","value","unit","filter","res","status","Report","success","DeleteBasic","pk","Object","keys","indexOf","Number","circle","path","renderItem","results","totalPages","cleanUpData","state","failure","back","isPaging","params","opt","changeRow","tmpData","length","process_id","cleanUpBasicData","tmpRow","data","info_list","tmpBasicRow","index","realTableData","appendAdditional","random_id","Math","random","tmpColumn","menuData","menus","menu","colName","width","tab","moddable","additionalMenus","editor","additionalData","downloadExcel","tmpSelectList","onClickHeaderButton","items","Confirm","show","e","tmp","isChange","add","getServerSideProps","ctx","props","query"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react'\nimport {\n  ExcelTable,\n  Header as PageHeader,\n  RequestMethod,\n  columnlist,\n  MAX_VALUE,\n  DropDownEditor,\n  TextEditor,\n  excelDownload,\n  PaginationComponent,\n  ExcelDownloadModal,\n  IExcelHeaderType, IItemMenuType\n} from 'shared'\n// @ts-ignore\nimport {SelectColumn} from 'react-data-grid'\nimport Notiflix from \"notiflix\";\nimport {useRouter} from 'next/router'\nimport {loadAll} from 'react-cookies'\nimport {NextPageContext} from 'next'\n\nexport interface IProps {\n  children?: any\n  page?: number\n  keyword?: string\n  option?: number\n}\n\nconst title = '공정 종류 관리'\nconst optList = ['공정명']\nconst BasicProcess = ({page, keyword, option}: IProps) => {\n  const router = useRouter()\n\n  const [excelOpen, setExcelOpen] = useState<boolean>(false)\n  const [excelUploadOpen, setExcelUploadOpen] = useState<boolean>(false)\n\n  const [top, setTop] = useState<number>(0)\n  const [basicRow, setBasicRow] = useState<Array<any>>([])\n  const [column, setColumn] = useState<Array<IExcelHeaderType>>(columnlist.process)\n  const [selectList, setSelectList] = useState<Set<number>>(new Set())\n  const [optionList, setOptionList] = useState<string[]>(optList)\n  const [optionIndex, setOptionIndex] = useState<number>(0)\n  // const [keyword, setKeyword] = useState<string>('')\n  const [pageInfo, setPageInfo] = useState<{page: number, total: number}>({\n    page: page,\n    total: 1\n  })\n\n  useEffect(() => {\n    if(keyword){\n      SearchBasic(keyword, option, page).then(() => {\n        Notiflix.Loading.remove()\n      })\n    }else{\n      LoadBasic(page).then(() => {\n        Notiflix.Loading.remove()\n      })\n    }\n  }, [page, keyword, option])\n\n  const SaveBasic = async () => {\n    let res = await RequestMethod('post', `processSave`,\n      {\n        processes: basicRow.map((row, i) => {\n          if(selectList.has(row.id)){\n            let selectKey: string[] = []\n            let additional:any[] = []\n            column.map((v) => {\n              if(v.selectList){\n                selectKey.push(v.key)\n              }\n\n              if(v.type === 'additional'){\n                additional.push(v)\n              }\n            })\n\n            let selectData: any = {}\n\n            return {\n              ...row,\n              ...selectData,\n              additional: [\n                ...additional.map(v => {\n                  if(row[v.name]) {\n                    return {\n                      id: v.id,\n                      title: v.name,\n                      value: row[v.name],\n                      unit: v.unit\n                    }\n                  }\n                }).filter((v) => v)\n              ]\n            }\n\n          }\n        }).filter((v) => v)\n      })\n\n    if(res){\n      if(res.status === 200){\n        Notiflix.Report.success('저장되었습니다.','','확인');\n        if(keyword){\n          SearchBasic(keyword, option, page).then(() => {\n            Notiflix.Loading.remove()\n          })\n        }else{\n          LoadBasic(page).then(() => {\n            Notiflix.Loading.remove()\n          })\n        }\n      }\n    }\n  }\n\n  const DeleteBasic = async () => {\n    const res = await RequestMethod('delete', `processDelete`,\n      {\n        processes: basicRow.map((row, i) => {\n          if(selectList.has(row.id)){\n            let pk = \"\"\n            Object.keys(row).map((v:string) => {\n              if(v.indexOf(\"_id\") !== -1){\n                pk = v\n              }\n            })\n\n            return row[pk]\n          }\n        }).filter((v) => v)\n      })\n\n    if(res) {\n      if(res.status === 200){\n        Notiflix.Report.success('삭제 성공!', '공정 데이터를 삭제하였습니다.', '확인', () => {\n          if(Number(page) === 1){\n            LoadBasic(1).then(() => {\n              Notiflix.Loading.remove()\n            })\n          }else{\n            if(keyword){\n              router.push(`/mes/basic/process?page=1&keyword=${keyword}&opt=${option}`)\n            }else{\n              router.push(`/mes/basic/process?page=1`)\n            }\n          }\n        })\n      }\n    }\n  }\n\n  const LoadBasic = async (page?: number) => {\n    Notiflix.Loading.circle()\n    const res = await RequestMethod('get', `processList`,{\n      path: {\n        page: (page || page !== 0) ? page : 1,\n        renderItem: 18,\n      }\n    })\n\n    if(res && res.status === 200){\n      if(res.results.totalPages < page){\n        LoadBasic(page - 1).then(() => {\n          Notiflix.Loading.remove()\n        })\n      }else{\n        setPageInfo({\n          ...pageInfo,\n          page: res.results.page,\n          total: res.results.totalPages\n        })\n        cleanUpData(res)\n      }\n    }else if (res.state === 401) {\n      Notiflix.Report.failure('불러올 수 없습니다.', '권한이 없습니다.', '확인', () => {\n        router.back()\n      })\n    }\n  }\n\n  const SearchBasic = async (keyword: any, option: number, isPaging?: number) => {\n    if(!isPaging){\n      setOptionIndex(option)\n    }\n\n    const res = await RequestMethod('get', `processSearch`,{\n      path: {\n        page: isPaging ?? 1,\n        renderItem: 18,\n      },\n      params: {\n        keyword: keyword ?? '',\n        opt: option ?? 0\n      }\n    })\n\n    if(res && res.status === 200){\n      setPageInfo({\n        ...pageInfo,\n        page: res.results.page,\n        total: res.results.totalPages\n      })\n      cleanUpData(res)\n    }\n  }\n\n  const changeRow = (row: any) => {\n    let tmpData = {}\n\n    if(row.additional && row.additional.length) {\n      row.additional.map(v => {\n        tmpData = {\n          ...tmpData,\n          [v.key]: v.value\n        }\n      })\n    }\n\n    return {\n      process_id: row.process_id,\n      name: row.name,\n      ...tmpData\n    }\n  }\n  const cleanUpBasicData = (res:any) => {\n    let tmpRow = res.data.results.info_list;\n\n    let tmpBasicRow = tmpRow.map((row: any, index: number) => {\n      let realTableData: any = changeRow(row)\n      let appendAdditional: any = {}\n\n      row.additional && row.additional.map((v: any) => {\n        appendAdditional = {\n          ...appendAdditional,\n          [v.title]: v.value\n        }\n      })\n\n      const random_id = Math.random()*1000\n\n      return {\n        ...realTableData,\n        ...appendAdditional,\n        id: `process_${random_id}`,\n      }\n    })\n    setBasicRow([...tmpBasicRow])\n  }\n  const cleanUpData = (res: any) => {\n    let tmpColumn = columnlist.process\n    let tmpRow = []\n    tmpColumn = tmpColumn.map((column: any) => {\n      let menuData: object | undefined;\n      res.results.menus && res.results.menus.map((menu: any) => {\n        if(menu.colName === column.key){\n          menuData = {\n            id: menu.id,\n            name: menu.title,\n            width: menu.width,\n            tab:menu.tab,\n            unit:menu.unit,\n            moddable: !menu.moddable\n          }\n        } else if(menu.colName === 'id' && column.key === 'tmpId'){\n          menuData = {\n            id: menu.id,\n            name: menu.title,\n            width: menu.width,\n            tab:menu.tab,\n            unit:menu.unit,\n            moddable: !menu.moddable\n          }\n        }\n      })\n\n      if(menuData){\n        return {\n          ...column,\n          ...menuData\n        }\n      }\n    }).filter((v:any) => v)\n\n    let additionalMenus = res.results.menus ? res.results.menus.map((menu:any) => {\n      if(menu.colName === null){\n        return {\n          id: menu.id,\n          name: menu.title,\n          width: menu.width,\n          key: menu.title,\n          editor: TextEditor,\n          type: 'additional',\n          unit: menu.unit\n        }\n      }\n    }).filter((v: any) => v) : []\n\n    setColumn([...tmpColumn.map(v=> {\n      return {\n        ...v,\n        name: v.moddable ? v.name+'(필수)' : v.name\n      }\n    }), ...additionalMenus])\n\n    tmpRow = res.results.info_list\n\n    let additionalData: any[] = []\n\n    additionalMenus.map((v: any) => {\n      if(v.type === 'additional'){\n        additionalData.push(v.key)\n      }\n    })\n\n    let tmpBasicRow = tmpRow.map((row: any, index: number) => {\n      let realTableData: any = changeRow(row)\n      let appendAdditional: any = {}\n\n      row.additional && row.additional.map((v: any) => {\n        appendAdditional = {\n          ...appendAdditional,\n          [v.title]: v.value\n        }\n      })\n\n      const random_id = Math.random()*1000\n\n      return {\n        ...realTableData,\n        ...appendAdditional,\n        id: `process_${random_id}`,\n      }\n    })\n\n    setBasicRow([...tmpBasicRow])\n  }\n\n  const downloadExcel = () => {\n    let tmpSelectList: boolean[] = []\n    basicRow.map(row => {\n      tmpSelectList.push(selectList.has(row.id))\n    })\n    excelDownload(column, basicRow, `process`, 'process', tmpSelectList)\n  }\n\n  const onClickHeaderButton = (index: number) => {\n    switch(index){\n      case 0:\n        setExcelUploadOpen(true)\n        break;\n      case 1:\n        setExcelOpen(true)\n        break;\n      case 2:\n        router.push(`/mes/item/manage/process`)\n        break;\n      case 3:\n        let items = {}\n\n        column.map((value) => {\n          if(value.selectList && value.selectList.length){\n            items = {\n              ...value.selectList[0],\n              [value.key] : value.selectList[0].name,\n              [value.key+'PK'] : value.selectList[0].pk,//여기 봐야됨!\n              ...items,\n            }\n          }\n        })\n\n        const random_id = Math.random()*1000\n\n        setBasicRow([\n          {\n            ...items,\n            id: `process_${random_id}`,\n            name: null,\n            additional: [],\n          },\n          ...basicRow\n        ])\n        break;\n\n      case 4:\n        SaveBasic()\n\n        break;\n      case 5:\n        Notiflix.Confirm.show(\"경고\",\"삭제하시겠습니까?\",\"확인\",\"취소\",\n          ()=>{DeleteBasic()},\n          ()=>{}\n        )\n\n        break;\n\n    }\n  }\n\n  return (\n    <div>\n      <PageHeader\n        isSearch\n        searchKeyword={keyword}\n        onChangeSearchKeyword={(keyword) => {\n          if(keyword){\n            router.push(`/mes/basic/process?page=1&keyword=${keyword}&opt=${optionIndex}`)\n          }else{\n            router.push(`/mes/basic/process?page=1&keyword=`)\n          }\n        }}\n        searchOptionList={optionList}\n        onChangeSearchOption={(option) => {\n          setOptionIndex(option)\n        }}\n        title={title}\n        buttons={['엑셀로 등록','엑셀로 받기', '항목관리', '행 추가', '저장하기', '삭제']}\n        buttonsOnclick={onClickHeaderButton}\n      />\n      <ExcelTable\n        editable\n        resizable\n        pageInfo={pageInfo}\n        headerList={[\n          SelectColumn,\n          ...column\n        ]}\n        top={top}\n        setTop={setTop}\n        row={basicRow}\n        // setRow={setBasicRow}\n        setRow={(e) => {\n          let tmp: Set<any> = selectList\n          e.map(v => {\n            if(v.isChange) tmp.add(v.id)\n          })\n          setSelectList(tmp)\n          setBasicRow(e)\n        }}\n        selectList={selectList}\n        //@ts-ignore\n        setSelectList={setSelectList}\n        loadEvent={LoadBasic}\n        height={basicRow.length * 40 >= 40*18+56 ? 40*19 : basicRow.length * 40 + 56}\n      />\n      <PaginationComponent\n        currentPage={pageInfo.page}\n        totalPage={pageInfo.total}\n        setPage={(page) => {\n          if(keyword){\n            router.push(`/mes/basic/process?page=${page}&keyword=${keyword}&opt=${option}`)\n          }else{\n            router.push(`/mes/basic/process?page=${page}`)\n          }\n        }}\n      />\n    </div>\n  );\n}\n\nexport const getServerSideProps = (ctx: NextPageContext) => {\n  return {\n    props: {\n      page: ctx.query.page ?? 1,\n      keyword: ctx.query.keyword ?? \"\",\n      option: ctx.query.opt ?? 0,\n    }\n  }\n}\n\nexport {BasicProcess};\n"]},"metadata":{},"sourceType":"module"}