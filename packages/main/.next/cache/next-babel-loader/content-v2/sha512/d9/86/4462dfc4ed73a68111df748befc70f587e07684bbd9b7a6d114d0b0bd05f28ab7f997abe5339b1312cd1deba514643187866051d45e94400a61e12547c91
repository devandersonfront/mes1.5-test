{"ast":null,"code":"var _jsxFileName = \"/Users/user/Desktop/sizl/mono_pop/packages/main/pages/mes/basic/user/index.tsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect, useState } from 'react'; // import ExcelTable from '../../../../component/Excel/ExcelTable'\n\nimport { ExcelTable } from 'shared';\nimport MenuNavigation from '../../../../component/MenuNav/MenuNavigation';\nimport ProfileHeader from '../../../../component/Profile/ProfileHeader';\nimport PageHeader from '../../../../component/Header/Header'; // @ts-ignore\n\nimport { SelectColumn } from 'react-data-grid';\nimport { RequestMethod } from '../../../../common/RequestFunctions';\nimport { columnlist } from \"../../../../common/columnInit\";\nimport Notiflix from \"notiflix\";\nimport { useRouter } from 'next/router';\nimport TextEditor from '../../../../component/InputBox/ExcelBasicInputBox';\nimport { excelDownload } from '../../../../common/excelDownloadFunction';\nimport PaginationComponent from '../../../../component/Pagination/PaginationComponent';\nimport ExcelDownloadModal from '../../../../component/Modal/ExcelDownloadMoadal';\nimport ExcelUploadModal from \"../../../../component/Modal/ExcelUploadModal\";\nconst title = '유저 관리';\nconst optList = ['사용자명', '이메일', '직책명', '전화번호', '권한명'];\n\nconst BasicContainer = ({\n  page,\n  keyword,\n  option\n}) => {\n  const router = useRouter();\n  const {\n    0: excelDownOpen,\n    1: setExcelDownOpen\n  } = useState(false);\n  const {\n    0: excelUploadOpen,\n    1: setExcelUploadOpen\n  } = useState(false);\n  const {\n    0: basicRow,\n    1: setBasicRow\n  } = useState([{\n    name: \"\",\n    id: \"\"\n  }]);\n  const {\n    0: column,\n    1: setColumn\n  } = useState(columnlist.member);\n  const {\n    0: selectList,\n    1: setSelectList\n  } = useState(new Set());\n  const {\n    0: optionList,\n    1: setOptionList\n  } = useState(optList);\n  const {\n    0: optionIndex,\n    1: setOptionIndex\n  } = useState(0);\n  const {\n    0: pageInfo,\n    1: setPageInfo\n  } = useState({\n    page: 1,\n    total: 1\n  });\n  useEffect(() => {\n    if (keyword) {\n      SearchBasic(keyword, option, page);\n    } else {\n      LoadBasic(page).then(() => {});\n    }\n  }, [page, keyword, option]);\n\n  const loadAllSelectItems = async column => {\n    let tmpColumn = column.map(async v => {\n      if (v.selectList && v.selectList.length === 0) {\n        const res = await RequestMethod('get', `${v.key}All`);\n        return _objectSpread(_objectSpread({}, v), {}, {\n          selectList: [...res.results.map(value => {\n            return _objectSpread(_objectSpread({}, value), {}, {\n              pk: value.ca_id\n            });\n          })]\n        });\n      } else {\n        if (v.selectList) {\n          return _objectSpread(_objectSpread({}, v), {}, {\n            pk: v.unit_id\n          });\n        } else {\n          return v;\n        }\n      }\n    });\n    Promise.all(tmpColumn).then(res => {\n      setColumn([...res.map(v => {\n        return _objectSpread(_objectSpread({}, v), {}, {\n          name: v.moddable ? v.name + '(필수)' : v.name\n        });\n      })]);\n    });\n  };\n\n  const SaveBasic = async () => {\n    let res = await RequestMethod('post', `memberSave`, {\n      members: basicRow.map((row, i) => {\n        if (selectList.has(row.id)) {\n          let additional = [];\n          column.map(v => {\n            if (v.type === 'additional') {\n              additional.push(v);\n            }\n          });\n          let selectData = {};\n          return _objectSpread(_objectSpread(_objectSpread({}, row), selectData), {}, {\n            id: row.tmpId,\n            authority: row.authorityPK,\n            additional: [...additional.map(v => {\n              if (row[v.name]) {\n                return {\n                  id: v.id,\n                  title: v.name,\n                  value: row[v.name],\n                  unit: v.unit\n                };\n              }\n            }).filter(v => v)]\n          });\n        }\n      }).filter(v => v)\n    });\n\n    if (res) {\n      if (res.status === 200) {\n        Notiflix.Report.success('저장되었습니다.', '', '확인');\n\n        if (keyword) {\n          SearchBasic(keyword, option, page).then(() => {\n            Notiflix.Loading.remove();\n          });\n        } else {\n          LoadBasic(page).then(() => {\n            Notiflix.Loading.remove();\n          });\n        }\n      }\n    }\n  };\n\n  const DeleteBasic = async () => {\n    const res = await RequestMethod('delete', `memberDelete`, {\n      members: basicRow.map((row, i) => {\n        if (selectList.has(row.id)) {\n          return row.tmpId;\n        }\n      }).filter(v => v)\n    });\n\n    if (res) {\n      if (res.status === 200) {\n        Notiflix.Report.success('삭제되었습니다.', '', '확인');\n\n        if (keyword) {\n          SearchBasic(keyword, option, page).then(() => {\n            Notiflix.Loading.remove();\n          });\n        } else {\n          LoadBasic(page).then(() => {\n            Notiflix.Loading.remove();\n          });\n        }\n      }\n    }\n  };\n\n  const LoadBasic = async page => {\n    const res = await RequestMethod('get', `memberList`, {\n      path: {\n        page: page || page !== 0 ? page : 1,\n        renderItem: 18\n      }\n    });\n\n    if (res && res.status === 200) {\n      if (res.results.totalPages < page) {\n        LoadBasic(page - 1);\n      } else {\n        setPageInfo(_objectSpread(_objectSpread({}, pageInfo), {}, {\n          page: res.results.page,\n          total: res.results.totalPages\n        }));\n        cleanUpData(res);\n      }\n    } else if (res.state === 401) {\n      Notiflix.Report.failure('불러올 수 없습니다.', '권한이 없습니다.', '확인', () => {\n        router.back();\n      });\n    }\n  };\n\n  const SearchBasic = async (keyword, option, isPaging) => {\n    if (!isPaging) {\n      setOptionIndex(option);\n    }\n\n    const res = await RequestMethod('get', `memberSearch`, {\n      path: {\n        page: isPaging !== null && isPaging !== void 0 ? isPaging : 1,\n        renderItem: 18\n      },\n      params: {\n        keyword: keyword !== null && keyword !== void 0 ? keyword : '',\n        opt: option !== null && option !== void 0 ? option : 0\n      }\n    });\n\n    if (res && res.status === 200) {\n      setPageInfo(_objectSpread(_objectSpread({}, pageInfo), {}, {\n        page: res.results.page,\n        total: res.results.totalPages\n      }));\n      cleanUpData(res);\n    }\n  };\n\n  const changeRow = row => {\n    let tmpData = {};\n\n    if (row.additional && row.additional.length) {\n      row.additional.map(v => {\n        tmpData = _objectSpread(_objectSpread({}, tmpData), {}, {\n          [v.key]: v.value\n        });\n      });\n    }\n\n    return _objectSpread({\n      user_id: row.user_id,\n      name: row.name,\n      appointment: row.appointment,\n      telephone: row.telephone,\n      email: row.email,\n      authority: row.authority.name,\n      authorityPK: row.authority.ca_id,\n      tmpId: row.id,\n      password: null\n    }, tmpData);\n  };\n\n  const cleanUpBasicData = res => {\n    let tmpRow = res.data.results.info_list;\n    let tmpBasicRow = tmpRow.map((row, index) => {\n      let realTableData = changeRow(row);\n      let appendAdditional = {};\n      row.additional && row.additional.map(v => {\n        appendAdditional = _objectSpread(_objectSpread({}, appendAdditional), {}, {\n          [v.title]: v.value\n        });\n      });\n      const random_id = Math.random() * 1000;\n      return _objectSpread(_objectSpread(_objectSpread(_objectSpread({}, row), realTableData), appendAdditional), {}, {\n        id: `process_${random_id}`\n      });\n    });\n    setBasicRow([...tmpBasicRow]);\n  };\n\n  const cleanUpData = res => {\n    let tmpColumn = columnlist.member;\n    let tmpRow = [];\n    tmpColumn = tmpColumn.map(column => {\n      let menuData;\n      res.results.menus && res.results.menus.map(menu => {\n        if (menu.colName === column.key) {\n          menuData = {\n            id: menu.id,\n            name: menu.title,\n            width: menu.width,\n            tab: menu.tab,\n            unit: menu.unit,\n            moddable: !menu.moddable\n          };\n        } else if (menu.colName === 'id' && column.key === 'tmpId') {\n          menuData = {\n            id: menu.id,\n            name: menu.title,\n            width: menu.width,\n            tab: menu.tab,\n            unit: menu.unit,\n            moddable: !menu.moddable\n          };\n        }\n      });\n\n      if (menuData) {\n        return _objectSpread(_objectSpread({}, column), menuData);\n      }\n    }).filter(v => v);\n    let additionalMenus = res.results.menus ? res.results.menus.map(menu => {\n      if (menu.colName === null) {\n        return {\n          id: menu.id,\n          name: menu.title,\n          width: menu.width,\n          key: menu.title,\n          editor: TextEditor,\n          type: 'additional',\n          unit: menu.unit\n        };\n      }\n    }).filter(v => v) : [];\n    tmpRow = res.results.info_list;\n    loadAllSelectItems([...tmpColumn, ...additionalMenus]);\n    let additionalData = [];\n    additionalMenus.map(v => {\n      if (v.type === 'additional') {\n        additionalData.push(v.key);\n      }\n    });\n    let tmpBasicRow = tmpRow.map((row, index) => {\n      let realTableData = changeRow(row);\n      let appendAdditional = {};\n      row.additional && row.additional.map(v => {\n        appendAdditional = _objectSpread(_objectSpread({}, appendAdditional), {}, {\n          [v.title]: v.value\n        });\n      });\n      const random_id = Math.random() * 1000;\n      return _objectSpread(_objectSpread(_objectSpread(_objectSpread({}, row), realTableData), appendAdditional), {}, {\n        id: `process_${random_id}`\n      });\n    });\n    setBasicRow([...tmpBasicRow]);\n  };\n\n  const downloadExcel = () => {\n    let tmpSelectList = [];\n    basicRow.map(row => {\n      tmpSelectList.push(selectList.has(row.id));\n    });\n    excelDownload(column, basicRow, `process`, 'process', tmpSelectList);\n  };\n\n  const onClickHeaderButton = index => {\n    switch (index) {\n      case 0:\n        setExcelUploadOpen(true);\n        break;\n\n      case 1:\n        setExcelDownOpen(true);\n        break;\n\n      case 2:\n        router.push(`/mes/item/manage/member`);\n        break;\n\n      case 3:\n        let items = {};\n        column.map(value => {\n          if (value.selectList && value.selectList.length) {\n            items = _objectSpread(_objectSpread({}, value.selectList[0]), {}, {\n              [value.key]: value.selectList[0].name,\n              [value.key + 'PK']: value.selectList[0].ca_id\n            }, items);\n          }\n        });\n        const random_id = Math.random() * 1000;\n        setBasicRow([_objectSpread(_objectSpread({}, items), {}, {\n          id: `member_${random_id}`,\n          name: null,\n          additional: []\n        }), ...basicRow]);\n        break;\n\n      case 4:\n        SaveBasic();\n        break;\n\n      case 5:\n        Notiflix.Confirm.show(\"경고\", \"삭제하시겠습니까?\", \"확인\", \"취소\", () => {\n          DeleteBasic();\n        }, () => {});\n        break;\n    }\n  };\n\n  return __jsx(\"div\", {\n    style: {\n      display: 'flex'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 430,\n      columnNumber: 5\n    }\n  }, __jsx(MenuNavigation, {\n    pageType: 'BASIC',\n    subType: 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 431,\n      columnNumber: 7\n    }\n  }), __jsx(\"div\", {\n    style: {\n      paddingBottom: 40\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 432,\n      columnNumber: 7\n    }\n  }, __jsx(ProfileHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 433,\n      columnNumber: 9\n    }\n  }), __jsx(PageHeader, {\n    isSearch: true,\n    searchKeyword: keyword,\n    onChangeSearchKeyword: keyword => {\n      if (keyword) {\n        router.push(`/mes/basic/user?page=1&keyword=${keyword}&opt=${optionIndex}`);\n      } else {\n        router.push(`/mes/basic/user?page=1&keyword=`);\n      }\n    },\n    searchOptionList: optionList,\n    onChangeSearchOption: option => {\n      setOptionIndex(option);\n    },\n    optionIndex: optionIndex,\n    title: title,\n    buttons: [\"엑셀로 등록\", '엑셀로 받기', '항목관리', '행 추가', '저장하기', '삭제'],\n    buttonsOnclick: onClickHeaderButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 434,\n      columnNumber: 9\n    }\n  }), __jsx(ExcelTable, {\n    editable: true,\n    resizable: true,\n    headerList: [SelectColumn, ...column],\n    row: basicRow // setRow={setBasicRow}\n    ,\n    setRow: e => {\n      let tmp = selectList;\n      e.map(v => {\n        if (v.isChange) tmp.add(v.id);\n      });\n      setSelectList(tmp);\n      setBasicRow(e);\n    },\n    selectList: selectList //@ts-ignore\n    ,\n    setSelectList: setSelectList,\n    height: basicRow.length * 40 >= 40 * 18 + 40 ? 40 * 19 + 16 : basicRow.length * 40 + 56,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 453,\n      columnNumber: 9\n    }\n  }), __jsx(PaginationComponent, {\n    currentPage: pageInfo.page,\n    totalPage: pageInfo.total,\n    setPage: page => {\n      if (keyword) {\n        router.push(`/mes/basic/user?page=${page}&keyword=${keyword}&opt=${option}`);\n      } else {\n        router.push(`/mes/basic/user?page=${page}`);\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 475,\n      columnNumber: 9\n    }\n  })), __jsx(ExcelDownloadModal, {\n    isOpen: excelDownOpen,\n    column: column,\n    basicRow: basicRow,\n    filename: `유저관리`,\n    sheetname: `유저관리`,\n    selectList: selectList,\n    tab: 'ROLE_HR_01',\n    setIsOpen: setExcelDownOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 487,\n      columnNumber: 7\n    }\n  }), __jsx(ExcelUploadModal, {\n    isOpen: excelUploadOpen,\n    setIsOpen: setExcelUploadOpen,\n    tab: 'ROLE_HR_01',\n    cleanUpBasicData: cleanUpBasicData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 497,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport const getServerSideProps = ctx => {\n  var _ctx$query$page, _ctx$query$keyword, _ctx$query$opt;\n\n  return {\n    props: {\n      page: (_ctx$query$page = ctx.query.page) !== null && _ctx$query$page !== void 0 ? _ctx$query$page : 1,\n      keyword: (_ctx$query$keyword = ctx.query.keyword) !== null && _ctx$query$keyword !== void 0 ? _ctx$query$keyword : \"\",\n      option: (_ctx$query$opt = ctx.query.opt) !== null && _ctx$query$opt !== void 0 ? _ctx$query$opt : 0\n    }\n  };\n}; // BasicContainer.getInitialProps = async ({ query }) => {\n//   let { page, keyword, opt } = query\n//   if (typeof page === 'string')\n//     page = parseInt(page);\n//   if (typeof opt === 'string')\n//     opt = parseInt(opt);\n//   return { page, keyword, option: opt };\n// }\n\nexport default BasicContainer;","map":{"version":3,"sources":["/Users/user/Desktop/sizl/mono_pop/packages/main/pages/mes/basic/user/index.tsx"],"names":["React","useEffect","useState","ExcelTable","MenuNavigation","ProfileHeader","PageHeader","SelectColumn","RequestMethod","columnlist","Notiflix","useRouter","TextEditor","excelDownload","PaginationComponent","ExcelDownloadModal","ExcelUploadModal","title","optList","BasicContainer","page","keyword","option","router","excelDownOpen","setExcelDownOpen","excelUploadOpen","setExcelUploadOpen","basicRow","setBasicRow","name","id","column","setColumn","member","selectList","setSelectList","Set","optionList","setOptionList","optionIndex","setOptionIndex","pageInfo","setPageInfo","total","SearchBasic","LoadBasic","then","loadAllSelectItems","tmpColumn","map","v","length","res","key","results","value","pk","ca_id","unit_id","Promise","all","moddable","SaveBasic","members","row","i","has","additional","type","push","selectData","tmpId","authority","authorityPK","unit","filter","status","Report","success","Loading","remove","DeleteBasic","path","renderItem","totalPages","cleanUpData","state","failure","back","isPaging","params","opt","changeRow","tmpData","user_id","appointment","telephone","email","password","cleanUpBasicData","tmpRow","data","info_list","tmpBasicRow","index","realTableData","appendAdditional","random_id","Math","random","menuData","menus","menu","colName","width","tab","additionalMenus","editor","additionalData","downloadExcel","tmpSelectList","onClickHeaderButton","items","Confirm","show","display","paddingBottom","e","tmp","isChange","add","getServerSideProps","ctx","props","query"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react'\n// import ExcelTable from '../../../../component/Excel/ExcelTable'\nimport {ExcelTable} from 'shared'\nimport MenuNavigation from '../../../../component/MenuNav/MenuNavigation'\nimport ProfileHeader from '../../../../component/Profile/ProfileHeader'\nimport PageHeader from '../../../../component/Header/Header'\n// @ts-ignore\nimport {SelectColumn} from 'react-data-grid'\nimport {IExcelHeaderType, IItemMenuType} from '../../../../common/@types/type'\nimport {RequestMethod} from '../../../../common/RequestFunctions'\nimport {columnlist} from \"../../../../common/columnInit\";\nimport Notiflix from \"notiflix\";\nimport {useRouter} from 'next/router'\nimport {MAX_VALUE} from '../../../../common/configset'\nimport DropDownEditor from '../../../../component/Dropdown/ExcelBasicDropdown'\nimport TextEditor from '../../../../component/InputBox/ExcelBasicInputBox'\nimport {excelDownload} from '../../../../common/excelDownloadFunction'\nimport {loadAll} from 'react-cookies'\nimport {useDispatch, useSelector} from \"react-redux\";\nimport rootReducer, {RootState} from \"../../../../reducer\";\nimport PaginationComponent from '../../../../component/Pagination/PaginationComponent'\nimport {NextPageContext} from 'next'\nimport ExcelDownloadModal from '../../../../component/Modal/ExcelDownloadMoadal'\nimport ExcelUploadModal from \"../../../../component/Modal/ExcelUploadModal\";\n\ninterface IProps {\n  children?: any\n  page?: number\n  keyword?: string\n  option?: number\n}\n\nconst title = '유저 관리'\nconst optList = ['사용자명', '이메일', '직책명', '전화번호', '권한명']\n\nconst BasicContainer = ({page, keyword, option}: IProps) => {\n  const router = useRouter()\n\n  const [excelDownOpen, setExcelDownOpen] = useState<boolean>(false)\n  const [excelUploadOpen, setExcelUploadOpen] = useState<boolean>(false);\n\n  const [basicRow, setBasicRow] = useState<Array<any>>([{\n    name: \"\", id: \"\"\n  }])\n  const [column, setColumn] = useState<Array<IExcelHeaderType>>(columnlist.member)\n  const [selectList, setSelectList] = useState<Set<any>>(new Set())\n  const [optionList, setOptionList] = useState<string[]>(optList)\n  const [optionIndex, setOptionIndex] = useState<number>(0)\n\n  const [pageInfo, setPageInfo] = useState<{page: number, total: number}>({\n    page: 1,\n    total: 1\n  })\n\n  useEffect(() => {\n    if(keyword){\n      SearchBasic(keyword, option, page)\n    }else{\n      LoadBasic(page).then(() => {})\n    }\n  }, [page, keyword, option])\n\n  const loadAllSelectItems = async (column: IExcelHeaderType[]) => {\n    let tmpColumn = column.map(async (v: any) => {\n      if(v.selectList && v.selectList.length === 0){\n        const res = await RequestMethod('get', `${v.key}All`, )\n\n        return {\n          ...v,\n          selectList: [...res.results.map((value: any) => {\n            return {\n              ...value,\n              pk: value.ca_id\n            }\n          })]\n        }\n      }else{\n        if(v.selectList){\n          return {\n            ...v,\n            pk: v.unit_id\n          }\n        }else{\n          return v\n        }\n      }\n    })\n\n    Promise.all(tmpColumn).then(res => {\n      setColumn([...res.map(v=> {\n        return {\n          ...v,\n          name: v.moddable ? v.name+'(필수)' : v.name\n        }\n      })])\n    })\n  }\n\n  const SaveBasic = async () => {\n    let res = await RequestMethod('post', `memberSave`,\n    {\n      members: basicRow.map((row, i) => {\n        if(selectList.has(row.id)){\n          let additional:any[] = []\n          column.map((v) => {\n            if(v.type === 'additional'){\n              additional.push(v)\n            }\n          })\n\n          let selectData: any = {}\n\n          return {\n            ...row,\n            ...selectData,\n            id: row.tmpId,\n            authority: row.authorityPK,\n            additional: [\n              ...additional.map(v => {\n                if(row[v.name]) {\n                  return {\n                    id: v.id,\n                    title: v.name,\n                    value: row[v.name],\n                    unit: v.unit\n                  }\n                }\n              }).filter((v) => v)\n            ]\n          }\n\n        }\n      }).filter((v) => v)\n    })\n\n    if(res){\n      if(res.status === 200){\n        Notiflix.Report.success('저장되었습니다.','','확인');\n        if(keyword){\n          SearchBasic(keyword, option, page).then(() => {\n            Notiflix.Loading.remove()\n          })\n        }else{\n          LoadBasic(page).then(() => {\n            Notiflix.Loading.remove()\n          })\n        }\n      }\n    }\n  }\n\n  const DeleteBasic = async () => {\n\n      const res = await RequestMethod('delete', `memberDelete`,\n        {\n          members: basicRow.map((row, i) => {\n            if(selectList.has(row.id)){\n\n              return row.tmpId\n            }\n          }).filter((v) => v)\n        })\n\n      if(res) {\n        if(res.status === 200){\n          Notiflix.Report.success('삭제되었습니다.','','확인');\n          if(keyword){\n            SearchBasic(keyword, option, page).then(() => {\n              Notiflix.Loading.remove()\n            })\n          }else{\n            LoadBasic(page).then(() => {\n              Notiflix.Loading.remove()\n            })\n          }\n        }\n      }\n\n  }\n\n  const LoadBasic = async (page?: number) => {\n    const res = await RequestMethod('get', `memberList`,{\n      path: {\n        page: (page || page !== 0) ? page : 1,\n        renderItem: 18,\n      }\n    })\n\n    if(res && res.status === 200){\n      if(res.results.totalPages < page){\n        LoadBasic(page - 1)\n      }else{\n        setPageInfo({\n          ...pageInfo,\n          page: res.results.page,\n          total: res.results.totalPages\n        })\n        cleanUpData(res)\n      }\n    }else if (res.state === 401) {\n      Notiflix.Report.failure('불러올 수 없습니다.', '권한이 없습니다.', '확인', () => {\n        router.back()\n      })\n    }\n  }\n\n  const SearchBasic = async (keyword: any, option: number, isPaging?: number) => {\n    if(!isPaging){\n      setOptionIndex(option)\n    }\n    const res = await RequestMethod('get', `memberSearch`,{\n      path: {\n        page: isPaging ?? 1,\n        renderItem: 18,\n      },\n      params: {\n        keyword: keyword ?? '',\n        opt: option ?? 0\n      }\n    })\n\n    if(res && res.status === 200){\n      setPageInfo({\n        ...pageInfo,\n        page: res.results.page,\n        total: res.results.totalPages\n      })\n      cleanUpData(res)\n    }\n  }\n\n  const changeRow = (row: any) => {\n    let tmpData = {}\n\n    if(row.additional && row.additional.length) {\n      row.additional.map(v => {\n        tmpData = {\n          ...tmpData,\n          [v.key]: v.value\n        }\n      })\n    }\n\n    return {\n      user_id: row.user_id,\n      name: row.name,\n      appointment: row.appointment,\n      telephone: row.telephone,\n      email: row.email,\n      authority: row.authority.name,\n      authorityPK: row.authority.ca_id,\n      tmpId: row.id,\n      password: null,\n      ...tmpData\n    }\n  }\n\n  const cleanUpBasicData = (res:any) => {\n    let tmpRow = res.data.results.info_list;\n\n    let tmpBasicRow = tmpRow.map((row: any, index: number) => {\n      let realTableData: any = changeRow(row)\n      let appendAdditional: any = {}\n\n      row.additional && row.additional.map((v: any) => {\n        appendAdditional = {\n          ...appendAdditional,\n          [v.title]: v.value\n        }\n      })\n\n      const random_id = Math.random()*1000\n\n      return {\n        ...row,\n        ...realTableData,\n        ...appendAdditional,\n        id: `process_${random_id}`,\n      }\n    })\n    setBasicRow([...tmpBasicRow])\n  }\n\n  const cleanUpData = (res: any) => {\n    let tmpColumn = columnlist.member\n    let tmpRow = []\n    tmpColumn = tmpColumn.map((column: any) => {\n      let menuData: object | undefined;\n      res.results.menus && res.results.menus.map((menu: any) => {\n        if(menu.colName === column.key){\n          menuData = {\n            id: menu.id,\n            name: menu.title,\n            width: menu.width,\n            tab:menu.tab,\n            unit:menu.unit,\n            moddable: !menu.moddable\n          }\n        } else if(menu.colName === 'id' && column.key === 'tmpId'){\n          menuData = {\n            id: menu.id,\n            name: menu.title,\n            width: menu.width,\n            tab:menu.tab,\n            unit:menu.unit,\n            moddable: !menu.moddable\n          }\n        }\n      })\n\n      if(menuData){\n        return {\n          ...column,\n          ...menuData\n        }\n      }\n    }).filter((v:any) => v)\n\n    let additionalMenus = res.results.menus ? res.results.menus.map((menu:any) => {\n      if(menu.colName === null){\n        return {\n          id: menu.id,\n          name: menu.title,\n          width: menu.width,\n          key: menu.title,\n          editor: TextEditor,\n          type: 'additional',\n          unit: menu.unit\n        }\n      }\n    }).filter((v: any) => v) : []\n    tmpRow = res.results.info_list\n\n    loadAllSelectItems([...tmpColumn, ...additionalMenus])\n\n    let additionalData: any[] = []\n\n    additionalMenus.map((v: any) => {\n      if(v.type === 'additional'){\n        additionalData.push(v.key)\n      }\n    })\n\n    let tmpBasicRow = tmpRow.map((row: any, index: number) => {\n      let realTableData: any = changeRow(row)\n      let appendAdditional: any = {}\n\n      row.additional && row.additional.map((v: any) => {\n        appendAdditional = {\n          ...appendAdditional,\n          [v.title]: v.value\n        }\n      })\n\n      const random_id = Math.random()*1000\n\n      return {\n        ...row,\n        ...realTableData,\n        ...appendAdditional,\n        id: `process_${random_id}`,\n      }\n    })\n    setBasicRow([...tmpBasicRow])\n  }\n\n  const downloadExcel = () => {\n    let tmpSelectList: boolean[] = []\n    basicRow.map(row => {\n      tmpSelectList.push(selectList.has(row.id))\n    })\n    excelDownload(column, basicRow, `process`, 'process', tmpSelectList)\n  }\n\n  const onClickHeaderButton = (index: number) => {\n    switch(index){\n      case 0 :\n        setExcelUploadOpen(true)\n        break;\n      case 1:\n        setExcelDownOpen(true)\n        break;\n      case 2:\n          router.push(`/mes/item/manage/member`)\n        break;\n      case 3:\n        let items = {}\n\n        column.map((value) => {\n          if(value.selectList && value.selectList.length){\n            items = {\n              ...value.selectList[0],\n              [value.key] : value.selectList[0].name,\n              [value.key+'PK'] : value.selectList[0].ca_id,//여기 봐야됨!\n              ...items,\n            }\n          }\n        })\n\n        const random_id = Math.random()*1000\n\n        setBasicRow([\n          {\n            ...items,\n            id: `member_${random_id}`,\n            name: null,\n            additional: [],\n          },\n          ...basicRow\n        ])\n        break;\n\n      case 4:\n        SaveBasic()\n\n        break;\n      case 5:\n        Notiflix.Confirm.show(\"경고\",\"삭제하시겠습니까?\",\"확인\",\"취소\",\n            ()=>{\n              DeleteBasic()\n            }\n            ,\n            ()=>{});\n        break;\n\n    }\n  }\n\n  return (\n    <div style={{display: 'flex', }}>\n      <MenuNavigation pageType={'BASIC'} subType={0}/>\n      <div style={{paddingBottom: 40}}>\n        <ProfileHeader/>\n        <PageHeader\n          isSearch\n          searchKeyword={keyword}\n          onChangeSearchKeyword={(keyword) => {\n            if(keyword){\n              router.push(`/mes/basic/user?page=1&keyword=${keyword}&opt=${optionIndex}`)\n            }else{\n              router.push(`/mes/basic/user?page=1&keyword=`)\n            }\n          }}\n          searchOptionList={optionList}\n          onChangeSearchOption={(option) => {\n            setOptionIndex(option)\n          }}\n          optionIndex={optionIndex}\n          title={title}\n          buttons={[\"엑셀로 등록\",'엑셀로 받기', '항목관리', '행 추가', '저장하기', '삭제']}\n          buttonsOnclick={onClickHeaderButton}\n        />\n        <ExcelTable\n          editable\n          resizable\n          headerList={[\n            SelectColumn,\n            ...column\n          ]}\n          row={basicRow}\n          // setRow={setBasicRow}\n          setRow={(e) => {\n            let tmp: Set<any> = selectList\n            e.map(v => {\n              if(v.isChange) tmp.add(v.id)\n            })\n            setSelectList(tmp)\n            setBasicRow(e)\n          }}\n          selectList={selectList}\n          //@ts-ignore\n          setSelectList={setSelectList}\n          height={basicRow.length * 40 >= 40*18+40 ? 40*19+16 : basicRow.length * 40 + 56}\n        />\n        <PaginationComponent\n          currentPage={pageInfo.page}\n          totalPage={pageInfo.total}\n          setPage={(page) => {\n            if(keyword){\n              router.push(`/mes/basic/user?page=${page}&keyword=${keyword}&opt=${option}`)\n            }else{\n              router.push(`/mes/basic/user?page=${page}`)\n            }\n          }}\n        />\n      </div>\n      <ExcelDownloadModal\n        isOpen={excelDownOpen}\n        column={column}\n        basicRow={basicRow}\n        filename={`유저관리`}\n        sheetname={`유저관리`}\n        selectList={selectList}\n        tab={'ROLE_HR_01'}\n        setIsOpen={setExcelDownOpen}\n      />\n      <ExcelUploadModal\n          isOpen={excelUploadOpen}\n          setIsOpen={setExcelUploadOpen}\n          tab={'ROLE_HR_01'}\n          cleanUpBasicData={cleanUpBasicData}\n      />\n    </div>\n  );\n}\n\nexport const getServerSideProps = (ctx: NextPageContext) => {\n  return {\n    props: {\n      page: ctx.query.page ?? 1,\n      keyword: ctx.query.keyword ?? \"\",\n      option: ctx.query.opt ?? 0,\n    }\n  }\n}\n\n// BasicContainer.getInitialProps = async ({ query }) => {\n//   let { page, keyword, opt } = query\n//   if (typeof page === 'string')\n//     page = parseInt(page);\n//   if (typeof opt === 'string')\n//     opt = parseInt(opt);\n//   return { page, keyword, option: opt };\n// }\n\nexport default BasicContainer;\n"]},"metadata":{},"sourceType":"module"}