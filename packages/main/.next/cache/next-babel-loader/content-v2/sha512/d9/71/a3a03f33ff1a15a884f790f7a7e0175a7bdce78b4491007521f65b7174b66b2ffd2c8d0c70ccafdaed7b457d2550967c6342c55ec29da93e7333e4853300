{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/user/Desktop/sizl/mono_pop/node_modules/next/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport _regeneratorRuntime from \"/Users/user/Desktop/sizl/mono_pop/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _toConsumableArray from \"/Users/user/Desktop/sizl/mono_pop/node_modules/next/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"/Users/user/Desktop/sizl/mono_pop/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _asyncToGenerator from \"/Users/user/Desktop/sizl/mono_pop/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/Users/user/Desktop/sizl/mono_pop/packages/basic/src/container/BasicCustomer.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    height:32px;\\n    color:white;\\n    border-radius:6px;\\n    font-size:15px;\\n    font-weight:bold;\\n    background:#717C90;\\n    padding: 0 20px;\\n    cursor: pointer;\\n    display:flex;\\n    margin-left: 16px;\\n    justify-content:center;\\n    align-items:center;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useState } from 'react';\nimport { ExcelTable, Header as PageHeader, RequestMethod, columnlist, TextEditor, excelDownload, PaginationComponent } from 'shared'; // @ts-ignore\n\nimport { SelectColumn } from 'react-data-grid';\nimport Notiflix from \"notiflix\";\nimport { useRouter } from 'next/router';\nimport styled from 'styled-components';\nvar title = '권한 관리';\n\nvar BasicCustomer = function BasicCustomer(_ref) {\n  _s();\n\n  var page = _ref.page,\n      keyword = _ref.keyword,\n      option = _ref.option;\n  var router = useRouter();\n\n  var _useState = useState(false),\n      excelOpen = _useState[0],\n      setExcelOpen = _useState[1];\n\n  var _useState2 = useState(false),\n      excelUploadOpen = _useState2[0],\n      setExcelUploadOpen = _useState2[1];\n\n  var _useState3 = useState([{\n    name: \"\",\n    id: \"\"\n  }]),\n      basicRow = _useState3[0],\n      setBasicRow = _useState3[1];\n\n  var _useState4 = useState(columnlist[\"customer\"]),\n      column = _useState4[0],\n      setColumn = _useState4[1];\n\n  var _useState5 = useState(new Set()),\n      selectList = _useState5[0],\n      setSelectList = _useState5[1];\n\n  var _useState6 = useState(['고객사명', '대표자명', '담당자명', '전화 번호', '휴대폰 번호', '팩스 번호', '주소', '사업자 번호']),\n      optionList = _useState6[0],\n      setOptionList = _useState6[1];\n\n  var _useState7 = useState(option),\n      optionIndex = _useState7[0],\n      setOptionIndex = _useState7[1];\n\n  var _useState8 = useState({\n    page: 1,\n    total: 1\n  }),\n      pageInfo = _useState8[0],\n      setPageInfo = _useState8[1];\n\n  useEffect(function () {\n    if (keyword) {\n      SearchBasic(keyword, option, page).then(function () {\n        Notiflix.Loading.remove();\n      });\n    } else {\n      LoadBasic(page).then(function () {\n        Notiflix.Loading.remove();\n      }).then(function () {\n        Notiflix.Loading.remove();\n      });\n    }\n  }, [page, keyword, option]);\n\n  var SaveBasic = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return RequestMethod('post', \"customerSave\", _defineProperty({}, 'customers', basicRow.map(function (row, i) {\n                if (selectList.has(row.id)) {\n                  var selectKey = [];\n                  var additional = [];\n                  column.map(function (v) {\n                    if (v.selectList) {\n                      selectKey.push(v.key);\n                    }\n\n                    if (v.type === 'additional') {\n                      additional.push(v);\n                    }\n                  });\n                  var selectData = {};\n                  Object.keys(row).map(function (v) {\n                    if (v.indexOf('PK') !== -1) {\n                      selectData = _objectSpread(_objectSpread({}, selectData), {}, _defineProperty({}, v.split('PK')[0], row[v]));\n                    }\n\n                    if (v === 'unitWeight') {\n                      selectData = _objectSpread(_objectSpread({}, selectData), {}, {\n                        unitWeight: Number(row['unitWeight'])\n                      });\n                    }\n\n                    if (v === 'tmpId') {\n                      selectData = _objectSpread(_objectSpread({}, selectData), {}, {\n                        id: row['tmpId']\n                      });\n                    }\n                  });\n                  return _objectSpread(_objectSpread(_objectSpread({}, row), selectData), {}, {\n                    additional: _toConsumableArray(additional.map(function (v) {\n                      if (row[v.name]) {\n                        return {\n                          id: v.id,\n                          title: v.name,\n                          value: row[v.name],\n                          unit: v.unit\n                        };\n                      }\n                    }).filter(function (v) {\n                      return v;\n                    }))\n                  });\n                }\n              }).filter(function (v) {\n                return v;\n              })));\n\n            case 2:\n              res = _context.sent;\n\n              if (res) {\n                if (res.status === 200) {\n                  Notiflix.Report.success('저장되었습니다.', '', '확인');\n\n                  if (keyword) {\n                    SearchBasic(keyword, option, page).then(function () {\n                      Notiflix.Loading.remove();\n                    });\n                  } else {\n                    LoadBasic(page).then(function () {\n                      Notiflix.Loading.remove();\n                    });\n                  }\n                }\n              }\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function SaveBasic() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var DeleteBasic = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return RequestMethod('delete', \"customerDelete\", _defineProperty({}, 'customers', basicRow.map(function (row, i) {\n                if (selectList.has(row.id)) {\n                  var pk = \"\";\n                  Object.keys(row).map(function (v) {\n                    if (v.indexOf(\"_id\") !== -1) {\n                      pk = v;\n                    }\n                  });\n                  return row[pk];\n                }\n              }).filter(function (v) {\n                return v;\n              })));\n\n            case 2:\n              res = _context2.sent;\n\n              if (res) {\n                if (res.status === 200) {\n                  Notiflix.Report.success('삭제 성공!', '', '확인', function () {\n                    if (Number(page) === 1) {\n                      LoadBasic(1).then(function () {\n                        Notiflix.Loading.remove();\n                      });\n                    } else {\n                      if (keyword) {\n                        router.push(\"/mes/basic/customer?page=1&keyword=\".concat(keyword, \"&opt=\").concat(option));\n                      } else {\n                        router.push(\"/mes/basic/customer?page=1\");\n                      }\n                    }\n                  });\n                }\n              }\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function DeleteBasic() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var LoadBasic = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(page) {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              Notiflix.Loading.circle();\n              _context3.next = 3;\n              return RequestMethod('get', \"customerList\", {\n                path: {\n                  page: page || page !== 0 ? page : 1,\n                  renderItem: 18\n                }\n              });\n\n            case 3:\n              res = _context3.sent;\n\n              if (res && res.status === 200) {\n                if (res.results.totalPages < page) {\n                  LoadBasic(page - 1);\n                } else {\n                  setPageInfo(_objectSpread(_objectSpread({}, pageInfo), {}, {\n                    page: res.results.page,\n                    total: res.results.totalPages\n                  }));\n                  cleanUpData(res);\n                }\n              } else if (res.state === 401) {\n                Notiflix.Report.failure('불러올 수 없습니다.', '권한이 없습니다.', '확인', function () {\n                  router.back();\n                });\n              }\n\n            case 5:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function LoadBasic(_x) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  var SearchBasic = /*#__PURE__*/function () {\n    var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(keyword, option, isPaging) {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              Notiflix.Loading.circle();\n\n              if (!isPaging) {\n                setOptionIndex(option);\n              }\n\n              _context4.next = 4;\n              return RequestMethod('get', \"customerSearch\", {\n                path: {\n                  page: isPaging !== null && isPaging !== void 0 ? isPaging : 1,\n                  renderItem: 18\n                },\n                params: {\n                  keyword: keyword !== null && keyword !== void 0 ? keyword : '',\n                  opt: option !== null && option !== void 0 ? option : 0\n                }\n              });\n\n            case 4:\n              res = _context4.sent;\n\n              if (res && res.status === 200) {\n                setPageInfo(_objectSpread(_objectSpread({}, pageInfo), {}, {\n                  page: res.results.page,\n                  total: res.results.totalPages\n                }));\n                cleanUpData(res);\n              }\n\n            case 6:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    return function SearchBasic(_x2, _x3, _x4) {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n\n  var cleanUpBasicData = function cleanUpBasicData(res) {\n    var tmpRow = res.data.results.info_list;\n    var tmpBasicRow = tmpRow.map(function (row, index) {\n      var appendAdditional = {};\n      row.additional && row.additional.map(function (v) {\n        appendAdditional = _objectSpread(_objectSpread({}, appendAdditional), {}, _defineProperty({}, v.title, v.value));\n      });\n      var random_id = Math.random() * 1000;\n      return _objectSpread(_objectSpread(_objectSpread({}, row), {}, {\n        customer_id: row.customer_id,\n        name: row.name,\n        rep: row.rep,\n        telephone: row.telephone,\n        manager: row.manager,\n        cellphone: row.cellphone,\n        fax: row.fax,\n        photo: row.photo,\n        crn: row.crn,\n        address: row.address,\n        password: '-'\n      }, appendAdditional), {}, {\n        id: \"customer_\".concat(random_id)\n      });\n    });\n    setBasicRow(_toConsumableArray(tmpBasicRow));\n  };\n\n  var cleanUpData = /*#__PURE__*/function () {\n    var _ref6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(res) {\n      var tmpColumn, tmpRow, additionalMenus, selectKey, additionalData, pk, tmpBasicRow;\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              tmpColumn = columnlist[\"customer\"];\n              tmpRow = [];\n              tmpColumn = tmpColumn.map(function (column) {\n                var menuData;\n                res.results.menus && res.results.menus.map(function (menu) {\n                  if (menu.colName === column.key) {\n                    menuData = {\n                      id: menu.id,\n                      name: menu.title,\n                      width: menu.width,\n                      tab: menu.tab,\n                      unit: menu.unit,\n                      moddable: !menu.moddable\n                    };\n                  } else if (menu.colName === 'id' && column.key === 'tmpId') {\n                    menuData = {\n                      id: menu.id,\n                      name: menu.title,\n                      width: menu.width,\n                      tab: menu.tab,\n                      unit: menu.unit,\n                      moddable: !menu.moddable\n                    };\n                  }\n                });\n\n                if (menuData) {\n                  return _objectSpread(_objectSpread({}, column), menuData);\n                }\n              }).filter(function (v) {\n                return v;\n              });\n              additionalMenus = res.results.menus ? res.results.menus.map(function (menu) {\n                if (menu.colName === null) {\n                  return {\n                    id: menu.id,\n                    name: menu.title,\n                    width: menu.width,\n                    key: menu.title,\n                    editor: TextEditor,\n                    type: 'additional',\n                    unit: menu.unit\n                  };\n                }\n              }).filter(function (v) {\n                return v;\n              }) : [];\n              tmpRow = res.results.info_list;\n              selectKey = \"\";\n              additionalData = [];\n              tmpColumn.map(function (v) {\n                if (v.selectList) {\n                  selectKey = v.key;\n                }\n              });\n              additionalMenus.map(function (v) {\n                if (v.type === 'additional') {\n                  additionalData.push(v.key);\n                }\n              });\n              setColumn([].concat(_toConsumableArray(tmpColumn.map(function (v) {\n                return _objectSpread(_objectSpread({}, v), {}, {\n                  name: v.moddable ? v.name + '(필수)' : v.name\n                });\n              })), _toConsumableArray(additionalMenus)));\n              pk = \"\";\n              Object.keys(tmpRow).map(function (v) {\n                if (v.indexOf('_id') !== -1) {\n                  pk = v;\n                }\n              });\n              tmpBasicRow = tmpRow.map(function (row, index) {\n                var appendAdditional = {};\n                row.additional && row.additional.map(function (v) {\n                  appendAdditional = _objectSpread(_objectSpread({}, appendAdditional), {}, _defineProperty({}, v.title, v.value));\n                });\n                var random_id = Math.random() * 1000;\n                return _objectSpread(_objectSpread(_objectSpread({}, row), {}, {\n                  customer_id: row.customer_id,\n                  name: row.name,\n                  rep: row.rep,\n                  telephone: row.telephone,\n                  manager: row.manager,\n                  cellphone: row.cellphone,\n                  fax: row.fax,\n                  photo: row.photo,\n                  crn: row.crn,\n                  address: row.address,\n                  password: '-'\n                }, appendAdditional), {}, {\n                  id: \"customer_\".concat(random_id)\n                });\n              });\n              setBasicRow(_toConsumableArray(tmpBasicRow));\n\n            case 14:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5);\n    }));\n\n    return function cleanUpData(_x5) {\n      return _ref6.apply(this, arguments);\n    };\n  }();\n\n  var downloadExcel = function downloadExcel() {\n    var tmpSelectList = [];\n    basicRow.map(function (row) {\n      tmpSelectList.push(selectList.has(row.id));\n    });\n    excelDownload(column, basicRow, \"customer\", \"customer\", tmpSelectList);\n  };\n\n  var onClickHeaderButton = function onClickHeaderButton(index) {\n    switch (index) {\n      case 0:\n        setExcelUploadOpen(true);\n        break;\n\n      case 1:\n        setExcelOpen(true);\n        break;\n\n      case 2:\n        router.push(\"/mes/item/manage/customer\");\n        break;\n\n      case 3:\n        var items = {};\n        var random_id = Math.random() * 1000;\n        column.map(function (value) {\n          if (value.selectList && value.selectList.length) {\n            var _objectSpread5;\n\n            items = _objectSpread(_objectSpread({}, value.selectList[0]), {}, (_objectSpread5 = {}, _defineProperty(_objectSpread5, value.key, value.selectList[0].name), _defineProperty(_objectSpread5, value.key + 'PK', value.selectList[0].pk), _objectSpread5), items);\n          }\n        });\n        setBasicRow([_objectSpread(_objectSpread({}, items), {}, {\n          id: \"customer_\".concat(random_id),\n          name: null,\n          additional: []\n        })].concat(_toConsumableArray(basicRow)));\n        break;\n\n      case 4:\n        SaveBasic();\n        break;\n\n      case 5:\n        Notiflix.Confirm.show(\"경고\", \"삭제하시겠습니까?\", \"확인\", \"취소\", function () {\n          DeleteBasic();\n        }, function () {});\n        break;\n    }\n  };\n\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 447,\n      columnNumber: 5\n    }\n  }, __jsx(PageHeader, {\n    isSearch: true,\n    searchKeyword: keyword,\n    onChangeSearchKeyword: function onChangeSearchKeyword(keyword) {\n      if (keyword) {\n        router.push(\"/mes/basic/customer?page=1&keyword=\".concat(keyword, \"&opt=\").concat(optionIndex));\n      } else {\n        router.push(\"/mes/basic/customer?page=1&keyword=\");\n      }\n    },\n    searchOptionList: optionList,\n    onChangeSearchOption: function onChangeSearchOption(option) {\n      setOptionIndex(option);\n    },\n    optionIndex: optionIndex,\n    title: \"거래처 정보 관리\",\n    buttons: [\"엑셀로 등록\", '엑셀로 받기', '항목관리', '행 추가', '저장하기', '삭제'],\n    buttonsOnclick: onClickHeaderButton,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 448,\n      columnNumber: 7\n    }\n  }), __jsx(ExcelTable, {\n    editable: true,\n    resizable: true,\n    headerList: [SelectColumn].concat(_toConsumableArray(column)),\n    row: basicRow // setRow={setBasicRow}\n    ,\n    setRow: function setRow(e) {\n      var tmp = selectList;\n      e.map(function (v) {\n        if (v.isChange) tmp.add(v.id);\n      });\n      setSelectList(tmp);\n      setBasicRow(e);\n    },\n    selectList: selectList //@ts-ignore\n    ,\n    setSelectList: setSelectList,\n    height: basicRow.length * 40 >= 40 * 18 + 56 ? 40 * 19 : basicRow.length * 40 + 56,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 469,\n      columnNumber: 7\n    }\n  }), __jsx(PaginationComponent, {\n    currentPage: pageInfo.page,\n    totalPage: pageInfo.total,\n    setPage: function setPage(page) {\n      if (keyword) {\n        router.push(\"/mes/basic/customer?page=\".concat(page, \"&keyword=\").concat(keyword, \"&opt=\").concat(option));\n      } else {\n        router.push(\"/mes/basic/customer?page=\".concat(page));\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 491,\n      columnNumber: 7\n    }\n  }));\n};\n\n_s(BasicCustomer, \"6+jtr+Wt8ffS/hf8IKi2TeZYl+s=\", false, function () {\n  return [useRouter];\n});\n\n_c = BasicCustomer;\nvar HeaderButton = styled.button(_templateObject());\nexport { BasicCustomer };\n\nvar _c;\n\n$RefreshReg$(_c, \"BasicCustomer\");","map":{"version":3,"sources":["/Users/user/Desktop/sizl/mono_pop/packages/basic/src/container/BasicCustomer.tsx"],"names":["React","useEffect","useState","ExcelTable","Header","PageHeader","RequestMethod","columnlist","TextEditor","excelDownload","PaginationComponent","SelectColumn","Notiflix","useRouter","styled","title","BasicCustomer","page","keyword","option","router","excelOpen","setExcelOpen","excelUploadOpen","setExcelUploadOpen","name","id","basicRow","setBasicRow","column","setColumn","Set","selectList","setSelectList","optionList","setOptionList","optionIndex","setOptionIndex","total","pageInfo","setPageInfo","SearchBasic","then","Loading","remove","LoadBasic","SaveBasic","map","row","i","has","selectKey","additional","v","push","key","type","selectData","Object","keys","indexOf","split","unitWeight","Number","value","unit","filter","res","status","Report","success","DeleteBasic","pk","circle","path","renderItem","results","totalPages","cleanUpData","state","failure","back","isPaging","params","opt","cleanUpBasicData","tmpRow","data","info_list","tmpBasicRow","index","appendAdditional","random_id","Math","random","customer_id","rep","telephone","manager","cellphone","fax","photo","crn","address","password","tmpColumn","menuData","menus","menu","colName","width","tab","moddable","additionalMenus","editor","additionalData","downloadExcel","tmpSelectList","onClickHeaderButton","items","length","Confirm","show","e","tmp","isChange","add","HeaderButton","button"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react'\nimport {\n  ExcelTable,\n  Header as PageHeader,\n  RequestMethod,\n  columnlist,\n  MAX_VALUE,\n  DropDownEditor,\n  TextEditor,\n  excelDownload,\n  PaginationComponent,\n  ExcelDownloadModal,\n  IExcelHeaderType, IItemMenuType\n} from 'shared'\n// @ts-ignore\nimport {SelectColumn} from 'react-data-grid'\nimport Notiflix from \"notiflix\";\nimport {useRouter} from 'next/router'\nimport {loadAll} from 'react-cookies'\nimport {NextPageContext} from 'next'\nimport TreeViewTable from '../../../main/component/TreeView/TreeView'\nimport {IMenu} from '../../../main/common/@types/type'\nimport {AUTHORITY_LIST} from '../../../main/common/configset'\nimport {AxiosResponse} from 'axios'\nimport styled from 'styled-components'\n\nexport interface IProps {\n  children?: any\n  page?: number\n  keyword?: string\n  option?: number\n}\n\nconst title = '권한 관리'\n\nconst BasicCustomer = ({page, keyword, option}: IProps) => {\n  const router = useRouter()\n\n  const [excelOpen, setExcelOpen] = useState<boolean>(false)\n  const [excelUploadOpen, setExcelUploadOpen] = useState<boolean>(false);\n  const [basicRow, setBasicRow] = useState<Array<any>>([{\n    name: \"\", id: \"\"\n  }])\n  const [column, setColumn] = useState<Array<IExcelHeaderType>>(columnlist[\"customer\"]);\n  const [selectList, setSelectList] = useState<Set<number>>(new Set())\n  const [optionList, setOptionList] = useState<string[]>(['고객사명', '대표자명', '담당자명', '전화 번호','휴대폰 번호', '팩스 번호', '주소', '사업자 번호'])\n  const [optionIndex, setOptionIndex] = useState<number>(option)\n\n  const [pageInfo, setPageInfo] = useState<{page: number, total: number}>({\n    page: 1,\n    total: 1\n  })\n\n  useEffect(() => {\n    if(keyword){\n      SearchBasic(keyword, option, page).then(() => {\n        Notiflix.Loading.remove()\n      })\n    }else{\n      LoadBasic(page).then(() => {\n        Notiflix.Loading.remove()\n      }).then(() => {\n        Notiflix.Loading.remove()\n      })\n    }\n  }, [page, keyword, option])\n\n  const SaveBasic = async () => {\n    let res: any\n    res = await RequestMethod('post', `customerSave`,\n      {\n        [ 'customers']: basicRow.map((row, i) => {\n          if(selectList.has(row.id)){\n            let selectKey: string[] = []\n            let additional:any[] = []\n            column.map((v) => {\n              if(v.selectList){\n                selectKey.push(v.key)\n              }\n\n              if(v.type === 'additional'){\n                additional.push(v)\n              }\n            })\n\n            let selectData: any = {}\n\n            Object.keys(row).map(v => {\n              if(v.indexOf('PK') !== -1) {\n                selectData = {\n                  ...selectData,\n                  [v.split('PK')[0]]: row[v]\n                }\n              }\n\n              if(v === 'unitWeight') {\n                selectData = {\n                  ...selectData,\n                  unitWeight: Number(row['unitWeight'])\n                }\n              }\n\n              if(v === 'tmpId') {\n                selectData = {\n                  ...selectData,\n                  id: row['tmpId']\n                }\n              }\n            })\n\n            return {\n              ...row,\n              ...selectData,\n              additional: [\n                ...additional.map(v => {\n                  if(row[v.name]) {\n                    return {\n                      id: v.id,\n                      title: v.name,\n                      value: row[v.name],\n                      unit: v.unit\n                    }\n                  }\n                }).filter((v) => v)\n              ]\n            }\n\n          }\n        }).filter((v) => v)\n      })\n\n\n    if(res){\n      if(res.status === 200){\n        Notiflix.Report.success('저장되었습니다.','','확인');\n        if(keyword){\n          SearchBasic(keyword, option, page).then(() => {\n            Notiflix.Loading.remove()\n          })\n        }else{\n          LoadBasic(page).then(() => {\n            Notiflix.Loading.remove()\n          })\n        }\n      }\n    }\n  }\n\n  const DeleteBasic = async () => {\n    const res = await RequestMethod('delete', `customerDelete`,\n      {\n        [ 'customers']: basicRow.map((row, i) => {\n          if(selectList.has(row.id)){\n            let pk = \"\"\n            Object.keys(row).map((v:string) => {\n              if(v.indexOf(\"_id\") !== -1){\n                pk = v\n              }\n            })\n            return row[pk]\n          }\n        }).filter((v) => v)\n      })\n\n    if(res) {\n      if(res.status === 200){\n        Notiflix.Report.success('삭제 성공!', '', '확인', () => {\n          if(Number(page) === 1){\n            LoadBasic(1).then(() => {\n              Notiflix.Loading.remove()\n            })\n          }else{\n            if(keyword){\n              router.push(`/mes/basic/customer?page=1&keyword=${keyword}&opt=${option}`)\n            }else{\n              router.push(`/mes/basic/customer?page=1`)\n            }\n          }\n        })\n      }\n    }\n  }\n\n  const LoadBasic = async (page?: number) => {\n    Notiflix.Loading.circle()\n    const res = await RequestMethod('get', `customerList`, {\n      path: {\n        page: (page || page !== 0) ? page : 1,\n        renderItem: 18,\n      }\n    })\n\n    if(res && res.status === 200){\n      if(res.results.totalPages < page){\n        LoadBasic(page - 1)\n      }else{\n        setPageInfo({\n          ...pageInfo,\n          page: res.results.page,\n          total: res.results.totalPages\n        })\n        cleanUpData(res)\n      }\n    }else if (res.state === 401) {\n      Notiflix.Report.failure('불러올 수 없습니다.', '권한이 없습니다.', '확인', () => {\n        router.back()\n      })\n    }\n  }\n\n\n  const SearchBasic = async (keyword: any, option: number, isPaging?: number) => {\n    Notiflix.Loading.circle()\n    if(!isPaging){\n      setOptionIndex(option)\n    }\n\n    const res = await RequestMethod('get', `customerSearch`,{\n      path: {\n        page: isPaging ?? 1,\n        renderItem: 18,\n      },\n      params: {\n        keyword: keyword ?? '',\n        opt: option ?? 0\n      }\n    })\n\n    if(res && res.status === 200){\n      setPageInfo({\n        ...pageInfo,\n        page: res.results.page,\n        total: res.results.totalPages\n      })\n      cleanUpData(res)\n    }\n  }\n  const cleanUpBasicData = (res:any) => {\n    let tmpRow = res.data.results.info_list;\n\n    let tmpBasicRow = tmpRow.map((row: any, index: number) => {\n\n      let appendAdditional: any = {}\n\n      row.additional && row.additional.map((v: any) => {\n        appendAdditional = {\n          ...appendAdditional,\n          [v.title]: v.value\n        }\n      })\n      let random_id = Math.random()*1000;\n      return {\n        ...row,\n        customer_id: row.customer_id,\n        name: row.name,\n        rep: row.rep,\n        telephone: row.telephone,\n        manager: row.manager,\n        cellphone: row.cellphone,\n        fax: row.fax,\n        photo: row.photo,\n        crn: row.crn,\n        address: row.address,\n        password: '-',\n        ...appendAdditional,\n        id: `customer_${random_id}`,\n      }\n    })\n    setBasicRow([...tmpBasicRow])\n  }\n  const cleanUpData = async(res: any) => {\n\n    let tmpColumn = columnlist[\"customer\"]\n    let tmpRow = []\n    tmpColumn = tmpColumn.map((column: any) => {\n      let menuData: object | undefined;\n      res.results.menus && res.results.menus.map((menu: any) => {\n        if(menu.colName === column.key){\n          menuData = {\n            id: menu.id,\n            name: menu.title,\n            width: menu.width,\n            tab:menu.tab,\n            unit:menu.unit,\n            moddable: !menu.moddable\n          }\n        } else if(menu.colName === 'id' && column.key === 'tmpId'){\n          menuData = {\n            id: menu.id,\n            name: menu.title,\n            width: menu.width,\n            tab:menu.tab,\n            unit:menu.unit,\n            moddable: !menu.moddable\n          }\n        }\n      })\n\n      if(menuData){\n        return {\n          ...column,\n          ...menuData\n        }\n      }\n    }).filter((v:any) => v)\n\n    let additionalMenus = res.results.menus ? res.results.menus.map((menu:any) => {\n      if(menu.colName === null){\n        return {\n          id: menu.id,\n          name: menu.title,\n          width: menu.width,\n          key: menu.title,\n          editor: TextEditor,\n          type: 'additional',\n          unit: menu.unit\n        }\n      }\n    }).filter((v: any) => v) : []\n\n\n    tmpRow = res.results.info_list\n\n    let selectKey = \"\"\n    let additionalData: any[] = []\n    tmpColumn.map((v: any) => {\n      if(v.selectList){\n        selectKey = v.key\n      }\n    })\n\n    additionalMenus.map((v: any) => {\n      if(v.type === 'additional'){\n        additionalData.push(v.key)\n      }\n    })\n\n    setColumn([...tmpColumn.map(v=> {\n      return {\n        ...v,\n        name: v.moddable ? v.name+'(필수)' : v.name\n      }\n    }), ...additionalMenus])\n\n    let pk = \"\";\n    Object.keys(tmpRow).map((v) => {\n      if(v.indexOf('_id') !== -1){\n        pk = v\n      }\n    })\n\n    let tmpBasicRow = tmpRow.map((row: any, index: number) => {\n\n      let appendAdditional: any = {}\n\n      row.additional && row.additional.map((v: any) => {\n        appendAdditional = {\n          ...appendAdditional,\n          [v.title]: v.value\n        }\n      })\n      let random_id = Math.random()*1000;\n      return {\n        ...row,\n        customer_id: row.customer_id,\n        name: row.name,\n        rep: row.rep,\n        telephone: row.telephone,\n        manager: row.manager,\n        cellphone: row.cellphone,\n        fax: row.fax,\n        photo: row.photo,\n        crn: row.crn,\n        address: row.address,\n        password: '-',\n        ...appendAdditional,\n        id: `customer_${random_id}`,\n      }\n    })\n\n\n    setBasicRow([...tmpBasicRow])\n  }\n\n  const downloadExcel = () => {\n    let tmpSelectList: boolean[] = []\n    basicRow.map(row => {\n      tmpSelectList.push(selectList.has(row.id))\n    })\n    excelDownload(column, basicRow, `${\"customer\"}`, \"customer\", tmpSelectList)\n  }\n\n  const onClickHeaderButton = (index: number) => {\n    switch (index) {\n      case 0:\n        setExcelUploadOpen(true)\n        break;\n      case 1:\n        setExcelOpen(true)\n        break;\n      case 2:\n\n        router.push(`/mes/item/manage/customer`)\n\n        break;\n      case 3:\n        let items = {}\n        let random_id = Math.random()*1000;\n        column.map((value) => {\n          if (value.selectList && value.selectList.length) {\n            items = {\n              ...value.selectList[0],\n              [value.key]: value.selectList[0].name,\n              [value.key + 'PK']: value.selectList[0].pk,//여기 봐야됨!\n              ...items,\n            }\n          }\n        })\n\n        setBasicRow([\n          {\n            ...items,\n            id: `customer_${random_id}`,\n            name: null,\n            additional: [],\n          },\n          ...basicRow\n        ])\n\n        break;\n\n      case 4:\n        SaveBasic()\n\n        break;\n      case 5:\n        Notiflix.Confirm.show(\"경고\",\"삭제하시겠습니까?\",\"확인\",\"취소\",\n          ()=>{DeleteBasic()}\n          ,()=>{}\n        )\n        break;\n\n    }\n  }\n\n  return (\n    <div>\n      <PageHeader\n        isSearch\n        searchKeyword={keyword}\n        onChangeSearchKeyword={(keyword) => {\n          if(keyword){\n            router.push(`/mes/basic/customer?page=1&keyword=${keyword}&opt=${optionIndex}`)\n          }else{\n            router.push(`/mes/basic/customer?page=1&keyword=`)\n          }\n        }}\n        searchOptionList={optionList}\n        onChangeSearchOption={(option) => {\n          setOptionIndex(option)\n        }}\n        optionIndex={optionIndex}\n        title={\"거래처 정보 관리\"}\n        buttons={\n          [\"엑셀로 등록\",'엑셀로 받기', '항목관리', '행 추가', '저장하기', '삭제']\n        }\n        buttonsOnclick={onClickHeaderButton}\n      />\n      <ExcelTable\n        editable\n        resizable\n        headerList={[\n          SelectColumn,\n          ...column\n        ]}\n        row={basicRow}\n        // setRow={setBasicRow}\n        setRow={(e) => {\n          let tmp: Set<any> = selectList\n          e.map(v => {\n            if(v.isChange) tmp.add(v.id)\n          })\n          setSelectList(tmp)\n          setBasicRow(e)\n        }}\n        selectList={selectList}\n        //@ts-ignore\n        setSelectList={setSelectList}\n        height={basicRow.length * 40 >= 40*18+56 ? 40*19 : basicRow.length * 40 + 56}\n      />\n      <PaginationComponent\n        currentPage={pageInfo.page}\n        totalPage={pageInfo.total}\n        setPage={(page) => {\n          if(keyword){\n            router.push(`/mes/basic/customer?page=${page}&keyword=${keyword}&opt=${option}`)\n          }else{\n            router.push(`/mes/basic/customer?page=${page}`)\n          }\n        }}\n      />\n    </div>\n  );\n}\n\nconst HeaderButton = styled.button`\n    height:32px;\n    color:white;\n    border-radius:6px;\n    font-size:15px;\n    font-weight:bold;\n    background:#717C90;\n    padding: 0 20px;\n    cursor: pointer;\n    display:flex;\n    margin-left: 16px;\n    justify-content:center;\n    align-items:center;\n`;\n\nexport {BasicCustomer};\n"]},"metadata":{},"sourceType":"module"}