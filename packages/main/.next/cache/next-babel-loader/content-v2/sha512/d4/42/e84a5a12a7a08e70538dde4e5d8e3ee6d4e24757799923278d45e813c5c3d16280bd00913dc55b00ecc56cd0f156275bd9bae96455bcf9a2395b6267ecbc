{"ast":null,"code":"import _regeneratorRuntime from \"/Users/user/Desktop/sizl/mono_pop/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _toConsumableArray from \"/Users/user/Desktop/sizl/mono_pop/node_modules/next/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"/Users/user/Desktop/sizl/mono_pop/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _asyncToGenerator from \"/Users/user/Desktop/sizl/mono_pop/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/Users/user/Desktop/sizl/mono_pop/packages/main/pages/mes/basic/process/index.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useState } from 'react';\nimport MenuNavigation from '../../../../component/MenuNav/MenuNavigation';\nimport ProfileHeader from '../../../../component/Profile/ProfileHeader';\nimport { RequestMethod } from '../../../../common/RequestFunctions';\nimport { columnlist } from \"../../../../common/columnInit\";\nimport Notiflix from \"notiflix\";\nimport { useRouter } from 'next/router';\nimport TextEditor from '../../../../component/InputBox/ExcelBasicInputBox';\nimport { excelDownload } from '../../../../common/excelDownloadFunction';\nimport { BasicProcess } from '../../../../../basic';\nvar title = '공정 종류 관리';\nvar optList = ['공정명'];\n\nvar BasicContainer = function BasicContainer(_ref) {\n  _s();\n\n  var page = _ref.page,\n      keyword = _ref.keyword,\n      option = _ref.option;\n  var router = useRouter();\n\n  var _useState = useState(false),\n      excelOpen = _useState[0],\n      setExcelOpen = _useState[1];\n\n  var _useState2 = useState(false),\n      excelUploadOpen = _useState2[0],\n      setExcelUploadOpen = _useState2[1];\n\n  var _useState3 = useState(0),\n      top = _useState3[0],\n      setTop = _useState3[1];\n\n  var _useState4 = useState([]),\n      basicRow = _useState4[0],\n      setBasicRow = _useState4[1];\n\n  var _useState5 = useState(columnlist.process),\n      column = _useState5[0],\n      setColumn = _useState5[1];\n\n  var _useState6 = useState(new Set()),\n      selectList = _useState6[0],\n      setSelectList = _useState6[1];\n\n  var _useState7 = useState(optList),\n      optionList = _useState7[0],\n      setOptionList = _useState7[1];\n\n  var _useState8 = useState(0),\n      optionIndex = _useState8[0],\n      setOptionIndex = _useState8[1]; // const [keyword, setKeyword] = useState<string>('')\n\n\n  var _useState9 = useState({\n    page: page,\n    total: 1\n  }),\n      pageInfo = _useState9[0],\n      setPageInfo = _useState9[1];\n\n  useEffect(function () {\n    if (keyword) {\n      SearchBasic(keyword, option, page).then(function () {\n        Notiflix.Loading.remove();\n      });\n    } else {\n      LoadBasic(page).then(function () {\n        Notiflix.Loading.remove();\n      });\n    }\n  }, [page, keyword, option]);\n\n  var SaveBasic = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return RequestMethod('post', \"processSave\", {\n                processes: basicRow.map(function (row, i) {\n                  if (selectList.has(row.id)) {\n                    var selectKey = [];\n                    var additional = [];\n                    column.map(function (v) {\n                      if (v.selectList) {\n                        selectKey.push(v.key);\n                      }\n\n                      if (v.type === 'additional') {\n                        additional.push(v);\n                      }\n                    });\n                    var selectData = {};\n                    return _objectSpread(_objectSpread(_objectSpread({}, row), selectData), {}, {\n                      additional: _toConsumableArray(additional.map(function (v) {\n                        if (row[v.name]) {\n                          return {\n                            id: v.id,\n                            title: v.name,\n                            value: row[v.name],\n                            unit: v.unit\n                          };\n                        }\n                      }).filter(function (v) {\n                        return v;\n                      }))\n                    });\n                  }\n                }).filter(function (v) {\n                  return v;\n                })\n              });\n\n            case 2:\n              res = _context.sent;\n\n              if (res) {\n                if (res.status === 200) {\n                  Notiflix.Report.success('저장되었습니다.', '', '확인');\n\n                  if (keyword) {\n                    SearchBasic(keyword, option, page).then(function () {\n                      Notiflix.Loading.remove();\n                    });\n                  } else {\n                    LoadBasic(page).then(function () {\n                      Notiflix.Loading.remove();\n                    });\n                  }\n                }\n              }\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function SaveBasic() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var DeleteBasic = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return RequestMethod('delete', \"processDelete\", {\n                processes: basicRow.map(function (row, i) {\n                  if (selectList.has(row.id)) {\n                    var pk = \"\";\n                    Object.keys(row).map(function (v) {\n                      if (v.indexOf(\"_id\") !== -1) {\n                        pk = v;\n                      }\n                    });\n                    return row[pk];\n                  }\n                }).filter(function (v) {\n                  return v;\n                })\n              });\n\n            case 2:\n              res = _context2.sent;\n\n              if (res) {\n                if (res.status === 200) {\n                  Notiflix.Report.success('삭제 성공!', '공정 데이터를 삭제하였습니다.', '확인', function () {\n                    if (Number(page) === 1) {\n                      LoadBasic(1).then(function () {\n                        Notiflix.Loading.remove();\n                      });\n                    } else {\n                      if (keyword) {\n                        router.push(\"/mes/basic/process?page=1&keyword=\".concat(keyword, \"&opt=\").concat(option));\n                      } else {\n                        router.push(\"/mes/basic/process?page=1\");\n                      }\n                    }\n                  });\n                }\n              }\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function DeleteBasic() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var LoadBasic = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(page) {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              Notiflix.Loading.circle();\n              _context3.next = 3;\n              return RequestMethod('get', \"processList\", {\n                path: {\n                  page: page || page !== 0 ? page : 1,\n                  renderItem: 18\n                }\n              });\n\n            case 3:\n              res = _context3.sent;\n\n              if (res && res.status === 200) {\n                if (res.results.totalPages < page) {\n                  LoadBasic(page - 1).then(function () {\n                    Notiflix.Loading.remove();\n                  });\n                } else {\n                  setPageInfo(_objectSpread(_objectSpread({}, pageInfo), {}, {\n                    page: res.results.page,\n                    total: res.results.totalPages\n                  }));\n                  cleanUpData(res);\n                }\n              } else if (res.state === 401) {\n                Notiflix.Report.failure('불러올 수 없습니다.', '권한이 없습니다.', '확인', function () {\n                  router.back();\n                });\n              }\n\n            case 5:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function LoadBasic(_x) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  var SearchBasic = /*#__PURE__*/function () {\n    var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(keyword, option, isPaging) {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              if (!isPaging) {\n                setOptionIndex(option);\n              }\n\n              _context4.next = 3;\n              return RequestMethod('get', \"processSearch\", {\n                path: {\n                  page: isPaging !== null && isPaging !== void 0 ? isPaging : 1,\n                  renderItem: 18\n                },\n                params: {\n                  keyword: keyword !== null && keyword !== void 0 ? keyword : '',\n                  opt: option !== null && option !== void 0 ? option : 0\n                }\n              });\n\n            case 3:\n              res = _context4.sent;\n\n              if (res && res.status === 200) {\n                setPageInfo(_objectSpread(_objectSpread({}, pageInfo), {}, {\n                  page: res.results.page,\n                  total: res.results.totalPages\n                }));\n                cleanUpData(res);\n              }\n\n            case 5:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    return function SearchBasic(_x2, _x3, _x4) {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n\n  var changeRow = function changeRow(row) {\n    var tmpData = {};\n\n    if (row.additional && row.additional.length) {\n      row.additional.map(function (v) {\n        tmpData = _objectSpread(_objectSpread({}, tmpData), {}, _defineProperty({}, v.key, v.value));\n      });\n    }\n\n    return _objectSpread({\n      process_id: row.process_id,\n      name: row.name\n    }, tmpData);\n  };\n\n  var cleanUpBasicData = function cleanUpBasicData(res) {\n    var tmpRow = res.data.results.info_list;\n    var tmpBasicRow = tmpRow.map(function (row, index) {\n      var realTableData = changeRow(row);\n      var appendAdditional = {};\n      row.additional && row.additional.map(function (v) {\n        appendAdditional = _objectSpread(_objectSpread({}, appendAdditional), {}, _defineProperty({}, v.title, v.value));\n      });\n      var random_id = Math.random() * 1000;\n      return _objectSpread(_objectSpread(_objectSpread({}, realTableData), appendAdditional), {}, {\n        id: \"process_\".concat(random_id)\n      });\n    });\n    setBasicRow(_toConsumableArray(tmpBasicRow));\n  };\n\n  var cleanUpData = function cleanUpData(res) {\n    var tmpColumn = columnlist.process;\n    var tmpRow = [];\n    tmpColumn = tmpColumn.map(function (column) {\n      var menuData;\n      res.results.menus && res.results.menus.map(function (menu) {\n        if (menu.colName === column.key) {\n          menuData = {\n            id: menu.id,\n            name: menu.title,\n            width: menu.width,\n            tab: menu.tab,\n            unit: menu.unit,\n            moddable: !menu.moddable\n          };\n        } else if (menu.colName === 'id' && column.key === 'tmpId') {\n          menuData = {\n            id: menu.id,\n            name: menu.title,\n            width: menu.width,\n            tab: menu.tab,\n            unit: menu.unit,\n            moddable: !menu.moddable\n          };\n        }\n      });\n\n      if (menuData) {\n        return _objectSpread(_objectSpread({}, column), menuData);\n      }\n    }).filter(function (v) {\n      return v;\n    });\n    var additionalMenus = res.results.menus ? res.results.menus.map(function (menu) {\n      if (menu.colName === null) {\n        return {\n          id: menu.id,\n          name: menu.title,\n          width: menu.width,\n          key: menu.title,\n          editor: TextEditor,\n          type: 'additional',\n          unit: menu.unit\n        };\n      }\n    }).filter(function (v) {\n      return v;\n    }) : [];\n    setColumn([].concat(_toConsumableArray(tmpColumn.map(function (v) {\n      return _objectSpread(_objectSpread({}, v), {}, {\n        name: v.moddable ? v.name + '(필수)' : v.name\n      });\n    })), _toConsumableArray(additionalMenus)));\n    tmpRow = res.results.info_list;\n    var additionalData = [];\n    additionalMenus.map(function (v) {\n      if (v.type === 'additional') {\n        additionalData.push(v.key);\n      }\n    });\n    var tmpBasicRow = tmpRow.map(function (row, index) {\n      var realTableData = changeRow(row);\n      var appendAdditional = {};\n      row.additional && row.additional.map(function (v) {\n        appendAdditional = _objectSpread(_objectSpread({}, appendAdditional), {}, _defineProperty({}, v.title, v.value));\n      });\n      var random_id = Math.random() * 1000;\n      return _objectSpread(_objectSpread(_objectSpread({}, realTableData), appendAdditional), {}, {\n        id: \"process_\".concat(random_id)\n      });\n    });\n    setBasicRow(_toConsumableArray(tmpBasicRow));\n  };\n\n  var downloadExcel = function downloadExcel() {\n    var tmpSelectList = [];\n    basicRow.map(function (row) {\n      tmpSelectList.push(selectList.has(row.id));\n    });\n    excelDownload(column, basicRow, \"process\", 'process', tmpSelectList);\n  };\n\n  var onClickHeaderButton = function onClickHeaderButton(index) {\n    switch (index) {\n      case 0:\n        setExcelUploadOpen(true);\n        break;\n\n      case 1:\n        setExcelOpen(true);\n        break;\n\n      case 2:\n        router.push(\"/mes/item/manage/process\");\n        break;\n\n      case 3:\n        var items = {};\n        column.map(function (value) {\n          if (value.selectList && value.selectList.length) {\n            var _objectSpread5;\n\n            items = _objectSpread(_objectSpread({}, value.selectList[0]), {}, (_objectSpread5 = {}, _defineProperty(_objectSpread5, value.key, value.selectList[0].name), _defineProperty(_objectSpread5, value.key + 'PK', value.selectList[0].pk), _objectSpread5), items);\n          }\n        });\n        var random_id = Math.random() * 1000;\n        setBasicRow([_objectSpread(_objectSpread({}, items), {}, {\n          id: \"process_\".concat(random_id),\n          name: null,\n          additional: []\n        })].concat(_toConsumableArray(basicRow)));\n        break;\n\n      case 4:\n        SaveBasic();\n        break;\n\n      case 5:\n        Notiflix.Confirm.show(\"경고\", \"삭제하시겠습니까?\", \"확인\", \"취소\", function () {\n          DeleteBasic();\n        }, function () {});\n        break;\n    }\n  };\n\n  return __jsx(\"div\", {\n    style: {\n      display: 'flex'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 405,\n      columnNumber: 5\n    }\n  }, __jsx(MenuNavigation, {\n    pageType: 'BASIC',\n    subType: 2,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 406,\n      columnNumber: 7\n    }\n  }), __jsx(\"div\", {\n    style: {\n      paddingBottom: 40\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 407,\n      columnNumber: 7\n    }\n  }, __jsx(ProfileHeader, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 408,\n      columnNumber: 9\n    }\n  }), __jsx(BasicProcess, {\n    keyword: keyword,\n    page: page,\n    option: option,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 409,\n      columnNumber: 9\n    }\n  })));\n};\n\n_s(BasicContainer, \"jkT8S+LkYypI/Cjh4Kht4+G3Luc=\", false, function () {\n  return [useRouter];\n});\n\n_c = BasicContainer;\n// BasicContainer.getInitialProps = async ({ query }) => {\n//   let { page, keyword, opt } = query\n//   if (typeof page === 'string')\n//     page = parseInt(page);\n//   if (typeof opt === 'string')\n//     opt = parseInt(opt);\n//   return { page, keyword, option: opt };\n// }\nexport var __N_SSP = true;\nexport default BasicContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"BasicContainer\");","map":{"version":3,"sources":["/Users/user/Desktop/sizl/mono_pop/packages/main/pages/mes/basic/process/index.tsx"],"names":["React","useEffect","useState","MenuNavigation","ProfileHeader","RequestMethod","columnlist","Notiflix","useRouter","TextEditor","excelDownload","BasicProcess","title","optList","BasicContainer","page","keyword","option","router","excelOpen","setExcelOpen","excelUploadOpen","setExcelUploadOpen","top","setTop","basicRow","setBasicRow","process","column","setColumn","Set","selectList","setSelectList","optionList","setOptionList","optionIndex","setOptionIndex","total","pageInfo","setPageInfo","SearchBasic","then","Loading","remove","LoadBasic","SaveBasic","processes","map","row","i","has","id","selectKey","additional","v","push","key","type","selectData","name","value","unit","filter","res","status","Report","success","DeleteBasic","pk","Object","keys","indexOf","Number","circle","path","renderItem","results","totalPages","cleanUpData","state","failure","back","isPaging","params","opt","changeRow","tmpData","length","process_id","cleanUpBasicData","tmpRow","data","info_list","tmpBasicRow","index","realTableData","appendAdditional","random_id","Math","random","tmpColumn","menuData","menus","menu","colName","width","tab","moddable","additionalMenus","editor","additionalData","downloadExcel","tmpSelectList","onClickHeaderButton","items","Confirm","show","display","paddingBottom"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react'\nimport ExcelTable from '../../../../component/Excel/ExcelTable'\nimport MenuNavigation from '../../../../component/MenuNav/MenuNavigation'\nimport ProfileHeader from '../../../../component/Profile/ProfileHeader'\nimport PageHeader from '../../../../component/Header/Header'\n// @ts-ignore\nimport {SelectColumn} from 'react-data-grid'\nimport {IExcelHeaderType, IItemMenuType} from '../../../../common/@types/type'\nimport {RequestMethod} from '../../../../common/RequestFunctions'\nimport {columnlist} from \"../../../../common/columnInit\";\nimport Notiflix from \"notiflix\";\nimport {useRouter} from 'next/router'\nimport {MAX_VALUE} from '../../../../common/configset'\nimport DropDownEditor from '../../../../component/Dropdown/ExcelBasicDropdown'\nimport TextEditor from '../../../../component/InputBox/ExcelBasicInputBox'\nimport {excelDownload} from '../../../../common/excelDownloadFunction'\nimport {loadAll} from 'react-cookies'\nimport { makeStyles, createStyles } from '@material-ui/core/styles';\nimport PaginationComponent from '../../../../component/Pagination/PaginationComponent'\nimport {NextPageContext} from 'next'\nimport ExcelDownloadModal from '../../../../component/Modal/ExcelDownloadMoadal'\nimport ExcelUploadModal from \"../../../../component/Modal/ExcelUploadModal\";\nimport {BasicProcess} from '../../../../../basic'\n\ninterface IProps {\n  children?: any\n  page?: number\n  keyword?: string\n  option?: number\n}\n\nconst title = '공정 종류 관리'\nconst optList = ['공정명']\n\nconst BasicContainer = ({page, keyword, option}: IProps) => {\n  const router = useRouter()\n\n  const [excelOpen, setExcelOpen] = useState<boolean>(false)\n  const [excelUploadOpen, setExcelUploadOpen] = useState<boolean>(false)\n\n  const [top, setTop] = useState<number>(0)\n  const [basicRow, setBasicRow] = useState<Array<any>>([])\n  const [column, setColumn] = useState<Array<IExcelHeaderType>>(columnlist.process)\n  const [selectList, setSelectList] = useState<Set<number>>(new Set())\n  const [optionList, setOptionList] = useState<string[]>(optList)\n  const [optionIndex, setOptionIndex] = useState<number>(0)\n  // const [keyword, setKeyword] = useState<string>('')\n  const [pageInfo, setPageInfo] = useState<{page: number, total: number}>({\n    page: page,\n    total: 1\n  })\n\n  useEffect(() => {\n    if(keyword){\n      SearchBasic(keyword, option, page).then(() => {\n        Notiflix.Loading.remove()\n      })\n    }else{\n      LoadBasic(page).then(() => {\n        Notiflix.Loading.remove()\n      })\n    }\n  }, [page, keyword, option])\n\n  const SaveBasic = async () => {\n    let res = await RequestMethod('post', `processSave`,\n    {\n      processes: basicRow.map((row, i) => {\n        if(selectList.has(row.id)){\n          let selectKey: string[] = []\n          let additional:any[] = []\n          column.map((v) => {\n            if(v.selectList){\n              selectKey.push(v.key)\n            }\n\n            if(v.type === 'additional'){\n              additional.push(v)\n            }\n          })\n\n          let selectData: any = {}\n\n          return {\n            ...row,\n            ...selectData,\n            additional: [\n              ...additional.map(v => {\n                if(row[v.name]) {\n                  return {\n                    id: v.id,\n                    title: v.name,\n                    value: row[v.name],\n                    unit: v.unit\n                  }\n                }\n              }).filter((v) => v)\n            ]\n          }\n\n        }\n      }).filter((v) => v)\n    })\n\n    if(res){\n      if(res.status === 200){\n        Notiflix.Report.success('저장되었습니다.','','확인');\n        if(keyword){\n          SearchBasic(keyword, option, page).then(() => {\n            Notiflix.Loading.remove()\n          })\n        }else{\n          LoadBasic(page).then(() => {\n            Notiflix.Loading.remove()\n          })\n        }\n      }\n    }\n  }\n\n  const DeleteBasic = async () => {\n    const res = await RequestMethod('delete', `processDelete`,\n      {\n        processes: basicRow.map((row, i) => {\n          if(selectList.has(row.id)){\n            let pk = \"\"\n            Object.keys(row).map((v:string) => {\n              if(v.indexOf(\"_id\") !== -1){\n                pk = v\n              }\n            })\n\n            return row[pk]\n          }\n        }).filter((v) => v)\n      })\n\n    if(res) {\n      if(res.status === 200){\n        Notiflix.Report.success('삭제 성공!', '공정 데이터를 삭제하였습니다.', '확인', () => {\n          if(Number(page) === 1){\n            LoadBasic(1).then(() => {\n              Notiflix.Loading.remove()\n            })\n          }else{\n            if(keyword){\n              router.push(`/mes/basic/process?page=1&keyword=${keyword}&opt=${option}`)\n            }else{\n              router.push(`/mes/basic/process?page=1`)\n            }\n          }\n        })\n      }\n    }\n  }\n\n  const LoadBasic = async (page?: number) => {\n    Notiflix.Loading.circle()\n    const res = await RequestMethod('get', `processList`,{\n      path: {\n        page: (page || page !== 0) ? page : 1,\n        renderItem: 18,\n      }\n    })\n\n    if(res && res.status === 200){\n      if(res.results.totalPages < page){\n        LoadBasic(page - 1).then(() => {\n          Notiflix.Loading.remove()\n        })\n      }else{\n        setPageInfo({\n          ...pageInfo,\n          page: res.results.page,\n          total: res.results.totalPages\n        })\n        cleanUpData(res)\n      }\n    }else if (res.state === 401) {\n      Notiflix.Report.failure('불러올 수 없습니다.', '권한이 없습니다.', '확인', () => {\n        router.back()\n      })\n    }\n  }\n\n  const SearchBasic = async (keyword: any, option: number, isPaging?: number) => {\n    if(!isPaging){\n      setOptionIndex(option)\n    }\n\n    const res = await RequestMethod('get', `processSearch`,{\n      path: {\n        page: isPaging ?? 1,\n        renderItem: 18,\n      },\n      params: {\n        keyword: keyword ?? '',\n        opt: option ?? 0\n      }\n    })\n\n    if(res && res.status === 200){\n      setPageInfo({\n        ...pageInfo,\n        page: res.results.page,\n        total: res.results.totalPages\n      })\n      cleanUpData(res)\n    }\n  }\n\n  const changeRow = (row: any) => {\n    let tmpData = {}\n\n    if(row.additional && row.additional.length) {\n      row.additional.map(v => {\n        tmpData = {\n          ...tmpData,\n          [v.key]: v.value\n        }\n      })\n    }\n\n    return {\n      process_id: row.process_id,\n      name: row.name,\n      ...tmpData\n    }\n  }\n  const cleanUpBasicData = (res:any) => {\n    let tmpRow = res.data.results.info_list;\n\n    let tmpBasicRow = tmpRow.map((row: any, index: number) => {\n      let realTableData: any = changeRow(row)\n      let appendAdditional: any = {}\n\n      row.additional && row.additional.map((v: any) => {\n        appendAdditional = {\n          ...appendAdditional,\n          [v.title]: v.value\n        }\n      })\n\n      const random_id = Math.random()*1000\n\n      return {\n        ...realTableData,\n        ...appendAdditional,\n        id: `process_${random_id}`,\n      }\n    })\n    setBasicRow([...tmpBasicRow])\n  }\n  const cleanUpData = (res: any) => {\n    let tmpColumn = columnlist.process\n    let tmpRow = []\n    tmpColumn = tmpColumn.map((column: any) => {\n      let menuData: object | undefined;\n      res.results.menus && res.results.menus.map((menu: any) => {\n        if(menu.colName === column.key){\n          menuData = {\n            id: menu.id,\n            name: menu.title,\n            width: menu.width,\n            tab:menu.tab,\n            unit:menu.unit,\n            moddable: !menu.moddable\n          }\n        } else if(menu.colName === 'id' && column.key === 'tmpId'){\n          menuData = {\n            id: menu.id,\n            name: menu.title,\n            width: menu.width,\n            tab:menu.tab,\n            unit:menu.unit,\n            moddable: !menu.moddable\n          }\n        }\n      })\n\n      if(menuData){\n        return {\n          ...column,\n          ...menuData\n        }\n      }\n    }).filter((v:any) => v)\n\n    let additionalMenus = res.results.menus ? res.results.menus.map((menu:any) => {\n      if(menu.colName === null){\n        return {\n          id: menu.id,\n          name: menu.title,\n          width: menu.width,\n          key: menu.title,\n          editor: TextEditor,\n          type: 'additional',\n          unit: menu.unit\n        }\n      }\n    }).filter((v: any) => v) : []\n\n    setColumn([...tmpColumn.map(v=> {\n      return {\n        ...v,\n        name: v.moddable ? v.name+'(필수)' : v.name\n      }\n    }), ...additionalMenus])\n\n    tmpRow = res.results.info_list\n\n    let additionalData: any[] = []\n\n    additionalMenus.map((v: any) => {\n      if(v.type === 'additional'){\n        additionalData.push(v.key)\n      }\n    })\n\n    let tmpBasicRow = tmpRow.map((row: any, index: number) => {\n      let realTableData: any = changeRow(row)\n      let appendAdditional: any = {}\n\n      row.additional && row.additional.map((v: any) => {\n        appendAdditional = {\n          ...appendAdditional,\n          [v.title]: v.value\n        }\n      })\n\n      const random_id = Math.random()*1000\n\n      return {\n        ...realTableData,\n        ...appendAdditional,\n        id: `process_${random_id}`,\n      }\n    })\n\n    setBasicRow([...tmpBasicRow])\n  }\n\n  const downloadExcel = () => {\n    let tmpSelectList: boolean[] = []\n    basicRow.map(row => {\n      tmpSelectList.push(selectList.has(row.id))\n    })\n    excelDownload(column, basicRow, `process`, 'process', tmpSelectList)\n  }\n\n  const onClickHeaderButton = (index: number) => {\n    switch(index){\n      case 0:\n        setExcelUploadOpen(true)\n        break;\n      case 1:\n        setExcelOpen(true)\n        break;\n      case 2:\n          router.push(`/mes/item/manage/process`)\n        break;\n      case 3:\n        let items = {}\n\n        column.map((value) => {\n          if(value.selectList && value.selectList.length){\n            items = {\n              ...value.selectList[0],\n              [value.key] : value.selectList[0].name,\n              [value.key+'PK'] : value.selectList[0].pk,//여기 봐야됨!\n              ...items,\n            }\n          }\n        })\n\n        const random_id = Math.random()*1000\n\n        setBasicRow([\n          {\n            ...items,\n            id: `process_${random_id}`,\n            name: null,\n            additional: [],\n          },\n          ...basicRow\n        ])\n        break;\n\n      case 4:\n        SaveBasic()\n\n        break;\n      case 5:\n        Notiflix.Confirm.show(\"경고\",\"삭제하시겠습니까?\",\"확인\",\"취소\",\n            ()=>{DeleteBasic()},\n            ()=>{}\n        )\n\n        break;\n\n    }\n  }\n\n  return (\n    <div style={{display: 'flex', }}>\n      <MenuNavigation pageType={'BASIC'} subType={2}/>\n      <div style={{paddingBottom: 40}}>\n        <ProfileHeader/>\n        <BasicProcess keyword={keyword} page={page} option={option}/>\n      </div>\n    </div>\n  );\n}\n\nexport const getServerSideProps = (ctx: NextPageContext) => {\n  return {\n    props: {\n      page: ctx.query.page,\n      keyword: ctx.query.keyword ?? \"\",\n      option: ctx.query.option ?? 0,\n    }\n  }\n}\n\n// BasicContainer.getInitialProps = async ({ query }) => {\n//   let { page, keyword, opt } = query\n//   if (typeof page === 'string')\n//     page = parseInt(page);\n//   if (typeof opt === 'string')\n//     opt = parseInt(opt);\n//   return { page, keyword, option: opt };\n// }\n\nexport default BasicContainer;\n"]},"metadata":{},"sourceType":"module"}